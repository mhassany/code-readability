{
    "url": "https://api.github.com/repos/pallets/flask/issues/362",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/362/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/362/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/362/events",
    "html_url": "https://github.com/pallets/flask/issues/362",
    "id": 2539256,
    "node_id": "MDU6SXNzdWUyNTM5MjU2",
    "number": 362,
    "title": "Flask HTML form arrays are mangled",
    "user": {
        "login": "devdave",
        "id": 281946,
        "node_id": "MDQ6VXNlcjI4MTk0Ng==",
        "avatar_url": "https://avatars1.githubusercontent.com/u/281946?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/devdave",
        "html_url": "https://github.com/devdave",
        "followers_url": "https://api.github.com/users/devdave/followers",
        "following_url": "https://api.github.com/users/devdave/following{/other_user}",
        "gists_url": "https://api.github.com/users/devdave/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/devdave/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/devdave/subscriptions",
        "organizations_url": "https://api.github.com/users/devdave/orgs",
        "repos_url": "https://api.github.com/users/devdave/repos",
        "events_url": "https://api.github.com/users/devdave/events{/privacy}",
        "received_events_url": "https://api.github.com/users/devdave/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2011-12-13T16:41:13Z",
    "updated_at": "2012-01-24T19:35:54Z",
    "closed_at": "2011-12-13T17:57:48Z",
    "author_association": "NONE",
    "body": "Given a reference script like https://gist.github.com/1472832\n\nI was expecting the form input named \"drint_type\" to be a list of multiple values, but it always == the first checkbox selected value.  I assume this is a problem with the lower level dependencies but wasn't sure. \n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/3126679",
            "html_url": "https://github.com/pallets/flask/issues/362#issuecomment-3126679",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/362",
            "id": 3126679,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjY2Nzk=",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2011-12-13T17:57:48Z",
            "updated_at": "2011-12-13T17:57:48Z",
            "author_association": "MEMBER",
            "body": "Use `getlist()` instead of `[]` or `get()`.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/3638706",
            "html_url": "https://github.com/pallets/flask/issues/362#issuecomment-3638706",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/362",
            "id": 3638706,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2Mzg3MDY=",
            "user": {
                "login": "SaoPauloooo",
                "id": 518139,
                "node_id": "MDQ6VXNlcjUxODEzOQ==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/518139?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/SaoPauloooo",
                "html_url": "https://github.com/SaoPauloooo",
                "followers_url": "https://api.github.com/users/SaoPauloooo/followers",
                "following_url": "https://api.github.com/users/SaoPauloooo/following{/other_user}",
                "gists_url": "https://api.github.com/users/SaoPauloooo/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/SaoPauloooo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/SaoPauloooo/subscriptions",
                "organizations_url": "https://api.github.com/users/SaoPauloooo/orgs",
                "repos_url": "https://api.github.com/users/SaoPauloooo/repos",
                "events_url": "https://api.github.com/users/SaoPauloooo/events{/privacy}",
                "received_events_url": "https://api.github.com/users/SaoPauloooo/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2012-01-24T19:29:03Z",
            "updated_at": "2012-01-24T19:29:03Z",
            "author_association": "NONE",
            "body": "So glad to find this answer!  \n\nQuick question: would it be possible to override [] and get() to call getlist() if the key to the form data ends with \"[]\"?  Could you always assume that would be an array from the form?\n\nNot sure if the methods in question are unique to request.form  OR  if this solution is hacky, but the end result would be more Pythonic, wouldn't it?\n\nThanks for your time.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/3638811",
            "html_url": "https://github.com/pallets/flask/issues/362#issuecomment-3638811",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/362",
            "id": 3638811,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2Mzg4MTE=",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2012-01-24T19:35:15Z",
            "updated_at": "2012-01-24T19:35:15Z",
            "author_association": "MEMBER",
            "body": "> Quick question: would it be possible to override [] and get() to call getlist() if the key to the form data ends with \"[]\"? Could you always assume that would be an array from the form?\n\nYes, you could easily do that. There are hooks in werkzeug and flask that would enable that. Check for `request_class` on the Flask object and `parameter_storage_class` as well as `dict_storage_class` on the request objects.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/3638829",
            "html_url": "https://github.com/pallets/flask/issues/362#issuecomment-3638829",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/362",
            "id": 3638829,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2Mzg4Mjk=",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2012-01-24T19:35:54Z",
            "updated_at": "2012-01-24T19:35:54Z",
            "author_association": "MEMBER",
            "body": "The ultimately python solution would be to have schemas that specify what value is expected. Look for something like flatland.\n"
        }
    ]
}