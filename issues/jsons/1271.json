{
    "url": "https://api.github.com/repos/pallets/flask/issues/1271",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1271/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1271/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1271/events",
    "html_url": "https://github.com/pallets/flask/issues/1271",
    "id": 51245069,
    "node_id": "MDU6SXNzdWU1MTI0NTA2OQ==",
    "number": 1271,
    "title": "Route parameter types",
    "user": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following{/other_user}",
        "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-12-08T03:26:53Z",
    "updated_at": "2014-12-08T13:20:02Z",
    "closed_at": "2014-12-08T13:20:02Z",
    "author_association": "NONE",
    "body": "`@auth.route('/users/<int:user_id>')`\nIf user_id > sys.maxint then user_id is long.\n\nIs this actually wanted behavior? Because now you cant actually pass those forward without double checking them. Found this when I was expecting integer to be integer and passed it to straigh to peewee and got \"OverflowError: long too big to convert\".\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/65978096",
            "html_url": "https://github.com/pallets/flask/issues/1271#issuecomment-65978096",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1271",
            "id": 65978096,
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTc4MDk2",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-12-08T05:36:23Z",
            "updated_at": "2014-12-08T05:36:23Z",
            "author_association": "MEMBER",
            "body": "There is no max int in Python.  If you want to restrict the values that can be passed to an int converter, you can pass min and max parameters.  `/users/<int(max={}):user_id>'.format(sys.maxsize)`\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/66034277",
            "html_url": "https://github.com/pallets/flask/issues/1271#issuecomment-66034277",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1271",
            "id": 66034277,
            "node_id": "MDEyOklzc3VlQ29tbWVudDY2MDM0Mjc3",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-12-08T07:49:42Z",
            "updated_at": "2014-12-08T07:49:42Z",
            "author_association": "MEMBER",
            "body": "In Python 2 there **is** a maxint, and maxsize has nothing to do with integer size. Apart from that I agree with @davidism.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/66114388",
            "html_url": "https://github.com/pallets/flask/issues/1271#issuecomment-66114388",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1271",
            "id": 66114388,
            "node_id": "MDEyOklzc3VlQ29tbWVudDY2MTE0Mzg4",
            "user": {
                "login": "DasIch",
                "id": 182316,
                "node_id": "MDQ6VXNlcjE4MjMxNg==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/182316?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/DasIch",
                "html_url": "https://github.com/DasIch",
                "followers_url": "https://api.github.com/users/DasIch/followers",
                "following_url": "https://api.github.com/users/DasIch/following{/other_user}",
                "gists_url": "https://api.github.com/users/DasIch/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/DasIch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DasIch/subscriptions",
                "organizations_url": "https://api.github.com/users/DasIch/orgs",
                "repos_url": "https://api.github.com/users/DasIch/repos",
                "events_url": "https://api.github.com/users/DasIch/events{/privacy}",
                "received_events_url": "https://api.github.com/users/DasIch/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-12-08T13:17:44Z",
            "updated_at": "2014-12-08T13:17:44Z",
            "author_association": "CONTRIBUTOR",
            "body": "Keep in mind that Python 3 has given up on long entirely, in Python 2 the difference only matters in combination with C extensions etc.\n\nGiven that we have managed without replicating this stupidity in the routing system so far, I don't think it's worth replicating now.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/66114596",
            "html_url": "https://github.com/pallets/flask/issues/1271#issuecomment-66114596",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1271",
            "id": 66114596,
            "node_id": "MDEyOklzc3VlQ29tbWVudDY2MTE0NTk2",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-12-08T13:19:58Z",
            "updated_at": "2014-12-08T13:19:58Z",
            "author_association": "MEMBER",
            "body": "I'll close this then. While the converter's name might imply that it _always_ returns an int, the current behavior is what most users would want (overflow errors might happen for different reasons too, and not every integer/long from a route is stored in a DB)\n"
        }
    ]
}