{
    "url": "https://api.github.com/repos/pallets/flask/issues/2243",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2243/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2243/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2243/events",
    "html_url": "https://github.com/pallets/flask/issues/2243",
    "id": 221885630,
    "node_id": "MDU6SXNzdWUyMjE4ODU2MzA=",
    "number": 2243,
    "title": "Take advantage of Py3.6 json support for bytes",
    "user": {
        "login": "davidism",
        "id": 1242887,
        "node_id": "MDQ6VXNlcjEyNDI4ODc=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidism",
        "html_url": "https://github.com/davidism",
        "followers_url": "https://api.github.com/users/davidism/followers",
        "following_url": "https://api.github.com/users/davidism/following{/other_user}",
        "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
        "organizations_url": "https://api.github.com/users/davidism/orgs",
        "repos_url": "https://api.github.com/users/davidism/repos",
        "events_url": "https://api.github.com/users/davidism/events{/privacy}",
        "received_events_url": "https://api.github.com/users/davidism/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 170296925,
            "node_id": "MDU6TGFiZWwxNzAyOTY5MjU=",
            "url": "https://api.github.com/repos/pallets/flask/labels/good%20first%20issue",
            "name": "good first issue",
            "color": "fbca04",
            "default": true,
            "description": null
        },
        {
            "id": 398831866,
            "node_id": "MDU6TGFiZWwzOTg4MzE4NjY=",
            "url": "https://api.github.com/repos/pallets/flask/labels/json",
            "name": "json",
            "color": "1d76db",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 16,
    "created_at": "2017-04-14T20:30:45Z",
    "updated_at": "2017-05-12T14:26:01Z",
    "closed_at": "2017-05-12T14:26:01Z",
    "author_association": "MEMBER",
    "body": "[Python 3.6 added support for loading json from str or bytes.](https://docs.python.org/3.6/library/json.html#json.loads) It handles detection of the three encodings supported by JSON. Would be nice to take advantage of this if the user is using 3.6+ instead of our basic \"assume it's UTF-8\" approach.\r\n\r\nWould have to make sure simplejson also allows this (I think it does).\r\n\r\nThen again, I'm not sure there have been any reports of Flask decoding JSON incorrectly. Maybe no real clients are encoding with anything besides UTF-8?",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/298076087",
            "html_url": "https://github.com/pallets/flask/issues/2243#issuecomment-298076087",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2243",
            "id": 298076087,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODA3NjA4Nw==",
            "user": {
                "login": "akohli96",
                "id": 10791683,
                "node_id": "MDQ6VXNlcjEwNzkxNjgz",
                "avatar_url": "https://avatars0.githubusercontent.com/u/10791683?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/akohli96",
                "html_url": "https://github.com/akohli96",
                "followers_url": "https://api.github.com/users/akohli96/followers",
                "following_url": "https://api.github.com/users/akohli96/following{/other_user}",
                "gists_url": "https://api.github.com/users/akohli96/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/akohli96/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/akohli96/subscriptions",
                "organizations_url": "https://api.github.com/users/akohli96/orgs",
                "repos_url": "https://api.github.com/users/akohli96/repos",
                "events_url": "https://api.github.com/users/akohli96/events{/privacy}",
                "received_events_url": "https://api.github.com/users/akohli96/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-28T18:42:21Z",
            "updated_at": "2017-04-28T18:42:45Z",
            "author_association": "NONE",
            "body": "[json.py](https://github.com/pallets/flask/blob/46f83665ef74880bbc4a1c1f17ccededa7aaa939/flask/json.py)\r\nshows \r\n\r\n````python\r\ndef loads(s, **kwargs):\r\n    \"\"\"Unserialize a JSON object from a string ``s`` by using the application's\r\n    configured decoder (:attr:`~flask.Flask.json_decoder`) if there is an\r\n    application on the stack.\r\n    \"\"\"\r\n    _load_arg_defaults(kwargs)\r\n    if isinstance(s, bytes):\r\n        s = s.decode(kwargs.pop('encoding', None) or 'utf-8')\r\n    return _json.loads(s, **kwargs)\r\n\r\n\r\ndef load(fp, **kwargs):\r\n    \"\"\"Like :func:`loads` but reads from a file object.\r\n    \"\"\"\r\n    _load_arg_defaults(kwargs)\r\n    if not PY2:\r\n        fp = _wrap_reader_for_text(fp, kwargs.pop('encoding', None) or 'utf-8')\r\n    return _json.load(fp, **kwargs)\r\n````\r\n\r\n\r\nEDIT: It seems like flask handles it already"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/298090259",
            "html_url": "https://github.com/pallets/flask/issues/2243#issuecomment-298090259",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2243",
            "id": 298090259,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODA5MDI1OQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-28T19:46:42Z",
            "updated_at": "2017-04-28T19:46:53Z",
            "author_association": "MEMBER",
            "body": "We're the ones doing the decoding. In Py36, `_json.loads` can do the decoding."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/298097580",
            "html_url": "https://github.com/pallets/flask/issues/2243#issuecomment-298097580",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2243",
            "id": 298097580,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODA5NzU4MA==",
            "user": {
                "login": "akohli96",
                "id": 10791683,
                "node_id": "MDQ6VXNlcjEwNzkxNjgz",
                "avatar_url": "https://avatars0.githubusercontent.com/u/10791683?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/akohli96",
                "html_url": "https://github.com/akohli96",
                "followers_url": "https://api.github.com/users/akohli96/followers",
                "following_url": "https://api.github.com/users/akohli96/following{/other_user}",
                "gists_url": "https://api.github.com/users/akohli96/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/akohli96/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/akohli96/subscriptions",
                "organizations_url": "https://api.github.com/users/akohli96/orgs",
                "repos_url": "https://api.github.com/users/akohli96/repos",
                "events_url": "https://api.github.com/users/akohli96/events{/privacy}",
                "received_events_url": "https://api.github.com/users/akohli96/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-28T20:22:27Z",
            "updated_at": "2017-04-28T20:35:44Z",
            "author_association": "NONE",
            "body": "Okay, I see what you are saying. \r\nWould a simple \r\n\r\n````python\r\nif PY2:\r\n    if isinstance(s, bytes):\r\n        s = s.decode(kwargs.pop('encoding', None) or 'utf-8')\r\nreturn _json.loads(s, **kwargs)\r\n````\r\nsolve this problem?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/298102906",
            "html_url": "https://github.com/pallets/flask/issues/2243#issuecomment-298102906",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2243",
            "id": 298102906,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODEwMjkwNg==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-28T20:48:03Z",
            "updated_at": "2017-04-28T20:48:03Z",
            "author_association": "MEMBER",
            "body": "No, because only Py3.6 supports this, but we support Py3.3+."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/298104737",
            "html_url": "https://github.com/pallets/flask/issues/2243#issuecomment-298104737",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2243",
            "id": 298104737,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODEwNDczNw==",
            "user": {
                "login": "akohli96",
                "id": 10791683,
                "node_id": "MDQ6VXNlcjEwNzkxNjgz",
                "avatar_url": "https://avatars0.githubusercontent.com/u/10791683?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/akohli96",
                "html_url": "https://github.com/akohli96",
                "followers_url": "https://api.github.com/users/akohli96/followers",
                "following_url": "https://api.github.com/users/akohli96/following{/other_user}",
                "gists_url": "https://api.github.com/users/akohli96/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/akohli96/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/akohli96/subscriptions",
                "organizations_url": "https://api.github.com/users/akohli96/orgs",
                "repos_url": "https://api.github.com/users/akohli96/repos",
                "events_url": "https://api.github.com/users/akohli96/events{/privacy}",
                "received_events_url": "https://api.github.com/users/akohli96/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-28T20:56:47Z",
            "updated_at": "2017-04-29T00:41:50Z",
            "author_association": "NONE",
            "body": "Alright, so essentially check if its Py3.6 specifically and then implement what I was doing.\r\n\r\n[_compat.py](https://github.com/pallets/flask/blob/0664a3f2ddfc227797b5a8f0654e9959b15d9e64/flask/_compat.py)\r\n````python\r\n\r\nimport sys\r\n\r\nPY2 = sys.version_info[0] == 2\r\n````\r\nA check would be needed here for Py3.6\r\n\r\nI could have a crack at it."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/298135912",
            "html_url": "https://github.com/pallets/flask/issues/2243#issuecomment-298135912",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2243",
            "id": 298135912,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODEzNTkxMg==",
            "user": {
                "login": "akohli96",
                "id": 10791683,
                "node_id": "MDQ6VXNlcjEwNzkxNjgz",
                "avatar_url": "https://avatars0.githubusercontent.com/u/10791683?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/akohli96",
                "html_url": "https://github.com/akohli96",
                "followers_url": "https://api.github.com/users/akohli96/followers",
                "following_url": "https://api.github.com/users/akohli96/following{/other_user}",
                "gists_url": "https://api.github.com/users/akohli96/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/akohli96/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/akohli96/subscriptions",
                "organizations_url": "https://api.github.com/users/akohli96/orgs",
                "repos_url": "https://api.github.com/users/akohli96/repos",
                "events_url": "https://api.github.com/users/akohli96/events{/privacy}",
                "received_events_url": "https://api.github.com/users/akohli96/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-29T00:45:30Z",
            "updated_at": "2017-04-29T00:52:40Z",
            "author_association": "NONE",
            "body": "````Then again, I'm not sure there have been any reports of Flask decoding JSON incorrectly. Maybe no real clients are encoding with anything besides UTF-8?````\r\n\r\n[ The input encoding should be UTF-8, UTF-16 or UTF-32](https://docs.python.org/3.6/library/json.html#json.loads) however, its evident for some versions of python 3.6 the [build fails](https://travis-ci.org/pallets/flask/builds/227018178). "
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/298174051",
            "html_url": "https://github.com/pallets/flask/issues/2243#issuecomment-298174051",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2243",
            "id": 298174051,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODE3NDA1MQ==",
            "user": {
                "login": "akohli96",
                "id": 10791683,
                "node_id": "MDQ6VXNlcjEwNzkxNjgz",
                "avatar_url": "https://avatars0.githubusercontent.com/u/10791683?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/akohli96",
                "html_url": "https://github.com/akohli96",
                "followers_url": "https://api.github.com/users/akohli96/followers",
                "following_url": "https://api.github.com/users/akohli96/following{/other_user}",
                "gists_url": "https://api.github.com/users/akohli96/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/akohli96/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/akohli96/subscriptions",
                "organizations_url": "https://api.github.com/users/akohli96/orgs",
                "repos_url": "https://api.github.com/users/akohli96/repos",
                "events_url": "https://api.github.com/users/akohli96/events{/privacy}",
                "received_events_url": "https://api.github.com/users/akohli96/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-29T14:59:44Z",
            "updated_at": "2017-04-29T14:59:44Z",
            "author_association": "NONE",
            "body": "#2262 [Build is now successful](https://travis-ci.org/pallets/flask/builds/227148904?utm_source=github_status&utm_medium=notification)\r\n\r\nCommit : [d93cfb92823143c0127abc91827f79a30056a936](https://github.com/pallets/flask/pull/2262/commits/d93cfb92823143c0127abc91827f79a30056a936)"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/298185056",
            "html_url": "https://github.com/pallets/flask/issues/2243#issuecomment-298185056",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2243",
            "id": 298185056,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODE4NTA1Ng==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-29T18:10:59Z",
            "updated_at": "2017-04-29T18:10:59Z",
            "author_association": "MEMBER",
            "body": "@untitaker @ThiefMaster a failing test uses an invalid JSON charset. Do we want to support invalid JSON charsets?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/298189434",
            "html_url": "https://github.com/pallets/flask/issues/2243#issuecomment-298189434",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2243",
            "id": 298189434,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODE4OTQzNA==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-29T19:28:22Z",
            "updated_at": "2017-04-29T19:28:22Z",
            "author_association": "MEMBER",
            "body": "Yeah, I think we should keep that feature. I don't really see how that's an\ninvalid charset too.\n\nYou earlier say that Flask assumes JSON is UTF-8, but according to the failing\ntest it doesn't.\n\nOn Sat, Apr 29, 2017 at 11:11:04AM -0700, David Lord wrote:\n> @untitaker @ThiefMaster a failing test uses an invalid JSON charset. Do we want to support invalid JSON charsets?\n> \n> -- \n> You are receiving this because you were mentioned.\n> Reply to this email directly or view it on GitHub:\n> https://github.com/pallets/flask/issues/2243#issuecomment-298185056\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/298189787",
            "html_url": "https://github.com/pallets/flask/issues/2243#issuecomment-298189787",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2243",
            "id": 298189787,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODE4OTc4Nw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-29T19:34:59Z",
            "updated_at": "2017-04-29T19:34:59Z",
            "author_association": "MEMBER",
            "body": "Technically, the only valid charsets for JSON are UTF-8, -16, and -32. On the one hand, us accepting charsets means we can support invalid charsets. On the other hand, 8, 16, and 32 can be autodetected without relying on the specified charset."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/298190206",
            "html_url": "https://github.com/pallets/flask/issues/2243#issuecomment-298190206",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2243",
            "id": 298190206,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODE5MDIwNg==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-29T19:42:03Z",
            "updated_at": "2017-04-29T19:42:03Z",
            "author_association": "MEMBER",
            "body": "That's fair enough. I suppose we could deprecate other charsets for JSON, but I would wish for a softer kind of deprecation."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/298191307",
            "html_url": "https://github.com/pallets/flask/issues/2243#issuecomment-298191307",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2243",
            "id": 298191307,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODE5MTMwNw==",
            "user": {
                "login": "akohli96",
                "id": 10791683,
                "node_id": "MDQ6VXNlcjEwNzkxNjgz",
                "avatar_url": "https://avatars0.githubusercontent.com/u/10791683?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/akohli96",
                "html_url": "https://github.com/akohli96",
                "followers_url": "https://api.github.com/users/akohli96/followers",
                "following_url": "https://api.github.com/users/akohli96/following{/other_user}",
                "gists_url": "https://api.github.com/users/akohli96/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/akohli96/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/akohli96/subscriptions",
                "organizations_url": "https://api.github.com/users/akohli96/orgs",
                "repos_url": "https://api.github.com/users/akohli96/repos",
                "events_url": "https://api.github.com/users/akohli96/events{/privacy}",
                "received_events_url": "https://api.github.com/users/akohli96/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-29T20:03:35Z",
            "updated_at": "2017-04-29T20:03:35Z",
            "author_association": "NONE",
            "body": "@davidism could #2262 be modified in any way to resolve this issue?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/298366281",
            "html_url": "https://github.com/pallets/flask/issues/2243#issuecomment-298366281",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2243",
            "id": 298366281,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODM2NjI4MQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-05-01T16:22:57Z",
            "updated_at": "2017-05-01T16:22:57Z",
            "author_association": "MEMBER",
            "body": "@untitaker it adds some complexity, but what do you think of this:\r\n\r\n1. If an unsupported encoding is specified on any version, show a warning.\r\n2. If < 3.6, or > 3.6 with an unsupported encoding, decode.\r\n\r\nThe important path here is 3.6 and no encoding for autodetection, while still supporting other encodings if they are specified. Alternatively, we could always prefer the encoding if it is specified, even on 3.6, so that the client could override the detection.\r\n\r\nNot sure if we should actually deprecate the unsupported encodings, given this comment in `flask.wrappers.Request.get_json`: \r\n\r\n>     # We accept a request charset against the specification as\r\n>     # certain clients have been using this in the past.  This\r\n>     # fits our general approach of being nice in what we accept\r\n>     # and strict in what we send out.\r\n\r\nWe wouldn't actually reduce complexity by deprecating them, since we still need all the code to support < 3.6.\r\n\r\n---\r\n\r\n`flask.json`:\r\n\r\n~~~python\r\n# normalized names of the supported JSON encodings\r\njson_encodings = set(codecs.lookup('utf-{0}'.format(x)).name for x in (8, 16, 32))\r\n~~~\r\n\r\n`flask.json.loads`:\r\n\r\n~~~python\r\n# normalize incoming encoding name\r\ncodec = codecs.lookup(kwargs.pop('encoding', None) or 'utf-8')\r\nsupported = codec.name in json_encodings\r\n\r\nif not supported:\r\n    warnings.warn(\r\n        'JSON must be encoded UTF-8, -16, or -32, but got {codec.name}.'.format(codec=codec),\r\n        stacklevel=2\r\n    )\r\n\r\n# < 3.6 or unsupported encoding, decode manually\r\nif isinstance(s, bytes) and not (PY36PLUS and (encoding is None or supported):\r\n    s = codec.decode(s)\r\n~~~"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/298377611",
            "html_url": "https://github.com/pallets/flask/issues/2243#issuecomment-298377611",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2243",
            "id": 298377611,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODM3NzYxMQ==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-05-01T17:15:09Z",
            "updated_at": "2017-05-01T17:15:09Z",
            "author_association": "MEMBER",
            "body": "The problem I have with this is that Flask now behaves differently across minor versions of Python (accepting JSON without encoding for some). Perhaps encoding detection should be explicitly enabled via a config param, which fails for any version other than 3.6. That would make the behavioral change more explicit.\n\nOn 1 May 2017 18:23:12 GMT+02:00, David Lord <notifications@github.com> wrote:\n>@untitaker it adds some complexity, but what do you think of this:\n>\n>1. If an unsupported encoding is specified on any version, show a\n>warning.\n>2. If < 3.6, or > 3.6 with an unsupported encoding, decode.\n>\n>The important path here is 3.6 and no encoding for autodetection, while\n>still supporting other encodings if they are specified. Alternatively,\n>we could always prefer the encoding if it is specified, even on 3.6, so\n>that the client could override the detection.\n>\n>Not sure if we should actually deprecate the unsupported encodings,\n>given this comment in `flask.wrappers.Request.get_json`: \n>\n>>     # We accept a request charset against the specification as\n>>     # certain clients have been using this in the past.  This\n>>     # fits our general approach of being nice in what we accept\n>>     # and strict in what we send out.\n>\n>We wouldn't actually reduce complexity by deprecating them, since we\n>still need all the code to support < 3.6.\n>\n>---\n>\n>`flask.json`:\n>\n>~~~python\n># normalized names of the supported JSON encodings\n>json_encodings = set(codecs.lookup('utf-{0}'.format(x)).name for x in\n>(8, 16, 32))\n>~~~\n>\n>`flask.json.loads`:\n>\n>~~~python\n># normalize incoming encoding name\n>codec = codecs.lookup(kwargs.pop('encoding', None) or 'utf-8')\n>supported = codec.name in json_encodings\n>\n>if not supported:\n>    warnings.warn(\n>'JSON must be encoded UTF-8, -16, or -32, but got\n>{codec.name}.'.format(codec=codec),\n>        stacklevel=2\n>    )\n>\n># < 3.6 or unsupported encoding, decode manually\n>if isinstance(s, bytes) and not (PY36PLUS and (encoding is None or\n>supported):\n>    s = codec.decode(s)\n>~~~\n>\n>-- \n>You are receiving this because you were mentioned.\n>Reply to this email directly or view it on GitHub:\n>https://github.com/pallets/flask/issues/2243#issuecomment-298366281\n\n-- \nSent from my Android device with K-9 Mail. Please excuse my brevity."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/298380058",
            "html_url": "https://github.com/pallets/flask/issues/2243#issuecomment-298380058",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2243",
            "id": 298380058,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODM4MDA1OA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-05-01T17:25:37Z",
            "updated_at": "2017-05-01T17:38:47Z",
            "author_association": "MEMBER",
            "body": "If we take the most conservative approach and only use the autodetection if no encoding is specified, I don't think it's a big deal that >= 3.6 will autodetect while < 3.6 will assume UTF-8.\r\n\r\nWe can also just drop this, I'm ok with still requiring the charset to be passed if it's needed. Maybe keep the warning."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/299111923",
            "html_url": "https://github.com/pallets/flask/issues/2243#issuecomment-299111923",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2243",
            "id": 299111923,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTExMTkyMw==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-05-04T07:09:55Z",
            "updated_at": "2017-05-04T07:09:55Z",
            "author_association": "MEMBER",
            "body": "As far as I understand you're arguing that the set of inputs accepted with 3.6\nis a strict superset of the otherwise accepted inputs. That makes it less\nworse, however, my fear is that this might send the app dev on a debugging tour\nwhy his app works on their ArchLinux laptop (which has bleeding edge Python)\nand fails on their CentOS server (which has god-knows-which version).\n\nOn Mon, May 01, 2017 at 10:25:48AM -0700, David Lord wrote:\n> If we take the most conservative approach and only use the autodetection if no encoding is specified, I don't think it's a big deal that >= 3.6 will autodetect while < 3.6 will assume UTF-8.\n> \n> We can also just drop this, I'm ok with still requiring the charset to be passed if it's needed. Maybe keep the warning.\n> \n> -- \n> You are receiving this because you were mentioned.\n> Reply to this email directly or view it on GitHub:\n> https://github.com/pallets/flask/issues/2243#issuecomment-298380058\n"
        }
    ]
}