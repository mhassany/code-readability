{
    "url": "https://api.github.com/repos/pallets/flask/issues/2469",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2469/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2469/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2469/events",
    "html_url": "https://github.com/pallets/flask/issues/2469",
    "id": 256363812,
    "node_id": "MDU6SXNzdWUyNTYzNjM4MTI=",
    "number": 2469,
    "title": "url_for uses _request_ctx for its choice of default_methods, this seems wrong",
    "user": {
        "login": "jeffrey",
        "id": 2468,
        "node_id": "MDQ6VXNlcjI0Njg=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/2468?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jeffrey",
        "html_url": "https://github.com/jeffrey",
        "followers_url": "https://api.github.com/users/jeffrey/followers",
        "following_url": "https://api.github.com/users/jeffrey/following{/other_user}",
        "gists_url": "https://api.github.com/users/jeffrey/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jeffrey/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jeffrey/subscriptions",
        "organizations_url": "https://api.github.com/users/jeffrey/orgs",
        "repos_url": "https://api.github.com/users/jeffrey/repos",
        "events_url": "https://api.github.com/users/jeffrey/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jeffrey/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-09-08T20:32:20Z",
    "updated_at": "2018-10-23T11:13:36Z",
    "closed_at": "2017-10-12T14:57:34Z",
    "author_association": "NONE",
    "body": "In response to a POST, I wanted to construct a URL pointing at a different URL (the home of the created object) which did NOT support POST.\r\n\r\nIt turns out, this doesn't work with Flask==0.12.2. The rule I want doesn't match, so I end up matching a less specific rule, with the distinguishing name treated as a parameter, not a path.\r\n\r\nWhat appears to be happening is that default method is being pulled out of _request_ctx early in url_for(). In this case, that method will be a POST.\r\n\r\nI'm not sure if defaulting to the request's current method is really desirable. How often are you responding to a POST and want url_for to respond with the best match for POST? I think typically most endpoints will respond to a GET, but many endpoints won't respond to a POST.\r\n\r\nThe workaround is to include the undocumented _method keyword argument. That will work (hopefully permanently), but I'd prefer:\r\n\r\nA) for this to be explicitly supported by the API, and\r\nB) I think the default should probably always be GET. My guess is that will be correct far more \r\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/335368156",
            "html_url": "https://github.com/pallets/flask/issues/2469#issuecomment-335368156",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2469",
            "id": 335368156,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTM2ODE1Ng==",
            "user": {
                "login": "nitingupta89",
                "id": 19730762,
                "node_id": "MDQ6VXNlcjE5NzMwNzYy",
                "avatar_url": "https://avatars1.githubusercontent.com/u/19730762?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nitingupta89",
                "html_url": "https://github.com/nitingupta89",
                "followers_url": "https://api.github.com/users/nitingupta89/followers",
                "following_url": "https://api.github.com/users/nitingupta89/following{/other_user}",
                "gists_url": "https://api.github.com/users/nitingupta89/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nitingupta89/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nitingupta89/subscriptions",
                "organizations_url": "https://api.github.com/users/nitingupta89/orgs",
                "repos_url": "https://api.github.com/users/nitingupta89/repos",
                "events_url": "https://api.github.com/users/nitingupta89/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nitingupta89/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-10-10T05:51:49Z",
            "updated_at": "2017-10-10T05:51:49Z",
            "author_association": "NONE",
            "body": "@jeffrey Could you please elaborate with example?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/336159382",
            "html_url": "https://github.com/pallets/flask/issues/2469#issuecomment-336159382",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2469",
            "id": 336159382,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjE1OTM4Mg==",
            "user": {
                "login": "jesseops",
                "id": 4613566,
                "node_id": "MDQ6VXNlcjQ2MTM1NjY=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/4613566?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jesseops",
                "html_url": "https://github.com/jesseops",
                "followers_url": "https://api.github.com/users/jesseops/followers",
                "following_url": "https://api.github.com/users/jesseops/following{/other_user}",
                "gists_url": "https://api.github.com/users/jesseops/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jesseops/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jesseops/subscriptions",
                "organizations_url": "https://api.github.com/users/jesseops/orgs",
                "repos_url": "https://api.github.com/users/jesseops/repos",
                "events_url": "https://api.github.com/users/jesseops/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jesseops/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-10-12T14:44:00Z",
            "updated_at": "2017-10-12T14:49:49Z",
            "author_association": "NONE",
            "body": "The described issue specifically occurs within the werkzeug codebase: https://github.com/pallets/werkzeug/blob/40bfd13b4383512160a139aea3721c3746a4d7ae/werkzeug/routing.py#L1334\r\n\r\nEach request has a request context built for it, along with a new URL adapter instance (ie a `Map` bound to the environment of that request). werkzeug specifically extracts the `REQUEST_METHOD` from `request.environ` and passes that to `Map.bind` to set the default method for matching URLs.\r\n\r\nAs for the \"undocumented\" `_method` arguments, it's very clearly documented as a parameter to `url_for` since Flask 0.9: http://flask.pocoo.org/docs/0.12/api/#flask.url_for"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/336163697",
            "html_url": "https://github.com/pallets/flask/issues/2469#issuecomment-336163697",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2469",
            "id": 336163697,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjE2MzY5Nw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-10-12T14:57:34Z",
            "updated_at": "2017-10-12T14:57:34Z",
            "author_association": "MEMBER",
            "body": "Thanks @jesseops. Closing this as I think the current behavior and documentation is appropriate."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/368176403",
            "html_url": "https://github.com/pallets/flask/issues/2469#issuecomment-368176403",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2469",
            "id": 368176403,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODE3NjQwMw==",
            "user": {
                "login": "antialiasis",
                "id": 1326447,
                "node_id": "MDQ6VXNlcjEzMjY0NDc=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/1326447?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/antialiasis",
                "html_url": "https://github.com/antialiasis",
                "followers_url": "https://api.github.com/users/antialiasis/followers",
                "following_url": "https://api.github.com/users/antialiasis/following{/other_user}",
                "gists_url": "https://api.github.com/users/antialiasis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/antialiasis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/antialiasis/subscriptions",
                "organizations_url": "https://api.github.com/users/antialiasis/orgs",
                "repos_url": "https://api.github.com/users/antialiasis/repos",
                "events_url": "https://api.github.com/users/antialiasis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/antialiasis/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-02-24T00:16:35Z",
            "updated_at": "2018-02-24T00:16:35Z",
            "author_association": "NONE",
            "body": "Can I ask about the rationale for considering the current behaviour appropriate? It's surprising (why would anyone expect this?), unhelpful (as Jeffrey mentioned, how often are you processing a POST request and want to generate a URL to send another POST request to? I'm willing to bet that if anything it's less likely than wanting that while processing a GET request), and quite difficult to debug to boot, since there's no error, just a function that one would expect to behave consistently suddenly turning out to return different things based on tenuously related application state. I tested a lot of different things before coming to the conclusion the current HTTP method was the issue.\r\n\r\nAt the absolute least, the fact it does depend on that state ought to be documented. The documentation for the _method argument says \"if provided this explicitly specifies an HTTP method\"; at least to me, this implies the default is to not specify a particular method, not that the default is equivalent to specifying whichever HTTP method the current request is. There is nothing suggesting the output of the function depends on the current HTTP method of all things."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/368397513",
            "html_url": "https://github.com/pallets/flask/issues/2469#issuecomment-368397513",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2469",
            "id": 368397513,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODM5NzUxMw==",
            "user": {
                "login": "jesseops",
                "id": 4613566,
                "node_id": "MDQ6VXNlcjQ2MTM1NjY=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/4613566?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jesseops",
                "html_url": "https://github.com/jesseops",
                "followers_url": "https://api.github.com/users/jesseops/followers",
                "following_url": "https://api.github.com/users/jesseops/following{/other_user}",
                "gists_url": "https://api.github.com/users/jesseops/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jesseops/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jesseops/subscriptions",
                "organizations_url": "https://api.github.com/users/jesseops/orgs",
                "repos_url": "https://api.github.com/users/jesseops/repos",
                "events_url": "https://api.github.com/users/jesseops/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jesseops/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-02-26T05:52:59Z",
            "updated_at": "2018-02-26T05:52:59Z",
            "author_association": "NONE",
            "body": "I agree that the first line of the documentation for `url_for` could be worded more clearly.\r\n\r\nCurrent:\r\n> Generates a URL to the given endpoint with the method provided.\r\n\r\nCould be reworded:\r\n> Generates a URL to the given endpoint. The current HTTP method is used by default; this may be overridden by passing the `_method` parameter.\r\n\r\nI'm willing to open a PR if that wording is acceptable to make the behavior clear and more immediately obvious.\r\n\r\nOne question @davidism might be able to clear up; is there a reason `_method` has a leading underscore? When I see that I assume it's not truly intended as a public parameter."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/368493823",
            "html_url": "https://github.com/pallets/flask/issues/2469#issuecomment-368493823",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2469",
            "id": 368493823,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODQ5MzgyMw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-02-26T12:57:54Z",
            "updated_at": "2018-02-26T12:57:54Z",
            "author_association": "MEMBER",
            "body": "Because there could be a URL capture with that name."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/432167623",
            "html_url": "https://github.com/pallets/flask/issues/2469#issuecomment-432167623",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2469",
            "id": 432167623,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjE2NzYyMw==",
            "user": {
                "login": "mattfabina",
                "id": 6466082,
                "node_id": "MDQ6VXNlcjY0NjYwODI=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/6466082?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mattfabina",
                "html_url": "https://github.com/mattfabina",
                "followers_url": "https://api.github.com/users/mattfabina/followers",
                "following_url": "https://api.github.com/users/mattfabina/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattfabina/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mattfabina/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattfabina/subscriptions",
                "organizations_url": "https://api.github.com/users/mattfabina/orgs",
                "repos_url": "https://api.github.com/users/mattfabina/repos",
                "events_url": "https://api.github.com/users/mattfabina/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mattfabina/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-10-23T09:20:04Z",
            "updated_at": "2018-10-23T11:13:36Z",
            "author_association": "NONE",
            "body": "+1 for reconsidering documentation and/or behavior. Edit: maybe _method should be made a required argument to highlight that not passing _method is ambiguous.\r\n\r\nRan into this issue \"in the wild\" and went through the usual debugging steps and eventually ended up here. This cost me a bit of time.\r\n\r\nFor what it's worth, here's my minimal reproduction code:\r\n\r\n```python\r\nimport flask\r\n\r\n\r\napp = flask.Flask(__name__)\r\n\r\n\r\n@app.route('/good/')\r\n@app.route('/good/<good_id>')\r\ndef good(good_id='my_good_id'):\r\n    # url == /good/my_good_id\r\n    url = flask.url_for('good', good_id=good_id)\r\n    print(url)\r\n    return url\r\n\r\n\r\n@app.route('/bad/')\r\n@app.route('/bad/<bad_id>', methods=['POST'])\r\ndef bad(bad_id='my_bad_id'):\r\n    # url == /bad/?bad_id=my_bad_id\r\n    url = flask.url_for('bad', bad_id=bad_id)\r\n    print(url)\r\n    return url\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run()\r\n```\r\n\r\nand the fix:\r\n\r\n```python\r\n@app.route('/bad/')\r\n@app.route('/bad/<bad_id>', methods=['POST'])\r\ndef bad(bad_id='my_bad_id'):\r\n    # url == /bad/my_bad_id\r\n    url = flask.url_for('bad', bad_id=bad_id, _method='POST')\r\n    print(url)\r\n    return url\r\n```"
        }
    ]
}