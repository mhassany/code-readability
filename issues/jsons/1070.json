{
    "url": "https://api.github.com/repos/pallets/flask/issues/1070",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1070/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1070/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1070/events",
    "html_url": "https://github.com/pallets/flask/issues/1070",
    "id": 34253880,
    "node_id": "MDU6SXNzdWUzNDI1Mzg4MA==",
    "number": 1070,
    "title": "How to catch the whole request lifetime in Flask",
    "user": {
        "login": "fengsp",
        "id": 2986070,
        "node_id": "MDQ6VXNlcjI5ODYwNzA=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/2986070?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fengsp",
        "html_url": "https://github.com/fengsp",
        "followers_url": "https://api.github.com/users/fengsp/followers",
        "following_url": "https://api.github.com/users/fengsp/following{/other_user}",
        "gists_url": "https://api.github.com/users/fengsp/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/fengsp/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fengsp/subscriptions",
        "organizations_url": "https://api.github.com/users/fengsp/orgs",
        "repos_url": "https://api.github.com/users/fengsp/repos",
        "events_url": "https://api.github.com/users/fengsp/events{/privacy}",
        "received_events_url": "https://api.github.com/users/fengsp/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2014-05-25T04:46:04Z",
    "updated_at": "2014-05-26T02:46:34Z",
    "closed_at": "2014-05-25T09:34:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am writing a little extension [Flask-Profile](https://github.com/fengsp/flask-profile), nothing serious but one tiny tool to do profiling for Flask.\n\nFirstly I use one `middleware`(which is quite obvious for my purpose), middleware is working great on catching the whole thing but with one issue. I can not append the\nprofiling result to the response which is already sent, and I really do not want to see\nthe result using another way.\n\nThen I use the `before_request` and `after_request` hook, more issues appear, now I can modify the response to append my profiling result, though, all other extensions have\nto be used after `Flask-Profile` so they can be profiled. Also I am not catching the whole \nlifetime, I do not catch the `request_context` pushing and `session` related stuff, session\nis opened during the request_context pushing and is saved after `after_request` hooks\nwere executed.\n\nTry to use the `request-started` and `request-finished` signal. Issues exist, signalling support is available only when blinker library is installed, and I still can not catch the\nsession opening. The good news is that all extensions can be caught no matter which\none calls `init_app` first.\n\nAfter all this, What I want is one hook that is called just after request get in and request_context is pushed(however session are not opened) and another hook that is called after `process_response`, both of which Flask does not have.\n\nI can only think of monkeying patching the `Flask.wsgi_app` which is the last thing I want to do. Any better ideas?\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/44115053",
            "html_url": "https://github.com/pallets/flask/issues/1070#issuecomment-44115053",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1070",
            "id": 44115053,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTE1MDUz",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-05-25T06:06:18Z",
            "updated_at": "2014-05-25T06:06:18Z",
            "author_association": "MEMBER",
            "body": "Assuming you mean WSGI middleware when you say middleware, I don't see any of it in Flask-Profile.\n\nhttp://werkzeug.pocoo.org/docs/middlewares/\n\nI think it would be ideal for your usecase. Check the sourcecode of Werkzeug for example middlewares, and instead of a blueprint, use DispatcherMiddleware and your own app to show the results. It would make your profiler work on arbitrary WSGI apps too.\n\nOn 25 May 2014 06:46:14 CEST, Shipeng Feng notifications@github.com wrote:\n\n> I am writing a little extension\n> [Flask-Profile](https://github.com/fengsp/flask-profile), nothing\n> serious but one tiny tool to do profiling for Flask.\n> \n> Firstly I use one `middleware`(which is quite obvious for my purpose),\n> middleware is working great on catching the whole thing but with one\n> issue. I can not append the\n> profiling result to the response which is already sent, and I really do\n> not want to see\n> the result using another way.\n> \n> Then I use the `before_request` and `after_request` hook, more issues\n> appear, now I can modify the response to append my profiling result,\n> though, all other extensions have\n> to be used after `Flask-Profile` so they can be profiled. Also I am not\n> catching the whole \n> lifetime, I do not catch the `request_context` pushing and `session`\n> related stuff, session\n> is opened during the request_context pushing and is saved after\n> `after_request` hooks\n> were executed.\n> \n> Try to use the `request-started` and `request-finished` signal. Issues\n> exist, signalling support is available only when blinker library is\n> installed, and I still can not catch the\n> session opening. The good news is that all extensions can be caught no\n> matter which\n> one calls `init_app` first.\n> \n> After all this, What I want is one hook that is called just after\n> request get in and request_context is pushed(however session are not\n> opened) and another hook that is called after `process_response`, both\n> of which Flask does not have.\n> \n> I can only think of monkeying patching the `Flask.wsgi_app` which is\n> the last thing I want to do. Any better ideas?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mitsuhiko/flask/issues/1070\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/44126719",
            "html_url": "https://github.com/pallets/flask/issues/1070#issuecomment-44126719",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1070",
            "id": 44126719,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTI2NzE5",
            "user": {
                "login": "fengsp",
                "id": 2986070,
                "node_id": "MDQ6VXNlcjI5ODYwNzA=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/2986070?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/fengsp",
                "html_url": "https://github.com/fengsp",
                "followers_url": "https://api.github.com/users/fengsp/followers",
                "following_url": "https://api.github.com/users/fengsp/following{/other_user}",
                "gists_url": "https://api.github.com/users/fengsp/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/fengsp/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fengsp/subscriptions",
                "organizations_url": "https://api.github.com/users/fengsp/orgs",
                "repos_url": "https://api.github.com/users/fengsp/repos",
                "events_url": "https://api.github.com/users/fengsp/events{/privacy}",
                "received_events_url": "https://api.github.com/users/fengsp/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-05-25T09:26:40Z",
            "updated_at": "2014-05-25T09:26:40Z",
            "author_association": "CONTRIBUTOR",
            "body": "@untitaker How to catch the profiling result and show it out in the same request I am profiling?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/44126967",
            "html_url": "https://github.com/pallets/flask/issues/1070#issuecomment-44126967",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1070",
            "id": 44126967,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTI2OTY3",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-05-25T09:40:38Z",
            "updated_at": "2014-05-25T09:40:38Z",
            "author_association": "MEMBER",
            "body": "How do you want to add it to the request?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/44127470",
            "html_url": "https://github.com/pallets/flask/issues/1070#issuecomment-44127470",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1070",
            "id": 44127470,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTI3NDcw",
            "user": {
                "login": "fengsp",
                "id": 2986070,
                "node_id": "MDQ6VXNlcjI5ODYwNzA=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/2986070?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/fengsp",
                "html_url": "https://github.com/fengsp",
                "followers_url": "https://api.github.com/users/fengsp/followers",
                "following_url": "https://api.github.com/users/fengsp/following{/other_user}",
                "gists_url": "https://api.github.com/users/fengsp/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/fengsp/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fengsp/subscriptions",
                "organizations_url": "https://api.github.com/users/fengsp/orgs",
                "repos_url": "https://api.github.com/users/fengsp/repos",
                "events_url": "https://api.github.com/users/fengsp/events{/privacy}",
                "received_events_url": "https://api.github.com/users/fengsp/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-05-25T10:08:36Z",
            "updated_at": "2014-05-25T10:08:36Z",
            "author_association": "CONTRIBUTOR",
            "body": "@untitaker Each request binds one profiler and the corresponding profiling result.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/44138240",
            "html_url": "https://github.com/pallets/flask/issues/1070#issuecomment-44138240",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1070",
            "id": 44138240,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTM4MjQw",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-05-25T15:59:31Z",
            "updated_at": "2014-05-25T15:59:31Z",
            "author_association": "MEMBER",
            "body": "```\nclass ProfilerMiddleware(object):\n    def __init__(self, app):\n        self.app = app\n\n    def __call__(self, environ, start_response):\n        for data in self.app(environ, start_response):\n            yield data\n\n        yield '\\n This gets injected at the end of your HTML'\n```\n\nDoes this help?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/44138268",
            "html_url": "https://github.com/pallets/flask/issues/1070#issuecomment-44138268",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1070",
            "id": 44138268,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTM4MjY4",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-05-25T16:01:08Z",
            "updated_at": "2014-05-25T16:01:08Z",
            "author_association": "MEMBER",
            "body": "But actually you should check if it's actually HTML you're appending the profiling result to. See http://legacy.python.org/dev/peps/pep-0333/ for more info.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/44153526",
            "html_url": "https://github.com/pallets/flask/issues/1070#issuecomment-44153526",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1070",
            "id": 44153526,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTUzNTI2",
            "user": {
                "login": "fengsp",
                "id": 2986070,
                "node_id": "MDQ6VXNlcjI5ODYwNzA=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/2986070?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/fengsp",
                "html_url": "https://github.com/fengsp",
                "followers_url": "https://api.github.com/users/fengsp/followers",
                "following_url": "https://api.github.com/users/fengsp/following{/other_user}",
                "gists_url": "https://api.github.com/users/fengsp/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/fengsp/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fengsp/subscriptions",
                "organizations_url": "https://api.github.com/users/fengsp/orgs",
                "repos_url": "https://api.github.com/users/fengsp/repos",
                "events_url": "https://api.github.com/users/fengsp/events{/privacy}",
                "received_events_url": "https://api.github.com/users/fengsp/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-05-26T02:46:34Z",
            "updated_at": "2014-05-26T02:46:34Z",
            "author_association": "CONTRIBUTOR",
            "body": "@untitaker Thanks.\n"
        }
    ]
}