{
    "url": "https://api.github.com/repos/pallets/flask/issues/691",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/691/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/691/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/691/events",
    "html_url": "https://github.com/pallets/flask/issues/691",
    "id": 12052891,
    "node_id": "MDU6SXNzdWUxMjA1Mjg5MQ==",
    "number": 691,
    "title": "Request to add a callback hook while registering blueprint.",
    "user": {
        "login": "tonyseek",
        "id": 624598,
        "node_id": "MDQ6VXNlcjYyNDU5OA==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/624598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tonyseek",
        "html_url": "https://github.com/tonyseek",
        "followers_url": "https://api.github.com/users/tonyseek/followers",
        "following_url": "https://api.github.com/users/tonyseek/following{/other_user}",
        "gists_url": "https://api.github.com/users/tonyseek/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tonyseek/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tonyseek/subscriptions",
        "organizations_url": "https://api.github.com/users/tonyseek/orgs",
        "repos_url": "https://api.github.com/users/tonyseek/repos",
        "events_url": "https://api.github.com/users/tonyseek/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tonyseek/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 357932495,
            "node_id": "MDU6TGFiZWwzNTc5MzI0OTU=",
            "url": "https://api.github.com/repos/pallets/flask/labels/blueprints",
            "name": "blueprints",
            "color": "1d76db",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2013-03-15T07:43:31Z",
    "updated_at": "2017-05-22T17:15:41Z",
    "closed_at": "2017-05-22T17:15:41Z",
    "author_association": "NONE",
    "body": "Should it send a signal while `register_blueprint` been calling? Sometime we may expect to initialize something while a new blueprint been loading.\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/15074369",
            "html_url": "https://github.com/pallets/flask/issues/691#issuecomment-15074369",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/691",
            "id": 15074369,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDc0MzY5",
            "user": {
                "login": "apiguy",
                "id": 163848,
                "node_id": "MDQ6VXNlcjE2Mzg0OA==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/163848?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/apiguy",
                "html_url": "https://github.com/apiguy",
                "followers_url": "https://api.github.com/users/apiguy/followers",
                "following_url": "https://api.github.com/users/apiguy/following{/other_user}",
                "gists_url": "https://api.github.com/users/apiguy/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/apiguy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/apiguy/subscriptions",
                "organizations_url": "https://api.github.com/users/apiguy/orgs",
                "repos_url": "https://api.github.com/users/apiguy/repos",
                "events_url": "https://api.github.com/users/apiguy/events{/privacy}",
                "received_events_url": "https://api.github.com/users/apiguy/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-03-18T18:57:08Z",
            "updated_at": "2013-03-18T18:57:08Z",
            "author_association": "NONE",
            "body": "+1 for this. Would be very helpful for extensions. @tonyseek is there a pull request incoming?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/15121141",
            "html_url": "https://github.com/pallets/flask/issues/691#issuecomment-15121141",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/691",
            "id": 15121141,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTIxMTQx",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-03-19T15:28:36Z",
            "updated_at": "2013-03-19T15:28:36Z",
            "author_association": "MEMBER",
            "body": "Is #695 sufficient?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/15264718",
            "html_url": "https://github.com/pallets/flask/issues/691#issuecomment-15264718",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/691",
            "id": 15264718,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjY0NzE4",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-03-21T20:54:13Z",
            "updated_at": "2013-03-21T20:54:13Z",
            "author_association": "MEMBER",
            "body": "Not sure how that is useful?  Wouldn't that run into bootstrapping issues as blueprints can only be registered as the application is instanciated?  In that case I would assume the better approach is to just subclass `Flask` and customize the register method?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/15338099",
            "html_url": "https://github.com/pallets/flask/issues/691#issuecomment-15338099",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/691",
            "id": 15338099,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzM4MDk5",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-03-23T14:41:23Z",
            "updated_at": "2013-03-23T14:41:23Z",
            "author_association": "MEMBER",
            "body": "Can anybody post some concrete examples where this hook might be useful, so @mitsuhiko is convinced?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/70961786",
            "html_url": "https://github.com/pallets/flask/issues/691#issuecomment-70961786",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/691",
            "id": 70961786,
            "node_id": "MDEyOklzc3VlQ29tbWVudDcwOTYxNzg2",
            "user": {
                "login": "rcrowell",
                "id": 109991,
                "node_id": "MDQ6VXNlcjEwOTk5MQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/109991?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rcrowell",
                "html_url": "https://github.com/rcrowell",
                "followers_url": "https://api.github.com/users/rcrowell/followers",
                "following_url": "https://api.github.com/users/rcrowell/following{/other_user}",
                "gists_url": "https://api.github.com/users/rcrowell/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rcrowell/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rcrowell/subscriptions",
                "organizations_url": "https://api.github.com/users/rcrowell/orgs",
                "repos_url": "https://api.github.com/users/rcrowell/repos",
                "events_url": "https://api.github.com/users/rcrowell/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rcrowell/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-01-22T02:28:25Z",
            "updated_at": "2015-01-22T02:28:25Z",
            "author_association": "NONE",
            "body": "I would like to decorate all of a blueprint's view functions with a custom @as_json function before registering the blueprint, without having to write @as_json on each one individually.\n\nI was hoping to get a callback during blueprint-registration time to make these changes.  Is there a better way?\n"
        }
    ]
}