{
    "url": "https://api.github.com/repos/pallets/flask/issues/1974",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1974/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1974/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1974/events",
    "html_url": "https://github.com/pallets/flask/issues/1974",
    "id": 169021824,
    "node_id": "MDU6SXNzdWUxNjkwMjE4MjQ=",
    "number": 1974,
    "title": "POST to Flask has size limit, and provokes \"BrokenPipeError: [Errno 32] Broken pipe\" whenever no request.data is called",
    "user": {
        "login": "Kieleth",
        "id": 2021949,
        "node_id": "MDQ6VXNlcjIwMjE5NDk=",
        "avatar_url": "https://avatars2.githubusercontent.com/u/2021949?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Kieleth",
        "html_url": "https://github.com/Kieleth",
        "followers_url": "https://api.github.com/users/Kieleth/followers",
        "following_url": "https://api.github.com/users/Kieleth/following{/other_user}",
        "gists_url": "https://api.github.com/users/Kieleth/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Kieleth/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Kieleth/subscriptions",
        "organizations_url": "https://api.github.com/users/Kieleth/orgs",
        "repos_url": "https://api.github.com/users/Kieleth/repos",
        "events_url": "https://api.github.com/users/Kieleth/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Kieleth/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2016-08-03T00:43:57Z",
    "updated_at": "2016-09-06T20:17:16Z",
    "closed_at": "2016-09-06T19:55:36Z",
    "author_association": "NONE",
    "body": "Hi!\n``\nWe've experienced an interesting issue:\n\nFlask:\n\n``` python\n#post_flask.py\nfrom flask import (Flask, request)\napp = Flask(__name__)\napp.config['MAX_CONTENT_LENGTH'] = 1600 * 1024 * 1024\n\n@app.route('/pepe_post', methods=['POST'])\ndef post_pepe():\n    print('Hey!!!')\n    if request.method == 'POST':\n        #print(len(request.data))  #<< Uncomment to fix!!!\n        return 'hoho'\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5555, debug=True)\n```\n\nClient:\n\n``` python\n#do_post.py\nimport requests\n\ndef post(url, payload=None):\n    \"\"\" Handles POST http requests having an url and some optional payload \"\"\"\n    print(\"POST against url: '%s'\", url)\n    print(\"POST payload size: '%s'\", len(payload))\n    resp = requests.post(url, data=payload, headers={'content-type':'application/json'})\n    print(\"POST response: '%s'\", resp.text)\n    if resp.status_code != requests.codes.ok:\n        print('Service Response indicates error: %s/%s',\n                        resp.status_code, resp.content)\n        resp.raise_for_status()\n\nif __name__ == '__main__':\n    url = 'http://localhost:5555/pepe_post'\n    n = 1\n    while True:\n        print('post with payload of %s' % n)\n        payload = n * 1024 * 'a'   # << this breaks avobe 690K payloads\n        #payload = n * 1024 * 1024 * 'a'   # << this breaks inmediately\n        post(url, payload)\n        n += 1\n```\n\nMeaning, above ~690K posts, you get:\n\n```\npost with payload of 696\nPOST against url: '%s' http://localhost:5555/pepe_post\nPOST payload size: '%s' 712704\nTraceback (most recent call last):\n  File \"/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/site-packages/requests/packages/urllib3/connectionpool.py\", line 559, in urlopen\n    body=body, headers=headers)\n  File \"/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/site-packages/requests/packages/urllib3/connectionpool.py\", line 353, in _make_request\n    conn.request(method, url, **httplib_request_kw)\n  File \"/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/http/client.py\", line 1137, in request\n    self._send_request(method, url, body, headers)\n  File \"/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/http/client.py\", line 1182, in _send_request\n    self.endheaders(body)\n  File \"/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/http/client.py\", line 1133, in endheaders\n    self._send_output(message_body)\n  File \"/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/http/client.py\", line 967, in _send_output\n    self.send(message_body)\n  File \"/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/http/client.py\", line 929, in send\n    self.sock.sendall(data)\nBrokenPipeError: [Errno 32] Broken pipe\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/site-packages/requests/adapters.py\", line 376, in send\n    timeout=timeout\n  File \"/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/site-packages/requests/packages/urllib3/connectionpool.py\", line 609, in urlopen\n    _stacktrace=sys.exc_info()[2])\n  File \"/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/site-packages/requests/packages/urllib3/util/retry.py\", line 247, in increment\n    raise six.reraise(type(error), error, _stacktrace)\n  File \"/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/site-packages/requests/packages/urllib3/packages/six.py\", line 309, in reraise\n    raise value.with_traceback(tb)\n  File \"/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/site-packages/requests/packages/urllib3/connectionpool.py\", line 559, in urlopen\n    body=body, headers=headers)\n  File \"/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/site-packages/requests/packages/urllib3/connectionpool.py\", line 353, in _make_request\n    conn.request(method, url, **httplib_request_kw)\n  File \"/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/http/client.py\", line 1137, in request\n    self._send_request(method, url, body, headers)\n  File \"/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/http/client.py\", line 1182, in _send_request\n    self.endheaders(body)\n  File \"/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/http/client.py\", line 1133, in endheaders\n    self._send_output(message_body)\n  File \"/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/http/client.py\", line 967, in _send_output\n    self.send(message_body)\n  File \"/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/http/client.py\", line 929, in send\n    self.sock.sendall(data)\nrequests.packages.urllib3.exceptions.ProtocolError: ('Connection aborted.', BrokenPipeError(32, 'Broken pipe'))\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"do_post.py\", line 21, in <module>\n    post(url, payload)\n  File \"do_post.py\", line 7, in post\n    resp = requests.post(url, data=payload, headers={'content-type':'application/json'})\n  File \"/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/site-packages/requests/api.py\", line 107, in post\n    return request('post', url, data=data, json=json, **kwargs)\n  File \"/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/site-packages/requests/api.py\", line 53, in request\n    return session.request(method=method, url=url, **kwargs)\n  File \"/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/site-packages/requests/sessions.py\", line 468, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/site-packages/requests/sessions.py\", line 576, in send\n    r = adapter.send(request, **kwargs)\n  File \"/Users/lguzman/workspace/anaconda/anaconda3/envs/opportunity/lib/python3.4/site-packages/requests/adapters.py\", line 426, in send\n    raise ConnectionError(err, request=request)\nrequests.exceptions.ConnectionError: ('Connection aborted.', BrokenPipeError(32, 'Broken pipe'))\n```\n\nCan someone give us some information about this? is this by design? bug?\n\nVersion:\nFlask==0.10.1\n\nThanks!\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/242253073",
            "html_url": "https://github.com/pallets/flask/issues/1974#issuecomment-242253073",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1974",
            "id": 242253073,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjI1MzA3Mw==",
            "user": {
                "login": "liuliqiang",
                "id": 9395418,
                "node_id": "MDQ6VXNlcjkzOTU0MTg=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/9395418?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/liuliqiang",
                "html_url": "https://github.com/liuliqiang",
                "followers_url": "https://api.github.com/users/liuliqiang/followers",
                "following_url": "https://api.github.com/users/liuliqiang/following{/other_user}",
                "gists_url": "https://api.github.com/users/liuliqiang/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/liuliqiang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/liuliqiang/subscriptions",
                "organizations_url": "https://api.github.com/users/liuliqiang/orgs",
                "repos_url": "https://api.github.com/users/liuliqiang/repos",
                "events_url": "https://api.github.com/users/liuliqiang/events{/privacy}",
                "received_events_url": "https://api.github.com/users/liuliqiang/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-08-25T00:59:32Z",
            "updated_at": "2016-08-25T00:59:32Z",
            "author_association": "NONE",
            "body": "@Kieleth maybe it not flask's problem, i try you code in this way with Flask==0.10.1, it works...\n\n```\n#do_post.py\nimport requests\n\ndef post(url, payload=None):\n    \"\"\" Handles POST http requests having an url and some optional payload \"\"\"\n    print(\"POST against url: '%s'\", url)\n    print(\"POST payload size: '%s'\", len(payload))\n    resp = requests.post(url, data=payload, headers={'content-type':'application/json'})\n    print(\"POST response: '%s'\", resp.text)\n    if resp.status_code != requests.codes.ok:\n        print('Service Response indicates error: %s/%s',\n                        resp.status_code, resp.content)\n        resp.raise_for_status()\n\nif __name__ == '__main__':\n    url = 'http://localhost:5555/pepe_post'\n    n = 1000\n    payload = n * 1024 * 'a'   # << this breaks avobe 690K payloads\n    #payload = n * 1024 * 1024 * 'a'   # << this breaks inmediately\n    post(url, payload)\n```\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/244618897",
            "html_url": "https://github.com/pallets/flask/issues/1974#issuecomment-244618897",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1974",
            "id": 244618897,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDYxODg5Nw==",
            "user": {
                "login": "infinite-Joy",
                "id": 9998813,
                "node_id": "MDQ6VXNlcjk5OTg4MTM=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/9998813?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/infinite-Joy",
                "html_url": "https://github.com/infinite-Joy",
                "followers_url": "https://api.github.com/users/infinite-Joy/followers",
                "following_url": "https://api.github.com/users/infinite-Joy/following{/other_user}",
                "gists_url": "https://api.github.com/users/infinite-Joy/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/infinite-Joy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/infinite-Joy/subscriptions",
                "organizations_url": "https://api.github.com/users/infinite-Joy/orgs",
                "repos_url": "https://api.github.com/users/infinite-Joy/repos",
                "events_url": "https://api.github.com/users/infinite-Joy/events{/privacy}",
                "received_events_url": "https://api.github.com/users/infinite-Joy/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-04T17:58:02Z",
            "updated_at": "2016-09-04T17:58:02Z",
            "author_association": "NONE",
            "body": "This seems to be a similar issue in many systems and not specifically a flask issue.\n\nhttp://stackoverflow.com/questions/36323084/python-post-request-resulting-in-brokenpipeerror-sometimes\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/245053978",
            "html_url": "https://github.com/pallets/flask/issues/1974#issuecomment-245053978",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1974",
            "id": 245053978,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTA1Mzk3OA==",
            "user": {
                "login": "Kieleth",
                "id": 2021949,
                "node_id": "MDQ6VXNlcjIwMjE5NDk=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/2021949?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Kieleth",
                "html_url": "https://github.com/Kieleth",
                "followers_url": "https://api.github.com/users/Kieleth/followers",
                "following_url": "https://api.github.com/users/Kieleth/following{/other_user}",
                "gists_url": "https://api.github.com/users/Kieleth/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Kieleth/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Kieleth/subscriptions",
                "organizations_url": "https://api.github.com/users/Kieleth/orgs",
                "repos_url": "https://api.github.com/users/Kieleth/repos",
                "events_url": "https://api.github.com/users/Kieleth/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Kieleth/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-06T18:59:21Z",
            "updated_at": "2016-09-06T18:59:21Z",
            "author_association": "NONE",
            "body": "Interesting, what it really puzzles me is the:\n\n```\nif request.method == 'POST':\n    **#print(len(request.data))  #<< Uncomment to fix!!!**\n    return 'hoho'\n```\n\nThat is, if you do something with the data from the post, then the issue goes away magically.\nIs Flask using requests lib?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/245066697",
            "html_url": "https://github.com/pallets/flask/issues/1974#issuecomment-245066697",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1974",
            "id": 245066697,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTA2NjY5Nw==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-06T19:43:44Z",
            "updated_at": "2016-09-06T19:43:44Z",
            "author_association": "MEMBER",
            "body": "Have you tried using gunicorn instead of the builtin server?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/245067732",
            "html_url": "https://github.com/pallets/flask/issues/1974#issuecomment-245067732",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1974",
            "id": 245067732,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTA2NzczMg==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-06T19:47:23Z",
            "updated_at": "2016-09-06T19:47:23Z",
            "author_association": "MEMBER",
            "body": "Also I don't think the link @infinite-Joy posted is related at all.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/245070152",
            "html_url": "https://github.com/pallets/flask/issues/1974#issuecomment-245070152",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1974",
            "id": 245070152,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTA3MDE1Mg==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-06T19:55:36Z",
            "updated_at": "2016-09-06T19:55:36Z",
            "author_association": "MEMBER",
            "body": "Actually this appears to be a duplicate of https://github.com/kennethreitz/requests/issues/2422, I can't reproduce this issue with curl.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/245076690",
            "html_url": "https://github.com/pallets/flask/issues/1974#issuecomment-245076690",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1974",
            "id": 245076690,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTA3NjY5MA==",
            "user": {
                "login": "Kieleth",
                "id": 2021949,
                "node_id": "MDQ6VXNlcjIwMjE5NDk=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/2021949?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Kieleth",
                "html_url": "https://github.com/Kieleth",
                "followers_url": "https://api.github.com/users/Kieleth/followers",
                "following_url": "https://api.github.com/users/Kieleth/following{/other_user}",
                "gists_url": "https://api.github.com/users/Kieleth/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Kieleth/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Kieleth/subscriptions",
                "organizations_url": "https://api.github.com/users/Kieleth/orgs",
                "repos_url": "https://api.github.com/users/Kieleth/repos",
                "events_url": "https://api.github.com/users/Kieleth/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Kieleth/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-06T20:17:16Z",
            "updated_at": "2016-09-06T20:17:16Z",
            "author_association": "NONE",
            "body": "Spot-on @untitaker, thanks!\n"
        }
    ]
}