{
    "url": "https://api.github.com/repos/pallets/flask/issues/998",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/998/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/998/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/998/events",
    "html_url": "https://github.com/pallets/flask/issues/998",
    "id": 29328609,
    "node_id": "MDU6SXNzdWUyOTMyODYwOQ==",
    "number": 998,
    "title": "SERVER_NAME configuration should not implicitly change routing behavior.",
    "user": {
        "login": "ekoka",
        "id": 966912,
        "node_id": "MDQ6VXNlcjk2NjkxMg==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/966912?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ekoka",
        "html_url": "https://github.com/ekoka",
        "followers_url": "https://api.github.com/users/ekoka/followers",
        "following_url": "https://api.github.com/users/ekoka/following{/other_user}",
        "gists_url": "https://api.github.com/users/ekoka/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ekoka/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ekoka/subscriptions",
        "organizations_url": "https://api.github.com/users/ekoka/orgs",
        "repos_url": "https://api.github.com/users/ekoka/repos",
        "events_url": "https://api.github.com/users/ekoka/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ekoka/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": {
        "login": "mitsuhiko",
        "id": 7396,
        "node_id": "MDQ6VXNlcjczOTY=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mitsuhiko",
        "html_url": "https://github.com/mitsuhiko",
        "followers_url": "https://api.github.com/users/mitsuhiko/followers",
        "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
        "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
        "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
        "repos_url": "https://api.github.com/users/mitsuhiko/repos",
        "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "mitsuhiko",
            "id": 7396,
            "node_id": "MDQ6VXNlcjczOTY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mitsuhiko",
            "html_url": "https://github.com/mitsuhiko",
            "followers_url": "https://api.github.com/users/mitsuhiko/followers",
            "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
            "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
            "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
            "repos_url": "https://api.github.com/users/mitsuhiko/repos",
            "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": {
        "url": "https://api.github.com/repos/pallets/flask/milestones/2",
        "html_url": "https://github.com/pallets/flask/milestone/2",
        "labels_url": "https://api.github.com/repos/pallets/flask/milestones/2/labels",
        "id": 795954,
        "node_id": "MDk6TWlsZXN0b25lNzk1OTU0",
        "number": 2,
        "title": "1.0",
        "description": "",
        "creator": {
            "login": "untitaker",
            "id": 837573,
            "node_id": "MDQ6VXNlcjgzNzU3Mw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/untitaker",
            "html_url": "https://github.com/untitaker",
            "followers_url": "https://api.github.com/users/untitaker/followers",
            "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
            "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
            "organizations_url": "https://api.github.com/users/untitaker/orgs",
            "repos_url": "https://api.github.com/users/untitaker/repos",
            "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
            "received_events_url": "https://api.github.com/users/untitaker/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 0,
        "closed_issues": 159,
        "state": "closed",
        "created_at": "2014-09-19T15:47:20Z",
        "updated_at": "2018-04-26T21:07:44Z",
        "due_on": "2018-04-26T07:00:00Z",
        "closed_at": "2018-04-26T21:07:44Z"
    },
    "comments": 12,
    "created_at": "2014-03-13T06:28:07Z",
    "updated_at": "2018-02-23T16:47:21Z",
    "closed_at": "2018-02-23T16:47:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "When `Flask.config['SERVER_NAME']` is set to a domain (_thedomain.com:8080_) it alters the route matching behavior. Requests on \"subdomained\" urls (_sub1.thedomain.com:8080/some/route_) then only resolve to subdomained Blueprints (Blueprints with their 'subdomain' attribute set). With `app.config['SERVER_NAME']` set to `None`, subdomained url would also properly resolve to non-subdomained Blueprints.\n\nIn other words, the presence of `app.config['SERVER_NAME']` effectively serves as an _implicit_ switch to subdomain matching behaviour for Blueprints.\n\n(1) if this is intentional the documentation is not clear about it.\n(2) the naming of that config is not very indicative of this behavior altering property either.\n(3) this is not always the desirable behavior. Sometimes one still wants to use subdomains and set `app.config['SERVER_NAME']`, but does not want to map blueprints to subdomains. Such is the case for example, when using the value contained by `app.config['SERVER_NAME']` to extract the subdomain info from the requested url in one's own user-defined function (a `before_request` handler for example). As it stands, the behavior altering property of `app.config['SERVER_NAME']` forces developers in the latter use-case to set another more innocuous config property with the same value (e.g. `app.config['SERVER_DOMAIN']`).\n\nI propose that a new config flag that will explicitly enable subdomain matching behavior be added. The presence of which would make `app.config['SERVER_NAME']` mandatory (can't have subdomain support without it). But the presence of `app.config['SERVER_NAME']` should not impose subdomain matching behavior.\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/45585943",
            "html_url": "https://github.com/pallets/flask/issues/998#issuecomment-45585943",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/998",
            "id": 45585943,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTg1OTQz",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-06-10T08:18:47Z",
            "updated_at": "2014-06-10T08:18:47Z",
            "author_association": "MEMBER",
            "body": "I think the core problem is that people think `SERVER_NAME` does anything other than this.  `SERVER_NAME` is supposed to do two things and that is documented:\n1. assist Flask in URL generation outside of an active request context (for instance emails)\n2. enable subdomain based URL routing.\n\nHowever I can see that the feature is problematic for blueprints that do not have a subdomain set.  What would you expect blueprints without subdomain should do?  Maybe we can figure out what the exact issue is and provide an improvement over it.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/45586187",
            "html_url": "https://github.com/pallets/flask/issues/998#issuecomment-45586187",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/998",
            "id": 45586187,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTg2MTg3",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-06-10T08:21:43Z",
            "updated_at": "2014-06-10T08:21:43Z",
            "author_association": "MEMBER",
            "body": "I think the core problem is that blueprints with a subdomain set actually work if `SERVER_NAME` is not set.  That was never intended.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/46097693",
            "html_url": "https://github.com/pallets/flask/issues/998#issuecomment-46097693",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/998",
            "id": 46097693,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDk3Njkz",
            "user": {
                "login": "ekoka",
                "id": 966912,
                "node_id": "MDQ6VXNlcjk2NjkxMg==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/966912?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ekoka",
                "html_url": "https://github.com/ekoka",
                "followers_url": "https://api.github.com/users/ekoka/followers",
                "following_url": "https://api.github.com/users/ekoka/following{/other_user}",
                "gists_url": "https://api.github.com/users/ekoka/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ekoka/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ekoka/subscriptions",
                "organizations_url": "https://api.github.com/users/ekoka/orgs",
                "repos_url": "https://api.github.com/users/ekoka/repos",
                "events_url": "https://api.github.com/users/ekoka/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ekoka/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-06-14T19:44:46Z",
            "updated_at": "2014-06-14T19:49:13Z",
            "author_association": "CONTRIBUTOR",
            "body": "In my sense the problem is the double duty of `SERVER_NAME`. It contains information necessary for URL generation (1), and it switches unrelated behaviour (2). There are situations where I would gladly use the former, without needing subdomain based routing. Furthermore, `SERVER_NAME` could be used in different contexts where subdomains are not mapped to blueprints. For instance, in multi-tenant applications, where you need to catch the subdomain in a `before_request` handler to allow the app to switch to the appropriate db schema.\n\nMy proposition is to have an additional configuration whose purpose would be to explicitly enable subdomain based routing, something like `SUBDOMAIN_MATCH`. The presence of which should require the presence of `SERVER_NAME`, but the reverse should not apply.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/210464461",
            "html_url": "https://github.com/pallets/flask/issues/998#issuecomment-210464461",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/998",
            "id": 210464461,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDQ2NDQ2MQ==",
            "user": {
                "login": "klamann",
                "id": 1008877,
                "node_id": "MDQ6VXNlcjEwMDg4Nzc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1008877?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/klamann",
                "html_url": "https://github.com/klamann",
                "followers_url": "https://api.github.com/users/klamann/followers",
                "following_url": "https://api.github.com/users/klamann/following{/other_user}",
                "gists_url": "https://api.github.com/users/klamann/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/klamann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/klamann/subscriptions",
                "organizations_url": "https://api.github.com/users/klamann/orgs",
                "repos_url": "https://api.github.com/users/klamann/repos",
                "events_url": "https://api.github.com/users/klamann/events{/privacy}",
                "received_events_url": "https://api.github.com/users/klamann/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-04-15T13:29:44Z",
            "updated_at": "2016-04-15T13:29:44Z",
            "author_association": "NONE",
            "body": "This bug just caused me a massive headache, because I expected `SERVER_NAME` to behave consistently with `app.run(host, port)`. Example:\n\n```\nfrom flask import Flask\napp = Flask(__name__)\n\n@app.route(\"/\")\ndef hello():\n    return \"Hello World!\"\n\nif __name__ == \"__main__\":\n    app.config['SERVER_NAME'] = \"127.0.0.1:5555\"  # fine\n    #app.config['SERVER_NAME'] = \"0.0.0.0:5555\"    # fail\n    app.run()\n```\n\nI was using `SERVER_NAME` to set the host and port of my application, wich works fine, except when I set the host to 0.0.0.0. In this case, all requests return 404. I guess this may be a result of the implicit subdomain matching that is used here.\n\nPlease make this configuration behave consistently or at least add a proper warning in the documentation. Currently it implies that what I was doing should work just fine. it literally took me hours to figure this out :/\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/231022018",
            "html_url": "https://github.com/pallets/flask/issues/998#issuecomment-231022018",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/998",
            "id": 231022018,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTAyMjAxOA==",
            "user": {
                "login": "silpol",
                "id": 43109,
                "node_id": "MDQ6VXNlcjQzMTA5",
                "avatar_url": "https://avatars0.githubusercontent.com/u/43109?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/silpol",
                "html_url": "https://github.com/silpol",
                "followers_url": "https://api.github.com/users/silpol/followers",
                "following_url": "https://api.github.com/users/silpol/following{/other_user}",
                "gists_url": "https://api.github.com/users/silpol/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/silpol/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/silpol/subscriptions",
                "organizations_url": "https://api.github.com/users/silpol/orgs",
                "repos_url": "https://api.github.com/users/silpol/repos",
                "events_url": "https://api.github.com/users/silpol/events{/privacy}",
                "received_events_url": "https://api.github.com/users/silpol/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-07-07T08:58:39Z",
            "updated_at": "2016-07-07T08:58:39Z",
            "author_association": "NONE",
            "body": "@Klamann strictly speaking, 0.0.0.0 is not an address but catcher-for-all-errors-in-routing-table.\n\nAny process which listens on 0.0.0.0 essentially catches packets which routing can not deliver. Article on wikipedia [about 0.0.0.0](https://en.wikipedia.org/wiki/0.0.0.0) is surprisingly concise and simplistic enough.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/293220707",
            "html_url": "https://github.com/pallets/flask/issues/998#issuecomment-293220707",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/998",
            "id": 293220707,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzIyMDcwNw==",
            "user": {
                "login": "thclark",
                "id": 7223170,
                "node_id": "MDQ6VXNlcjcyMjMxNzA=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/7223170?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/thclark",
                "html_url": "https://github.com/thclark",
                "followers_url": "https://api.github.com/users/thclark/followers",
                "following_url": "https://api.github.com/users/thclark/following{/other_user}",
                "gists_url": "https://api.github.com/users/thclark/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/thclark/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thclark/subscriptions",
                "organizations_url": "https://api.github.com/users/thclark/orgs",
                "repos_url": "https://api.github.com/users/thclark/repos",
                "events_url": "https://api.github.com/users/thclark/events{/privacy}",
                "received_events_url": "https://api.github.com/users/thclark/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-11T10:47:16Z",
            "updated_at": "2017-04-11T10:47:16Z",
            "author_association": "NONE",
            "body": "Agreed - the dual behaviour of `SERVER_NAME` makes for many headaches putting together a dynamic subdomains app, too. I've only just fully understood the current behaviour by reading this issue.\r\n\r\n+1 for the solution presented by @ekoka above - i.e. the addition of a `SUBDOMAIN_MATCH` configuration, allowing folks to turn matching off if the intention is not to map subdomains along to blueprints. **This should be set by default True, to keep behaviour consistent with previous versions**.\r\n\r\n@mitsuhiko I could put together a PR with the added configuration parameter and updated docs if you think that's useful?\r\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/294548754",
            "html_url": "https://github.com/pallets/flask/issues/998#issuecomment-294548754",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/998",
            "id": 294548754,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDU0ODc1NA==",
            "user": {
                "login": "revmischa",
                "id": 245131,
                "node_id": "MDQ6VXNlcjI0NTEzMQ==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/245131?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/revmischa",
                "html_url": "https://github.com/revmischa",
                "followers_url": "https://api.github.com/users/revmischa/followers",
                "following_url": "https://api.github.com/users/revmischa/following{/other_user}",
                "gists_url": "https://api.github.com/users/revmischa/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/revmischa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/revmischa/subscriptions",
                "organizations_url": "https://api.github.com/users/revmischa/orgs",
                "repos_url": "https://api.github.com/users/revmischa/repos",
                "events_url": "https://api.github.com/users/revmischa/events{/privacy}",
                "received_events_url": "https://api.github.com/users/revmischa/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-17T18:16:01Z",
            "updated_at": "2017-04-17T18:16:01Z",
            "author_association": "NONE",
            "body": "I need SERVER_NAME set for generating URLs outside of web request context, but I don't want my views to stop working when a different subdomain (i.e. 'www') is used. How can I achieve this?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/308552116",
            "html_url": "https://github.com/pallets/flask/issues/998#issuecomment-308552116",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/998",
            "id": 308552116,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwODU1MjExNg==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-14T20:42:34Z",
            "updated_at": "2017-06-14T20:42:34Z",
            "author_association": "MEMBER",
            "body": "@revmischa that is a separate issue, and is solved by having your web server redirect other domains to the \"canonical\" domain. For example, they should intercept `www.example.com` and redirect to `example.com`."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/357577436",
            "html_url": "https://github.com/pallets/flask/issues/998#issuecomment-357577436",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/998",
            "id": 357577436,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzU3NzQzNg==",
            "user": {
                "login": "luaz",
                "id": 1735138,
                "node_id": "MDQ6VXNlcjE3MzUxMzg=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/1735138?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/luaz",
                "html_url": "https://github.com/luaz",
                "followers_url": "https://api.github.com/users/luaz/followers",
                "following_url": "https://api.github.com/users/luaz/following{/other_user}",
                "gists_url": "https://api.github.com/users/luaz/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/luaz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luaz/subscriptions",
                "organizations_url": "https://api.github.com/users/luaz/orgs",
                "repos_url": "https://api.github.com/users/luaz/repos",
                "events_url": "https://api.github.com/users/luaz/events{/privacy}",
                "received_events_url": "https://api.github.com/users/luaz/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-01-15T03:56:52Z",
            "updated_at": "2018-01-15T03:56:52Z",
            "author_association": "NONE",
            "body": "I agree with @revmischa suggestion.\r\n\r\nI am using Google App Engine. If I set SERVER_NAME, I could never use GAE's task/cronjob feature because internally GAE will call the url using myappname.appspot.com rather than my full domain name.\r\n\r\nA quick fix would be for url_for to accept a _server_name parameter."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/357607656",
            "html_url": "https://github.com/pallets/flask/issues/998#issuecomment-357607656",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/998",
            "id": 357607656,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzYwNzY1Ng==",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-01-15T08:01:06Z",
            "updated_at": "2018-01-15T08:01:06Z",
            "author_association": "MEMBER",
            "body": "I think I agree at this point that `SERVER_NAME` should not change the routing. It does indeed cause issues in particular if ngrok and others is involved."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/357609022",
            "html_url": "https://github.com/pallets/flask/issues/998#issuecomment-357609022",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/998",
            "id": 357609022,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzYwOTAyMg==",
            "user": {
                "login": "revmischa",
                "id": 245131,
                "node_id": "MDQ6VXNlcjI0NTEzMQ==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/245131?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/revmischa",
                "html_url": "https://github.com/revmischa",
                "followers_url": "https://api.github.com/users/revmischa/followers",
                "following_url": "https://api.github.com/users/revmischa/following{/other_user}",
                "gists_url": "https://api.github.com/users/revmischa/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/revmischa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/revmischa/subscriptions",
                "organizations_url": "https://api.github.com/users/revmischa/orgs",
                "repos_url": "https://api.github.com/users/revmischa/repos",
                "events_url": "https://api.github.com/users/revmischa/events{/privacy}",
                "received_events_url": "https://api.github.com/users/revmischa/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-01-15T08:08:17Z",
            "updated_at": "2018-01-15T08:08:17Z",
            "author_association": "NONE",
            "body": "it causes a lot more problems then it solves. i'd like to have a \"canonical\" server name, but use the `Host` header for _external url construction by default."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/360052834",
            "html_url": "https://github.com/pallets/flask/issues/998#issuecomment-360052834",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/998",
            "id": 360052834,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDA1MjgzNA==",
            "user": {
                "login": "merlincorey",
                "id": 111680,
                "node_id": "MDQ6VXNlcjExMTY4MA==",
                "avatar_url": "https://avatars3.githubusercontent.com/u/111680?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/merlincorey",
                "html_url": "https://github.com/merlincorey",
                "followers_url": "https://api.github.com/users/merlincorey/followers",
                "following_url": "https://api.github.com/users/merlincorey/following{/other_user}",
                "gists_url": "https://api.github.com/users/merlincorey/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/merlincorey/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/merlincorey/subscriptions",
                "organizations_url": "https://api.github.com/users/merlincorey/orgs",
                "repos_url": "https://api.github.com/users/merlincorey/repos",
                "events_url": "https://api.github.com/users/merlincorey/events{/privacy}",
                "received_events_url": "https://api.github.com/users/merlincorey/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-01-24T08:12:05Z",
            "updated_at": "2018-01-24T08:12:05Z",
            "author_association": "NONE",
            "body": "@mitsuhiko I can say that I was surprised by this behavior more than once on different projects over time, having to rediscover it.  I literally just minutes ago was taking someone new through the Flask tutorial and this came up, prompting me to review the documentation, my current practices around SERVER_NAME handling, and this bug report which you have responded to very recently to me at this time of writing.\r\n\r\nAnyway, that's a pretty longwinded \ud83d\udc4d but \ud83d\udc4d indeed!"
        }
    ]
}