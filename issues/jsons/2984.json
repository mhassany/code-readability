{
    "url": "https://api.github.com/repos/pallets/flask/issues/2984",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2984/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2984/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2984/events",
    "html_url": "https://github.com/pallets/flask/issues/2984",
    "id": 376521601,
    "node_id": "MDU6SXNzdWUzNzY1MjE2MDE=",
    "number": 2984,
    "title": "HTTPException handler catches non-error exceptions like RequestRedirect",
    "user": {
        "login": "taion",
        "id": 3112159,
        "node_id": "MDQ6VXNlcjMxMTIxNTk=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/3112159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/taion",
        "html_url": "https://github.com/taion",
        "followers_url": "https://api.github.com/users/taion/followers",
        "following_url": "https://api.github.com/users/taion/following{/other_user}",
        "gists_url": "https://api.github.com/users/taion/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/taion/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/taion/subscriptions",
        "organizations_url": "https://api.github.com/users/taion/orgs",
        "repos_url": "https://api.github.com/users/taion/repos",
        "events_url": "https://api.github.com/users/taion/events{/privacy}",
        "received_events_url": "https://api.github.com/users/taion/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 14,
    "created_at": "2018-11-01T18:48:57Z",
    "updated_at": "2019-01-07T18:05:19Z",
    "closed_at": "2019-01-07T18:05:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is related to https://github.com/pallets/flask/issues/2841, but the emphasis is different.\r\n\r\n### Expected Behavior\r\n\r\nNon-error exceptions should not be caught by registered error handlers.\r\n\r\n```python\r\napp.register_error_handler(HTTPException, my_error_handler)\r\n\r\n@app.route('/path-with-slash/')\r\ndef my_route():\r\n    return '', 204\r\n```\r\n\r\nAttempting to visit `/path-with-slash` should redirect to `/path-with-slash/`, without invoking `my_error_handler`.\r\n\r\n### Actual Behavior\r\n\r\nAs the `RequestRedirect` raised internally in Werkzeug is a subclass of `HTTPException`, `my_error_handler` will get called. This is unexpected because no error has occurred, and the only appropriate way to handle this case is to add boilerplate to re-raise any Werkzeug `RoutingException`s.\r\n\r\n### Environment\r\n\r\n* Python version: 3.7.0\r\n* Flask version: 1.0.2\r\n* Werkzeug version: 0.14.1",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/435147452",
            "html_url": "https://github.com/pallets/flask/issues/2984#issuecomment-435147452",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2984",
            "id": 435147452,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTE0NzQ1Mg==",
            "user": {
                "login": "taion",
                "id": 3112159,
                "node_id": "MDQ6VXNlcjMxMTIxNTk=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/3112159?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/taion",
                "html_url": "https://github.com/taion",
                "followers_url": "https://api.github.com/users/taion/followers",
                "following_url": "https://api.github.com/users/taion/following{/other_user}",
                "gists_url": "https://api.github.com/users/taion/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/taion/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/taion/subscriptions",
                "organizations_url": "https://api.github.com/users/taion/orgs",
                "repos_url": "https://api.github.com/users/taion/repos",
                "events_url": "https://api.github.com/users/taion/events{/privacy}",
                "received_events_url": "https://api.github.com/users/taion/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-11-01T18:54:19Z",
            "updated_at": "2018-11-01T18:54:19Z",
            "author_association": "CONTRIBUTOR",
            "body": "The most straightforward fix would be to add a hard-coded exception to not handle `RoutingException` instances with the error handling logic in Flask. `RequestRedirect` instances are not errors."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/435159059",
            "html_url": "https://github.com/pallets/flask/issues/2984#issuecomment-435159059",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2984",
            "id": 435159059,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTE1OTA1OQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-11-01T19:32:59Z",
            "updated_at": "2018-11-01T19:32:59Z",
            "author_association": "MEMBER",
            "body": "I'm not clear how this is different than #2841."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/435160773",
            "html_url": "https://github.com/pallets/flask/issues/2984#issuecomment-435160773",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2984",
            "id": 435160773,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTE2MDc3Mw==",
            "user": {
                "login": "taion",
                "id": 3112159,
                "node_id": "MDQ6VXNlcjMxMTIxNTk=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/3112159?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/taion",
                "html_url": "https://github.com/taion",
                "followers_url": "https://api.github.com/users/taion/followers",
                "following_url": "https://api.github.com/users/taion/following{/other_user}",
                "gists_url": "https://api.github.com/users/taion/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/taion/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/taion/subscriptions",
                "organizations_url": "https://api.github.com/users/taion/orgs",
                "repos_url": "https://api.github.com/users/taion/repos",
                "events_url": "https://api.github.com/users/taion/events{/privacy}",
                "received_events_url": "https://api.github.com/users/taion/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-11-01T19:38:32Z",
            "updated_at": "2018-11-01T19:38:32Z",
            "author_association": "CONTRIBUTOR",
            "body": "The difference is that the `NotFound` coming from routing is (1) actually an error and (2) is indistinguishable from a `NotFound` raised within the app. Additionally, a generic error handler that preserves the error code will still work.\r\n\r\nNone of those are true for a `RequestRedirect` raised internally by Werkzeug's routing logic. It's (1) not an error and (2) trivially distinguishable from other errors, as it extends `RoutingException`. Additionally, error handlers for generic `HTTPException`s will do something wrong here, as it's insufficient to just preserve `error.code` \u2013 one must preserve the `Location` header from the baked-in response as well, which requires reaching more deeply into the internals of the exception class."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/435166100",
            "html_url": "https://github.com/pallets/flask/issues/2984#issuecomment-435166100",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2984",
            "id": 435166100,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTE2NjEwMA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-11-01T19:55:49Z",
            "updated_at": "2018-11-01T19:56:16Z",
            "author_association": "MEMBER",
            "body": "> Additionally, error handlers for generic `HTTPException`s will do something wrong here, as it's insufficient to just preserve `error.code` \u2013 one must preserve the `Location` header from the baked-in response as well, which requires reaching more deeply into the internals of the exception class.\r\n\r\nDoes my comment on the other issue not address that? A handler for the base exception should check if it's actually a bad HTTP error being handled, else return it if not. https://github.com/pallets/flask/issues/2841#issuecomment-403037572"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/435169551",
            "html_url": "https://github.com/pallets/flask/issues/2984#issuecomment-435169551",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2984",
            "id": 435169551,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTE2OTU1MQ==",
            "user": {
                "login": "taion",
                "id": 3112159,
                "node_id": "MDQ6VXNlcjMxMTIxNTk=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/3112159?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/taion",
                "html_url": "https://github.com/taion",
                "followers_url": "https://api.github.com/users/taion/followers",
                "following_url": "https://api.github.com/users/taion/following{/other_user}",
                "gists_url": "https://api.github.com/users/taion/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/taion/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/taion/subscriptions",
                "organizations_url": "https://api.github.com/users/taion/orgs",
                "repos_url": "https://api.github.com/users/taion/repos",
                "events_url": "https://api.github.com/users/taion/events{/privacy}",
                "received_events_url": "https://api.github.com/users/taion/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-11-01T20:07:21Z",
            "updated_at": "2018-11-01T20:07:21Z",
            "author_association": "CONTRIBUTOR",
            "body": "The issue here is that no error handler should catch instances of `RequestRedirect`, because they're not errors. The use of `RequestRedirect` is an internal implementation detail of Werkzeug. `RequestRedirect` in fact does not even show up in `exceptions.default_exceptions` in Werkzeug.\r\n\r\nThis is different from e.g. `NotFound`, in that `NotFound` is an HTTP error class, and a default exception class."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/435170134",
            "html_url": "https://github.com/pallets/flask/issues/2984#issuecomment-435170134",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2984",
            "id": 435170134,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTE3MDEzNA==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-11-01T20:09:31Z",
            "updated_at": "2018-11-01T20:09:31Z",
            "author_association": "MEMBER",
            "body": "could we add an option either when registering error handlers or in `app.config` on whether HTTPException or even Exception error handlers catch http exceptions?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/435174566",
            "html_url": "https://github.com/pallets/flask/issues/2984#issuecomment-435174566",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2984",
            "id": 435174566,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTE3NDU2Ng==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-11-01T20:24:11Z",
            "updated_at": "2018-11-01T20:24:11Z",
            "author_association": "MEMBER",
            "body": "Unfortunately the name \"errorhandler\" is confusing. What it actually means is \"exception handler\". An exception is not necessarily an error, as people are discovering."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/435175806",
            "html_url": "https://github.com/pallets/flask/issues/2984#issuecomment-435175806",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2984",
            "id": 435175806,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTE3NTgwNg==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-11-01T20:28:19Z",
            "updated_at": "2018-11-01T20:28:19Z",
            "author_association": "MEMBER",
            "body": "I want to mark this as a duplicate. Whatever the decision in the end, I don't think there's a difference between NotFound and RequestRedirect in terms of what's causing the issue and how it can be / will be handled."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/435177386",
            "html_url": "https://github.com/pallets/flask/issues/2984#issuecomment-435177386",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2984",
            "id": 435177386,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTE3NzM4Ng==",
            "user": {
                "login": "taion",
                "id": 3112159,
                "node_id": "MDQ6VXNlcjMxMTIxNTk=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/3112159?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/taion",
                "html_url": "https://github.com/taion",
                "followers_url": "https://api.github.com/users/taion/followers",
                "following_url": "https://api.github.com/users/taion/following{/other_user}",
                "gists_url": "https://api.github.com/users/taion/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/taion/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/taion/subscriptions",
                "organizations_url": "https://api.github.com/users/taion/orgs",
                "repos_url": "https://api.github.com/users/taion/repos",
                "events_url": "https://api.github.com/users/taion/events{/privacy}",
                "received_events_url": "https://api.github.com/users/taion/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-11-01T20:33:25Z",
            "updated_at": "2018-11-01T20:33:25Z",
            "author_association": "CONTRIBUTOR",
            "body": "These are the differences:\r\n\r\n1. `RequestRedirect` is not part of `exceptions.default_exceptions`\r\n1. One cannot normally install an error handler on status code 301; if `werkzeug.exceptions` added a `MovedPermanently` exception (with code 301), then an error handler on code 301 would, in the current implementation, not catch a `RequestRedirect`\r\n1. `RequestRedirect` can be generally distinguished from other `HTTPException`s because it implements `RoutingException`, which is explicitly flagged in Werkzeug as a set of \"special exceptions\"\r\n1. `RequestRedirect` is not semantically an error"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/435177387",
            "html_url": "https://github.com/pallets/flask/issues/2984#issuecomment-435177387",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2984",
            "id": 435177387,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTE3NzM4Nw==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-11-01T20:33:25Z",
            "updated_at": "2018-11-01T20:33:25Z",
            "author_association": "MEMBER",
            "body": "> I don't think there's a difference between NotFound and RequestRedirect\r\n\r\nNot sure - I think it's not too uncommon to register an error handler for http errors to show prettier error pages (github-unicorn-from-hell style ;)). But even I was a bit surprised when I got my error page for a 3xx! Ths workaround is super easy, but for someone less experienced with Flask I can imagine it's indeed pretty confusing."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/435177637",
            "html_url": "https://github.com/pallets/flask/issues/2984#issuecomment-435177637",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2984",
            "id": 435177637,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTE3NzYzNw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-11-01T20:34:13Z",
            "updated_at": "2018-11-01T20:34:51Z",
            "author_association": "MEMBER",
            "body": "Which is why it's marked as a documentation issue. We need to properly explain that `errorhandler(HTTPExcpetion)` is similar to `except Exception` in how broad it is, and show how to deal with that."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/435178699",
            "html_url": "https://github.com/pallets/flask/issues/2984#issuecomment-435178699",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2984",
            "id": 435178699,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTE3ODY5OQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-11-01T20:37:49Z",
            "updated_at": "2018-11-01T20:38:21Z",
            "author_association": "MEMBER",
            "body": "The problem with special casing `RoutingExcpetion` to skip handling is that as soon as someone *does* want to adjust how their redirects work, they can't."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/435179355",
            "html_url": "https://github.com/pallets/flask/issues/2984#issuecomment-435179355",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2984",
            "id": 435179355,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTE3OTM1NQ==",
            "user": {
                "login": "taion",
                "id": 3112159,
                "node_id": "MDQ6VXNlcjMxMTIxNTk=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/3112159?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/taion",
                "html_url": "https://github.com/taion",
                "followers_url": "https://api.github.com/users/taion/followers",
                "following_url": "https://api.github.com/users/taion/following{/other_user}",
                "gists_url": "https://api.github.com/users/taion/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/taion/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/taion/subscriptions",
                "organizations_url": "https://api.github.com/users/taion/orgs",
                "repos_url": "https://api.github.com/users/taion/repos",
                "events_url": "https://api.github.com/users/taion/events{/privacy}",
                "received_events_url": "https://api.github.com/users/taion/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-11-01T20:39:59Z",
            "updated_at": "2018-11-01T20:39:59Z",
            "author_association": "CONTRIBUTOR",
            "body": "I disagree with that statement.\r\n\r\nFor example, returning `flask.redirect` does not in general raise a `RequestRedirect`, so one cannot use error handlers on `RequestRedirect` to implement custom request behavior in the first place.\r\n\r\nIf one wishes to customize Werkzeug's routing logic, the correct way to handle that would be to do so in the router, rather than by using what should be the app's error handling logic."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/435180437",
            "html_url": "https://github.com/pallets/flask/issues/2984#issuecomment-435180437",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2984",
            "id": 435180437,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTE4MDQzNw==",
            "user": {
                "login": "taion",
                "id": 3112159,
                "node_id": "MDQ6VXNlcjMxMTIxNTk=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/3112159?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/taion",
                "html_url": "https://github.com/taion",
                "followers_url": "https://api.github.com/users/taion/followers",
                "following_url": "https://api.github.com/users/taion/following{/other_user}",
                "gists_url": "https://api.github.com/users/taion/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/taion/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/taion/subscriptions",
                "organizations_url": "https://api.github.com/users/taion/orgs",
                "repos_url": "https://api.github.com/users/taion/repos",
                "events_url": "https://api.github.com/users/taion/events{/privacy}",
                "received_events_url": "https://api.github.com/users/taion/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-11-01T20:43:29Z",
            "updated_at": "2018-11-01T20:43:29Z",
            "author_association": "CONTRIBUTOR",
            "body": "I've added https://github.com/pallets/flask/pull/2986 as a strawman to demonstrate what the fix would look like, and updated the test to demonstrate the behavior that it enables."
        }
    ]
}