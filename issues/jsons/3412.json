{
    "url": "https://api.github.com/repos/pallets/flask/issues/3412",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/3412/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/3412/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/3412/events",
    "html_url": "https://github.com/pallets/flask/pull/3412",
    "id": 516047705,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzM1MzcyMzUz",
    "number": 3412,
    "title": "Add `async` support",
    "user": {
        "login": "pgjones",
        "id": 1391482,
        "node_id": "MDQ6VXNlcjEzOTE0ODI=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1391482?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pgjones",
        "html_url": "https://github.com/pgjones",
        "followers_url": "https://api.github.com/users/pgjones/followers",
        "following_url": "https://api.github.com/users/pgjones/following{/other_user}",
        "gists_url": "https://api.github.com/users/pgjones/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pgjones/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pgjones/subscriptions",
        "organizations_url": "https://api.github.com/users/pgjones/orgs",
        "repos_url": "https://api.github.com/users/pgjones/repos",
        "events_url": "https://api.github.com/users/pgjones/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pgjones/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2019-11-01T11:02:20Z",
    "updated_at": "2019-11-04T17:28:57Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
        "url": "https://api.github.com/repos/pallets/flask/pulls/3412",
        "html_url": "https://github.com/pallets/flask/pull/3412",
        "diff_url": "https://github.com/pallets/flask/pull/3412.diff",
        "patch_url": "https://github.com/pallets/flask/pull/3412.patch"
    },
    "body": "This will require Python 2 support to be dropped, which as I understand isn't likely to happen till 2020. Which is a bonus as it gives time to consider this change and the implications of it. (I also need to spend some time cleaning up this implementation, yet it serves as a proof of concept).\r\n\r\nI've written [this blog post](https://pgjones.dev/blog/flask-async-quart-sync-2019/) to add some extra context, but I see a key aspect to this change is that whilst it adds `async` support it does not do so throughout and specifically does not support ASGI. This means that Flask is constrained (when using `async`) to have worse performance than the ASGI equivalents. This is necessary as I don't think Flask can be `async` throughout (or support ASGI) whilst being backwards compatible. Yet this change is good overall, in that users would be able to add some async usage to their existing codebases. I would also like to note that they can switch to Quart if their usage becomes mostly async. \r\n\r\nThis allows for async functions to be passed to the Flask class\r\ninstance, for example as a view function,\r\n\r\n    @app.route(\"/\")\r\n    async def index():\r\n        return \"Async hello\"\r\n\r\nthis comes with a cost though of poorer performance than using the\r\nsync equivalent.\r\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/548763042",
            "html_url": "https://github.com/pallets/flask/pull/3412#issuecomment-548763042",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3412",
            "id": 548763042,
            "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODc2MzA0Mg==",
            "user": {
                "login": "miguelgrinberg",
                "id": 2715854,
                "node_id": "MDQ6VXNlcjI3MTU4NTQ=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/miguelgrinberg",
                "html_url": "https://github.com/miguelgrinberg",
                "followers_url": "https://api.github.com/users/miguelgrinberg/followers",
                "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions",
                "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs",
                "repos_url": "https://api.github.com/users/miguelgrinberg/repos",
                "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}",
                "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-11-01T11:56:22Z",
            "updated_at": "2019-11-01T11:57:11Z",
            "author_association": "MEMBER",
            "body": "Hey Phil!\r\n\r\nI know my views are different than many on this topic, but the main (only?) reason I would use an asynchronous server over a synchronous one is to achieve much higher scaling. This solution obviously does not address this problem, so this should be noted. I think the note about the performance is warranted, but just a partial aspect, the scaling limitations should be noted as well.\r\n\r\nA second thought is that it would be nicer if multiple async view functions could run concurrently in the asyncio thread, all under the same loop. I believe your implementation would allow only one async function to run at any given time. It seems there wouldn't be any problem in using a shared loop to run all of them concurrently, and that would eliminate some of the performance penalties in using this solution, I think."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/548769528",
            "html_url": "https://github.com/pallets/flask/pull/3412#issuecomment-548769528",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3412",
            "id": 548769528,
            "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODc2OTUyOA==",
            "user": {
                "login": "pgjones",
                "id": 1391482,
                "node_id": "MDQ6VXNlcjEzOTE0ODI=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/1391482?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/pgjones",
                "html_url": "https://github.com/pgjones",
                "followers_url": "https://api.github.com/users/pgjones/followers",
                "following_url": "https://api.github.com/users/pgjones/following{/other_user}",
                "gists_url": "https://api.github.com/users/pgjones/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/pgjones/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pgjones/subscriptions",
                "organizations_url": "https://api.github.com/users/pgjones/orgs",
                "repos_url": "https://api.github.com/users/pgjones/repos",
                "events_url": "https://api.github.com/users/pgjones/events{/privacy}",
                "received_events_url": "https://api.github.com/users/pgjones/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-11-01T12:22:58Z",
            "updated_at": "2019-11-01T12:22:58Z",
            "author_association": "MEMBER",
            "body": "Hi Miguel!\r\n\r\nI agree with you on both points (except that I think this does allow multiple async functions to run at once if the server is threaded or green threaded - each async function would get its own thread). With the latter point, I'd rather not explore how to implement running all functions under the same thread without a feeling that this is the right approach for Flask."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/548772028",
            "html_url": "https://github.com/pallets/flask/pull/3412#issuecomment-548772028",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3412",
            "id": 548772028,
            "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODc3MjAyOA==",
            "user": {
                "login": "miguelgrinberg",
                "id": 2715854,
                "node_id": "MDQ6VXNlcjI3MTU4NTQ=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/miguelgrinberg",
                "html_url": "https://github.com/miguelgrinberg",
                "followers_url": "https://api.github.com/users/miguelgrinberg/followers",
                "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions",
                "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs",
                "repos_url": "https://api.github.com/users/miguelgrinberg/repos",
                "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}",
                "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-11-01T12:33:32Z",
            "updated_at": "2019-11-01T12:33:32Z",
            "author_association": "MEMBER",
            "body": "Phil, I may be missing something. You are starting a thread pool of size 1 hardcoded, which means that you will have only one asyncio thread per Flask process. Even if you used a threaded server, the bottleneck is the single asyncio thread. You could make that size of 1 configurable, and then you can have some control over how many asyncio view functions can run concurrently, but that seems backwards to me. I think running all of them in a single loop is what makes most sense. I agree with you on that there is no point in going through the effort until we decide to go forward with a solution of this type."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/548773062",
            "html_url": "https://github.com/pallets/flask/pull/3412#issuecomment-548773062",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3412",
            "id": 548773062,
            "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODc3MzA2Mg==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-11-01T12:37:30Z",
            "updated_at": "2019-11-01T12:37:30Z",
            "author_association": "MEMBER",
            "body": "I've had individual discussions with @mitsuhiko, @andrewgodwin, and @pgjones that lead to this implementation as a possible first step, despite the limitations you point out. The first goal is to enable `@route() async def` at all. Later improvements could build on this.\r\n\r\nPlease continue to discuss, I wanted to add some context for why this implementation was submitted."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/548774300",
            "html_url": "https://github.com/pallets/flask/pull/3412#issuecomment-548774300",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3412",
            "id": 548774300,
            "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODc3NDMwMA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-11-01T12:42:20Z",
            "updated_at": "2019-11-01T12:43:06Z",
            "author_association": "MEMBER",
            "body": "@pgjones if it's helpful, I don't mind an optional dependency on asgiref, as they have some nice async/sync helpers already."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/548999963",
            "html_url": "https://github.com/pallets/flask/pull/3412#issuecomment-548999963",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3412",
            "id": 548999963,
            "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODk5OTk2Mw==",
            "user": {
                "login": "lepture",
                "id": 290496,
                "node_id": "MDQ6VXNlcjI5MDQ5Ng==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/290496?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/lepture",
                "html_url": "https://github.com/lepture",
                "followers_url": "https://api.github.com/users/lepture/followers",
                "following_url": "https://api.github.com/users/lepture/following{/other_user}",
                "gists_url": "https://api.github.com/users/lepture/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/lepture/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lepture/subscriptions",
                "organizations_url": "https://api.github.com/users/lepture/orgs",
                "repos_url": "https://api.github.com/users/lepture/repos",
                "events_url": "https://api.github.com/users/lepture/events{/privacy}",
                "received_events_url": "https://api.github.com/users/lepture/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-11-02T01:59:53Z",
            "updated_at": "2019-11-02T02:00:24Z",
            "author_association": "MEMBER",
            "body": "I suggest we create a v2 branch and putting async into v2. And in v2, we don't support Python 2.7 anymore."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/549461286",
            "html_url": "https://github.com/pallets/flask/pull/3412#issuecomment-549461286",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3412",
            "id": 549461286,
            "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTQ2MTI4Ng==",
            "user": {
                "login": "pgjones",
                "id": 1391482,
                "node_id": "MDQ6VXNlcjEzOTE0ODI=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/1391482?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/pgjones",
                "html_url": "https://github.com/pgjones",
                "followers_url": "https://api.github.com/users/pgjones/followers",
                "following_url": "https://api.github.com/users/pgjones/following{/other_user}",
                "gists_url": "https://api.github.com/users/pgjones/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/pgjones/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pgjones/subscriptions",
                "organizations_url": "https://api.github.com/users/pgjones/orgs",
                "repos_url": "https://api.github.com/users/pgjones/repos",
                "events_url": "https://api.github.com/users/pgjones/events{/privacy}",
                "received_events_url": "https://api.github.com/users/pgjones/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-11-04T17:27:52Z",
            "updated_at": "2019-11-04T17:28:57Z",
            "author_association": "MEMBER",
            "body": "I'd prefer to avoid a v2 branch, and wait till next year and the end of Py2 before merging this. (Edit: Forget to say why). As I don't think it is worth maintaining a v2 branch as it couldn't be released.\r\n\r\nI've looked into asgiref, I'm not sure it is a good fit here - will take another look though, thanks."
        }
    ]
}