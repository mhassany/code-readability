{
    "url": "https://api.github.com/repos/pallets/flask/issues/2992",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2992/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2992/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2992/events",
    "html_url": "https://github.com/pallets/flask/issues/2992",
    "id": 379206475,
    "node_id": "MDU6SXNzdWUzNzkyMDY0NzU=",
    "number": 2992,
    "title": "Custom exception handler not working when an exception is thrown from streaming a generator",
    "user": {
        "login": "trstringer",
        "id": 1445483,
        "node_id": "MDQ6VXNlcjE0NDU0ODM=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1445483?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/trstringer",
        "html_url": "https://github.com/trstringer",
        "followers_url": "https://api.github.com/users/trstringer/followers",
        "following_url": "https://api.github.com/users/trstringer/following{/other_user}",
        "gists_url": "https://api.github.com/users/trstringer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/trstringer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/trstringer/subscriptions",
        "organizations_url": "https://api.github.com/users/trstringer/orgs",
        "repos_url": "https://api.github.com/users/trstringer/repos",
        "events_url": "https://api.github.com/users/trstringer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/trstringer/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-11-09T15:28:44Z",
    "updated_at": "2018-11-09T15:56:11Z",
    "closed_at": "2018-11-09T15:56:10Z",
    "author_association": "NONE",
    "body": "### Expected Behavior\r\n\r\nWhen streaming from a generator, if there is an exception thrown then the application's custom exception handler should catch this exception.\r\n\r\n```python\r\nfrom flask import Flask, Response\r\n\r\napp = Flask(__name__)\r\n\r\n@app.route('/')\r\ndef default_route():\r\n    return 'hello world'\r\n\r\n@app.route('/error')\r\ndef error_route():\r\n    raise Exception('error in error_route')\r\n\r\n@app.route('/streamingerror')\r\ndef streaming_error_route():\r\n    def inner_gen():\r\n        raise Exception('error from streaming_error_route')\r\n        yield 'hello'\r\n    return Response(inner_gen())\r\n\r\n@app.errorhandler(Exception)\r\ndef custom_exception_handler(_):\r\n    return 'handled by custom exception handler'\r\n```\r\n\r\n### Actual Behavior\r\n\r\n```\r\n $ curl localhost:5000\r\nhello world~\r\n $ curl localhost:5000/error\r\nhandled by custom exception handler~\r\n $ curl localhost:5000/streamingerror\r\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\r\n<title>500 Internal Server Error</title>\r\n<h1>Internal Server Error</h1>\r\n<p>The server encountered an internal error and was unable to complete your request.  Either the server is overloaded or there is an error in the application.</p>\r\n```\r\n\r\nThe request to `/streamingerror` should also pass through the custom exception handler.\r\n\r\n### Environment\r\n\r\n* Python version: 3.6.3\r\n* Flask version: 1.0.2\r\n* Werkzeug version: 0.14.1\r\n\r\n### Other notes\r\n\r\nI had tried with `stream_with_context` and the same behavior still exists.",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/437403466",
            "html_url": "https://github.com/pallets/flask/issues/2992#issuecomment-437403466",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2992",
            "id": 437403466,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzQwMzQ2Ng==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-11-09T15:56:10Z",
            "updated_at": "2018-11-09T15:56:10Z",
            "author_association": "MEMBER",
            "body": "By the time the generator is running, control is back with the WSGI server, Flask is no longer handling the request."
        }
    ]
}