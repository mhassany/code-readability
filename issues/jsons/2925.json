{
    "url": "https://api.github.com/repos/pallets/flask/issues/2925",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2925/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2925/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2925/events",
    "html_url": "https://github.com/pallets/flask/issues/2925",
    "id": 364959888,
    "node_id": "MDU6SXNzdWUzNjQ5NTk4ODg=",
    "number": 2925,
    "title": "Very repeatable timeout issue",
    "user": {
        "login": "mgeorgiadis",
        "id": 20775190,
        "node_id": "MDQ6VXNlcjIwNzc1MTkw",
        "avatar_url": "https://avatars3.githubusercontent.com/u/20775190?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mgeorgiadis",
        "html_url": "https://github.com/mgeorgiadis",
        "followers_url": "https://api.github.com/users/mgeorgiadis/followers",
        "following_url": "https://api.github.com/users/mgeorgiadis/following{/other_user}",
        "gists_url": "https://api.github.com/users/mgeorgiadis/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mgeorgiadis/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mgeorgiadis/subscriptions",
        "organizations_url": "https://api.github.com/users/mgeorgiadis/orgs",
        "repos_url": "https://api.github.com/users/mgeorgiadis/repos",
        "events_url": "https://api.github.com/users/mgeorgiadis/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mgeorgiadis/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-09-28T16:31:39Z",
    "updated_at": "2018-09-28T16:46:27Z",
    "closed_at": "2018-09-28T16:37:36Z",
    "author_association": "NONE",
    "body": "### Expected Behavior\r\n\r\nI have a piece of hardware that only supplies a 32 bit .dll, but it needs to be integrated into a piece of software that must be 64 bit for other reasons.  So I used the opportunity to setup a 32-bit python server in Flask to communicate with device and be controlled by a client in my existing 64-bit program.\r\n\r\nThe 32 bit server should simply just exist as a pass through for my 64 bit client to the hardware.  \r\n\r\n### Actual Behavior\r\n\r\nThis all works well and fine for some number of function calls, however I get very repeatable timeouts after a specific number of function calls to the server.  I have been able to reproduce this using a very simple simulation without any hardware that I can share below.  \r\n\r\nIn my program, the 64 bit version of python spins up a 32-bit python exe and specifies the server .py file.  So to run this, you'll need to specify a location to your 32-bit version of python.  Simply specify the location of the 32 bit python .exe in client.py and then run client.py in a 64 bit version of python.\r\n\r\nIn any event, I'm finding that after 54 calls to the server from the client, the server just doesn't respond anymore.  I initially remedied this by killing all 32 bit python processes and restarting the server, but this is really unstable to do over a long time, and this program needs to run for weeks without crashing.  This seems like some sort of bug, but I've been unable to troubleshoot further since this is a bit out of my experience area.\r\n\r\n### Code Examples\r\n\r\nPut the code below into a file called \"server.py\"\r\n```python\r\n# Simple server.py example to demonstrate timeout\r\n\r\nfrom flask import Flask\r\nimport json\r\n\r\napp = Flask(__name__)\r\n\r\n@app.route('/')\r\ndef start():\r\n    # Do nothing on root other than verify that server connects successfully\r\n    response={}\r\n    response[\"Connection\"]=0\r\n    return json.dumps(response)\r\n\r\n@app.route('/dosomething')\r\ndef hardwaredoessomething():\r\n    # in the full use case the client would tell the server to tell the\r\n    # hardware to do something, and then the function would return\r\n    # when that is done.  This is simulated here.\r\n    response={}\r\n    response[\"Status\"]=0\r\n    response[\"Complete\"]=0\r\n    return json.dumps(response)\r\n          \r\napp.run()\r\n```\r\n\r\nPut the code below into a file called client.py, in the same folder as server.py\r\n```python\r\n# Simple client.py example\r\n\r\nimport os\r\nimport urllib.request\r\nimport subprocess\r\nimport json\r\nimport time\r\n\r\n# insert path to your 32 bit version of python here\r\npython32bitpath = r'C:\\Python\\32 bit Python 3\\python-3.4.4\\python.exe'\r\nserverpath = os.getcwd() + r'\\server.py'\r\n\r\n# Start the 32 bit python server\r\np1 = subprocess.Popen([python32bitpath,serverpath],\\\r\n                           stdout=subprocess.PIPE,\r\n                           stderr=subprocess.PIPE)\r\n\r\n\r\n\r\n# Specify the location of the server\r\nroot = 'http://localhost:5000/'\r\n\r\n# give a couple seconds for the server to initialize\r\ntime.sleep(3)\r\n\r\n# Verify you can connect to the server\r\nret = urllib.request.urlopen(root)\r\nresponse = ret.read().decode()\r\nprint(response)\r\n\r\nnumCalls = 0\r\n\r\nfor i in range(100):\r\n    ret = urllib.request.urlopen(root+'dosomething')\r\n    response = ret.read().decode()\r\n    print('response',response)\r\n    print(\"number of calls\",numCalls)\r\n    numCalls+=1\r\n    time.sleep(0.5)\r\n```\r\n\r\n### Environment\r\n* Python version: I've seen this on python 3.4 and python 3.6\r\n* Flask version: 0.11.1\r\n\r\n### Follow up\r\nAlso just as a follow up, I also tested this code by having a 64 bit client and a 64 bit server as well.  Still stops at 54 calls.  I definitely would appreciate the help as this would enable my program to be much more robust.  I just wish hardware vendors would get modern and supply 64 bit .dlls.",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/425494236",
            "html_url": "https://github.com/pallets/flask/issues/2925#issuecomment-425494236",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2925",
            "id": 425494236,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTQ5NDIzNg==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-09-28T16:37:36Z",
            "updated_at": "2018-09-28T16:38:35Z",
            "author_association": "MEMBER",
            "body": "There is pretty much no way I'm going to be able to investigate this, so if you need this fixed, you'll need to do that work and submit a patch.\r\n\r\nHowever, you appear to be relying on Werkzeug's dev server for stability. This is explicitly warned against in many places in the documentation. The dev server is meant for local development only, it is not designed for stability, security, or performance. Use a dedicated WSGI server such as Gunicorn or uWSGI when deploying your Flask application.\r\n\r\nAdditionally, Flask 0.11.1 is no longer supported, you should upgrade to 1.0 as soon as possible. You may be using older versions of other dependencies such as Werkzeug as well."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/425494825",
            "html_url": "https://github.com/pallets/flask/issues/2925#issuecomment-425494825",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2925",
            "id": 425494825,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTQ5NDgyNQ==",
            "user": {
                "login": "mgeorgiadis",
                "id": 20775190,
                "node_id": "MDQ6VXNlcjIwNzc1MTkw",
                "avatar_url": "https://avatars3.githubusercontent.com/u/20775190?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mgeorgiadis",
                "html_url": "https://github.com/mgeorgiadis",
                "followers_url": "https://api.github.com/users/mgeorgiadis/followers",
                "following_url": "https://api.github.com/users/mgeorgiadis/following{/other_user}",
                "gists_url": "https://api.github.com/users/mgeorgiadis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mgeorgiadis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mgeorgiadis/subscriptions",
                "organizations_url": "https://api.github.com/users/mgeorgiadis/orgs",
                "repos_url": "https://api.github.com/users/mgeorgiadis/repos",
                "events_url": "https://api.github.com/users/mgeorgiadis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mgeorgiadis/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-09-28T16:39:50Z",
            "updated_at": "2018-09-28T16:39:50Z",
            "author_association": "NONE",
            "body": "Ok.  I'll use something other than Flask then.  Thank you."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/425494973",
            "html_url": "https://github.com/pallets/flask/issues/2925#issuecomment-425494973",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2925",
            "id": 425494973,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTQ5NDk3Mw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-09-28T16:40:21Z",
            "updated_at": "2018-09-28T16:41:54Z",
            "author_association": "MEMBER",
            "body": "You can use Flask, just don't use the dev server (`app.run`) in production."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/425496667",
            "html_url": "https://github.com/pallets/flask/issues/2925#issuecomment-425496667",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2925",
            "id": 425496667,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTQ5NjY2Nw==",
            "user": {
                "login": "mgeorgiadis",
                "id": 20775190,
                "node_id": "MDQ6VXNlcjIwNzc1MTkw",
                "avatar_url": "https://avatars3.githubusercontent.com/u/20775190?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mgeorgiadis",
                "html_url": "https://github.com/mgeorgiadis",
                "followers_url": "https://api.github.com/users/mgeorgiadis/followers",
                "following_url": "https://api.github.com/users/mgeorgiadis/following{/other_user}",
                "gists_url": "https://api.github.com/users/mgeorgiadis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mgeorgiadis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mgeorgiadis/subscriptions",
                "organizations_url": "https://api.github.com/users/mgeorgiadis/orgs",
                "repos_url": "https://api.github.com/users/mgeorgiadis/repos",
                "events_url": "https://api.github.com/users/mgeorgiadis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mgeorgiadis/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-09-28T16:46:27Z",
            "updated_at": "2018-09-28T16:46:27Z",
            "author_association": "NONE",
            "body": "Ok, upgrading to the lastest version of Flask and Werkzeug on my Python distributions didn't solve the problem so I'll try out something other than app.run and see if that solves it."
        }
    ]
}