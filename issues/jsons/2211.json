{
    "url": "https://api.github.com/repos/pallets/flask/issues/2211",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2211/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2211/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2211/events",
    "html_url": "https://github.com/pallets/flask/pull/2211",
    "id": 215160461,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTExMzkzMzU1",
    "number": 2211,
    "title": "Fix static route when using host_matching = True",
    "user": {
        "login": "jab",
        "id": 64992,
        "node_id": "MDQ6VXNlcjY0OTky",
        "avatar_url": "https://avatars1.githubusercontent.com/u/64992?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jab",
        "html_url": "https://github.com/jab",
        "followers_url": "https://api.github.com/users/jab/followers",
        "following_url": "https://api.github.com/users/jab/following{/other_user}",
        "gists_url": "https://api.github.com/users/jab/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jab/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jab/subscriptions",
        "organizations_url": "https://api.github.com/users/jab/orgs",
        "repos_url": "https://api.github.com/users/jab/repos",
        "events_url": "https://api.github.com/users/jab/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jab/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2017-03-18T02:29:29Z",
    "updated_at": "2018-10-23T17:44:05Z",
    "closed_at": "2017-03-27T20:01:20Z",
    "author_association": "MEMBER",
    "pull_request": {
        "url": "https://api.github.com/repos/pallets/flask/pulls/2211",
        "html_url": "https://github.com/pallets/flask/pull/2211",
        "diff_url": "https://github.com/pallets/flask/pull/2211.diff",
        "patch_url": "https://github.com/pallets/flask/pull/2211.patch"
    },
    "body": "Change `Flask.__init__` to accept a new `static_host` keyword argument,\r\ndefaulting to None. <s>Passing this results in url_map.host_matching to be\r\nset to True implicitly. This is because host_matching must be set by the\r\ntime the static route is added, or else it won't match.</s> (Edit: see updates below.)\r\n\r\nFixes #1559.\r\nSubsumes #1560.",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/287511216",
            "html_url": "https://github.com/pallets/flask/pull/2211#issuecomment-287511216",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2211",
            "id": 287511216,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzUxMTIxNg==",
            "user": {
                "login": "jab",
                "id": 64992,
                "node_id": "MDQ6VXNlcjY0OTky",
                "avatar_url": "https://avatars1.githubusercontent.com/u/64992?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jab",
                "html_url": "https://github.com/jab",
                "followers_url": "https://api.github.com/users/jab/followers",
                "following_url": "https://api.github.com/users/jab/following{/other_user}",
                "gists_url": "https://api.github.com/users/jab/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jab/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jab/subscriptions",
                "organizations_url": "https://api.github.com/users/jab/orgs",
                "repos_url": "https://api.github.com/users/jab/repos",
                "events_url": "https://api.github.com/users/jab/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jab/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-03-18T02:46:23Z",
            "updated_at": "2017-03-18T02:46:23Z",
            "author_association": "MEMBER",
            "body": "It looks like the build is failing for Python 3 here due to the known, unrelated issue #513"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/288823808",
            "html_url": "https://github.com/pallets/flask/pull/2211#issuecomment-288823808",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2211",
            "id": 288823808,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODgyMzgwOA==",
            "user": {
                "login": "jab",
                "id": 64992,
                "node_id": "MDQ6VXNlcjY0OTky",
                "avatar_url": "https://avatars1.githubusercontent.com/u/64992?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jab",
                "html_url": "https://github.com/jab",
                "followers_url": "https://api.github.com/users/jab/followers",
                "following_url": "https://api.github.com/users/jab/following{/other_user}",
                "gists_url": "https://api.github.com/users/jab/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jab/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jab/subscriptions",
                "organizations_url": "https://api.github.com/users/jab/orgs",
                "repos_url": "https://api.github.com/users/jab/repos",
                "events_url": "https://api.github.com/users/jab/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jab/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-03-23T18:49:10Z",
            "updated_at": "2017-03-23T18:49:10Z",
            "author_association": "MEMBER",
            "body": "> It looks like the build is failing for Python 3 here due to the known, unrelated issue #513\r\n\r\n(same thing happened again)"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/289020220",
            "html_url": "https://github.com/pallets/flask/pull/2211#issuecomment-289020220",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2211",
            "id": 289020220,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTAyMDIyMA==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-03-24T13:19:16Z",
            "updated_at": "2017-03-24T13:19:16Z",
            "author_association": "MEMBER",
            "body": "You won't have to worry about any of this if you register your\n`add_static_route` as `before_first_request_func`.\n\nOn Fri, Mar 24, 2017 at 06:14:47AM -0700, jab wrote:\n> jab commented on this pull request.\n> \n> \n> \n> > @@ -1982,6 +1997,10 @@ def wsgi_app(self, environ, start_response):\n>                                 a list of headers and an optional\n>                                 exception context to start the response\n>          \"\"\"\n> +        with self._before_request_lock:\n> +            if not self._got_first_request and self._should_add_static_route:\n> +                self._add_static_route()\n> +                self._should_add_static_route = False\n> \n> I was concerned that only using the `_got_first_request` guard inside the new, earlier `with self._before_request_lock` block I added\\*, could introduce a race condition:\n> \n> If the first two requests come in at almost the same time, the first one enters the first `with ...lock` block and adds the static route, then the second one enters that first `with ...lock` block and *re*-adds the static route, *before* the first  request enters the second `with ...lock` block and finally flips the `_got_first_request` guard to True. So I added the additional guard for whether we've added the static route yet.\n> \n> But after your comment, and upon taking another look, I'm wondering whether this race condition can actually happen, or whether adding the same route twice is not a big deal in any case. If not, I've updated the logic to match your suggestions in 8ba6f35. If that's sound, this should now be ready to merge, otherwise I'm happy to work through this further.\n> \n> Thanks for taking another look.\n> \n> \\* which comes before the existing `with self._before_request_lock` block in `try_trigger_before_first_request_functions()` (called by `full_dispatch_request()`, which is called by `wsgi_app()` a few lines after the logic I added), and which is the block that finally sets the `_got_first_request` guard to True\n> \n> -- \n> You are receiving this because you commented.\n> Reply to this email directly or view it on GitHub:\n> https://github.com/pallets/flask/pull/2211#discussion_r107898985\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/289022733",
            "html_url": "https://github.com/pallets/flask/pull/2211#issuecomment-289022733",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2211",
            "id": 289022733,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTAyMjczMw==",
            "user": {
                "login": "jab",
                "id": 64992,
                "node_id": "MDQ6VXNlcjY0OTky",
                "avatar_url": "https://avatars1.githubusercontent.com/u/64992?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jab",
                "html_url": "https://github.com/jab",
                "followers_url": "https://api.github.com/users/jab/followers",
                "following_url": "https://api.github.com/users/jab/following{/other_user}",
                "gists_url": "https://api.github.com/users/jab/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jab/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jab/subscriptions",
                "organizations_url": "https://api.github.com/users/jab/orgs",
                "repos_url": "https://api.github.com/users/jab/repos",
                "events_url": "https://api.github.com/users/jab/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jab/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-03-24T13:30:24Z",
            "updated_at": "2017-03-24T13:30:24Z",
            "author_association": "MEMBER",
            "body": "At first that's what I thought too, and that's how I tried to do this initially, but it doesn't work. The problem is the existing `with self._before_request_lock` block runs after the `ctx = self.request_context(environ)` line. By that time, a url adapter has already been created out of the request, and sets a NotFound error on it. So if the first request was for a static resource, Flask would incorrectly serve a 404. Try it yourself.\r\n\r\nUnless I'm somehow missing something obvious, since this is tough for even maintainers to follow, it does seem that at some point a cleanup of the control flow is needed."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/289027228",
            "html_url": "https://github.com/pallets/flask/pull/2211#issuecomment-289027228",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2211",
            "id": 289027228,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTAyNzIyOA==",
            "user": {
                "login": "jab",
                "id": 64992,
                "node_id": "MDQ6VXNlcjY0OTky",
                "avatar_url": "https://avatars1.githubusercontent.com/u/64992?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jab",
                "html_url": "https://github.com/jab",
                "followers_url": "https://api.github.com/users/jab/followers",
                "following_url": "https://api.github.com/users/jab/following{/other_user}",
                "gists_url": "https://api.github.com/users/jab/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jab/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jab/subscriptions",
                "organizations_url": "https://api.github.com/users/jab/orgs",
                "repos_url": "https://api.github.com/users/jab/repos",
                "events_url": "https://api.github.com/users/jab/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jab/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-03-24T13:49:15Z",
            "updated_at": "2017-03-24T13:49:15Z",
            "author_association": "MEMBER",
            "body": "Regarding the question of what happens if the static route were added a second time, it looks like it would raise `AssertionError: View function mapping is overwriting an existing endpoint function: static`, so no good."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/289565508",
            "html_url": "https://github.com/pallets/flask/pull/2211#issuecomment-289565508",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2211",
            "id": 289565508,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTU2NTUwOA==",
            "user": {
                "login": "jab",
                "id": 64992,
                "node_id": "MDQ6VXNlcjY0OTky",
                "avatar_url": "https://avatars1.githubusercontent.com/u/64992?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jab",
                "html_url": "https://github.com/jab",
                "followers_url": "https://api.github.com/users/jab/followers",
                "following_url": "https://api.github.com/users/jab/following{/other_user}",
                "gists_url": "https://api.github.com/users/jab/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jab/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jab/subscriptions",
                "organizations_url": "https://api.github.com/users/jab/orgs",
                "repos_url": "https://api.github.com/users/jab/repos",
                "events_url": "https://api.github.com/users/jab/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jab/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-03-27T19:51:28Z",
            "updated_at": "2017-03-27T19:51:28Z",
            "author_association": "MEMBER",
            "body": "@untitaker et al., in light of the above, do you prefer registering the static route at app initialization time, and accepting a new `__init__` parameter for whether to set app.url_map.host_matching to True?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/289568226",
            "html_url": "https://github.com/pallets/flask/pull/2211#issuecomment-289568226",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2211",
            "id": 289568226,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTU2ODIyNg==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-03-27T20:01:06Z",
            "updated_at": "2017-03-27T20:01:06Z",
            "author_association": "MEMBER",
            "body": "Sorry for the slow response. Considering this makes control flow only more complicated I think I'm for the solution of your previous PR."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/289568282",
            "html_url": "https://github.com/pallets/flask/pull/2211#issuecomment-289568282",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2211",
            "id": 289568282,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTU2ODI4Mg==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-03-27T20:01:20Z",
            "updated_at": "2017-03-27T20:01:20Z",
            "author_association": "MEMBER",
            "body": "Reopened https://github.com/pallets/flask/pull/1560"
        }
    ]
}