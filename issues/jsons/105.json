{
    "url": "https://api.github.com/repos/pallets/flask/issues/105",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/105/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/105/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/105/events",
    "html_url": "https://github.com/pallets/flask/issues/105",
    "id": 270524,
    "node_id": "MDU6SXNzdWUyNzA1MjQ=",
    "number": 105,
    "title": "`pydoc flask` [or vars(flask)] fails",
    "user": {
        "login": "zarf",
        "id": 356177,
        "node_id": "MDQ6VXNlcjM1NjE3Nw==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/356177?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/zarf",
        "html_url": "https://github.com/zarf",
        "followers_url": "https://api.github.com/users/zarf/followers",
        "following_url": "https://api.github.com/users/zarf/following{/other_user}",
        "gists_url": "https://api.github.com/users/zarf/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/zarf/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zarf/subscriptions",
        "organizations_url": "https://api.github.com/users/zarf/orgs",
        "repos_url": "https://api.github.com/users/zarf/repos",
        "events_url": "https://api.github.com/users/zarf/events{/privacy}",
        "received_events_url": "https://api.github.com/users/zarf/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2010-08-06T12:25:47Z",
    "updated_at": "2010-08-07T11:03:11Z",
    "closed_at": "2010-08-07T11:03:11Z",
    "author_association": "NONE",
    "body": "Steps to reproduce:\n\n```\n(werk)mini:~ fz$ python\nPython 2.6.1 (r261:67515, Dec 17 2009, 00:59:15) \n[GCC 4.2.1 (Apple Inc. build 5646)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import pydoc, flask\n>>> pydoc.pager = lambda text: pydoc.pipepager(text, 'cat')\n>>> help(flask)\nHelp on package flask:\n\nflask = <module 'flask' from '/Volumes/Home/FZ/.local/repo/flask/flask/__init__.pyc'>\n>>> \n```\n\nNo top-level documentation! Same problem with help(flask.app), help(flask.globals), help(flask.helpers), also via the pydoc -p web server. I found that it hinges on this:\n\n```\n>>> pydoc.text.docmodule(flask)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Volumes/Home/FZ/.local/lib/python2.6/site-packages/pydoc.py\", line 1100, in docmodule\n    contents.append(self.docother(value, key, name, maxlen=70))\n  File \"/Volumes/Home/FZ/.local/lib/python2.6/site-packages/pydoc.py\", line 1299, in docother\n    repr = self.repr(object)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/repr.py\", line 24, in repr\n    return self.repr1(x, self.maxlevel)\n  File \"/Volumes/Home/FZ/.local/lib/python2.6/site-packages/pydoc.py\", line 955, in repr1\n    return cram(stripid(repr(x)), self.maxother)\n  File \"/Volumes/Home/FZ/.local/env/werk/lib/python2.6/site-packages/werkzeug/local.py\", line 321, in __repr__\n    obj = self._get_current_object()\n  File \"/Volumes/Home/FZ/.local/env/werk/lib/python2.6/site-packages/werkzeug/local.py\", line 306, in _get_current_object\n    return self.__local()\n  File \"/Volumes/Home/FZ/.local/repo/flask/flask/globals.py\", line 17, in <lambda>\n    current_app = LocalProxy(lambda: _request_ctx_stack.top.app)\nAttributeError: 'NoneType' object has no attribute 'app'\n>>> \n```\n\nand can be fixed by the following change (which I hope won't cause breakage elsewhere):\n\n```\ndiff --git a/flask/globals.py b/flask/globals.py\nindex aac4655..0a17f56 100644\n--- a/flask/globals.py\n+++ b/flask/globals.py\n@@ -14,7 +14,8 @@ from werkzeug import LocalStack, LocalProxy\n\n # context locals\n _request_ctx_stack = LocalStack()\n-current_app = LocalProxy(lambda: _request_ctx_stack.top.app)\n-request = LocalProxy(lambda: _request_ctx_stack.top.request)\n-session = LocalProxy(lambda: _request_ctx_stack.top.session)\n-g = LocalProxy(lambda: _request_ctx_stack.top.g)\n+_top = _request_ctx_stack.top\n+current_app = LocalProxy(lambda: _top.app if _top else None)\n+request = LocalProxy(lambda: _top.request if _top else None)\n+session = LocalProxy(lambda: _top.session if _top else None)\n+g = LocalProxy(lambda: _top.g if _top else None)\n```\n\nThen one gets as expected, e.g.\n\n```\n>>> help(flask.globals)\nHelp on module flask.globals in flask:\n\nNAME\n    flask.globals\n\nFILE\n    /Volumes/Home/FZ/.local/repo/flask/flask/globals.py\n\nDESCRIPTION\n    flask.globals\n    ~~~~~~~~~~~~~\n\n    Defines all the global objects that are proxies to the current\n    active context.\n\n    :copyright: (c) 2010 by Armin Ronacher.\n    :license: BSD, see LICENSE for more details.\n\nDATA\n    current_app = None\n    g = None\n    request = None\n    session = None\n```\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/344386",
            "html_url": "https://github.com/pallets/flask/issues/105#issuecomment-344386",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/105",
            "id": 344386,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDM4Ng==",
            "user": {
                "login": "zarf",
                "id": 356177,
                "node_id": "MDQ6VXNlcjM1NjE3Nw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/356177?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/zarf",
                "html_url": "https://github.com/zarf",
                "followers_url": "https://api.github.com/users/zarf/followers",
                "following_url": "https://api.github.com/users/zarf/following{/other_user}",
                "gists_url": "https://api.github.com/users/zarf/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/zarf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zarf/subscriptions",
                "organizations_url": "https://api.github.com/users/zarf/orgs",
                "repos_url": "https://api.github.com/users/zarf/repos",
                "events_url": "https://api.github.com/users/zarf/events{/privacy}",
                "received_events_url": "https://api.github.com/users/zarf/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2010-08-06T19:25:39Z",
            "updated_at": "2010-08-07T03:48:59Z",
            "author_association": "NONE",
            "body": "IIUC, the concern with the above fix is that evaluation of the added line, `_top = _request_ctx_stack.top`, risks slowing Flask down more than we'd like?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/344674",
            "html_url": "https://github.com/pallets/flask/issues/105#issuecomment-344674",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/105",
            "id": 344674,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDY3NA==",
            "user": {
                "login": "zarf",
                "id": 356177,
                "node_id": "MDQ6VXNlcjM1NjE3Nw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/356177?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/zarf",
                "html_url": "https://github.com/zarf",
                "followers_url": "https://api.github.com/users/zarf/followers",
                "following_url": "https://api.github.com/users/zarf/following{/other_user}",
                "gists_url": "https://api.github.com/users/zarf/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/zarf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zarf/subscriptions",
                "organizations_url": "https://api.github.com/users/zarf/orgs",
                "repos_url": "https://api.github.com/users/zarf/repos",
                "events_url": "https://api.github.com/users/zarf/events{/privacy}",
                "received_events_url": "https://api.github.com/users/zarf/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2010-08-07T00:01:33Z",
            "updated_at": "2010-08-07T03:54:40Z",
            "author_association": "NONE",
            "body": "I should add that this affects introspection generally, beyond the question of just pydoc. \n\nShould one be able to run 'vars(flask)' outside of any try/except clause?\n\n(I don't claim to know the answer to that, I'm only asking.) As it is, we can't:\n\n```\n(werk)mini:~ fz$ python\n... \n>>> import flask\n>>> vars(flask)\n{'render_template_string': <function render_template_string at 0x101077d70>, 'templating': <module 'flask.templating' from '/Volumes/Home/FZ/.local/repo/flask/flask/templating.pyc'>, 'Flask': <class 'flask.app.Flask'>, 'json_available': True, 'app': <module 'flask.app' from '/Volumes/Home/FZ/.local/repo/flask/flask/app.pyc'>, 'get_flashed_messages': <function get_flashed_messages at 0x101760c80>, 'request': Traceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Volumes/Home/FZ/.local/env/werk/lib/python2.6/site-packages/werkzeug/local.py\", line 321, in __repr__\n    obj = self._get_current_object()\n  File \"/Volumes/Home/FZ/.local/env/werk/lib/python2.6/site-packages/werkzeug/local.py\", line 306, in _get_current_object\n    return self.__local()\n  File \"/Volumes/Home/FZ/.local/repo/flask/flask/globals.py\", line 18, in <lambda>\n    request = LocalProxy(lambda: _request_ctx_stack.top.request)\nAttributeError: 'NoneType' object has no attribute 'request'\n>>> \n```\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/345039",
            "html_url": "https://github.com/pallets/flask/issues/105#issuecomment-345039",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/105",
            "id": 345039,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTAzOQ==",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2010-08-07T11:03:11Z",
            "updated_at": "2010-08-07T11:03:11Z",
            "author_association": "MEMBER",
            "body": "Request local objects now fail properly with a RuntimeError.  This closed by faa1c71e455a99e9b098aa9bb4667c07a1bab6aa\n"
        }
    ]
}