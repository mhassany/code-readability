{
    "url": "https://api.github.com/repos/pallets/flask/issues/18",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/18/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/18/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/18/events",
    "html_url": "https://github.com/pallets/flask/issues/18",
    "id": 181158,
    "node_id": "MDU6SXNzdWUxODExNTg=",
    "number": 18,
    "title": "Access session object during unittest",
    "user": {
        "login": "thadeusb",
        "id": 254841,
        "node_id": "MDQ6VXNlcjI1NDg0MQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/254841?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/thadeusb",
        "html_url": "https://github.com/thadeusb",
        "followers_url": "https://api.github.com/users/thadeusb/followers",
        "following_url": "https://api.github.com/users/thadeusb/following{/other_user}",
        "gists_url": "https://api.github.com/users/thadeusb/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/thadeusb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/thadeusb/subscriptions",
        "organizations_url": "https://api.github.com/users/thadeusb/orgs",
        "repos_url": "https://api.github.com/users/thadeusb/repos",
        "events_url": "https://api.github.com/users/thadeusb/events{/privacy}",
        "received_events_url": "https://api.github.com/users/thadeusb/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2010-04-27T21:01:49Z",
    "updated_at": "2010-05-02T09:45:45Z",
    "closed_at": "2010-05-02T09:45:45Z",
    "author_association": "NONE",
    "body": "Can we get the docs updated to include an example to access session object while unit testing.\n\nHere is a potential solution, using unittest for flaskr\n\n```\ndef test_session(self):\n    with flaskr.app.test_request_context('/login', method='POST', data=dict(\n                    username=flaskr.USERNAME, password=flaskr.PASSWORD,)):\n        rv = flaskr.app.dispatch_request()\n        assert flaskr.session['logged_in'] == True\n\n    with flaskr.app.test_request_context('/login', method='POST', data=dict(\n                    username=flaskr.USERNAME+'x', password=flaskr.PASSWORD+'x',)):\n        rv = flaskr.app.dispatch_request()\n        assert not flaskr.session.get('logged_in')\n```\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/222945",
            "html_url": "https://github.com/pallets/flask/issues/18#issuecomment-222945",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/18",
            "id": 222945,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjk0NQ==",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2010-04-28T04:05:40Z",
            "updated_at": "2010-04-28T04:05:40Z",
            "author_association": "MEMBER",
            "body": "I do not recommend triggering the request handling like this. The nicer solution is the test_client like the example tests do: http://github.com/mitsuhiko/flask/blob/master/examples/minitwit/minitwit_tests.py\n\nThe big advantage is that it does not depend on a certain way to dispatch requests and tests will continue to work if one refactors the request dispatching.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/223319",
            "html_url": "https://github.com/pallets/flask/issues/18#issuecomment-223319",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/18",
            "id": 223319,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzMxOQ==",
            "user": {
                "login": "cgrinds",
                "id": 242252,
                "node_id": "MDQ6VXNlcjI0MjI1Mg==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/242252?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/cgrinds",
                "html_url": "https://github.com/cgrinds",
                "followers_url": "https://api.github.com/users/cgrinds/followers",
                "following_url": "https://api.github.com/users/cgrinds/following{/other_user}",
                "gists_url": "https://api.github.com/users/cgrinds/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/cgrinds/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cgrinds/subscriptions",
                "organizations_url": "https://api.github.com/users/cgrinds/orgs",
                "repos_url": "https://api.github.com/users/cgrinds/repos",
                "events_url": "https://api.github.com/users/cgrinds/events{/privacy}",
                "received_events_url": "https://api.github.com/users/cgrinds/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2010-04-28T12:08:59Z",
            "updated_at": "2010-04-28T12:08:59Z",
            "author_association": "CONTRIBUTOR",
            "body": "I assume that using test_client there is no way to access the session since test_client treats the app as a black box. That was what thadeusb was trying to do.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/223345",
            "html_url": "https://github.com/pallets/flask/issues/18#issuecomment-223345",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/18",
            "id": 223345,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzM0NQ==",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2010-04-28T12:30:16Z",
            "updated_at": "2010-04-28T12:30:16Z",
            "author_association": "MEMBER",
            "body": "That is indeed the case but you can hook in a temporary view so that you can access the session from there (for example).  There are other ways as well but I'm not sure if its not a better idea to test the application as blackbox in general.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/223631",
            "html_url": "https://github.com/pallets/flask/issues/18#issuecomment-223631",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/18",
            "id": 223631,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzYzMQ==",
            "user": {
                "login": "thadeusb",
                "id": 254841,
                "node_id": "MDQ6VXNlcjI1NDg0MQ==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/254841?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/thadeusb",
                "html_url": "https://github.com/thadeusb",
                "followers_url": "https://api.github.com/users/thadeusb/followers",
                "following_url": "https://api.github.com/users/thadeusb/following{/other_user}",
                "gists_url": "https://api.github.com/users/thadeusb/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/thadeusb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thadeusb/subscriptions",
                "organizations_url": "https://api.github.com/users/thadeusb/orgs",
                "repos_url": "https://api.github.com/users/thadeusb/repos",
                "events_url": "https://api.github.com/users/thadeusb/events{/privacy}",
                "received_events_url": "https://api.github.com/users/thadeusb/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2010-04-28T15:25:19Z",
            "updated_at": "2010-04-28T15:25:19Z",
            "author_association": "NONE",
            "body": "I figured the purpose of unittesting was to make sure your application was working properly.\n\nWhat if I store a fairly large object in session (say I am making a ampache clone) and I store the playlist. I need to verify that that playlist is correct in the session object, I can't even look at it correctly from an html stand point.\n\nThere is another issue with black-box testing, what if I change the way my flash messsage is worded? Well now all my tests are broken, even though my application works just fine and dandy.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/227254",
            "html_url": "https://github.com/pallets/flask/issues/18#issuecomment-227254",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/18",
            "id": 227254,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzI1NA==",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2010-05-02T09:45:45Z",
            "updated_at": "2010-05-02T09:45:45Z",
            "author_association": "MEMBER",
            "body": "Added example for context bound objects to the testing docs.  This closed by 8d49440d8b881b2df2c10085a58d3a4e4085147e\n"
        }
    ]
}