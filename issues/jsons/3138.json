{
    "url": "https://api.github.com/repos/pallets/flask/issues/3138",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/3138/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/3138/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/3138/events",
    "html_url": "https://github.com/pallets/flask/issues/3138",
    "id": 428875346,
    "node_id": "MDU6SXNzdWU0Mjg4NzUzNDY=",
    "number": 3138,
    "title": "MethodView methods not inherited",
    "user": {
        "login": "aparamon",
        "id": 2229284,
        "node_id": "MDQ6VXNlcjIyMjkyODQ=",
        "avatar_url": "https://avatars2.githubusercontent.com/u/2229284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aparamon",
        "html_url": "https://github.com/aparamon",
        "followers_url": "https://api.github.com/users/aparamon/followers",
        "following_url": "https://api.github.com/users/aparamon/following{/other_user}",
        "gists_url": "https://api.github.com/users/aparamon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/aparamon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aparamon/subscriptions",
        "organizations_url": "https://api.github.com/users/aparamon/orgs",
        "repos_url": "https://api.github.com/users/aparamon/repos",
        "events_url": "https://api.github.com/users/aparamon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/aparamon/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
        "url": "https://api.github.com/repos/pallets/flask/milestones/3",
        "html_url": "https://github.com/pallets/flask/milestone/3",
        "labels_url": "https://api.github.com/repos/pallets/flask/milestones/3/labels",
        "id": 3093266,
        "node_id": "MDk6TWlsZXN0b25lMzA5MzI2Ng==",
        "number": 3,
        "title": "1.1.0",
        "description": "",
        "creator": {
            "login": "davidism",
            "id": 1242887,
            "node_id": "MDQ6VXNlcjEyNDI4ODc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidism",
            "html_url": "https://github.com/davidism",
            "followers_url": "https://api.github.com/users/davidism/followers",
            "following_url": "https://api.github.com/users/davidism/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
            "organizations_url": "https://api.github.com/users/davidism/orgs",
            "repos_url": "https://api.github.com/users/davidism/repos",
            "events_url": "https://api.github.com/users/davidism/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidism/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 0,
        "closed_issues": 48,
        "state": "closed",
        "created_at": "2018-02-06T16:14:43Z",
        "updated_at": "2019-07-06T22:03:23Z",
        "due_on": null,
        "closed_at": "2019-07-06T22:03:23Z"
    },
    "comments": 1,
    "created_at": "2019-04-03T16:58:21Z",
    "updated_at": "2019-05-17T21:18:41Z",
    "closed_at": "2019-05-17T21:18:41Z",
    "author_association": "NONE",
    "body": "To reproduce:\r\n```python\r\nimport flask\r\nimport flask.views\r\n\r\nclass BaseView(flask.views.MethodView):\r\n    methods = ['GET', 'PROPFIND']\r\n\r\nclass MyView(BaseView):\r\n    def get(self):\r\n        return None, 200\r\n    def propfind(self):\r\n        return None, 200\r\n\r\napp = flask.Flask(__name__)\r\napp.add_url_rule('/test', view_func=MyView.as_view('test'))\r\n\r\nfor rule in app.url_map.iter_rules():\r\n    print(rule, ','.join(rule.methods))\r\n```\r\n\r\n### Expected Behavior\r\n````\r\n/test OPTIONS,PROPFIND,GET,HEAD\r\n/static/<path:filename> OPTIONS,GET,HEAD\r\n````\r\n\r\n### Actual Behavior\r\n````\r\n/test OPTIONS,GET,HEAD\r\n/static/<path:filename> OPTIONS,GET,HEAD\r\n````\r\n\r\n### Environment\r\n\r\n* Python version: 3.7.1\r\n* Flask version: Python 3.7.1 (default, Dec 10 2018, 22:54:23) [MSC v.1915 64 bit (AMD64)] :: Anaconda, Inc. on win32\r\n* Werkzeug version: 0.15.2\r\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/479575000",
            "html_url": "https://github.com/pallets/flask/issues/3138#issuecomment-479575000",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3138",
            "id": 479575000,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTU3NTAwMA==",
            "user": {
                "login": "aparamon",
                "id": 2229284,
                "node_id": "MDQ6VXNlcjIyMjkyODQ=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/2229284?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/aparamon",
                "html_url": "https://github.com/aparamon",
                "followers_url": "https://api.github.com/users/aparamon/followers",
                "following_url": "https://api.github.com/users/aparamon/following{/other_user}",
                "gists_url": "https://api.github.com/users/aparamon/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/aparamon/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aparamon/subscriptions",
                "organizations_url": "https://api.github.com/users/aparamon/orgs",
                "repos_url": "https://api.github.com/users/aparamon/repos",
                "events_url": "https://api.github.com/users/aparamon/events{/privacy}",
                "received_events_url": "https://api.github.com/users/aparamon/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-04-03T17:02:34Z",
            "updated_at": "2019-04-03T17:02:34Z",
            "author_association": "NONE",
            "body": "One possible solution/workaround would be to enable extending `flask.views.http_method_funcs` globally. `MethodViewType.__init__` is smart enough to filter `http_method_funcs` by actually present class methods. Currently `flask.views.http_method_funcs` is a `frozenset` which proves limiting.\r\n\r\n"
        }
    ]
}