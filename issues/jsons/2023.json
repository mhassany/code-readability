{
    "url": "https://api.github.com/repos/pallets/flask/issues/2023",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2023/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2023/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2023/events",
    "html_url": "https://github.com/pallets/flask/issues/2023",
    "id": 176473007,
    "node_id": "MDU6SXNzdWUxNzY0NzMwMDc=",
    "number": 2023,
    "title": "How should logging in Flask look like?",
    "user": {
        "login": "untitaker",
        "id": 837573,
        "node_id": "MDQ6VXNlcjgzNzU3Mw==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/untitaker",
        "html_url": "https://github.com/untitaker",
        "followers_url": "https://api.github.com/users/untitaker/followers",
        "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
        "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
        "organizations_url": "https://api.github.com/users/untitaker/orgs",
        "repos_url": "https://api.github.com/users/untitaker/repos",
        "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/untitaker/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 125213303,
            "node_id": "MDU6TGFiZWwxMjUyMTMzMDM=",
            "url": "https://api.github.com/repos/pallets/flask/labels/discussion",
            "name": "discussion",
            "color": "c5def5",
            "default": false,
            "description": null
        },
        {
            "id": 648340773,
            "node_id": "MDU6TGFiZWw2NDgzNDA3NzM=",
            "url": "https://api.github.com/repos/pallets/flask/labels/logging",
            "name": "logging",
            "color": "1d76db",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
        "url": "https://api.github.com/repos/pallets/flask/milestones/2",
        "html_url": "https://github.com/pallets/flask/milestone/2",
        "labels_url": "https://api.github.com/repos/pallets/flask/milestones/2/labels",
        "id": 795954,
        "node_id": "MDk6TWlsZXN0b25lNzk1OTU0",
        "number": 2,
        "title": "1.0",
        "description": "",
        "creator": {
            "login": "untitaker",
            "id": 837573,
            "node_id": "MDQ6VXNlcjgzNzU3Mw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/untitaker",
            "html_url": "https://github.com/untitaker",
            "followers_url": "https://api.github.com/users/untitaker/followers",
            "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
            "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
            "organizations_url": "https://api.github.com/users/untitaker/orgs",
            "repos_url": "https://api.github.com/users/untitaker/repos",
            "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
            "received_events_url": "https://api.github.com/users/untitaker/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 0,
        "closed_issues": 159,
        "state": "closed",
        "created_at": "2014-09-19T15:47:20Z",
        "updated_at": "2018-04-26T21:07:44Z",
        "due_on": "2018-04-26T07:00:00Z",
        "closed_at": "2018-04-26T21:07:44Z"
    },
    "comments": 20,
    "created_at": "2016-09-12T20:15:42Z",
    "updated_at": "2017-07-31T20:24:59Z",
    "closed_at": "2017-07-31T20:24:59Z",
    "author_association": "MEMBER",
    "body": "Flask started to ship with a default, hardcoded logging handler. Unfortunately this setup makes it harder to install custom logging setups, because then you'll have to undo all the things Flask did to the app logger, or replace the `app.logger` entirely. A symptom of this is #1993, where Flask's own logger had to be tweaked yet again such that messages didn't get logged twice (once via Flask's setup, once via the custom one).\n\nMy question is: **Do we even want Flask to do any logging setup?** It appears that this sort of default logging is only useful during development, so maybe it makes sense to set up a default logging handler in the new Flask CLI instead of from within the application.\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/246616673",
            "html_url": "https://github.com/pallets/flask/issues/2023#issuecomment-246616673",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2023",
            "id": 246616673,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjYxNjY3Mw==",
            "user": {
                "login": "jaapz",
                "id": 513050,
                "node_id": "MDQ6VXNlcjUxMzA1MA==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/513050?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jaapz",
                "html_url": "https://github.com/jaapz",
                "followers_url": "https://api.github.com/users/jaapz/followers",
                "following_url": "https://api.github.com/users/jaapz/following{/other_user}",
                "gists_url": "https://api.github.com/users/jaapz/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jaapz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jaapz/subscriptions",
                "organizations_url": "https://api.github.com/users/jaapz/orgs",
                "repos_url": "https://api.github.com/users/jaapz/repos",
                "events_url": "https://api.github.com/users/jaapz/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jaapz/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-13T08:49:13Z",
            "updated_at": "2016-09-13T08:49:13Z",
            "author_association": "CONTRIBUTOR",
            "body": "What would happen to the log messages in production, when the current flask logger would be moved to development only?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/246618501",
            "html_url": "https://github.com/pallets/flask/issues/2023#issuecomment-246618501",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2023",
            "id": 246618501,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjYxODUwMQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-13T08:56:41Z",
            "updated_at": "2016-09-13T08:56:41Z",
            "author_association": "MEMBER",
            "body": "The same thing that already happens: you need to add your own logging handler in order to see messages and exceptions generated in production.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/246624891",
            "html_url": "https://github.com/pallets/flask/issues/2023#issuecomment-246624891",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2023",
            "id": 246624891,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjYyNDg5MQ==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-13T09:22:41Z",
            "updated_at": "2016-09-13T09:22:41Z",
            "author_association": "MEMBER",
            "body": "Why does that already happen?\n\nOn 13 September 2016 10:56:52 CEST, David Lord notifications@github.com wrote:\n\n> The same thing that already happens: you need to add your own logging\n> handler in order to see messages and exceptions generated in\n> production.\n> \n> ## \n> \n> You are receiving this because you authored the thread.\n> Reply to this email directly or view it on GitHub:\n> https://github.com/pallets/flask/issues/2023#issuecomment-246618501\n\n## \n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/246734269",
            "html_url": "https://github.com/pallets/flask/issues/2023#issuecomment-246734269",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2023",
            "id": 246734269,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjczNDI2OQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-13T16:08:04Z",
            "updated_at": "2017-07-18T15:07:39Z",
            "author_association": "MEMBER",
            "body": "`flask.logging` [_seems_](https://github.com/pallets/flask/blob/0.11.1/flask/logging.py#L70) to configure a log handler for outside debug mode, but I and [many others](https://stackoverflow.com/q/32722143/400617) don't see logs unless a handler is explicitly set.\r\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/246880948",
            "html_url": "https://github.com/pallets/flask/issues/2023#issuecomment-246880948",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2023",
            "id": 246880948,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0Njg4MDk0OA==",
            "user": {
                "login": "Rdbaker",
                "id": 2810764,
                "node_id": "MDQ6VXNlcjI4MTA3NjQ=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/2810764?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Rdbaker",
                "html_url": "https://github.com/Rdbaker",
                "followers_url": "https://api.github.com/users/Rdbaker/followers",
                "following_url": "https://api.github.com/users/Rdbaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/Rdbaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Rdbaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Rdbaker/subscriptions",
                "organizations_url": "https://api.github.com/users/Rdbaker/orgs",
                "repos_url": "https://api.github.com/users/Rdbaker/repos",
                "events_url": "https://api.github.com/users/Rdbaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Rdbaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-14T01:44:39Z",
            "updated_at": "2016-09-14T01:44:39Z",
            "author_association": "NONE",
            "body": "Python takes a modular approach to its logging by separating the concerns into [loggers, handlers, filters, and formatters](https://docs.python.org/2/howto/logging.html#advanced-logging-tutorial). Maybe it would be good to have a very simple, yet explicit, default setup for each of these classes with some documentation on how to easily override it, just as flask does for the request and response classes.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/246881506",
            "html_url": "https://github.com/pallets/flask/issues/2023#issuecomment-246881506",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2023",
            "id": 246881506,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0Njg4MTUwNg==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-14T01:48:26Z",
            "updated_at": "2016-09-14T01:48:26Z",
            "author_association": "MEMBER",
            "body": "That is actually the current state. The problem arises when people use `logging.defaultConfig()` and messages get logged twice, once with Flask's handler, once with the just configured one.\n\nThe question is whether it's a good idea to even have any logging setup by default as it may interfere with the plans of the app developer.\n\nOn 14 September 2016 03:44:50 CEST, Ryan Baker notifications@github.com wrote:\n\n> Python takes a modular approach to its logging by separating the\n> concerns into [loggers, handlers, filters, and\n> formatters](https://docs.python.org/2/howto/logging.html#advanced-logging-tutorial).\n> Maybe it would be good to have a very simple, yet explicit, default\n> setup for each of these classes with some documentation on how to\n> easily override it, just as flask does for the request and response\n> classes.\n> \n> ## \n> \n> You are receiving this because you were mentioned.\n> Reply to this email directly or view it on GitHub:\n> https://github.com/pallets/flask/issues/2023#issuecomment-246880948\n\n## \n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/246883904",
            "html_url": "https://github.com/pallets/flask/issues/2023#issuecomment-246883904",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2023",
            "id": 246883904,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0Njg4MzkwNA==",
            "user": {
                "login": "Rdbaker",
                "id": 2810764,
                "node_id": "MDQ6VXNlcjI4MTA3NjQ=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/2810764?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Rdbaker",
                "html_url": "https://github.com/Rdbaker",
                "followers_url": "https://api.github.com/users/Rdbaker/followers",
                "following_url": "https://api.github.com/users/Rdbaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/Rdbaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Rdbaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Rdbaker/subscriptions",
                "organizations_url": "https://api.github.com/users/Rdbaker/orgs",
                "repos_url": "https://api.github.com/users/Rdbaker/repos",
                "events_url": "https://api.github.com/users/Rdbaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Rdbaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-14T02:04:23Z",
            "updated_at": "2016-09-14T02:04:23Z",
            "author_association": "NONE",
            "body": "Er, my suggestion was a little different than the current state, actually.\n\nI was suggesting that, much like [the app has a `request_class`](https://github.com/pallets/flask/blob/3bd12b38a80362f6656b834ec04c95f1ba4d83e0/flask/app.py#L159), it could also have a `logger_class`, `handler_class`, etc. as opposed to creating the classes inside the of a logging initialization function. So yes, this would set up logging by default.\n\nAre you talking about any logging that a developer might want to do _outside_ of the context of their flask app?\nI would probably argue that if the developer is using flask, that's the primary runtime in their environment and logging (even if by default) would probably be desired, and should be easily overridable.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/266595831",
            "html_url": "https://github.com/pallets/flask/issues/2023#issuecomment-266595831",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2023",
            "id": 266595831,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjU5NTgzMQ==",
            "user": {
                "login": "dwlocks",
                "id": 68471,
                "node_id": "MDQ6VXNlcjY4NDcx",
                "avatar_url": "https://avatars2.githubusercontent.com/u/68471?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/dwlocks",
                "html_url": "https://github.com/dwlocks",
                "followers_url": "https://api.github.com/users/dwlocks/followers",
                "following_url": "https://api.github.com/users/dwlocks/following{/other_user}",
                "gists_url": "https://api.github.com/users/dwlocks/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/dwlocks/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dwlocks/subscriptions",
                "organizations_url": "https://api.github.com/users/dwlocks/orgs",
                "repos_url": "https://api.github.com/users/dwlocks/repos",
                "events_url": "https://api.github.com/users/dwlocks/events{/privacy}",
                "received_events_url": "https://api.github.com/users/dwlocks/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-12-13T00:16:23Z",
            "updated_at": "2016-12-13T00:16:23Z",
            "author_association": "NONE",
            "body": "I hope I'm not polluting the conversation by adding https://www.bountysource.com/issues/85851-design-issue-with-flask-logger-create_logger"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/266711783",
            "html_url": "https://github.com/pallets/flask/issues/2023#issuecomment-266711783",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2023",
            "id": 266711783,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjcxMTc4Mw==",
            "user": {
                "login": "tuukkamustonen",
                "id": 94327,
                "node_id": "MDQ6VXNlcjk0MzI3",
                "avatar_url": "https://avatars1.githubusercontent.com/u/94327?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/tuukkamustonen",
                "html_url": "https://github.com/tuukkamustonen",
                "followers_url": "https://api.github.com/users/tuukkamustonen/followers",
                "following_url": "https://api.github.com/users/tuukkamustonen/following{/other_user}",
                "gists_url": "https://api.github.com/users/tuukkamustonen/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/tuukkamustonen/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tuukkamustonen/subscriptions",
                "organizations_url": "https://api.github.com/users/tuukkamustonen/orgs",
                "repos_url": "https://api.github.com/users/tuukkamustonen/repos",
                "events_url": "https://api.github.com/users/tuukkamustonen/events{/privacy}",
                "received_events_url": "https://api.github.com/users/tuukkamustonen/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-12-13T11:12:15Z",
            "updated_at": "2016-12-15T13:36:50Z",
            "author_association": "NONE",
            "body": "> Do we even want Flask to do any logging setup?\r\n\r\nNo. Why should it? If I want to enable logging, I can just `logging.defaultConfig()` or rather customize it however I want. Why should flask do anything else except the usual:\r\n\r\n    log = logging.getLogger(__name__)\r\n    \r\n    # then in the code: log.info(...) etc.\r\n\r\nWouldn't it be enough to just mention in the docs that you must initialize logging yourself, as usual, be it through `logging.defaultConfig()` or `logging.config.dictConfig()` or however?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/267665939",
            "html_url": "https://github.com/pallets/flask/issues/2023#issuecomment-267665939",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2023",
            "id": 267665939,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzY2NTkzOQ==",
            "user": {
                "login": "tinproject",
                "id": 3742174,
                "node_id": "MDQ6VXNlcjM3NDIxNzQ=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/3742174?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/tinproject",
                "html_url": "https://github.com/tinproject",
                "followers_url": "https://api.github.com/users/tinproject/followers",
                "following_url": "https://api.github.com/users/tinproject/following{/other_user}",
                "gists_url": "https://api.github.com/users/tinproject/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/tinproject/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tinproject/subscriptions",
                "organizations_url": "https://api.github.com/users/tinproject/orgs",
                "repos_url": "https://api.github.com/users/tinproject/repos",
                "events_url": "https://api.github.com/users/tinproject/events{/privacy}",
                "received_events_url": "https://api.github.com/users/tinproject/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-12-16T18:42:47Z",
            "updated_at": "2016-12-16T18:42:47Z",
            "author_association": "NONE",
            "body": "I spend some days around this, trying to figure out how to implement logging on a Flask app. At the end I decide that, at the current state, the best is to avoid the use of the Flask logger.\r\n\r\n\r\nSome problems I've found wit the custom Flask's logger:\r\n- You can't configure the logger in advance because it delete the existing handlers for the logger.\r\n- It always inserts it's handlers by default, no option to avoid them, so you can get duplicated logs.\r\n- Too much dependent of the app state, the handlers emit records dependent of the app state so, independently on how you configure the logging hierarchy, the log records could appear or not.\r\n- Also the Flask logger name could be changed (is a config option), so if it changed a new logger is created and if you have custom configuration it the config must be redone. This is also tricky to detect.\r\n- It don't play well with the Python's logging system.\r\n- Some of the Flask's log messages are really werkzeug's ones.\r\n\r\n\r\n**How should logging in Flask look like? Do we even want Flask to do any logging setup?**\r\n\r\nFrom my point of view, there should be to parts for logging in Flask:\r\n\r\nOne part for the library/framework, with a high-level logger node hardcoded to \"flask\" or \"pallets.flask\" and child loggers. This will allow 'instrument' the library as #1572 suggests, and also be used by third party libraries like flask-login, flask-wtf, etc.\r\nThis part should have no logging configuration at all, perhaps only set the logging level of the high-level node to avoid noise, but no handlers or other setup, and should propagate by default.\r\n\r\nOther part, for the Flask app, with a configurable name. To avoid that the reference to the logger could change the name should be pass as an argument to Flask() constructor, e.g.: `Flask(..., logger_name=\"flaskr\"`. This also allows to obtain the logger from the logging module directly and to get child loggers for specific parts of your app.\r\nThis part needed some logging setup, if it's not previously done a default handler must be setup, users and servers expect some info about what's happening. To avoid duplication of logs and allow complete logging customization the default handler has to be optional, setted by an argument to Flask() constructor o by inspection the logger hierarchy to find if a proper handler is configured upstream. To log accordingly to app state a **filter** should be used instead of the two current handlers.\r\n\r\nThis should be reflected in the docs stating that the preferred way is that the developer configure the logging system and the default config should only be used as a last resort. To allow this the custom formatters and handlers/filters should be exposed to allow import when configuring logging, as @Rdbaker suggests above.\r\n\r\n\r\nI think that find a way that the Flask's log system goes along with the [_Logging facility for Python_](https://docs.python.org/3/library/logging.html), and not against, is important enough to try to target this discussion to 1.0. \r\n\r\nI could help with some code or docs when decisions are made.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/268578137",
            "html_url": "https://github.com/pallets/flask/issues/2023#issuecomment-268578137",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2023",
            "id": 268578137,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODU3ODEzNw==",
            "user": {
                "login": "tinproject",
                "id": 3742174,
                "node_id": "MDQ6VXNlcjM3NDIxNzQ=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/3742174?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/tinproject",
                "html_url": "https://github.com/tinproject",
                "followers_url": "https://api.github.com/users/tinproject/followers",
                "following_url": "https://api.github.com/users/tinproject/following{/other_user}",
                "gists_url": "https://api.github.com/users/tinproject/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/tinproject/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tinproject/subscriptions",
                "organizations_url": "https://api.github.com/users/tinproject/orgs",
                "repos_url": "https://api.github.com/users/tinproject/repos",
                "events_url": "https://api.github.com/users/tinproject/events{/privacy}",
                "received_events_url": "https://api.github.com/users/tinproject/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-12-21T17:08:21Z",
            "updated_at": "2016-12-21T17:08:21Z",
            "author_association": "NONE",
            "body": "Trying to learn more about logging I've come across this: http://plumberjack.blogspot.com.es/2010/09/python-logging-functionality-facts-vs.html and I realize why Flask want to pass the logger object around.\r\n\r\nPerhaps the first question to make is what logging library is wanted to use by Flask and use it properly. Any option is perfectly fine, but using the stdlib logging as if it was other thing only leads to confusion."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/301493159",
            "html_url": "https://github.com/pallets/flask/issues/2023#issuecomment-301493159",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2023",
            "id": 301493159,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTQ5MzE1OQ==",
            "user": {
                "login": "mscheper",
                "id": 366599,
                "node_id": "MDQ6VXNlcjM2NjU5OQ==",
                "avatar_url": "https://avatars3.githubusercontent.com/u/366599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mscheper",
                "html_url": "https://github.com/mscheper",
                "followers_url": "https://api.github.com/users/mscheper/followers",
                "following_url": "https://api.github.com/users/mscheper/following{/other_user}",
                "gists_url": "https://api.github.com/users/mscheper/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mscheper/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mscheper/subscriptions",
                "organizations_url": "https://api.github.com/users/mscheper/orgs",
                "repos_url": "https://api.github.com/users/mscheper/repos",
                "events_url": "https://api.github.com/users/mscheper/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mscheper/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-05-15T14:31:44Z",
            "updated_at": "2017-05-15T14:38:36Z",
            "author_association": "NONE",
            "body": "For one thing, Flask should log chained exceptions. Maybe somebody here would be kind enough to answer my [StackOverflow question](http://stackoverflow.com/questions/43881266/how-to-make-flask-log-chained-exceptions) asking how to get Flask to do this?\r\n\r\n@tinproject: Your comment didn't 'confuse' me; I just used the \u2639 emoji because it's sad that configuring Flask's logs is apparently difficult. Changing the log format is the first thing I'll want do after My App Works Well Enough, mostly for the above reason, and also to get rid of all the dashes and `\\n`s that clutter up my terminal. I'm glad I found this post; hopefully it'll save me some frustration.\r\n\r\nBut apparently some people like them, which is fair enough, and a reason logs should be easily configurable. My personal preference would be for a blank line and maybe some dashes each time Flask reloads the app, and for log lines to be timestamped."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/307858016",
            "html_url": "https://github.com/pallets/flask/issues/2023#issuecomment-307858016",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2023",
            "id": 307858016,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzg1ODAxNg==",
            "user": {
                "login": "mixmastamyk",
                "id": 767039,
                "node_id": "MDQ6VXNlcjc2NzAzOQ==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/767039?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mixmastamyk",
                "html_url": "https://github.com/mixmastamyk",
                "followers_url": "https://api.github.com/users/mixmastamyk/followers",
                "following_url": "https://api.github.com/users/mixmastamyk/following{/other_user}",
                "gists_url": "https://api.github.com/users/mixmastamyk/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mixmastamyk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mixmastamyk/subscriptions",
                "organizations_url": "https://api.github.com/users/mixmastamyk/orgs",
                "repos_url": "https://api.github.com/users/mixmastamyk/repos",
                "events_url": "https://api.github.com/users/mixmastamyk/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mixmastamyk/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-12T17:24:35Z",
            "updated_at": "2017-06-12T17:24:35Z",
            "author_association": "NONE",
            "body": "Libraries should not configure logging, they should just log and let the application author configure destinations to their liking.  That's best practice for python logging:\r\n\r\n- https://docs.python.org/3/howto/logging.html#configuring-logging-for-a-library\r\n- http://docs.python-guide.org/en/latest/writing/logging/\r\n\r\n> Note\r\n> \r\n> It is strongly advised that you do not add any handlers other than NullHandler to your library\u2019s loggers. This is because the configuration of handlers is the prerogative of the application developer who uses your library. The application developer knows their target audience and what handlers are most appropriate for their application: if you add handlers \u2018under the hood\u2019, you might well interfere with their ability to carry out unit tests and deliver logs which suit their requirements. "
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/307911571",
            "html_url": "https://github.com/pallets/flask/issues/2023#issuecomment-307911571",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2023",
            "id": 307911571,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzkxMTU3MQ==",
            "user": {
                "login": "Rdbaker",
                "id": 2810764,
                "node_id": "MDQ6VXNlcjI4MTA3NjQ=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/2810764?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Rdbaker",
                "html_url": "https://github.com/Rdbaker",
                "followers_url": "https://api.github.com/users/Rdbaker/followers",
                "following_url": "https://api.github.com/users/Rdbaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/Rdbaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Rdbaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Rdbaker/subscriptions",
                "organizations_url": "https://api.github.com/users/Rdbaker/orgs",
                "repos_url": "https://api.github.com/users/Rdbaker/repos",
                "events_url": "https://api.github.com/users/Rdbaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Rdbaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-12T20:17:12Z",
            "updated_at": "2017-06-12T20:17:12Z",
            "author_association": "NONE",
            "body": "It'd be important to note that if the recommended practice was the path taken (i.e. add a `NullHandler` to flask's logger) then Flask would have to drop support for 2.6 (as `NullHandler` was added in 2.7+ and 3.1+), or else conditionally check whether it _can_ configure a `NullHandler`"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/308557420",
            "html_url": "https://github.com/pallets/flask/issues/2023#issuecomment-308557420",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2023",
            "id": 308557420,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwODU1NzQyMA==",
            "user": {
                "login": "mixmastamyk",
                "id": 767039,
                "node_id": "MDQ6VXNlcjc2NzAzOQ==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/767039?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mixmastamyk",
                "html_url": "https://github.com/mixmastamyk",
                "followers_url": "https://api.github.com/users/mixmastamyk/followers",
                "following_url": "https://api.github.com/users/mixmastamyk/following{/other_user}",
                "gists_url": "https://api.github.com/users/mixmastamyk/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mixmastamyk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mixmastamyk/subscriptions",
                "organizations_url": "https://api.github.com/users/mixmastamyk/orgs",
                "repos_url": "https://api.github.com/users/mixmastamyk/repos",
                "events_url": "https://api.github.com/users/mixmastamyk/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mixmastamyk/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-14T21:03:05Z",
            "updated_at": "2017-06-14T21:04:23Z",
            "author_association": "NONE",
            "body": "I believe NullHandler is just an optional convenience, not necessary.  \r\n\r\nPy 2.6 was EOL'd 5 years ago.  Though I'm not in a hurry to break it, so checking beforehand couldn't hurt.\r\n\r\nBTW, this should be straightened out before a 1.0 release, is there a tag for that?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/308557612",
            "html_url": "https://github.com/pallets/flask/issues/2023#issuecomment-308557612",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2023",
            "id": 308557612,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwODU1NzYxMg==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-14T21:03:57Z",
            "updated_at": "2017-06-14T21:03:57Z",
            "author_association": "MEMBER",
            "body": "I wouldn't mind seeing 2.6 support go away once Flask reaches v1.0 ;)"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/317649983",
            "html_url": "https://github.com/pallets/flask/issues/2023#issuecomment-317649983",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2023",
            "id": 317649983,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzY0OTk4Mw==",
            "user": {
                "login": "rainiera",
                "id": 9145130,
                "node_id": "MDQ6VXNlcjkxNDUxMzA=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/9145130?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rainiera",
                "html_url": "https://github.com/rainiera",
                "followers_url": "https://api.github.com/users/rainiera/followers",
                "following_url": "https://api.github.com/users/rainiera/following{/other_user}",
                "gists_url": "https://api.github.com/users/rainiera/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rainiera/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rainiera/subscriptions",
                "organizations_url": "https://api.github.com/users/rainiera/orgs",
                "repos_url": "https://api.github.com/users/rainiera/repos",
                "events_url": "https://api.github.com/users/rainiera/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rainiera/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-07-25T07:09:29Z",
            "updated_at": "2017-07-25T07:09:29Z",
            "author_association": "NONE",
            "body": "+1 to following the best practice for Python logging. I don't mind what Flask logs per se but would prefer I had control of the handlers myself since `PROD_LOG_FORMAT` and `DEBUG_LOG_FORMAT` in logging.py are distracting for some. Fwiw, I usually call `del app.logger.handlers[:]` before I add my own loggers in my personal boilerplate."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/317727956",
            "html_url": "https://github.com/pallets/flask/issues/2023#issuecomment-317727956",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2023",
            "id": 317727956,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzcyNzk1Ng==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-07-25T12:53:52Z",
            "updated_at": "2017-07-25T15:30:36Z",
            "author_association": "MEMBER",
            "body": "I've been looking at this, and \"follow best practice\" is not as straightforward as it sounds, unfortunately.\r\n\r\n* We're a library, so we shouldn't configure logging. But a lot of people don't think about logging, and we want to show logging messages while running.\r\n* If we only add handlers when using the `flask` command, people will be confused when it's not logged in production. This can be solved with documentation, probably.\r\n* Difficulty arises due to the handlers deciding what to log based on the current state of the app, which can change for various reasons before it starts handling requests. The logger can be accessed before, or after, configuration is loaded. Debug mode can be changed by the `run` command after configuration is loaded.\r\n* A similar difficulty occurs with the logger, which uses a custom `getEffectiveLevel`. Setting the level directly would mean we couldn't reconfigure if debug mode changes, since we wouldn't know at that point if we or the user set the level.\r\n* We want to log to `environ['wsgi.errors']` when in a request.\r\n* We don't want to log things twice if the user adds a root handler without also configuring the app logger specifically. So `propagate` needs to be disabled outside of configuration.\r\n\r\nThings I've been experimenting with:\r\n\r\n* Add a default config to be passed to `dictConfig`. Difficult because the config could be changed *after* the logger is accessed for the first time and the interactions between multiple configs at that point is unclear.\r\n* Make the default logger name \"flask-{import_name}\" instead of \"{import_name}\". However, anything with `logger_name` makes using `dictConfig` difficult.\r\n* Only add one handler, and remove the debug format, just to simplify the story.\r\n* Add importable logging subclasses that users can use in their own `dictConfig`. These wouldn't know what app they were configured for though, so would have to use `current_app`, which means they wouldn't work for logging during setup unless the user knew to push an app context. Or we could use a custom `logging.DictConfigurator` subclass that injects the app, but that would make it impossible for users to configure logging themselves outside of the Flask app."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/318252636",
            "html_url": "https://github.com/pallets/flask/issues/2023#issuecomment-318252636",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2023",
            "id": 318252636,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxODI1MjYzNg==",
            "user": {
                "login": "mixmastamyk",
                "id": 767039,
                "node_id": "MDQ6VXNlcjc2NzAzOQ==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/767039?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mixmastamyk",
                "html_url": "https://github.com/mixmastamyk",
                "followers_url": "https://api.github.com/users/mixmastamyk/followers",
                "following_url": "https://api.github.com/users/mixmastamyk/following{/other_user}",
                "gists_url": "https://api.github.com/users/mixmastamyk/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mixmastamyk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mixmastamyk/subscriptions",
                "organizations_url": "https://api.github.com/users/mixmastamyk/orgs",
                "repos_url": "https://api.github.com/users/mixmastamyk/repos",
                "events_url": "https://api.github.com/users/mixmastamyk/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mixmastamyk/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-07-27T04:04:24Z",
            "updated_at": "2017-07-27T04:04:24Z",
            "author_association": "NONE",
            "body": "@davidism, these complex use cases may not be 100% solvable as you are noticing.  That's the main reason to leave it up to the (end) developer rather than trying to outsmart them.\r\n\r\n(Ask me how I know, haha.  I have a kivy app where a non-insignificant amount of code is there to defeat and disable their mandatory logging configuration meant for my own good.)\r\n\r\nBy all means have a document detailing how to log this and configure that with a list of provided logger names.  But when the developer googles \"enable logging in a python app\" let the standard answer suffice.\r\n\r\nI think a \"hands off\" approach fits better with Flask's breezy design as well."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/318776261",
            "html_url": "https://github.com/pallets/flask/issues/2023#issuecomment-318776261",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2023",
            "id": 318776261,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxODc3NjI2MQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-07-28T22:27:05Z",
            "updated_at": "2017-07-28T22:27:05Z",
            "author_association": "MEMBER",
            "body": "I've created #2436 that hopefully simplifies Flask's logging configuration. It also splits out and updates the documentation to help clarify how everything works. If anyone here wants to take a look and make sure it addresses the points brought up here, I'd appreciate it."
        }
    ]
}