{
    "url": "https://api.github.com/repos/pallets/flask/issues/1359",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1359/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1359/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1359/events",
    "html_url": "https://github.com/pallets/flask/issues/1359",
    "id": 59201116,
    "node_id": "MDU6SXNzdWU1OTIwMTExNg==",
    "number": 1359,
    "title": "Ability to disable Flasks internal logger",
    "user": {
        "login": "geekscrapy",
        "id": 11225502,
        "node_id": "MDQ6VXNlcjExMjI1NTAy",
        "avatar_url": "https://avatars3.githubusercontent.com/u/11225502?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/geekscrapy",
        "html_url": "https://github.com/geekscrapy",
        "followers_url": "https://api.github.com/users/geekscrapy/followers",
        "following_url": "https://api.github.com/users/geekscrapy/following{/other_user}",
        "gists_url": "https://api.github.com/users/geekscrapy/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/geekscrapy/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/geekscrapy/subscriptions",
        "organizations_url": "https://api.github.com/users/geekscrapy/orgs",
        "repos_url": "https://api.github.com/users/geekscrapy/repos",
        "events_url": "https://api.github.com/users/geekscrapy/events{/privacy}",
        "received_events_url": "https://api.github.com/users/geekscrapy/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2015-02-27T07:39:46Z",
    "updated_at": "2019-03-28T21:15:51Z",
    "closed_at": "2015-03-01T14:26:37Z",
    "author_association": "NONE",
    "body": "Hi, I need to be able to disable flasks internal logger as I have implemented my own within my application that utilises Flask.\n\nI would like this ability whether I am in debug mode or not.\n\nTAI\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/76513934",
            "html_url": "https://github.com/pallets/flask/issues/1359#issuecomment-76513934",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1359",
            "id": 76513934,
            "node_id": "MDEyOklzc3VlQ29tbWVudDc2NTEzOTM0",
            "user": {
                "login": "keyan",
                "id": 6401746,
                "node_id": "MDQ6VXNlcjY0MDE3NDY=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/6401746?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/keyan",
                "html_url": "https://github.com/keyan",
                "followers_url": "https://api.github.com/users/keyan/followers",
                "following_url": "https://api.github.com/users/keyan/following{/other_user}",
                "gists_url": "https://api.github.com/users/keyan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/keyan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/keyan/subscriptions",
                "organizations_url": "https://api.github.com/users/keyan/orgs",
                "repos_url": "https://api.github.com/users/keyan/repos",
                "events_url": "https://api.github.com/users/keyan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/keyan/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-02-28T06:37:31Z",
            "updated_at": "2015-02-28T06:37:40Z",
            "author_association": "MEMBER",
            "body": "Hi @geekscrapy, are you talking about the HTTP request logs? For example the logs that are in the format:\n\n```\n127.0.0.1 - - [28/Feb/2015 01:15:17] \"POST /post/ HTTP/1.1\" 200 -\n```\n\nIf so, my understanding is that this is a part of Werkzeug, but you can change logging settings, see here: http://stackoverflow.com/questions/14888799/disable-console-messages-in-flask-server\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/76523804",
            "html_url": "https://github.com/pallets/flask/issues/1359#issuecomment-76523804",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1359",
            "id": 76523804,
            "node_id": "MDEyOklzc3VlQ29tbWVudDc2NTIzODA0",
            "user": {
                "login": "geekscrapy",
                "id": 11225502,
                "node_id": "MDQ6VXNlcjExMjI1NTAy",
                "avatar_url": "https://avatars3.githubusercontent.com/u/11225502?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/geekscrapy",
                "html_url": "https://github.com/geekscrapy",
                "followers_url": "https://api.github.com/users/geekscrapy/followers",
                "following_url": "https://api.github.com/users/geekscrapy/following{/other_user}",
                "gists_url": "https://api.github.com/users/geekscrapy/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/geekscrapy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/geekscrapy/subscriptions",
                "organizations_url": "https://api.github.com/users/geekscrapy/orgs",
                "repos_url": "https://api.github.com/users/geekscrapy/repos",
                "events_url": "https://api.github.com/users/geekscrapy/events{/privacy}",
                "received_events_url": "https://api.github.com/users/geekscrapy/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-02-28T12:18:11Z",
            "updated_at": "2015-02-28T12:24:54Z",
            "author_association": "NONE",
            "body": "Thanks @keyanp, but I was after stopping the Werkzeug/Flask logger from even initialising as it tries to bind to the same port as my current logger (insert big error msg here!).\n\nThis is kinda what I mean. Is it correct? https://www.snip2code.com/Snippet/84701/Really-disable-logger-logging-in-Flask\n\nEven better would be to redirect these logs to my own logger...\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/76560793",
            "html_url": "https://github.com/pallets/flask/issues/1359#issuecomment-76560793",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1359",
            "id": 76560793,
            "node_id": "MDEyOklzc3VlQ29tbWVudDc2NTYwNzkz",
            "user": {
                "login": "keyan",
                "id": 6401746,
                "node_id": "MDQ6VXNlcjY0MDE3NDY=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/6401746?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/keyan",
                "html_url": "https://github.com/keyan",
                "followers_url": "https://api.github.com/users/keyan/followers",
                "following_url": "https://api.github.com/users/keyan/following{/other_user}",
                "gists_url": "https://api.github.com/users/keyan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/keyan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/keyan/subscriptions",
                "organizations_url": "https://api.github.com/users/keyan/orgs",
                "repos_url": "https://api.github.com/users/keyan/repos",
                "events_url": "https://api.github.com/users/keyan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/keyan/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-03-01T00:23:57Z",
            "updated_at": "2015-03-04T05:33:44Z",
            "author_association": "MEMBER",
            "body": "@geekscrapy, I don't understand why that code snippet has `cf.logging.getLogger` if you remove the `cf.` it will work fine. I tried it out with a bare app successfully: https://gist.github.com/keyanp/c163b7b01ed6aa0f9ccf\n\nI hope that answers your question, but regardless, this is not an issue with Flask. Please direct such questions to the irc channel or stackoverflow.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/76598913",
            "html_url": "https://github.com/pallets/flask/issues/1359#issuecomment-76598913",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1359",
            "id": 76598913,
            "node_id": "MDEyOklzc3VlQ29tbWVudDc2NTk4OTEz",
            "user": {
                "login": "geekscrapy",
                "id": 11225502,
                "node_id": "MDQ6VXNlcjExMjI1NTAy",
                "avatar_url": "https://avatars3.githubusercontent.com/u/11225502?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/geekscrapy",
                "html_url": "https://github.com/geekscrapy",
                "followers_url": "https://api.github.com/users/geekscrapy/followers",
                "following_url": "https://api.github.com/users/geekscrapy/following{/other_user}",
                "gists_url": "https://api.github.com/users/geekscrapy/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/geekscrapy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/geekscrapy/subscriptions",
                "organizations_url": "https://api.github.com/users/geekscrapy/orgs",
                "repos_url": "https://api.github.com/users/geekscrapy/repos",
                "events_url": "https://api.github.com/users/geekscrapy/events{/privacy}",
                "received_events_url": "https://api.github.com/users/geekscrapy/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-03-01T14:26:37Z",
            "updated_at": "2015-03-01T14:26:37Z",
            "author_association": "NONE",
            "body": "To be honest, not really :) I was after a way to stop Flask/Werkzeug (since they both have a logger instance no?) initialising a logger instance. Started question on SO\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/291749259",
            "html_url": "https://github.com/pallets/flask/issues/1359#issuecomment-291749259",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1359",
            "id": 291749259,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTc0OTI1OQ==",
            "user": {
                "login": "mikepurvis",
                "id": 944666,
                "node_id": "MDQ6VXNlcjk0NDY2Ng==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/944666?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mikepurvis",
                "html_url": "https://github.com/mikepurvis",
                "followers_url": "https://api.github.com/users/mikepurvis/followers",
                "following_url": "https://api.github.com/users/mikepurvis/following{/other_user}",
                "gists_url": "https://api.github.com/users/mikepurvis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mikepurvis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mikepurvis/subscriptions",
                "organizations_url": "https://api.github.com/users/mikepurvis/orgs",
                "repos_url": "https://api.github.com/users/mikepurvis/repos",
                "events_url": "https://api.github.com/users/mikepurvis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mikepurvis/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-05T04:13:22Z",
            "updated_at": "2017-04-05T04:13:22Z",
            "author_association": "NONE",
            "body": "I ended up here via a Google search. Unfortunately Werkzeug's log format is hard-coded, but you can monkey-patch the function if you're really keen, eg:\r\n\r\n```\r\n    werkzeug_logger = logging.getLogger('werkzeug')\r\n\r\n    # Override the built-in werkzeug logging function in order to change the log line format.\r\n    from werkzeug.serving import WSGIRequestHandler\r\n    WSGIRequestHandler.log = lambda self, type, message, *args: \\\r\n        getattr(werkzeug_logger, type)('%s %s' % (self.address_string(), message % args))\r\n```"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/297651299",
            "html_url": "https://github.com/pallets/flask/issues/1359#issuecomment-297651299",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1359",
            "id": 297651299,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzY1MTI5OQ==",
            "user": {
                "login": "zhanglongqiang",
                "id": 8898101,
                "node_id": "MDQ6VXNlcjg4OTgxMDE=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/8898101?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/zhanglongqiang",
                "html_url": "https://github.com/zhanglongqiang",
                "followers_url": "https://api.github.com/users/zhanglongqiang/followers",
                "following_url": "https://api.github.com/users/zhanglongqiang/following{/other_user}",
                "gists_url": "https://api.github.com/users/zhanglongqiang/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/zhanglongqiang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zhanglongqiang/subscriptions",
                "organizations_url": "https://api.github.com/users/zhanglongqiang/orgs",
                "repos_url": "https://api.github.com/users/zhanglongqiang/repos",
                "events_url": "https://api.github.com/users/zhanglongqiang/events{/privacy}",
                "received_events_url": "https://api.github.com/users/zhanglongqiang/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-27T08:41:20Z",
            "updated_at": "2017-04-27T08:41:20Z",
            "author_association": "NONE",
            "body": "i resolved this by redirecting the 'werkzeug' log to another log file. At the top of 'app.py', here is:\r\n```\r\nfrom logging.handlers import RotatingFileHandler\r\nformatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')\r\nlogger = logging.getLogger('werkzeug')\r\nhandler = RotatingFileHandler('access.log', maxBytes=10000, backupCount=1)\r\n```\r\n\r\nbut it's still outputting to console, and then i fixed it by redirecting to /dev/null with bash.\r\n\r\n```\r\npython app.py &> /dev/null \r\n```"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/336399266",
            "html_url": "https://github.com/pallets/flask/issues/1359#issuecomment-336399266",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1359",
            "id": 336399266,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjM5OTI2Ng==",
            "user": {
                "login": "pelodelfuego",
                "id": 6917253,
                "node_id": "MDQ6VXNlcjY5MTcyNTM=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/6917253?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/pelodelfuego",
                "html_url": "https://github.com/pelodelfuego",
                "followers_url": "https://api.github.com/users/pelodelfuego/followers",
                "following_url": "https://api.github.com/users/pelodelfuego/following{/other_user}",
                "gists_url": "https://api.github.com/users/pelodelfuego/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/pelodelfuego/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pelodelfuego/subscriptions",
                "organizations_url": "https://api.github.com/users/pelodelfuego/orgs",
                "repos_url": "https://api.github.com/users/pelodelfuego/repos",
                "events_url": "https://api.github.com/users/pelodelfuego/events{/privacy}",
                "received_events_url": "https://api.github.com/users/pelodelfuego/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-10-13T09:22:29Z",
            "updated_at": "2017-10-13T09:22:41Z",
            "author_association": "NONE",
            "body": "The issue seems to be during the initialisation of werkzeug which create the handler.\r\n\r\nBest solution I found so far:\r\n```\r\n@app.before_first_request\r\ndef ensure_spe_logging():\r\n    print 'Ensure logger'\r\n    for l, v in logging.Logger.manager.loggerDict.iteritems():\r\n        v.handlers = [handler]\r\n```\r\nWhich remove (here replace) the werkzeug handler before first requests."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/477773987",
            "html_url": "https://github.com/pallets/flask/issues/1359#issuecomment-477773987",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1359",
            "id": 477773987,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Nzc3Mzk4Nw==",
            "user": {
                "login": "etos",
                "id": 589214,
                "node_id": "MDQ6VXNlcjU4OTIxNA==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/589214?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/etos",
                "html_url": "https://github.com/etos",
                "followers_url": "https://api.github.com/users/etos/followers",
                "following_url": "https://api.github.com/users/etos/following{/other_user}",
                "gists_url": "https://api.github.com/users/etos/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/etos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/etos/subscriptions",
                "organizations_url": "https://api.github.com/users/etos/orgs",
                "repos_url": "https://api.github.com/users/etos/repos",
                "events_url": "https://api.github.com/users/etos/events{/privacy}",
                "received_events_url": "https://api.github.com/users/etos/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-03-28T21:15:51Z",
            "updated_at": "2019-03-28T21:15:51Z",
            "author_association": "NONE",
            "body": "Had similar issue, and created a decorator for this...\r\n\r\n```\r\nimport logging\r\nfrom functools import partial, wraps\r\nfrom flask import request\r\n\r\n\r\nclass HealthCheckFilter(logging.Filter):\r\n    \"\"\"Filter for logging output\"\"\"\r\n\r\n    def __init__(self, path, name=''):\r\n        \"\"\"Class constructor.\r\n        We pass 'path' argument to instance  which is\r\n        used by to filter logging for Flask routes.\r\n        \"\"\"\r\n        self.path = path\r\n        super().__init__(name)\r\n\r\n    def filter(self, record):\r\n        \"\"\"Main filter function.\r\n        We add a space after path here to ensure subpaths\r\n        are not unintentionally excluded from logging\"\"\"\r\n        return f\"{self.path} \" not in record.getMessage()\r\n\r\n\r\ndef disable_logging(func=None, *args, **kwargs):\r\n    \"\"\"Disable log messages for werkzeug log handler\r\n    for a specific Flask routes.\r\n\r\n    :param (function) func: wrapped function\r\n    :param (list) args: decorator arguments\r\n    :param (dict) kwargs: decorator keyword arguments\r\n    :return (function) wrapped function\r\n    \"\"\"\r\n    _logger = 'werkzeug'\r\n    if not func:\r\n        return partial(disable_logging, *args, **kwargs)\r\n\r\n    @wraps(func)\r\n    def wrapper(*args, **kwargs):\r\n        path = request.environ['PATH_INFO']\r\n        log = logging.getLogger(_logger)\r\n        log.addFilter(HealthCheckFilter(path))\r\n        return func(*args, **kwargs)\r\n    return wrapper\r\n```\r\n\r\nUsage:\r\n\r\n```\r\n@disable_logging\r\ndef health():\r\n    return {'status': 'ok'}\r\n```\r\n"
        }
    ]
}