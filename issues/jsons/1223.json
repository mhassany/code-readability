{
    "url": "https://api.github.com/repos/pallets/flask/issues/1223",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1223/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1223/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1223/events",
    "html_url": "https://github.com/pallets/flask/pull/1223",
    "id": 46853301,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjMzNTU1MDY=",
    "number": 1223,
    "title": "Improved secret key generation example",
    "user": {
        "login": "Hasimir",
        "id": 2611615,
        "node_id": "MDQ6VXNlcjI2MTE2MTU=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/2611615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Hasimir",
        "html_url": "https://github.com/Hasimir",
        "followers_url": "https://api.github.com/users/Hasimir/followers",
        "following_url": "https://api.github.com/users/Hasimir/following{/other_user}",
        "gists_url": "https://api.github.com/users/Hasimir/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Hasimir/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Hasimir/subscriptions",
        "organizations_url": "https://api.github.com/users/Hasimir/orgs",
        "repos_url": "https://api.github.com/users/Hasimir/repos",
        "events_url": "https://api.github.com/users/Hasimir/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Hasimir/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2014-10-26T20:17:02Z",
    "updated_at": "2014-10-27T16:44:46Z",
    "closed_at": "2014-10-27T16:44:05Z",
    "author_association": "NONE",
    "pull_request": {
        "url": "https://api.github.com/repos/pallets/flask/pulls/1223",
        "html_url": "https://github.com/pallets/flask/pull/1223",
        "diff_url": "https://github.com/pallets/flask/pull/1223.diff",
        "patch_url": "https://github.com/pallets/flask/pull/1223.patch"
    },
    "body": "Improved secret key generation by randomising seed and adding SHA-2 (SHA256) hash digest of it.  Added b64 and hexdigest variants.\n\nShould probably use random.SystemRandom(Random) instead of os.random(), but this is supposed to be a quickstart and code should have a fallback to os.random f random.SystemRandom is not available.\n\nUses random, hashlib, os and (optionally) base64 standard modules instead of just os.\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/60530573",
            "html_url": "https://github.com/pallets/flask/pull/1223#issuecomment-60530573",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1223",
            "id": 60530573,
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwNTMwNTcz",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-10-26T20:18:16Z",
            "updated_at": "2014-10-26T20:18:16Z",
            "author_association": "MEMBER",
            "body": "What's the point of hashing the secret?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/60531158",
            "html_url": "https://github.com/pallets/flask/pull/1223#issuecomment-60531158",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1223",
            "id": 60531158,
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwNTMxMTU4",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-10-26T20:34:11Z",
            "updated_at": "2014-10-26T20:34:11Z",
            "author_association": "MEMBER",
            "body": "And what was wrong with the current example? I also don't see why we should add several ways to do the same thing in the _quickstart_, which is supposed to be even more straightforward than any other portion of the docs.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/60534195",
            "html_url": "https://github.com/pallets/flask/pull/1223#issuecomment-60534195",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1223",
            "id": 60534195,
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwNTM0MTk1",
            "user": {
                "login": "Hasimir",
                "id": 2611615,
                "node_id": "MDQ6VXNlcjI2MTE2MTU=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/2611615?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Hasimir",
                "html_url": "https://github.com/Hasimir",
                "followers_url": "https://api.github.com/users/Hasimir/followers",
                "following_url": "https://api.github.com/users/Hasimir/following{/other_user}",
                "gists_url": "https://api.github.com/users/Hasimir/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Hasimir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Hasimir/subscriptions",
                "organizations_url": "https://api.github.com/users/Hasimir/orgs",
                "repos_url": "https://api.github.com/users/Hasimir/repos",
                "events_url": "https://api.github.com/users/Hasimir/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Hasimir/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-10-26T22:00:27Z",
            "updated_at": "2014-10-26T22:00:27Z",
            "author_association": "NONE",
            "body": "Hashing gives a consistent size of output without compromising the random nature of the key, dropping the base64 or hexdigest is your call and the current example encouraged that single integer as the seed instead of a randomly selected one (and you do not want it to be something like range(24), that's just asking to get compromised when it inevitably spits out something like '\\x17;').\n\nAnyway, it's your docs and your call, I've given up arguing with people who want easy over security, there's no point any more.  Use it if you want or don't.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/60534370",
            "html_url": "https://github.com/pallets/flask/pull/1223#issuecomment-60534370",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1223",
            "id": 60534370,
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwNTM0Mzcw",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-10-26T22:05:33Z",
            "updated_at": "2014-10-26T22:06:36Z",
            "author_association": "MEMBER",
            "body": "Nobody tried to argue. But your initial comment in the PR didn't really go into detail why your change improves security. To me it initially looked like you'd mainly want a prettier value in the config.\n\nWith the revised PR, I'd use hexdigest instead of digest since it doesn't affect security but looks prettier ;)\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/60534452",
            "html_url": "https://github.com/pallets/flask/pull/1223#issuecomment-60534452",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1223",
            "id": 60534452,
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwNTM0NDUy",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-10-26T22:07:55Z",
            "updated_at": "2014-10-26T22:07:55Z",
            "author_association": "MEMBER",
            "body": "It's not very helpful if you propose a change and give up discussion immediately.\n\nAnother idea: Could we also use the random module exclusively (random.getrandbits or how it's called) I am definetly open to merging this, but i'd like somebody else to review the changes first.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/60534598",
            "html_url": "https://github.com/pallets/flask/pull/1223#issuecomment-60534598",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1223",
            "id": 60534598,
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwNTM0NTk4",
            "user": {
                "login": "Hasimir",
                "id": 2611615,
                "node_id": "MDQ6VXNlcjI2MTE2MTU=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/2611615?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Hasimir",
                "html_url": "https://github.com/Hasimir",
                "followers_url": "https://api.github.com/users/Hasimir/followers",
                "following_url": "https://api.github.com/users/Hasimir/following{/other_user}",
                "gists_url": "https://api.github.com/users/Hasimir/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Hasimir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Hasimir/subscriptions",
                "organizations_url": "https://api.github.com/users/Hasimir/orgs",
                "repos_url": "https://api.github.com/users/Hasimir/repos",
                "events_url": "https://api.github.com/users/Hasimir/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Hasimir/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-10-26T22:12:00Z",
            "updated_at": "2014-10-26T22:12:00Z",
            "author_association": "NONE",
            "body": "_Sigh_  Like MacArthur, I will return ... after I kill the migraine beginning behind my left eye ...\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/60535977",
            "html_url": "https://github.com/pallets/flask/pull/1223#issuecomment-60535977",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1223",
            "id": 60535977,
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwNTM1OTc3",
            "user": {
                "login": "Hasimir",
                "id": 2611615,
                "node_id": "MDQ6VXNlcjI2MTE2MTU=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/2611615?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Hasimir",
                "html_url": "https://github.com/Hasimir",
                "followers_url": "https://api.github.com/users/Hasimir/followers",
                "following_url": "https://api.github.com/users/Hasimir/following{/other_user}",
                "gists_url": "https://api.github.com/users/Hasimir/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Hasimir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Hasimir/subscriptions",
                "organizations_url": "https://api.github.com/users/Hasimir/orgs",
                "repos_url": "https://api.github.com/users/Hasimir/repos",
                "events_url": "https://api.github.com/users/Hasimir/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Hasimir/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-10-26T22:53:08Z",
            "updated_at": "2014-10-26T22:53:08Z",
            "author_association": "NONE",
            "body": "To do it entirely in random (with builtins) you want something like this:\n\n``` python\nimport random\n\nrandom.SystemRandom().getrandbits(256).to_bytes(32, byteorder=\"big\")\n```\n\nWhich really needs to be:\n\n``` python\nimport random\n\nx = 256  # specify bit-size for secret key\ny = x / 8\n\nrandom.SystemRandom().getrandbits(x).to_bytes(y, byteorder=\"big\")\n```\n\nIn that case you'll also need to include a note that random.SystemRandom may not be available on all platforms (which is why I didn't just do this first).\n\nVariants with SystemRandom include: dropping the to_bytes portion (and get a big integer) and random.SystemRandom().random (which produces a float between 0.0 and 1.0 by default).  Appending to_bytes() matches your existing output type.\n\nUrgh ... I need more pain killers ... bbl ...\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/60536603",
            "html_url": "https://github.com/pallets/flask/pull/1223#issuecomment-60536603",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1223",
            "id": 60536603,
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwNTM2NjAz",
            "user": {
                "login": "Hasimir",
                "id": 2611615,
                "node_id": "MDQ6VXNlcjI2MTE2MTU=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/2611615?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Hasimir",
                "html_url": "https://github.com/Hasimir",
                "followers_url": "https://api.github.com/users/Hasimir/followers",
                "following_url": "https://api.github.com/users/Hasimir/following{/other_user}",
                "gists_url": "https://api.github.com/users/Hasimir/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Hasimir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Hasimir/subscriptions",
                "organizations_url": "https://api.github.com/users/Hasimir/orgs",
                "repos_url": "https://api.github.com/users/Hasimir/repos",
                "events_url": "https://api.github.com/users/Hasimir/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Hasimir/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-10-26T23:11:13Z",
            "updated_at": "2014-10-26T23:12:22Z",
            "author_association": "NONE",
            "body": "Okay, I don't know what SystemRandom does not work on, but it definitely works on the following: OS X (python 2 and 3), Linux (python 2 and 3), PyPy 2.4.0, PyPy3 2.4.0, Windows (python 2, technically only tested with Wine), Python for .NET (python 2 via Mono), IronPython (python 2, also via Mono).\n\nAs that is likely to be 99% of the userbase (and I expect Open, Net and FreeBSD will all behave), I'm inclined to change the update to use SystemRandom.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/60537214",
            "html_url": "https://github.com/pallets/flask/pull/1223#issuecomment-60537214",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1223",
            "id": 60537214,
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwNTM3MjE0",
            "user": {
                "login": "Hasimir",
                "id": 2611615,
                "node_id": "MDQ6VXNlcjI2MTE2MTU=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/2611615?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Hasimir",
                "html_url": "https://github.com/Hasimir",
                "followers_url": "https://api.github.com/users/Hasimir/followers",
                "following_url": "https://api.github.com/users/Hasimir/following{/other_user}",
                "gists_url": "https://api.github.com/users/Hasimir/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Hasimir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Hasimir/subscriptions",
                "organizations_url": "https://api.github.com/users/Hasimir/orgs",
                "repos_url": "https://api.github.com/users/Hasimir/repos",
                "events_url": "https://api.github.com/users/Hasimir/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Hasimir/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-10-26T23:27:05Z",
            "updated_at": "2014-10-26T23:27:05Z",
            "author_association": "NONE",
            "body": "Hmmm ... if byteorder is an absolute must then this may not be possible after all.  Converting Py2 long ints to that format is ... problematic (as many posts to stackoverflow show).  If that was just because it was the output and you can use anything else, then there are still options (another advantage of hashlib there, predictable output formats without predictable results).\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/60625300",
            "html_url": "https://github.com/pallets/flask/pull/1223#issuecomment-60625300",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1223",
            "id": 60625300,
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwNjI1MzAw",
            "user": {
                "login": "DasIch",
                "id": 182316,
                "node_id": "MDQ6VXNlcjE4MjMxNg==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/182316?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/DasIch",
                "html_url": "https://github.com/DasIch",
                "followers_url": "https://api.github.com/users/DasIch/followers",
                "following_url": "https://api.github.com/users/DasIch/following{/other_user}",
                "gists_url": "https://api.github.com/users/DasIch/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/DasIch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DasIch/subscriptions",
                "organizations_url": "https://api.github.com/users/DasIch/orgs",
                "repos_url": "https://api.github.com/users/DasIch/repos",
                "events_url": "https://api.github.com/users/DasIch/events{/privacy}",
                "received_events_url": "https://api.github.com/users/DasIch/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-10-27T16:44:05Z",
            "updated_at": "2014-10-27T16:44:46Z",
            "author_association": "CONTRIBUTOR",
            "body": "No. This is not better. This is not improved. This is simply overengineered, unnecessary and actually a lot worse. It shows a severe misunderstanding about what these functions do and a complete lack of understanding basic cryptography.\n\nFirst of all, the random module uses by default a mersenne twister as PRNG. This is fast and sufficient in situations where you just need randomish stuff like in a game or something. It's not a CSPRNG and shouldn't be used as such.\n\n`SystemRandom` is better in that is uses the CSPRNG provided by the OS, which means `os.urandom`. It's not always available because the OS doesn't always provide one. If this is the case, you should switch your OS. Anyway, this also means that using `SystemRandom` is pointless as we don't need any of the features it provides on top of `os.urandom`. It just produces unnecessary overhead.\n\n`os.urandom` takes on argument, the number of random bytes that should be returned. This is not a seed, in fact a seed does not occur anywhere in the code. The fact that you even mention a seed, indicates that you haven't even read the documentation of the functions you are using. I'm honestly not sure what to say to that, especially in this context.\n\nFurthermore there is absolutely no reason to use a hash function, especially not as a fancy way to truncate a random string. `os.urandom(32)` and `sha256(os.urandom(n))` for any n, will both yield strings 32 bytes/256 bits in length both equally random-ish (provided there is no bug in sha256). Producing more random bytes and hashing will waste cpu cycles and nothing more.\n\nThe only way the code can be \"improved\" is by increasing the length of the secret key. This will obviously make it more difficult for an attacker to brute force the key. It's however already long enough that no attacker will be capable of determining it using brute force in a reasonable amount of time, provided the algorithms and their respective implementations, it's used as input of, are secure.\n"
        }
    ]
}