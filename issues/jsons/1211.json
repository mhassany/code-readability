{
    "url": "https://api.github.com/repos/pallets/flask/issues/1211",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1211/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1211/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1211/events",
    "html_url": "https://github.com/pallets/flask/issues/1211",
    "id": 46646611,
    "node_id": "MDU6SXNzdWU0NjY0NjYxMQ==",
    "number": 1211,
    "title": "The way Flask handles `www` and subdomains is ambiguous",
    "user": {
        "login": "01walid",
        "id": 983020,
        "node_id": "MDQ6VXNlcjk4MzAyMA==",
        "avatar_url": "https://avatars1.githubusercontent.com/u/983020?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/01walid",
        "html_url": "https://github.com/01walid",
        "followers_url": "https://api.github.com/users/01walid/followers",
        "following_url": "https://api.github.com/users/01walid/following{/other_user}",
        "gists_url": "https://api.github.com/users/01walid/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/01walid/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/01walid/subscriptions",
        "organizations_url": "https://api.github.com/users/01walid/orgs",
        "repos_url": "https://api.github.com/users/01walid/repos",
        "events_url": "https://api.github.com/users/01walid/events{/privacy}",
        "received_events_url": "https://api.github.com/users/01walid/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-10-23T16:40:26Z",
    "updated_at": "2017-05-22T17:16:07Z",
    "closed_at": "2017-05-22T17:16:07Z",
    "author_association": "NONE",
    "body": "Hi,\nFirst, read this: \"[why use www](http://www.yes-www.org/why-use-www/)\" if you didn't already...\n### The problem\n\nhaving many blueprints, with only _some_ blueprints having `subdomain` value set to a given subdomain, the rest of the blueprints should serve the root domain name (with the consideration of `www`)\n\n**examples:**\n- static blueprint set to serve `static.example.com`\n- dashboard blueprint set to serve `dashboard.example.com`\n- other blueprints, like users, frontend, messages, ..etc do not have `subdomain` set, and should serve `www.example.com` (assuming `example.com` auto redirect to `www.example.com`)\n\nSetting `SERVER_NAME` to `example.com` wouldn't automatically handle the `www` part, and requires setting `www` as the subdomain of the rest of the blueprints, which I find it redundant and error prone.\nSetting `SERVER_NAME` to `www.example.com` will cause other subdomain blueprints to generate `static.www.example.com` and `dashboard.www.example.com` which is not what you would expect.\n\nI tried using `app.url_map.default_subdomain = 'www'` but it had no effect at all (did I miss anything else?)\n\nAs a workaround, I was forced to use this:\n\n``` python\ndef configure_blueprints(app, blueprints):\n    for blueprint in blueprints:\n        if not blueprint.subdomain:\n            blueprint.subdomain = 'www'\n        app.register_blueprint(blueprint)\n```\n### Suggested solution\n\n`www` is a special subdomain and should be treated a bit differently and in a more _explicit_ manner.\n- add `DEFAULT_SUBDOMAIN` or `WWW` or something similar to Flask's set of config variables/flags beside `SERVER_NAME` (which should be noted in documentation that `SERVER_NAME` should in most of the cases hold the _naked_ domain name.)\n- when `DEFAULT_SUBDOMAIN = 'www' # for instance` or `WWW = True`, blueprints subdomain defaults to the given value.\n#### extras\n\nWe would also add `FORCE_WWW = Boolean`, and when set to `True` would redirect the naked domain to its `www` one. Or make the subdomain param accept an array of value in case one would serve the same content via the naked and the non naked version of their domain name (e.g. `example.com` and `www.example.com` would serve the same set of their related blueprints.)\n\nThese are just some suggestions, I might be wrong or missing something, and if it's the case, please inform me.\n\n**Related issues** to take into consideration: https://github.com/mitsuhiko/flask/issues/998, https://github.com/mitsuhiko/flask/issues/905, https://github.com/mitsuhiko/flask/issues/821 .\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/60270091",
            "html_url": "https://github.com/pallets/flask/issues/1211#issuecomment-60270091",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1211",
            "id": 60270091,
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjcwMDkx",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-10-23T16:49:37Z",
            "updated_at": "2014-10-23T16:49:37Z",
            "author_association": "MEMBER",
            "body": "There is nothing ambiguous about how Flask treats subdomains -- in fact, the current behavior is more explicit than what you are proposing. I recommend doing any redirects from non-www to www or the other way around on a different layer, i.e. in the configuration of your webserver. Ideally you wouldn't have to deal with www-subdomains inside your application code.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/60270872",
            "html_url": "https://github.com/pallets/flask/issues/1211#issuecomment-60270872",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1211",
            "id": 60270872,
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjcwODcy",
            "user": {
                "login": "cbcafiero",
                "id": 421699,
                "node_id": "MDQ6VXNlcjQyMTY5OQ==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/421699?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/cbcafiero",
                "html_url": "https://github.com/cbcafiero",
                "followers_url": "https://api.github.com/users/cbcafiero/followers",
                "following_url": "https://api.github.com/users/cbcafiero/following{/other_user}",
                "gists_url": "https://api.github.com/users/cbcafiero/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/cbcafiero/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cbcafiero/subscriptions",
                "organizations_url": "https://api.github.com/users/cbcafiero/orgs",
                "repos_url": "https://api.github.com/users/cbcafiero/repos",
                "events_url": "https://api.github.com/users/cbcafiero/events{/privacy}",
                "received_events_url": "https://api.github.com/users/cbcafiero/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-10-23T16:54:55Z",
            "updated_at": "2014-10-23T16:54:55Z",
            "author_association": "NONE",
            "body": "+1\n\n> On Oct 23, 2014, at 12:49 PM, Markus Unterwaditzer notifications@github.com wrote:\n> \n> There is nothing ambiguous about how Flask treats subdomains -- in fact, the current behavior is more explicit than what you are proposing. I recommend doing any redirects from non-www to www or the other way around on a different layer, i.e. in the configuration of your webserver. Ideally you wouldn't have to deal with www-subdomains inside your application code.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub https://github.com/mitsuhiko/flask/issues/1211#issuecomment-60270091.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/60272061",
            "html_url": "https://github.com/pallets/flask/issues/1211#issuecomment-60272061",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1211",
            "id": 60272061,
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjcyMDYx",
            "user": {
                "login": "01walid",
                "id": 983020,
                "node_id": "MDQ6VXNlcjk4MzAyMA==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/983020?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/01walid",
                "html_url": "https://github.com/01walid",
                "followers_url": "https://api.github.com/users/01walid/followers",
                "following_url": "https://api.github.com/users/01walid/following{/other_user}",
                "gists_url": "https://api.github.com/users/01walid/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/01walid/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/01walid/subscriptions",
                "organizations_url": "https://api.github.com/users/01walid/orgs",
                "repos_url": "https://api.github.com/users/01walid/repos",
                "events_url": "https://api.github.com/users/01walid/events{/privacy}",
                "received_events_url": "https://api.github.com/users/01walid/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-10-23T17:02:58Z",
            "updated_at": "2014-10-23T17:02:58Z",
            "author_association": "NONE",
            "body": "> Ideally you wouldn't have to deal with www-subdomains inside your application code.\n\nThe current behavior doesn't allow this AFAIK, it would require setting `SERVER_NAME` with the `www` variant, or explicitly setting `www` in each related blueprint. either cases, you're forced to deal with `www` in your code.\n\nthe only case you wouldn't have to deal with www-subdomains is when you have no subdomain blueprints and `SERVER_NAME` isn't set.\n\nAm I mistaken ?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/60273266",
            "html_url": "https://github.com/pallets/flask/issues/1211#issuecomment-60273266",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1211",
            "id": 60273266,
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjczMjY2",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-10-23T17:11:26Z",
            "updated_at": "2014-10-23T17:11:26Z",
            "author_association": "MEMBER",
            "body": "No, you are not. I think that this would be a good case for an extension though, which could install a WSGI middleware to capture requests to the wrong version (which is either `www.` or not) and provide this functionality you want. I am not saying that this would be out of scope for Flask though.\n"
        }
    ]
}