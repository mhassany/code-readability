{
    "url": "https://api.github.com/repos/pallets/flask/issues/2659",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2659/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2659/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2659/events",
    "html_url": "https://github.com/pallets/flask/issues/2659",
    "id": 305508095,
    "node_id": "MDU6SXNzdWUzMDU1MDgwOTU=",
    "number": 2659,
    "title": "Flask test_client retaining lock on files, preventing os.remove() on Windows",
    "user": {
        "login": "andymantell",
        "id": 134642,
        "node_id": "MDQ6VXNlcjEzNDY0Mg==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/134642?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andymantell",
        "html_url": "https://github.com/andymantell",
        "followers_url": "https://api.github.com/users/andymantell/followers",
        "following_url": "https://api.github.com/users/andymantell/following{/other_user}",
        "gists_url": "https://api.github.com/users/andymantell/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/andymantell/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/andymantell/subscriptions",
        "organizations_url": "https://api.github.com/users/andymantell/orgs",
        "repos_url": "https://api.github.com/users/andymantell/repos",
        "events_url": "https://api.github.com/users/andymantell/events{/privacy}",
        "received_events_url": "https://api.github.com/users/andymantell/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-03-15T11:12:32Z",
    "updated_at": "2018-03-18T13:17:02Z",
    "closed_at": "2018-03-18T13:17:02Z",
    "author_association": "NONE",
    "body": "### Expected Behavior\r\n\r\nGiven the barest possible flask app (_See this repo for full example: https://github.com/andymantell/flask-test-client-sendfile-lock_)\r\n\r\n```python\r\nfrom flask import Flask\r\n\r\n\r\napp = Flask(__name__)\r\n\r\nif __name__ == \"__main__\":\r\n    app.run()\r\n```\r\n\r\nAnd the following test script:\r\n\r\n```python\r\nimport os\r\nfrom app import app\r\n\r\n\r\ntest_client = app.test_client()\r\n\r\nfilename = 'static/test.txt'\r\nwith open(filename, 'w+') as file:\r\n    file.write('Hello')\r\n\r\nresponse = test_client.get('/static/test.txt')\r\n\r\nresponse_data = response.data.decode('utf-8')\r\nassert response_data == 'Hello'\r\n\r\nos.remove(filename)  # This throws an exception on windows, claiming that the file is busy\r\n```\r\n\r\nI would expect that the file /static/test.txt will be created, requested from the test_client, and then removed again. And indeed this is what happens on Linux.\r\n\r\n### Actual Behavior\r\n\r\nOn Windows, the `os.remove` line throws an exception saying that the file is busy. It appears as if something inside the test client is locking the file.\r\n\r\nIf I switch to `requests.get` and fetch /static/test.txt over http instead of through the test client, the error does not occur, the file is not locked, and Windows successfully deletes the file.\r\n\r\n```pytb\r\n(env) C:\\projects\\flask-test-client-sendfile-lock-master>python test.py\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 15, in <module>\r\n    os.remove(filename)  # This throws an exception on windows, claiming\r\n that the file is busy\r\nPermissionError: [WinError 32] The process cannot access the file because it is\r\nbeing used by another process: 'static/test.txt'\r\n```\r\n\r\n### Environment\r\n* Windows 7\r\n* Python version: 3.4\r\n* Flask version: 0.12\r\n* Werkzeug version: 0.7\r\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/373951775",
            "html_url": "https://github.com/pallets/flask/issues/2659#issuecomment-373951775",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2659",
            "id": 373951775,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzk1MTc3NQ==",
            "user": {
                "login": "andymantell",
                "id": 134642,
                "node_id": "MDQ6VXNlcjEzNDY0Mg==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/134642?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/andymantell",
                "html_url": "https://github.com/andymantell",
                "followers_url": "https://api.github.com/users/andymantell/followers",
                "following_url": "https://api.github.com/users/andymantell/following{/other_user}",
                "gists_url": "https://api.github.com/users/andymantell/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/andymantell/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/andymantell/subscriptions",
                "organizations_url": "https://api.github.com/users/andymantell/orgs",
                "repos_url": "https://api.github.com/users/andymantell/repos",
                "events_url": "https://api.github.com/users/andymantell/events{/privacy}",
                "received_events_url": "https://api.github.com/users/andymantell/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-03-17T20:53:11Z",
            "updated_at": "2018-03-17T20:53:11Z",
            "author_association": "NONE",
            "body": "> The example you've shown here doesn't pass the file to the test client at any time. It's not demonstrating an issue with Flask.\r\n\r\n@davidism Not sure where this comment went, it arrived in my email but I can't find it here? \r\n\r\nAt any rate, I think it is flask related? The file gets written to disk and then Flask reads it before sending it. When I hit a \"real\" flask app via `requests.get` the behaviour doesn't occur.\r\n\r\nI've been thinking about this a bit and wondered - when does Flask actually close the file again? I can see it get opened inside `send_file` but without knowing more about Flask's internals I'm not sure where it gets closed.\r\n\r\nIs there something extra that I need to call, to tear down something more? Perhaps this isn't a bug with Flask, and it's more that I'm using it wrong?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/373954421",
            "html_url": "https://github.com/pallets/flask/issues/2659#issuecomment-373954421",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2659",
            "id": 373954421,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzk1NDQyMQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-03-17T21:36:32Z",
            "updated_at": "2018-03-17T21:36:46Z",
            "author_association": "MEMBER",
            "body": "I deleted the comment because I realized the static route is what's loading it, not your code. You're still hitting the real app with the test client, the difference is the client not the app. Werkzeug closes open files after the request is over. This should be reported against Werkzeug, Flask isn't doing anything different here."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/373988458",
            "html_url": "https://github.com/pallets/flask/issues/2659#issuecomment-373988458",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2659",
            "id": 373988458,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzk4ODQ1OA==",
            "user": {
                "login": "andymantell",
                "id": 134642,
                "node_id": "MDQ6VXNlcjEzNDY0Mg==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/134642?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/andymantell",
                "html_url": "https://github.com/andymantell",
                "followers_url": "https://api.github.com/users/andymantell/followers",
                "following_url": "https://api.github.com/users/andymantell/following{/other_user}",
                "gists_url": "https://api.github.com/users/andymantell/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/andymantell/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/andymantell/subscriptions",
                "organizations_url": "https://api.github.com/users/andymantell/orgs",
                "repos_url": "https://api.github.com/users/andymantell/repos",
                "events_url": "https://api.github.com/users/andymantell/events{/privacy}",
                "received_events_url": "https://api.github.com/users/andymantell/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-03-18T10:50:07Z",
            "updated_at": "2018-03-18T10:50:07Z",
            "author_association": "NONE",
            "body": "@davidism Ah ok fair enough. I'll have a peep in werkzeug on Monday and see if I can work out what might be going on. Thanks very much"
        }
    ]
}