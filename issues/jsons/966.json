{
    "url": "https://api.github.com/repos/pallets/flask/issues/966",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/966/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/966/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/966/events",
    "html_url": "https://github.com/pallets/flask/issues/966",
    "id": 26465765,
    "node_id": "MDU6SXNzdWUyNjQ2NTc2NQ==",
    "number": 966,
    "title": "Support other JSON media types in `Request.get_json`",
    "user": {
        "login": "mattupstate",
        "id": 166176,
        "node_id": "MDQ6VXNlcjE2NjE3Ng==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/166176?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mattupstate",
        "html_url": "https://github.com/mattupstate",
        "followers_url": "https://api.github.com/users/mattupstate/followers",
        "following_url": "https://api.github.com/users/mattupstate/following{/other_user}",
        "gists_url": "https://api.github.com/users/mattupstate/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mattupstate/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mattupstate/subscriptions",
        "organizations_url": "https://api.github.com/users/mattupstate/orgs",
        "repos_url": "https://api.github.com/users/mattupstate/repos",
        "events_url": "https://api.github.com/users/mattupstate/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mattupstate/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2014-01-28T18:47:21Z",
    "updated_at": "2014-02-08T17:01:47Z",
    "closed_at": "2014-02-08T17:01:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Currently, `Request.get_json` is hardcoded to only accept JSON requests with a media type of `application/json`. There are a plethora of emerging JSON media types and it would be handy to be able to configure the application with a set of acceptable JSON media types.\n\nA probably half brained idea is to change the conditional statement inside `Request.get_json` to something like:\n\n``` python\njson_mimetypes = _request_ctx_stack.top.app.config.get('JSON_MIMETYPES', ('application/json',))\n\nif self.mimetype not in json_mimetypes and not force:\n    return None\n```\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/33514230",
            "html_url": "https://github.com/pallets/flask/issues/966#issuecomment-33514230",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/966",
            "id": 33514230,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTE0MjMw",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-01-28T19:25:20Z",
            "updated_at": "2014-01-28T19:25:39Z",
            "author_association": "MEMBER",
            "body": "Can you list some example mimetypes you would configure in your applications? If they go something like `application/...+json` (as a quick google search for \"json media types\" suggested), a more generic solution could be achieved without introducing a config option.\n\nMeanwhile, you can:\n\n   1.) Use the `force` parameter on `get_json`.\n   2.) Subclass `Request`.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/33515934",
            "html_url": "https://github.com/pallets/flask/issues/966#issuecomment-33515934",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/966",
            "id": 33515934,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTE1OTM0",
            "user": {
                "login": "mattupstate",
                "id": 166176,
                "node_id": "MDQ6VXNlcjE2NjE3Ng==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/166176?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mattupstate",
                "html_url": "https://github.com/mattupstate",
                "followers_url": "https://api.github.com/users/mattupstate/followers",
                "following_url": "https://api.github.com/users/mattupstate/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattupstate/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mattupstate/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattupstate/subscriptions",
                "organizations_url": "https://api.github.com/users/mattupstate/orgs",
                "repos_url": "https://api.github.com/users/mattupstate/repos",
                "events_url": "https://api.github.com/users/mattupstate/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mattupstate/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-01-28T19:41:25Z",
            "updated_at": "2014-01-28T19:41:25Z",
            "author_association": "CONTRIBUTOR",
            "body": "Your google search is indicative of what I mean. They generally end in `json` or `+json`. And my suggestion was entirely naive. It was probably more to illustrate where in the code the issue resides.\n\nI've realized I can use `force=True`. It just feels weird that I have to force it when it can be inferred from the media type.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/33516941",
            "html_url": "https://github.com/pallets/flask/issues/966#issuecomment-33516941",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/966",
            "id": 33516941,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTE2OTQx",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-01-28T19:51:06Z",
            "updated_at": "2014-01-28T19:51:06Z",
            "author_association": "MEMBER",
            "body": "Then maybe this could suffice?\n\n```\nmediatype, subtype = self.mimetype.split('/')\n\nif 'json' not in subtype.split('+') and not force:\n    return None\n```\n\nThis seems much nicer than passing the responsibility on to the user. If\nsomebody has such weird cases where the mimetype completely differs,\nsubclassing ought to be enough IMO.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/33517246",
            "html_url": "https://github.com/pallets/flask/issues/966#issuecomment-33517246",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/966",
            "id": 33517246,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTE3MjQ2",
            "user": {
                "login": "mattupstate",
                "id": 166176,
                "node_id": "MDQ6VXNlcjE2NjE3Ng==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/166176?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mattupstate",
                "html_url": "https://github.com/mattupstate",
                "followers_url": "https://api.github.com/users/mattupstate/followers",
                "following_url": "https://api.github.com/users/mattupstate/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattupstate/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mattupstate/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattupstate/subscriptions",
                "organizations_url": "https://api.github.com/users/mattupstate/orgs",
                "repos_url": "https://api.github.com/users/mattupstate/repos",
                "events_url": "https://api.github.com/users/mattupstate/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mattupstate/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-01-28T19:53:54Z",
            "updated_at": "2014-01-28T19:53:54Z",
            "author_association": "CONTRIBUTOR",
            "body": "I'm not that well versed in the nuances of media type strings, but I would assume that would work in most cases.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/34549077",
            "html_url": "https://github.com/pallets/flask/issues/966#issuecomment-34549077",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/966",
            "id": 34549077,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTQ5MDc3",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-02-08T17:01:47Z",
            "updated_at": "2014-02-08T17:01:47Z",
            "author_association": "MEMBER",
            "body": "This is now implemented.  By default it's application/json and whatever ends with +json in the application type but it can now be overridden.\n\nSee e5bba9deb5c9ab9c66bea5c17e96741777fe46ab\n"
        }
    ]
}