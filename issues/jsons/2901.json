{
    "url": "https://api.github.com/repos/pallets/flask/issues/2901",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2901/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2901/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2901/events",
    "html_url": "https://github.com/pallets/flask/issues/2901",
    "id": 357832214,
    "node_id": "MDU6SXNzdWUzNTc4MzIyMTQ=",
    "number": 2901,
    "title": "Pip inclusion of simplejson mysteriously breaks custom json encoder",
    "user": {
        "login": "chadjaros",
        "id": 11543019,
        "node_id": "MDQ6VXNlcjExNTQzMDE5",
        "avatar_url": "https://avatars0.githubusercontent.com/u/11543019?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chadjaros",
        "html_url": "https://github.com/chadjaros",
        "followers_url": "https://api.github.com/users/chadjaros/followers",
        "following_url": "https://api.github.com/users/chadjaros/following{/other_user}",
        "gists_url": "https://api.github.com/users/chadjaros/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/chadjaros/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/chadjaros/subscriptions",
        "organizations_url": "https://api.github.com/users/chadjaros/orgs",
        "repos_url": "https://api.github.com/users/chadjaros/repos",
        "events_url": "https://api.github.com/users/chadjaros/events{/privacy}",
        "received_events_url": "https://api.github.com/users/chadjaros/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-09-06T21:21:07Z",
    "updated_at": "2018-09-06T21:34:59Z",
    "closed_at": "2018-09-06T21:28:30Z",
    "author_association": "NONE",
    "body": "**This issue tracker is a tool to address bugs in Flask itself.\r\nPlease use the #pocoo IRC channel on freenode or Stack Overflow for general\r\nquestions about using Flask or issues not related to Flask.**\r\n\r\nIf you'd like to report a bug in Flask, fill out the template below. Provide\r\nany any extra information that may be useful / related to your problem.\r\nIdeally, create an [MCVE](http://stackoverflow.com/help/mcve), which helps us\r\nunderstand the problem and helps check that it is not caused by something in\r\nyour code.\r\n\r\n---\r\n\r\n### Expected Behavior\r\n\r\nTell us what should happen.\r\n\r\nProviding a custom JSON encoder doesn't break if simplejson happens to be included in the pip dependencies\r\n\r\n```python\r\n\r\n    pip install simplejson #OR install any library that has simplejson as a dependency\r\n\r\n    ----\r\n\r\n    import json\r\n    \r\n    class JsonSerializer:\r\n      def __init__(self, encodings=None, **kwargs):\r\n\r\n        if encodings:\r\n            self._encodings = encodings\r\n        else:\r\n            self._encodings = self._get_default_type_encodings()\r\n        # dict of kwargs\r\n        if kwargs is None:\r\n            self._kwargs = {}\r\n        else:\r\n            self._kwargs = kwargs\r\n\r\n      def encode(self, o):\r\n        return self.dumps(o)\r\n\r\n      def dumps(self, obj, kwargs_dict=None):\r\n        kwargs = self._kwargs.copy()\r\n\r\n        # Override init kwargs\r\n        if kwargs_dict is not None:\r\n            kwargs.update(kwargs_dict)\r\n\r\n        return json.dumps(obj, **kwargs_dict)\r\n\r\n    ----\r\n\r\n    application.json_encoder = JsonSerializer\r\n\r\n    jsonify({\"some\": \"object})\r\n```\r\n\r\n### Actual Behavior\r\n\r\nTell us what happens instead.\r\n\r\nResults in \r\n```pytb\r\n    ....\r\n    File \"/opt/pyenv/versions/***/lib/python3.5/site-packages/flask/json.py\", line 263, in jsonify\r\n      (dumps(data, indent=indent, separators=separators), '\\n'),\r\n    File \"/opt/pyenv/versions/***/lib/python3.5/site-packages/flask/json.py\", line 123, in dumps\r\n      rv = _json.dumps(obj, **kwargs)\r\n    File \"/opt/pyenv/versions/***/lib/python3.5/site-packages/simplejson/__init__.py\", line 399, in dumps\r\n      **kw).encode(obj)\r\n    ...\r\n    File \"/opt/pyenv/versions/3.5.4/lib/python3.5/json/__init__.py\", line 237, in dumps\r\n    **kw).encode(obj)\r\n    TypeError: __init__() got an unexpected keyword argument 'for_json'\r\n```\r\n\r\nNoticed this conversation https://github.com/pallets/flask/issues/1602. It's unfortunate that it was closed with no action being taken, implicitly switching between incompatible json implementations based on presence of a library seems like an egregiously bad design decision.\r\n\r\n### Environment\r\n\r\n* Python version: 3.5\r\n* Flask version: 0.12.1\r\n* Werkzeug version: 0.12.1\r\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/419247208",
            "html_url": "https://github.com/pallets/flask/issues/2901#issuecomment-419247208",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2901",
            "id": 419247208,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTI0NzIwOA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-09-06T21:28:30Z",
            "updated_at": "2018-09-06T21:34:59Z",
            "author_association": "MEMBER",
            "body": "simplejson is not supposed to be incompatible with built-in json. If it is, report that to simplejson. However, there appear to be multiple issues with your code. You're unconditionally importing `json` and passing whatever `kwargs` were passed to the method on to the `json` implementation. Your custom encoder does not subclass the base `JSONEncoder`.\r\n\r\nIf you want to write a compatible encoder, you should subclass as normal in Python, rather than calling out to outside functions. Use `from flask.json import JSONEncoder` and subclass to override what you need. Delegate to methods with `super()`. (It may also work to subclass `json.JSONEncoder`, but using Flask's will ensure it's derived from the relevant library.)\r\n\r\nPlease use Stack Overflow for questions about your own code. This tracker is for issues related to the project itself. Be sure to include a [minimal, complete, and verifiable example](https://stackoverflow.com/help/mcve)."
        }
    ]
}