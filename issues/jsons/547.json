{
    "url": "https://api.github.com/repos/pallets/flask/issues/547",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/547/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/547/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/547/events",
    "html_url": "https://github.com/pallets/flask/issues/547",
    "id": 5563877,
    "node_id": "MDU6SXNzdWU1NTYzODc3",
    "number": 547,
    "title": "How to get value of the nested dictionary using ImmutableMultiDict?",
    "user": {
        "login": "emqplus",
        "id": 11869,
        "node_id": "MDQ6VXNlcjExODY5",
        "avatar_url": "https://avatars0.githubusercontent.com/u/11869?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/emqplus",
        "html_url": "https://github.com/emqplus",
        "followers_url": "https://api.github.com/users/emqplus/followers",
        "following_url": "https://api.github.com/users/emqplus/following{/other_user}",
        "gists_url": "https://api.github.com/users/emqplus/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/emqplus/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/emqplus/subscriptions",
        "organizations_url": "https://api.github.com/users/emqplus/orgs",
        "repos_url": "https://api.github.com/users/emqplus/repos",
        "events_url": "https://api.github.com/users/emqplus/events{/privacy}",
        "received_events_url": "https://api.github.com/users/emqplus/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2012-07-12T03:14:26Z",
    "updated_at": "2017-04-26T05:55:01Z",
    "closed_at": "2017-04-26T05:55:01Z",
    "author_association": "NONE",
    "body": "HTTP POST:\r\n\r\n~~~\r\n_ajax_nonce 7bf4f51ffb\r\naction meta-box-order\r\norder[column3] dashboard_incoming_links\r\norder[normal] dashboard_recent_comments,dashboard_recent_drafts\r\norder[side] dashboard_event_summary,dashboard_quick_press,dashboard_primary,dashboard_secondary,dashboard_plugins\r\npage dashboard\r\npage_columns 3\r\n~~~\r\n\r\nImmutableMultiDict Got:\r\n\r\n~~~\r\nImmutableMultiDict([\r\n    ('page_columns', u'2'),\r\n    ('order[column3]', u'dashboard_incoming_links'),\r\n    ('order[side]', u'dashboard_event_summary,dashboard_quick_press,dashboard_primary,dashboard_secondary,dashboard_plugins'),\r\n    ('order[normal]', u'dashboard_recent_comments,dashboard_recent_drafts'),\r\n    ('action', u'meta-box-order'),\r\n    ('_ajax_nonce', u'7bf4f51ffb'), ('page', u'dashboard')\r\n])\r\n~~~\r\n\r\nHow to get a MultiDict like:\r\n\r\n~~~\r\n{'order', {'column3': u'dashboard_incomming_links', 'side': '.......'}}\r\n~~~",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/6926283",
            "html_url": "https://github.com/pallets/flask/issues/547#issuecomment-6926283",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/547",
            "id": 6926283,
            "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjYyODM=",
            "user": {
                "login": "joequery",
                "id": 503584,
                "node_id": "MDQ6VXNlcjUwMzU4NA==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/503584?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/joequery",
                "html_url": "https://github.com/joequery",
                "followers_url": "https://api.github.com/users/joequery/followers",
                "following_url": "https://api.github.com/users/joequery/following{/other_user}",
                "gists_url": "https://api.github.com/users/joequery/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/joequery/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/joequery/subscriptions",
                "organizations_url": "https://api.github.com/users/joequery/orgs",
                "repos_url": "https://api.github.com/users/joequery/repos",
                "events_url": "https://api.github.com/users/joequery/events{/privacy}",
                "received_events_url": "https://api.github.com/users/joequery/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2012-07-12T03:38:25Z",
            "updated_at": "2012-07-12T03:38:25Z",
            "author_association": "NONE",
            "body": "Perhaps [variable_encode](http://www.formencode.org/en/latest/modules/variabledecode.html) is what you're looking for?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/38153530",
            "html_url": "https://github.com/pallets/flask/issues/547#issuecomment-38153530",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/547",
            "id": 38153530,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTUzNTMw",
            "user": {
                "login": "fmerges",
                "id": 94341,
                "node_id": "MDQ6VXNlcjk0MzQx",
                "avatar_url": "https://avatars0.githubusercontent.com/u/94341?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/fmerges",
                "html_url": "https://github.com/fmerges",
                "followers_url": "https://api.github.com/users/fmerges/followers",
                "following_url": "https://api.github.com/users/fmerges/following{/other_user}",
                "gists_url": "https://api.github.com/users/fmerges/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/fmerges/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fmerges/subscriptions",
                "organizations_url": "https://api.github.com/users/fmerges/orgs",
                "repos_url": "https://api.github.com/users/fmerges/repos",
                "events_url": "https://api.github.com/users/fmerges/events{/privacy}",
                "received_events_url": "https://api.github.com/users/fmerges/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-03-20T10:45:03Z",
            "updated_at": "2014-03-20T10:45:03Z",
            "author_association": "NONE",
            "body": "https://github.com/bernii/querystring-parser\n\nd = parser.parser(request.query_string)\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/38153809",
            "html_url": "https://github.com/pallets/flask/issues/547#issuecomment-38153809",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/547",
            "id": 38153809,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTUzODA5",
            "user": {
                "login": "fmerges",
                "id": 94341,
                "node_id": "MDQ6VXNlcjk0MzQx",
                "avatar_url": "https://avatars0.githubusercontent.com/u/94341?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/fmerges",
                "html_url": "https://github.com/fmerges",
                "followers_url": "https://api.github.com/users/fmerges/followers",
                "following_url": "https://api.github.com/users/fmerges/following{/other_user}",
                "gists_url": "https://api.github.com/users/fmerges/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/fmerges/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fmerges/subscriptions",
                "organizations_url": "https://api.github.com/users/fmerges/orgs",
                "repos_url": "https://api.github.com/users/fmerges/repos",
                "events_url": "https://api.github.com/users/fmerges/events{/privacy}",
                "received_events_url": "https://api.github.com/users/fmerges/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-03-20T10:48:47Z",
            "updated_at": "2014-03-20T10:48:47Z",
            "author_association": "NONE",
            "body": "It would be nice if this parsing method would be available from request object as an alternative method, there seem to be quite some widgets and libs that use this even do it's not standard.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/38154209",
            "html_url": "https://github.com/pallets/flask/issues/547#issuecomment-38154209",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/547",
            "id": 38154209,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTU0MjA5",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-03-20T10:54:30Z",
            "updated_at": "2014-03-20T10:54:30Z",
            "author_association": "MEMBER",
            "body": "In case you can modify the client, have you considered sending a JSON payload instead of formdata? That would be much more suitable for structured data.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/38163427",
            "html_url": "https://github.com/pallets/flask/issues/547#issuecomment-38163427",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/547",
            "id": 38163427,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTYzNDI3",
            "user": {
                "login": "fmerges",
                "id": 94341,
                "node_id": "MDQ6VXNlcjk0MzQx",
                "avatar_url": "https://avatars0.githubusercontent.com/u/94341?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/fmerges",
                "html_url": "https://github.com/fmerges",
                "followers_url": "https://api.github.com/users/fmerges/followers",
                "following_url": "https://api.github.com/users/fmerges/following{/other_user}",
                "gists_url": "https://api.github.com/users/fmerges/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/fmerges/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fmerges/subscriptions",
                "organizations_url": "https://api.github.com/users/fmerges/orgs",
                "repos_url": "https://api.github.com/users/fmerges/repos",
                "events_url": "https://api.github.com/users/fmerges/events{/privacy}",
                "received_events_url": "https://api.github.com/users/fmerges/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-03-20T13:00:49Z",
            "updated_at": "2014-03-20T13:00:49Z",
            "author_association": "NONE",
            "body": "I'm using a js widget that makes use of pushState so the user can come back later providing the url.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/297245486",
            "html_url": "https://github.com/pallets/flask/issues/547#issuecomment-297245486",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/547",
            "id": 297245486,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzI0NTQ4Ng==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-26T05:55:01Z",
            "updated_at": "2017-04-26T05:55:01Z",
            "author_association": "MEMBER",
            "body": "If you need custom parsing:\r\n\r\n~~~python\r\nfrom flask import Flask\r\nfrom flask.wrappers import Request\r\nfrom werkzeug.formdata import FormDataParser\r\n\r\nclass MyFormDataParser(FormDataParser):\r\n    def parse(*args, **kwargs):\r\n        stream, form, files = super().parse(*args, **kwargs)\r\n        # process form / files more\r\n        return stream, form, files\r\n\r\nclass MyRequest(Request):\r\n    form_data_parser_class = MyFormDataParser\r\n\r\nclass MyFlask(Flask):\r\n    request_class = MyRequest\r\n\r\napp = MyFlask(__name__)\r\n~~~\r\n\r\nPreferably, send structured data as JSON."
        }
    ]
}