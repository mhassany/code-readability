{
    "url": "https://api.github.com/repos/pallets/flask/issues/1787",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1787/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1787/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1787/events",
    "html_url": "https://github.com/pallets/flask/issues/1787",
    "id": 150137620,
    "node_id": "MDU6SXNzdWUxNTAxMzc2MjA=",
    "number": 1787,
    "title": "database: persistent connetion",
    "user": {
        "login": "chuan137",
        "id": 6780922,
        "node_id": "MDQ6VXNlcjY3ODA5MjI=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/6780922?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chuan137",
        "html_url": "https://github.com/chuan137",
        "followers_url": "https://api.github.com/users/chuan137/followers",
        "following_url": "https://api.github.com/users/chuan137/following{/other_user}",
        "gists_url": "https://api.github.com/users/chuan137/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/chuan137/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/chuan137/subscriptions",
        "organizations_url": "https://api.github.com/users/chuan137/orgs",
        "repos_url": "https://api.github.com/users/chuan137/repos",
        "events_url": "https://api.github.com/users/chuan137/events{/privacy}",
        "received_events_url": "https://api.github.com/users/chuan137/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-04-21T17:17:41Z",
    "updated_at": "2016-04-21T17:37:17Z",
    "closed_at": "2016-04-21T17:21:38Z",
    "author_association": "NONE",
    "body": "Hi,\n\nI wonder where I should keep the persistent db connection throughout the application, not the request/response context. I read the doc and examples, it looks to me, the persistent connections are made for the request/response life cycle.\n\nPeople recommend to use a connection pool. Then where should I keep the pool? I use cassandra database. The cluster session does a lot heavy lifting, and automatically manage pool connections. It is nice that user need not worry about the pool management, but it is also expensive, and I should keep it alive on the server throughout the life time of the thread.\n\nFor a single thread flask server, it is easy, I just initialize the connection, and put it in the global namespace. But somehow it does not work when I use gunicorn to pre-fork the workers. The session does not respond at all.\n\nSo the question comes back to whether flask can manage a \"long live context\" to store the object? My work around is to put the db setups in a function decorated by \"before_first_request\". It works pretty well, but I consider as a work around, instead of official solutions.\n\nRegards,\nChuan \n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/213024907",
            "html_url": "https://github.com/pallets/flask/issues/1787#issuecomment-213024907",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1787",
            "id": 213024907,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzAyNDkwNw==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-04-21T17:19:45Z",
            "updated_at": "2016-04-21T17:20:09Z",
            "author_association": "MEMBER",
            "body": "Maybe check what SQLAlchemy does for its connection pool. My guess would be a thread-local object that stores it. Or you could use something external (there's pgbouncer for postgres, dunno if something similar exists for cassandra)\n\nAlso, this is not really an _issue_. Better use IRC and/or Stack Overflow to ask for this.\n"
        }
    ]
}