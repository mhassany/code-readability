{
    "url": "https://api.github.com/repos/pallets/flask/issues/2055",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2055/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2055/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2055/events",
    "html_url": "https://github.com/pallets/flask/pull/2055",
    "id": 182264901,
    "node_id": "MDExOlB1bGxSZXF1ZXN0ODg4MzI5Nzg=",
    "number": 2055,
    "title": "Updated Celery pattern",
    "user": {
        "login": "geoffreybauduin",
        "id": 1404977,
        "node_id": "MDQ6VXNlcjE0MDQ5Nzc=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/1404977?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/geoffreybauduin",
        "html_url": "https://github.com/geoffreybauduin",
        "followers_url": "https://api.github.com/users/geoffreybauduin/followers",
        "following_url": "https://api.github.com/users/geoffreybauduin/following{/other_user}",
        "gists_url": "https://api.github.com/users/geoffreybauduin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/geoffreybauduin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/geoffreybauduin/subscriptions",
        "organizations_url": "https://api.github.com/users/geoffreybauduin/orgs",
        "repos_url": "https://api.github.com/users/geoffreybauduin/repos",
        "events_url": "https://api.github.com/users/geoffreybauduin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/geoffreybauduin/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 32876,
            "node_id": "MDU6TGFiZWwzMjg3Ng==",
            "url": "https://api.github.com/repos/pallets/flask/labels/docs",
            "name": "docs",
            "color": "0e8a16",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 12,
    "created_at": "2016-10-11T13:32:48Z",
    "updated_at": "2017-06-07T20:30:17Z",
    "closed_at": "2017-05-15T19:41:13Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
        "url": "https://api.github.com/repos/pallets/flask/pulls/2055",
        "html_url": "https://github.com/pallets/flask/pull/2055",
        "diff_url": "https://github.com/pallets/flask/pull/2055.diff",
        "patch_url": "https://github.com/pallets/flask/pull/2055.patch"
    },
    "body": "The given pattern caused Celery to lose the current Context.\n\n```\n> ~/celery/app/task.py(424)__call__()\n-> try:\n(Pdb) p self.request\n<Context: {}>\n```\n\nAnd with this new pattern:\n\n```\n(Pdb) p self.request\n<Context: {'called_directly': False, 'retries': 5, 'is_eager': True, 'loglevel': 0, 'delivery_info': {'is_eager': True}, 'args': (), 'callbacks': None, 'errbacks': None, 'kwargs': {}, 'logfile': None, 'id': '9fbd9fa0-1a42-4e70-9c52-558ad3bc9d72', 'headers': None}>\n```\n\nNote that I'm using Celery 3.1.24. The current pattern may be outdated (last change was 2013)\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/252929205",
            "html_url": "https://github.com/pallets/flask/pull/2055#issuecomment-252929205",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2055",
            "id": 252929205,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjkyOTIwNQ==",
            "user": {
                "login": "RonnyPfannschmidt",
                "id": 156838,
                "node_id": "MDQ6VXNlcjE1NjgzOA==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/156838?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/RonnyPfannschmidt",
                "html_url": "https://github.com/RonnyPfannschmidt",
                "followers_url": "https://api.github.com/users/RonnyPfannschmidt/followers",
                "following_url": "https://api.github.com/users/RonnyPfannschmidt/following{/other_user}",
                "gists_url": "https://api.github.com/users/RonnyPfannschmidt/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/RonnyPfannschmidt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/RonnyPfannschmidt/subscriptions",
                "organizations_url": "https://api.github.com/users/RonnyPfannschmidt/orgs",
                "repos_url": "https://api.github.com/users/RonnyPfannschmidt/repos",
                "events_url": "https://api.github.com/users/RonnyPfannschmidt/events{/privacy}",
                "received_events_url": "https://api.github.com/users/RonnyPfannschmidt/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-10-11T14:15:18Z",
            "updated_at": "2016-10-11T14:15:18Z",
            "author_association": "CONTRIBUTOR",
            "body": "@lght at first glance this seems highly problematic, as this removes the logic in `__call__` that has to happen around self.run in order to handle bound tasks, context stack interaction and more\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/253045233",
            "html_url": "https://github.com/pallets/flask/pull/2055#issuecomment-253045233",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2055",
            "id": 253045233,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzA0NTIzMw==",
            "user": {
                "login": "geoffreybauduin",
                "id": 1404977,
                "node_id": "MDQ6VXNlcjE0MDQ5Nzc=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/1404977?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/geoffreybauduin",
                "html_url": "https://github.com/geoffreybauduin",
                "followers_url": "https://api.github.com/users/geoffreybauduin/followers",
                "following_url": "https://api.github.com/users/geoffreybauduin/following{/other_user}",
                "gists_url": "https://api.github.com/users/geoffreybauduin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/geoffreybauduin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/geoffreybauduin/subscriptions",
                "organizations_url": "https://api.github.com/users/geoffreybauduin/orgs",
                "repos_url": "https://api.github.com/users/geoffreybauduin/repos",
                "events_url": "https://api.github.com/users/geoffreybauduin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/geoffreybauduin/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-10-11T21:02:37Z",
            "updated_at": "2016-10-11T21:02:37Z",
            "author_association": "CONTRIBUTOR",
            "body": "@RonnyPfannschmidt it would seem problematic if it wasn't mentionned in their documentation that doing so would remove the whole request context by creating a new generic one (here, `<Context: {}>`).\n\nIn their doc (https://github.com/celery/celery/blob/v3.1.24/celery/app/task.py#L212), they specify the task is, by default, run with the `run` method, unless `__call__` is overriden, but calling directly `__call__` completely masks the context (this function,https://github.com/celery/celery/blob/v3.1.24/celery/app/task.py#L423, creates and pushes a new context, before calling `run` itself). (`run` being the function decorated by the task decorator).\n\nOne of the issues faced by such action (calling `Task.__call__`) is that the task won't be retried. Indeed, the default context sets the `request.called_directly` to `True`, and Celery is not willing to retry the task (https://github.com/celery/celery/blob/v3.1.24/celery/app/task.py#L667)\n\nI'm not sure about the intended use of `__call__`, except for calling directly a task.\n\nMost of the answers found on Stackoverflow about such problems, or about executing some lines of code before/after the execution of the task, are suggesting doing an override of `__call__` and then call the `run` method. I'm not saying it's a good practice (and that they are right), just that it's worth mentioning this pattern should be updated.\n\nTry it yourself, you'll see.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/253133158",
            "html_url": "https://github.com/pallets/flask/pull/2055#issuecomment-253133158",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2055",
            "id": 253133158,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzEzMzE1OA==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-10-12T06:48:28Z",
            "updated_at": "2016-10-12T06:48:28Z",
            "author_association": "MEMBER",
            "body": "Would really like to know how you arrive at the behavior you encountered in the\nOP. Are you calling the task directly such that you expect the existing ctx to\nbe passed down instead of a new one being pushed?\n\nWith all we know you might as well file this PR against Celery itself to remove\neverything but the invocation of `run` from `__call__`.\n\nOn Tue, Oct 11, 2016 at 02:02:49PM -0700, Geoffrey Bauduin wrote:\n\n> @RonnyPfannschmidt it would seem problematic if it wasn't mentionned in their documentation that doing so would remove the whole request context by creating a new generic one (here, `<Context: {}>`).\n> \n> In their doc (https://github.com/celery/celery/blob/v3.1.24/celery/app/task.py#L212), they specify the task is, by default, run with the `run` method, unless `__call__` is overriden, but calling directly `__call__` completely masks the context (this function,https://github.com/celery/celery/blob/v3.1.24/celery/app/task.py#L423, creates and pushes a new context, before calling `run` itself). (`run` being the function decorated by the task decorator).\n> \n> One of the issues faced by such action (calling `Task.__call__`) is that the task won't be retried. Indeed, the default context sets the `request.called_directly` to `True`, and Celery is not willing to retry the task (https://github.com/celery/celery/blob/v3.1.24/celery/app/task.py#L667)\n> \n> I'm not sure about the intended use of `__call__`, except for calling directly a task.\n> \n> Most of the answers found on Stackoverflow about such problems, or about executing some lines of code before/after the execution of the task, are suggesting doing an override of `__call__` and then call the `run` method. I'm not saying it's a good practice (and that they are right), just that it's worth mentioning this pattern should be updated.\n> \n> Try it yourself, you'll see.\n> \n> ## \n> \n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly or view it on GitHub:\n> https://github.com/pallets/flask/pull/2055#issuecomment-253045233\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/253275941",
            "html_url": "https://github.com/pallets/flask/pull/2055#issuecomment-253275941",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2055",
            "id": 253275941,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzI3NTk0MQ==",
            "user": {
                "login": "geoffreybauduin",
                "id": 1404977,
                "node_id": "MDQ6VXNlcjE0MDQ5Nzc=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/1404977?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/geoffreybauduin",
                "html_url": "https://github.com/geoffreybauduin",
                "followers_url": "https://api.github.com/users/geoffreybauduin/followers",
                "following_url": "https://api.github.com/users/geoffreybauduin/following{/other_user}",
                "gists_url": "https://api.github.com/users/geoffreybauduin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/geoffreybauduin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/geoffreybauduin/subscriptions",
                "organizations_url": "https://api.github.com/users/geoffreybauduin/orgs",
                "repos_url": "https://api.github.com/users/geoffreybauduin/repos",
                "events_url": "https://api.github.com/users/geoffreybauduin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/geoffreybauduin/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-10-12T17:09:28Z",
            "updated_at": "2016-10-12T17:09:28Z",
            "author_association": "CONTRIBUTOR",
            "body": "@untitaker I would not go for patching this kind of behavior. It must have an intended use.\n\nI'm calling the task like it is mentionned in celery's doc (`task.apply_async()`).\n\nI'll provide a link to a quick script that shows exactly the disappearence of the task context before the end of the day\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/253276506",
            "html_url": "https://github.com/pallets/flask/pull/2055#issuecomment-253276506",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2055",
            "id": 253276506,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzI3NjUwNg==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-10-12T17:11:40Z",
            "updated_at": "2016-10-12T17:11:40Z",
            "author_association": "MEMBER",
            "body": "Maybe a celery dev could chime in here?\n\ncc @ask \n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/253281728",
            "html_url": "https://github.com/pallets/flask/pull/2055#issuecomment-253281728",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2055",
            "id": 253281728,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzI4MTcyOA==",
            "user": {
                "login": "geoffreybauduin",
                "id": 1404977,
                "node_id": "MDQ6VXNlcjE0MDQ5Nzc=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/1404977?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/geoffreybauduin",
                "html_url": "https://github.com/geoffreybauduin",
                "followers_url": "https://api.github.com/users/geoffreybauduin/followers",
                "following_url": "https://api.github.com/users/geoffreybauduin/following{/other_user}",
                "gists_url": "https://api.github.com/users/geoffreybauduin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/geoffreybauduin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/geoffreybauduin/subscriptions",
                "organizations_url": "https://api.github.com/users/geoffreybauduin/orgs",
                "repos_url": "https://api.github.com/users/geoffreybauduin/repos",
                "events_url": "https://api.github.com/users/geoffreybauduin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/geoffreybauduin/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-10-12T17:31:27Z",
            "updated_at": "2016-10-12T17:31:27Z",
            "author_association": "CONTRIBUTOR",
            "body": "Speeding things up, you'll find a quick script to see what's actually going on here:\n\nhttps://gist.github.com/lght/f5fa6e4924739897d9505f14edc5a190\n\nConsole output:\n\n```\n(venv) > python run.py\n * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n * Restarting with stat\n * Debugger is active!\n * Debugger pin code: 107-501-531\nCurrent context: <Context: {}>\n127.0.0.1 - - [12/Oct/2016 19:28:30] \"GET /task HTTP/1.1\" 200 -\nCurrent context: <Context: {'called_directly': False, 'delivery_info': {'is_eager': True}, 'id': '8d6c3c25-e2c8-4b2e-a39e-736dbf4f973a', 'loglevel': 0, 'kwargs': {}, 'is_eager': True, 'headers': None, 'callbacks': None, 'errbacks': None, 'retries': 0, 'logfile': None, 'args': ()}>\n127.0.0.1 - - [12/Oct/2016 19:28:34] \"GET /new_task HTTP/1.1\" 200 -\n^C%  \n```\n\nFirst context is the one with `__call__` pattern, second one is with `run` pattern.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/299882979",
            "html_url": "https://github.com/pallets/flask/pull/2055#issuecomment-299882979",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2055",
            "id": 299882979,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTg4Mjk3OQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-05-08T14:29:49Z",
            "updated_at": "2017-05-08T14:29:59Z",
            "author_association": "MEMBER",
            "body": "I can't reproduce this issue, and the example is gone. The documentation worked for me as-is."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/299883979",
            "html_url": "https://github.com/pallets/flask/pull/2055#issuecomment-299883979",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2055",
            "id": 299883979,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTg4Mzk3OQ==",
            "user": {
                "login": "geoffreybauduin",
                "id": 1404977,
                "node_id": "MDQ6VXNlcjE0MDQ5Nzc=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/1404977?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/geoffreybauduin",
                "html_url": "https://github.com/geoffreybauduin",
                "followers_url": "https://api.github.com/users/geoffreybauduin/followers",
                "following_url": "https://api.github.com/users/geoffreybauduin/following{/other_user}",
                "gists_url": "https://api.github.com/users/geoffreybauduin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/geoffreybauduin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/geoffreybauduin/subscriptions",
                "organizations_url": "https://api.github.com/users/geoffreybauduin/orgs",
                "repos_url": "https://api.github.com/users/geoffreybauduin/repos",
                "events_url": "https://api.github.com/users/geoffreybauduin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/geoffreybauduin/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-05-08T14:33:03Z",
            "updated_at": "2017-05-08T14:33:03Z",
            "author_association": "CONTRIBUTOR",
            "body": "@davidism sorry, the example is still there, the url just moved, https://gist.github.com/geoffreybauduin/f5fa6e4924739897d9505f14edc5a190"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/299938146",
            "html_url": "https://github.com/pallets/flask/pull/2055#issuecomment-299938146",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2055",
            "id": 299938146,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTkzODE0Ng==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-05-08T17:45:26Z",
            "updated_at": "2017-05-08T17:45:26Z",
            "author_association": "MEMBER",
            "body": "I'd rather tend to close this though just because it appears that nobody else has this problem."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/299959324",
            "html_url": "https://github.com/pallets/flask/pull/2055#issuecomment-299959324",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2055",
            "id": 299959324,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTk1OTMyNA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-05-08T18:59:47Z",
            "updated_at": "2017-05-08T19:15:31Z",
            "author_association": "MEMBER",
            "body": "I've been investigating this, I really can't tell what the intention of the design was in Celery here. If `__call__` is not overridden, it is skipped and `run` is called directly as an \"optimization\". But `__call__` has logic in it that seems like it shouldn't be skipped (except for pushing that empty request). So it's not just optimizing away a lookup and call, it's changing behavior.\r\n\r\nAdditionally, it only seems to happen with `task_always_eager = True`. Calling it through a worker shows the real request. So the \"optimization\" doesn't happen remotely? I haven't dug into remotely stepping through that yet.\r\n\r\n~As far as I can tell, this fix is correct.~ I'm still not sure if this fix is correct. If you want to override `__call__`, you should not call `super.__call__`, you should call `run`. However, it changes the behavior when the task is called directly. Going to dig a little more first."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/300187027",
            "html_url": "https://github.com/pallets/flask/pull/2055#issuecomment-300187027",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2055",
            "id": 300187027,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDE4NzAyNw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-05-09T14:42:55Z",
            "updated_at": "2017-05-09T14:42:55Z",
            "author_association": "MEMBER",
            "body": "There's a function, [`_install_stack_protection`](https://github.com/celery/celery/blob/v4.0.2/celery/app/trace.py#L599) that replaces `BaseTask.__call__` with a version that doesn't insert an empty request, to guard against this exact situation, but it's only called when [setting up a `Worker` instance](https://github.com/celery/celery/blob/v4.0.2/celery/apps/worker.py#L97). `task_always_eager` doesn't trigger that because it doesn't go through a worker."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/301571382",
            "html_url": "https://github.com/pallets/flask/pull/2055#issuecomment-301571382",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2055",
            "id": 301571382,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTU3MTM4Mg==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-05-15T18:59:46Z",
            "updated_at": "2017-05-15T19:00:12Z",
            "author_association": "MEMBER",
            "body": "Got around to finishing testing this. With the change, things at least behave consistently between `always_eager` enabled or not.\r\n\r\n* `my_task()` (task called as function) has no context, which I guess makes sense.\r\n* `my_task.apply()` (task executed eagerly) has a context.\r\n* `my_task.delay()` (task executed remotely) has a context.\r\n\r\nIt looks like calling `self.run` instead of `super.__call__` is the intended way to write a task subclass."
        }
    ]
}