{
    "url": "https://api.github.com/repos/pallets/flask/issues/64",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/64/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/64/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/64/events",
    "html_url": "https://github.com/pallets/flask/issues/64",
    "id": 214942,
    "node_id": "MDU6SXNzdWUyMTQ5NDI=",
    "number": 64,
    "title": "unable to configure static_dir or templates_dir",
    "user": {
        "login": "florentx",
        "id": 142113,
        "node_id": "MDQ6VXNlcjE0MjExMw==",
        "avatar_url": "https://avatars1.githubusercontent.com/u/142113?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/florentx",
        "html_url": "https://github.com/florentx",
        "followers_url": "https://api.github.com/users/florentx/followers",
        "following_url": "https://api.github.com/users/florentx/following{/other_user}",
        "gists_url": "https://api.github.com/users/florentx/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/florentx/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/florentx/subscriptions",
        "organizations_url": "https://api.github.com/users/florentx/orgs",
        "repos_url": "https://api.github.com/users/florentx/repos",
        "events_url": "https://api.github.com/users/florentx/events{/privacy}",
        "received_events_url": "https://api.github.com/users/florentx/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2010-06-05T18:38:37Z",
    "updated_at": "2010-07-06T14:26:49Z",
    "closed_at": "2010-07-06T14:26:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Currently it's not possible to configure the static_dir or the templates_dir of an application instance, because the Jinja environment and the static directory are configured on instantiation.\n\nI would suggest to split the jinja_env and static middleware configuration in a separate method \"def setup_env(self):\" and call this method from **init** (depending on a boolean flag).\n\nThen it could be used like this:\n\n```\napp = Flask(__name__, setup_env=False)\napp.templates_dir = 'funny_templates'\napp.setup_env()\n```\n\nBut if it makes no sense, just close the request: finally I did it differently.\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/265134",
            "html_url": "https://github.com/pallets/flask/issues/64#issuecomment-265134",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/64",
            "id": 265134,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTEzNA==",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2010-06-05T21:55:15Z",
            "updated_at": "2010-06-05T21:55:15Z",
            "author_association": "MEMBER",
            "body": "I do have in mind to rework how Jinja and the middleware are set up that allows changing that on the instance, but I have not started working on that yet because it would require some changes in Werkzeug itself. You can reconfigure it currently already if you subclass Flask.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/265151",
            "html_url": "https://github.com/pallets/flask/issues/64#issuecomment-265151",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/64",
            "id": 265151,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTE1MQ==",
            "user": {
                "login": "leafstorm",
                "id": 271305,
                "node_id": "MDQ6VXNlcjI3MTMwNQ==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/271305?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/leafstorm",
                "html_url": "https://github.com/leafstorm",
                "followers_url": "https://api.github.com/users/leafstorm/followers",
                "following_url": "https://api.github.com/users/leafstorm/following{/other_user}",
                "gists_url": "https://api.github.com/users/leafstorm/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/leafstorm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/leafstorm/subscriptions",
                "organizations_url": "https://api.github.com/users/leafstorm/orgs",
                "repos_url": "https://api.github.com/users/leafstorm/repos",
                "events_url": "https://api.github.com/users/leafstorm/events{/privacy}",
                "received_events_url": "https://api.github.com/users/leafstorm/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2010-06-05T22:24:29Z",
            "updated_at": "2010-06-05T22:24:29Z",
            "author_association": "NONE",
            "body": "One thing I recommend is improving SharedDataMiddleware so that either (a) it can accept a loader function already (so you can do something like `new_exports = {'/_themes/whatever': '/home/me/themes/whatever'; new_exports.update(flask.wsgi_app.exports); flask.wsgi_app = SharedDataMiddleware(flask.wsgi_app.app, new_exports)`).\n\nOr, alternatively, refactor SDM so that it has actual methods you can use to change the exports (`some_sdm.export('/_themes/whatever', '/home/me/themes/whatever')`)\n\nThen you could have a method like `app.export_static`. Because not only could this be useful for changing the static exports, right now the only way to add additional exports is to wrap it in a new SharedDataMiddleware, and that is a waste of middleware.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/265163",
            "html_url": "https://github.com/pallets/flask/issues/64#issuecomment-265163",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/64",
            "id": 265163,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTE2Mw==",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2010-06-05T22:32:13Z",
            "updated_at": "2010-06-05T22:32:13Z",
            "author_association": "MEMBER",
            "body": "my idea for SharedDataMiddleware is that the actual process of serving files works without a middleware as well. That would also enable things like serving static folders from modules in the application separately.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/265988",
            "html_url": "https://github.com/pallets/flask/issues/64#issuecomment-265988",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/64",
            "id": 265988,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTk4OA==",
            "user": {
                "login": "leafstorm",
                "id": 271305,
                "node_id": "MDQ6VXNlcjI3MTMwNQ==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/271305?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/leafstorm",
                "html_url": "https://github.com/leafstorm",
                "followers_url": "https://api.github.com/users/leafstorm/followers",
                "following_url": "https://api.github.com/users/leafstorm/following{/other_user}",
                "gists_url": "https://api.github.com/users/leafstorm/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/leafstorm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/leafstorm/subscriptions",
                "organizations_url": "https://api.github.com/users/leafstorm/orgs",
                "repos_url": "https://api.github.com/users/leafstorm/repos",
                "events_url": "https://api.github.com/users/leafstorm/events{/privacy}",
                "received_events_url": "https://api.github.com/users/leafstorm/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2010-06-07T01:44:49Z",
            "updated_at": "2010-06-07T01:44:49Z",
            "author_association": "NONE",
            "body": "Another thing I was considering is that instead of a SharedDataMiddleware, having `werkzeug.wsgi.StaticFiles`, which is a full application that serves static files, and a wrapper function that takes an app and an exports dict (like SDM does now), and wraps the app in a `DispatcherMiddleware` with a bunch of `StaticFiles` apps hooked in.\n\nOne major advantage is that `DispatcherMiddleware` is a lot less complex than SDM, so you could just drop in your static file exports with `app.wsgi_app.mounts['/uploads'] = StaticFiles(app.config['UPLOADED_FILES_PATH'])`. (An `app.export_static` method would still be cool, though.) It would also be useful generally, in that you can use the static file server separately from a dispatcher.\n\nYou would have to keep SDM for backwards compatibility, though you could probably reuse most of the code.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/298965",
            "html_url": "https://github.com/pallets/flask/issues/64#issuecomment-298965",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/64",
            "id": 298965,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODk2NQ==",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2010-07-04T21:59:10Z",
            "updated_at": "2010-07-04T21:59:10Z",
            "author_association": "MEMBER",
            "body": "This is pretty much fixed in the module branch. The remaining issue is if we want to be able to just change the URL rule, or the URL rule + the folder name.\n\nRight now you can have the static folder of the package be exposed as something else (eg: public), but the folder name stays the same. Maybe this should happen in sync, not sure though.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/301423",
            "html_url": "https://github.com/pallets/flask/issues/64#issuecomment-301423",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/64",
            "id": 301423,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTQyMw==",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2010-07-06T14:26:48Z",
            "updated_at": "2010-07-06T14:26:48Z",
            "author_association": "MEMBER",
            "body": "Fixed.\n"
        }
    ]
}