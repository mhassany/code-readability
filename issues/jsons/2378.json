{
    "url": "https://api.github.com/repos/pallets/flask/issues/2378",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2378/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2378/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2378/events",
    "html_url": "https://github.com/pallets/flask/pull/2378",
    "id": 236284432,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTI1ODg5OTIx",
    "number": 2378,
    "title": "Import app from wsgi.py or app.py if FLASK_APP is not defined",
    "user": {
        "login": "miguelgrinberg",
        "id": 2715854,
        "node_id": "MDQ6VXNlcjI3MTU4NTQ=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/miguelgrinberg",
        "html_url": "https://github.com/miguelgrinberg",
        "followers_url": "https://api.github.com/users/miguelgrinberg/followers",
        "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}",
        "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions",
        "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs",
        "repos_url": "https://api.github.com/users/miguelgrinberg/repos",
        "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
        "url": "https://api.github.com/repos/pallets/flask/milestones/2",
        "html_url": "https://github.com/pallets/flask/milestone/2",
        "labels_url": "https://api.github.com/repos/pallets/flask/milestones/2/labels",
        "id": 795954,
        "node_id": "MDk6TWlsZXN0b25lNzk1OTU0",
        "number": 2,
        "title": "1.0",
        "description": "",
        "creator": {
            "login": "untitaker",
            "id": 837573,
            "node_id": "MDQ6VXNlcjgzNzU3Mw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/untitaker",
            "html_url": "https://github.com/untitaker",
            "followers_url": "https://api.github.com/users/untitaker/followers",
            "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
            "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
            "organizations_url": "https://api.github.com/users/untitaker/orgs",
            "repos_url": "https://api.github.com/users/untitaker/repos",
            "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
            "received_events_url": "https://api.github.com/users/untitaker/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 0,
        "closed_issues": 159,
        "state": "closed",
        "created_at": "2014-09-19T15:47:20Z",
        "updated_at": "2018-04-26T21:07:44Z",
        "due_on": "2018-04-26T07:00:00Z",
        "closed_at": "2018-04-26T21:07:44Z"
    },
    "comments": 12,
    "created_at": "2017-06-15T19:01:32Z",
    "updated_at": "2017-09-28T13:42:43Z",
    "closed_at": "2017-06-16T14:00:27Z",
    "author_association": "MEMBER",
    "pull_request": {
        "url": "https://api.github.com/repos/pallets/flask/pulls/2378",
        "html_url": "https://github.com/pallets/flask/pull/2378",
        "diff_url": "https://github.com/pallets/flask/pull/2378.diff",
        "patch_url": "https://github.com/pallets/flask/pull/2378.patch"
    },
    "body": "Fixes #2376\r\n\r\nThis patch adds support for looking for the Flask app instance in `wsgi.py` or `app.py` modules (in that order) when `FLASK_APP` is not defined.",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/309946925",
            "html_url": "https://github.com/pallets/flask/pull/2378#issuecomment-309946925",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2378",
            "id": 309946925,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTk0NjkyNQ==",
            "user": {
                "login": "lepture",
                "id": 290496,
                "node_id": "MDQ6VXNlcjI5MDQ5Ng==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/290496?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/lepture",
                "html_url": "https://github.com/lepture",
                "followers_url": "https://api.github.com/users/lepture/followers",
                "following_url": "https://api.github.com/users/lepture/following{/other_user}",
                "gists_url": "https://api.github.com/users/lepture/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/lepture/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lepture/subscriptions",
                "organizations_url": "https://api.github.com/users/lepture/orgs",
                "repos_url": "https://api.github.com/users/lepture/repos",
                "events_url": "https://api.github.com/users/lepture/events{/privacy}",
                "received_events_url": "https://api.github.com/users/lepture/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-21T02:43:01Z",
            "updated_at": "2017-06-21T02:43:01Z",
            "author_association": "MEMBER",
            "body": "I'm wondering why `wsgi.py` is placed before `app.py`?\r\n\r\n`wsgi.py` is usually used for production environment. In this case, we don't have to use flask cli to create the server. On the other hand, `app.py` is what we used for development, it is better to put `app.py` before `wsgi.py`."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/309967315",
            "html_url": "https://github.com/pallets/flask/pull/2378#issuecomment-309967315",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2378",
            "id": 309967315,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTk2NzMxNQ==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-21T05:27:54Z",
            "updated_at": "2017-06-21T05:27:54Z",
            "author_association": "MEMBER",
            "body": "I guess many custom CLI functions are also used in production. Either way, if it's a `wsgi.py` I'd expect it to be used only when running the WSGI app - not necessarily for other CLI functionality.\r\n\r\nAnyway, if people do use CLI commands in production I think they should strongly consider adding their own CLI that knows how to instantiate the app instead of using the generic `flask` command..."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/309971481",
            "html_url": "https://github.com/pallets/flask/pull/2378#issuecomment-309971481",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2378",
            "id": 309971481,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTk3MTQ4MQ==",
            "user": {
                "login": "miguelgrinberg",
                "id": 2715854,
                "node_id": "MDQ6VXNlcjI3MTU4NTQ=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/miguelgrinberg",
                "html_url": "https://github.com/miguelgrinberg",
                "followers_url": "https://api.github.com/users/miguelgrinberg/followers",
                "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions",
                "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs",
                "repos_url": "https://api.github.com/users/miguelgrinberg/repos",
                "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}",
                "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-21T05:57:44Z",
            "updated_at": "2017-06-21T05:57:44Z",
            "author_association": "MEMBER",
            "body": "@lepture I don't see the use of `wsgi.py` and `app.py` as being different for production or development. Regardless of the one you use, it's going to be part of your project, so it will be present in both environments. I used very simple logic to decide that `wsgi.py` should be first:\r\n\r\n- If you have neither `app.py` nor `wsgi.py` in your project, it does not matter which one you check first.\r\n- If you have only one of `app.py` and `wsgi.py` in your project, it also does not matter.\r\n- If you have both `app.py` and `wsgi.py` in your project, I think it would be wrong to ignore `wsgi.py` in favor of `app.py`, since I see no other function for a `wsgi.py` file than to be the module that defines the app.\r\n\r\n@ThiefMaster I don't follow some of your statements:\r\n\r\n> Either way, if it's a `wsgi.py` I'd expect it to be used only when running the WSGI app - not necessarily for other CLI functionality.\r\n\r\nThe app is going to be needed when running most CLI commands. Maybe there are some cases in which you want to define custom commands that do not require the app, but that is not going to be the general case. In fact, the CLI defaults to creating an app context for your command, so right there you can see that you have to have the app.\r\n\r\n> Anyway, if people do use CLI commands in production\r\n\r\nIt's not just people. Extensions define their own commands as well. My Flask-Migrate extension adds a bunch of commands under `flask db` that are used in production and development.\r\n\r\n>  I think they should strongly consider adding their own CLI\r\n\r\nThat would be tricky for commands added by extensions. But even for the app's own custom commands, what's the benefit of using a separate CLI? There is nothing wrong with that idea if that's what you prefer, but I don't see how that would be a recommendation to be made in the general case.\r\n\r\n>  that knows how to instantiate the app instead of using the generic flask command...\r\n\r\nWell, the flask command has to know how to instantiate the app anyway, so why invent a different method for custom commands? It guess you are thinking that the flask command does not have a place in production, but in any case, why would you want to create the app in a different way between dev and prod? Normally the app is the same, and you just change the configuration.\r\n\r\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/309972039",
            "html_url": "https://github.com/pallets/flask/pull/2378#issuecomment-309972039",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2378",
            "id": 309972039,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTk3MjAzOQ==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-21T06:01:27Z",
            "updated_at": "2017-06-21T06:01:27Z",
            "author_association": "MEMBER",
            "body": "> The app is going to be needed when running most CLI commands.\r\n\r\nSure, I just meant that you don't use the WSGI part of Flask in the CLI, so `wsgi.py` is not *that* obvious there\r\n\r\n> My Flask-Migrate extension adds a bunch of commands under flask db that are used in production and development.\r\n> That would be tricky for commands added by extensions\r\n\r\nWhen using `FlaskGroup` for the CLI command defined via entry points show up in a custom CLI too\r\n\r\n> but in any case, why would you want to create the app in a different way between dev and prod\r\n\r\nI wouldn't - I'd use the custom command for both dev and prod. My point was just that if your app does use more advanced CLI commands than just `run` and `shell` it might be a good point to add a custom CLI, especially considering that it doesn't take more than a few lines of code."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/309973774",
            "html_url": "https://github.com/pallets/flask/pull/2378#issuecomment-309973774",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2378",
            "id": 309973774,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTk3Mzc3NA==",
            "user": {
                "login": "lepture",
                "id": 290496,
                "node_id": "MDQ6VXNlcjI5MDQ5Ng==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/290496?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/lepture",
                "html_url": "https://github.com/lepture",
                "followers_url": "https://api.github.com/users/lepture/followers",
                "following_url": "https://api.github.com/users/lepture/following{/other_user}",
                "gists_url": "https://api.github.com/users/lepture/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/lepture/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lepture/subscriptions",
                "organizations_url": "https://api.github.com/users/lepture/orgs",
                "repos_url": "https://api.github.com/users/lepture/repos",
                "events_url": "https://api.github.com/users/lepture/events{/privacy}",
                "received_events_url": "https://api.github.com/users/lepture/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-21T06:12:34Z",
            "updated_at": "2017-06-21T06:18:11Z",
            "author_association": "MEMBER",
            "body": "> If you have both app.py and wsgi.py in your project, I think it would be wrong to ignore wsgi.py in favor of app.py, since I see no other function for a wsgi.py file than to be the module that defines the app.\r\n\r\nYes. I always have both `app.py` and `wsgi.py` in my project. The `wsgi.py` as I understand, is designed to be a pure wsgi application, which would contain just a few lines of code. Something as simple as:\r\n\r\n```python\r\nfrom your_project import create_app\r\napp = create_app()\r\n```\r\n\r\nThe `wsgi.py` file could be used by gunicorn/uwsgi etc. The idea comes from Django.\r\n\r\nLike Django, I take `app.py` as the `manage.py`, which could contain a lot of custom commands, e.g. `initdb`, `createuser`."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/309974702",
            "html_url": "https://github.com/pallets/flask/pull/2378#issuecomment-309974702",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2378",
            "id": 309974702,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTk3NDcwMg==",
            "user": {
                "login": "miguelgrinberg",
                "id": 2715854,
                "node_id": "MDQ6VXNlcjI3MTU4NTQ=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/miguelgrinberg",
                "html_url": "https://github.com/miguelgrinberg",
                "followers_url": "https://api.github.com/users/miguelgrinberg/followers",
                "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions",
                "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs",
                "repos_url": "https://api.github.com/users/miguelgrinberg/repos",
                "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}",
                "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-21T06:18:15Z",
            "updated_at": "2017-06-21T06:18:15Z",
            "author_association": "MEMBER",
            "body": "> Sure, I just meant that you don't use the WSGI part of Flask in the CLI, so wsgi.py is not that obvious there\r\n\r\nFair enough. I see what you meant now. I don't know how to separate the WSGI and non-WSGI uses of the app instance. Using `wsgi.py` is totally clear in my mind as a way to tell a web server what is the application, and you need to do this whether you use `flask run`, gunicorn or uwsgi. The `flask shell` or `flask something-else` cases are strange, I agree. But given that you need to define the app for the web server no matter what, you'd probably want the same method to be used for the other commands. I guess you could use `app.py` and then WSGI is out of the picture, at least the name is."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/310151145",
            "html_url": "https://github.com/pallets/flask/pull/2378#issuecomment-310151145",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2378",
            "id": 310151145,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDE1MTE0NQ==",
            "user": {
                "login": "miguelgrinberg",
                "id": 2715854,
                "node_id": "MDQ6VXNlcjI3MTU4NTQ=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/miguelgrinberg",
                "html_url": "https://github.com/miguelgrinberg",
                "followers_url": "https://api.github.com/users/miguelgrinberg/followers",
                "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions",
                "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs",
                "repos_url": "https://api.github.com/users/miguelgrinberg/repos",
                "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}",
                "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-21T17:34:47Z",
            "updated_at": "2017-06-21T17:34:47Z",
            "author_association": "MEMBER",
            "body": "> When using FlaskGroup for the CLI command defined via entry points show up in a custom CLI too\r\n\r\n@ThiefMaster Yeah, you are correct. I just verified that at least for Flask-Migrate the commands do make it to the custom CLI, so that's great. Not only that, also `run` and `shell` are exposed in the custom script. So effectively, a custom CLI looks pretty much the same as the `flask` command, with the difference that in a custom CLI you write the code that loads your app in the script itself, and with the `flask` command you point to it to a separate module that does it. The difference is minimal, in my opinion. My `wsgi.py` module has the exact same content I would put in the factory function referenced in the `create_app` argument to the click group. As I see it, which one you use is a matter of preference, I don't really see a clear benefit to use one or the other."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/332769399",
            "html_url": "https://github.com/pallets/flask/pull/2378#issuecomment-332769399",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2378",
            "id": 332769399,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjc2OTM5OQ==",
            "user": {
                "login": "greyli",
                "id": 12967000,
                "node_id": "MDQ6VXNlcjEyOTY3MDAw",
                "avatar_url": "https://avatars3.githubusercontent.com/u/12967000?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/greyli",
                "html_url": "https://github.com/greyli",
                "followers_url": "https://api.github.com/users/greyli/followers",
                "following_url": "https://api.github.com/users/greyli/following{/other_user}",
                "gists_url": "https://api.github.com/users/greyli/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/greyli/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/greyli/subscriptions",
                "organizations_url": "https://api.github.com/users/greyli/orgs",
                "repos_url": "https://api.github.com/users/greyli/repos",
                "events_url": "https://api.github.com/users/greyli/events{/privacy}",
                "received_events_url": "https://api.github.com/users/greyli/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-09-28T08:40:23Z",
            "updated_at": "2017-09-28T08:40:23Z",
            "author_association": "MEMBER",
            "body": "Does it mean `app.py` is the best name to store application instance (i.e. `app`) or application factory (i.e. `create_app`)? \r\nIn this case, I got two supposes:\r\n- Naming the main script as `app.py` in the small project.\r\n- Put the application factory `create_app` in `app.py` module instead of `__init__.py` in the big project.\r\n\r\nIs that right?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/332816118",
            "html_url": "https://github.com/pallets/flask/pull/2378#issuecomment-332816118",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2378",
            "id": 332816118,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjgxNjExOA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-09-28T12:06:27Z",
            "updated_at": "2017-09-28T12:06:27Z",
            "author_association": "MEMBER",
            "body": "Right on point one, wrong on point two."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/332824959",
            "html_url": "https://github.com/pallets/flask/pull/2378#issuecomment-332824959",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2378",
            "id": 332824959,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjgyNDk1OQ==",
            "user": {
                "login": "greyli",
                "id": 12967000,
                "node_id": "MDQ6VXNlcjEyOTY3MDAw",
                "avatar_url": "https://avatars3.githubusercontent.com/u/12967000?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/greyli",
                "html_url": "https://github.com/greyli",
                "followers_url": "https://api.github.com/users/greyli/followers",
                "following_url": "https://api.github.com/users/greyli/following{/other_user}",
                "gists_url": "https://api.github.com/users/greyli/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/greyli/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/greyli/subscriptions",
                "organizations_url": "https://api.github.com/users/greyli/orgs",
                "repos_url": "https://api.github.com/users/greyli/repos",
                "events_url": "https://api.github.com/users/greyli/events{/privacy}",
                "received_events_url": "https://api.github.com/users/greyli/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-09-28T12:45:34Z",
            "updated_at": "2017-09-28T12:45:34Z",
            "author_association": "MEMBER",
            "body": "Oh, sorry, I misunderstood it. \r\n\r\nIn the large project, we often need a file to create application instance outside of the application package. For example:\r\n```python\r\nfrom myapp import create_app\r\n\r\napp = create_app()\r\n```\r\nWe often call it `devapp.py` , `autoapp.py` or `wsgi.py` when deploy. So now the better name is `wsgi.py`. "
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/332829740",
            "html_url": "https://github.com/pallets/flask/pull/2378#issuecomment-332829740",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2378",
            "id": 332829740,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjgyOTc0MA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-09-28T13:04:07Z",
            "updated_at": "2017-09-28T13:04:07Z",
            "author_association": "MEMBER",
            "body": "You don't need to do that. `FLASK_APP=myapp` will pick up the factory automatically."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/332840138",
            "html_url": "https://github.com/pallets/flask/pull/2378#issuecomment-332840138",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2378",
            "id": 332840138,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjg0MDEzOA==",
            "user": {
                "login": "greyli",
                "id": 12967000,
                "node_id": "MDQ6VXNlcjEyOTY3MDAw",
                "avatar_url": "https://avatars3.githubusercontent.com/u/12967000?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/greyli",
                "html_url": "https://github.com/greyli",
                "followers_url": "https://api.github.com/users/greyli/followers",
                "following_url": "https://api.github.com/users/greyli/following{/other_user}",
                "gists_url": "https://api.github.com/users/greyli/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/greyli/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/greyli/subscriptions",
                "organizations_url": "https://api.github.com/users/greyli/orgs",
                "repos_url": "https://api.github.com/users/greyli/repos",
                "events_url": "https://api.github.com/users/greyli/events{/privacy}",
                "received_events_url": "https://api.github.com/users/greyli/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-09-28T13:42:43Z",
            "updated_at": "2017-09-28T13:42:43Z",
            "author_association": "MEMBER",
            "body": "Thanks, you are very helpful!"
        }
    ]
}