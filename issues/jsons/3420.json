{
    "url": "https://api.github.com/repos/pallets/flask/issues/3420",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/3420/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/3420/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/3420/events",
    "html_url": "https://github.com/pallets/flask/issues/3420",
    "id": 519752023,
    "node_id": "MDU6SXNzdWU1MTk3NTIwMjM=",
    "number": 3420,
    "title": "Test failures with Python 3.8",
    "user": {
        "login": "s-t-e-v-e-n-k",
        "id": 15225059,
        "node_id": "MDQ6VXNlcjE1MjI1MDU5",
        "avatar_url": "https://avatars0.githubusercontent.com/u/15225059?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/s-t-e-v-e-n-k",
        "html_url": "https://github.com/s-t-e-v-e-n-k",
        "followers_url": "https://api.github.com/users/s-t-e-v-e-n-k/followers",
        "following_url": "https://api.github.com/users/s-t-e-v-e-n-k/following{/other_user}",
        "gists_url": "https://api.github.com/users/s-t-e-v-e-n-k/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/s-t-e-v-e-n-k/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/s-t-e-v-e-n-k/subscriptions",
        "organizations_url": "https://api.github.com/users/s-t-e-v-e-n-k/orgs",
        "repos_url": "https://api.github.com/users/s-t-e-v-e-n-k/repos",
        "events_url": "https://api.github.com/users/s-t-e-v-e-n-k/events{/privacy}",
        "received_events_url": "https://api.github.com/users/s-t-e-v-e-n-k/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-11-08T05:01:16Z",
    "updated_at": "2019-11-08T05:05:04Z",
    "closed_at": "2019-11-08T05:04:06Z",
    "author_association": "NONE",
    "body": "From a build log against Python 3.8:\r\n\r\n```\r\n[   42s] ______________ TestSendfile.test_send_from_directory_bad_request _______________\r\n[   42s] \r\n[   42s] self = <test_helpers.TestSendfile object at 0x7fa523850cd0>\r\n[   42s] app = <Flask 'flask_test'>\r\n[   42s] req_ctx = <RequestContext 'http://localhost/' [GET] of flask_test>\r\n[   42s] \r\n[   42s]     def test_send_from_directory_bad_request(self, app, req_ctx):\r\n[   42s]         app.root_path = os.path.join(\r\n[   42s]             os.path.dirname(__file__), \"test_apps\", \"subdomaintestmodule\"\r\n[   42s]         )\r\n[   42s]     \r\n[   42s]         with pytest.raises(BadRequest):\r\n[   42s] >           flask.send_from_directory(\"static\", \"bad\\x00\")\r\n[   42s] \r\n[   42s] tests/test_helpers.py:789: \r\n[   42s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   42s] \r\n[   42s] directory = 'static'\r\n[   42s] filename = '/home/abuild/rpmbuild/BUILD/Flask-1.1.1/tests/test_apps/subdomaintestmodule/static/bad\\x00'\r\n[   42s] options = {}\r\n[   42s] \r\n[   42s]     def send_from_directory(directory, filename, **options):\r\n[   42s]         \"\"\"Send a file from a given directory with :func:`send_file`.  This\r\n[   42s]         is a secure way to quickly expose static files from an upload folder\r\n[   42s]         or something similar.\r\n[   42s]     \r\n[   42s]         Example usage::\r\n[   42s]     \r\n[   42s]             @app.route('/uploads/<path:filename>')\r\n[   42s]             def download_file(filename):\r\n[   42s]                 return send_from_directory(app.config['UPLOAD_FOLDER'],\r\n[   42s]                                            filename, as_attachment=True)\r\n[   42s]     \r\n[   42s]         .. admonition:: Sending files and Performance\r\n[   42s]     \r\n[   42s]            It is strongly recommended to activate either ``X-Sendfile`` support in\r\n[   42s]            your webserver or (if no authentication happens) to tell the webserver\r\n[   42s]            to serve files for the given path on its own without calling into the\r\n[   42s]            web application for improved performance.\r\n[   42s]     \r\n[   42s]         .. versionadded:: 0.5\r\n[   42s]     \r\n[   42s]         :param directory: the directory where all the files are stored.\r\n[   42s]         :param filename: the filename relative to that directory to\r\n[   42s]                          download.\r\n[   42s]         :param options: optional keyword arguments that are directly\r\n[   42s]                         forwarded to :func:`send_file`.\r\n[   42s]         \"\"\"\r\n[   42s]         filename = fspath(filename)\r\n[   42s]         directory = fspath(directory)\r\n[   42s]         filename = safe_join(directory, filename)\r\n[   42s]         if not os.path.isabs(filename):\r\n[   42s]             filename = os.path.join(current_app.root_path, filename)\r\n[   42s]         try:\r\n[   42s]             if not os.path.isfile(filename):\r\n[   42s] >               raise NotFound()\r\n[   42s] E               werkzeug.exceptions.NotFound: 404 Not Found: The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.\r\n[   42s] \r\n[   42s] ../../BUILDROOT/python-Flask-1.1.1-2.2.x86_64/usr/lib/python3.8/site-packages/flask/helpers.py:767: NotFound\r\n```\r\n\r\nThis occurs because os.path.isfile() no longer raises ValueError with invalid sequences under Python 3.8, instead just returns False.\r\n\r\nI can see it, there are two ways to fix this test:\r\n* Catch either Bad Request or Not Found, call it good.\r\n* Or change the code to raise Bad Request if we look for invalid sequences.\r\n\r\nI'm happy to push up a PR with a pointer to which direction you'd like to take.",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/551386007",
            "html_url": "https://github.com/pallets/flask/issues/3420#issuecomment-551386007",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3420",
            "id": 551386007,
            "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTM4NjAwNw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-11-08T05:04:06Z",
            "updated_at": "2019-11-08T05:05:04Z",
            "author_association": "MEMBER",
            "body": "Thanks, this was already addressed in #3410"
        }
    ]
}