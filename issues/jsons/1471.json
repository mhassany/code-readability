{
    "url": "https://api.github.com/repos/pallets/flask/issues/1471",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1471/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1471/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1471/events",
    "html_url": "https://github.com/pallets/flask/issues/1471",
    "id": 80395735,
    "node_id": "MDU6SXNzdWU4MDM5NTczNQ==",
    "number": 1471,
    "title": "Adding after_server_run",
    "user": {
        "login": "ssundarraj",
        "id": 4509724,
        "node_id": "MDQ6VXNlcjQ1MDk3MjQ=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/4509724?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ssundarraj",
        "html_url": "https://github.com/ssundarraj",
        "followers_url": "https://api.github.com/users/ssundarraj/followers",
        "following_url": "https://api.github.com/users/ssundarraj/following{/other_user}",
        "gists_url": "https://api.github.com/users/ssundarraj/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ssundarraj/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ssundarraj/subscriptions",
        "organizations_url": "https://api.github.com/users/ssundarraj/orgs",
        "repos_url": "https://api.github.com/users/ssundarraj/repos",
        "events_url": "https://api.github.com/users/ssundarraj/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ssundarraj/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2015-05-25T05:13:12Z",
    "updated_at": "2015-05-25T15:26:42Z",
    "closed_at": "2015-05-25T15:26:42Z",
    "author_association": "NONE",
    "body": "It would be nice to have a feature that would let a function be called after the server is started. As far as I've seen there is no such feature.\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/105139121",
            "html_url": "https://github.com/pallets/flask/issues/1471#issuecomment-105139121",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1471",
            "id": 105139121,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTEzOTEyMQ==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-05-25T06:26:21Z",
            "updated_at": "2015-05-25T06:26:21Z",
            "author_association": "MEMBER",
            "body": "Hmm I don't really see the use case for this, especially considering that \nthe built-in server is only for development..\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/105151892",
            "html_url": "https://github.com/pallets/flask/issues/1471#issuecomment-105151892",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1471",
            "id": 105151892,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTE1MTg5Mg==",
            "user": {
                "login": "ssundarraj",
                "id": 4509724,
                "node_id": "MDQ6VXNlcjQ1MDk3MjQ=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/4509724?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ssundarraj",
                "html_url": "https://github.com/ssundarraj",
                "followers_url": "https://api.github.com/users/ssundarraj/followers",
                "following_url": "https://api.github.com/users/ssundarraj/following{/other_user}",
                "gists_url": "https://api.github.com/users/ssundarraj/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ssundarraj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ssundarraj/subscriptions",
                "organizations_url": "https://api.github.com/users/ssundarraj/orgs",
                "repos_url": "https://api.github.com/users/ssundarraj/repos",
                "events_url": "https://api.github.com/users/ssundarraj/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ssundarraj/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-05-25T07:19:48Z",
            "updated_at": "2015-05-25T07:19:48Z",
            "author_association": "NONE",
            "body": "A use case would be as follows.\n\nLet us say that I want to open a browser window as soon as my server starts. If I call the open function before the server run, there is a race condition. If I call after, the server run will block.\n\nI agree that this is an isolated use case, but it would be a nice function to have imo :)\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/105159989",
            "html_url": "https://github.com/pallets/flask/issues/1471#issuecomment-105159989",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1471",
            "id": 105159989,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTE1OTk4OQ==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-05-25T08:02:19Z",
            "updated_at": "2015-05-25T08:03:02Z",
            "author_association": "MEMBER",
            "body": "Ok, that makes some sense. However, depending on how it works it'd interfere with the reloader (opening the browser whenever the reloader restarts the server etc).\n\nIMO it'd be overkill to add it to the Flask core.\n\nYou could always spawn a separate thread/process before the `app.run()` call and wait a bit until the server is up (could even try sending a request to it instead of waiting a fixed amount of time).\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/105161113",
            "html_url": "https://github.com/pallets/flask/issues/1471#issuecomment-105161113",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1471",
            "id": 105161113,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTE2MTExMw==",
            "user": {
                "login": "ssundarraj",
                "id": 4509724,
                "node_id": "MDQ6VXNlcjQ1MDk3MjQ=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/4509724?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ssundarraj",
                "html_url": "https://github.com/ssundarraj",
                "followers_url": "https://api.github.com/users/ssundarraj/followers",
                "following_url": "https://api.github.com/users/ssundarraj/following{/other_user}",
                "gists_url": "https://api.github.com/users/ssundarraj/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ssundarraj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ssundarraj/subscriptions",
                "organizations_url": "https://api.github.com/users/ssundarraj/orgs",
                "repos_url": "https://api.github.com/users/ssundarraj/repos",
                "events_url": "https://api.github.com/users/ssundarraj/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ssundarraj/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-05-25T08:13:09Z",
            "updated_at": "2015-05-25T08:13:09Z",
            "author_association": "NONE",
            "body": "Fair enough. That's what I'm doing at the moment.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/105251641",
            "html_url": "https://github.com/pallets/flask/issues/1471#issuecomment-105251641",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1471",
            "id": 105251641,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTI1MTY0MQ==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-05-25T15:26:42Z",
            "updated_at": "2015-05-25T15:26:42Z",
            "author_association": "MEMBER",
            "body": "I certainly don't want to add this in form of a hook that is available in production, as we can't make any guarantees that the hook is run in e.g. a CGI environment.\n\nThe only way I could see this work without any problems is a wrapper script that spawns the server and the browser tab. https://github.com/mitsuhiko/flask/issues/1179 and the PR for Werkzeug can be useful for this without hitting the local port with requests until the request is answered.\n\nIn addition to all those technical problems I agree with @ThiefMaster that this is out of scope for Flask anyway.\n"
        }
    ]
}