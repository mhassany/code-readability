{
    "url": "https://api.github.com/repos/pallets/flask/issues/1372",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1372/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1372/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1372/events",
    "html_url": "https://github.com/pallets/flask/issues/1372",
    "id": 60467898,
    "node_id": "MDU6SXNzdWU2MDQ2Nzg5OA==",
    "number": 1372,
    "title": "Logging Application approaches ",
    "user": {
        "login": "jonaprieto",
        "id": 1428088,
        "node_id": "MDQ6VXNlcjE0MjgwODg=",
        "avatar_url": "https://avatars2.githubusercontent.com/u/1428088?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonaprieto",
        "html_url": "https://github.com/jonaprieto",
        "followers_url": "https://api.github.com/users/jonaprieto/followers",
        "following_url": "https://api.github.com/users/jonaprieto/following{/other_user}",
        "gists_url": "https://api.github.com/users/jonaprieto/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jonaprieto/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jonaprieto/subscriptions",
        "organizations_url": "https://api.github.com/users/jonaprieto/orgs",
        "repos_url": "https://api.github.com/users/jonaprieto/repos",
        "events_url": "https://api.github.com/users/jonaprieto/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jonaprieto/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-03-10T08:52:18Z",
    "updated_at": "2015-03-18T23:30:22Z",
    "closed_at": "2015-03-18T23:30:22Z",
    "author_association": "NONE",
    "body": "Hi guys, I'm using for the first time your framework and I happy find out all capabilities with  this \"micro-framework'. Btw, I just came up with this decorator, something more friendly for logging task\nI created my project in you want to look for a moment: http://github.com/d555/visionapp\n\nIn something like `manage.py` ,inside the Flask app in app root directory:\n\n```\n...\nimport logging\nfrom logging.handlers import RotatingFileHandler\n...\nhandler = RotatingFileHandler('app-log.txt', maxBytes=10000, backupCount=1)\nhandler.setLevel(logging.INFO) # puede ser loggin.ERROR\napp.logger.addHandler(handler)\n```\n\nSo, in a somewhere possibly `main/decorators.py`:\n\n```\nfrom flask import current_app\n...\ndef logging(hora=None):\n    logger = None\n    def decorador(f):\n        @wraps(f)\n        def vista(*args, **kwargs):\n            logger = current_app.logger\n            kwargs['log'] = logger\n            return f(*args, **kwargs)\n        return vista\n    return decorador\n```\n\nAfter that, I could nicely use the above decorator in the following way in whatever view:\n\n```\n@logging()\ndef view_function(log):\n    log.info('friendly logging call')\n   return ...\n```\n\nMay be, you could just say that in each view wrote something like:\n\n```\nfrom flask import current_app\ndef view_function():\n     log = current_app.logger\n     log.info('another message')\n```\n\nFor now, above approach works fine for me, but maybe you know a better approach to do that:\n``using the logger defined in configuration of app, to access from every view functions in any folder to logger`\n`\nHow is better do a logging tracking? (something like 'using`getLogger`? and the normal use?)\nIs there something relate with`from flask import logging`. I couldn't find in documentation something relate (maybe https://github.com/mitsuhiko/flask-extended-logging, http://flask.pocoo.org/docs/0.10/errorhandling/) if It's abroad here  excuse me.\n\nThanks in advance.\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/83223980",
            "html_url": "https://github.com/pallets/flask/issues/1372#issuecomment-83223980",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1372",
            "id": 83223980,
            "node_id": "MDEyOklzc3VlQ29tbWVudDgzMjIzOTgw",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-03-18T23:30:22Z",
            "updated_at": "2015-03-18T23:30:22Z",
            "author_association": "MEMBER",
            "body": "I don't really understand what you're asking, but please use [StackOverflow](http://stackoverflow.com/) or the `#pocoo` IRC channel for support.\n"
        }
    ]
}