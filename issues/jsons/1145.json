{
    "url": "https://api.github.com/repos/pallets/flask/issues/1145",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1145/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1145/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1145/events",
    "html_url": "https://github.com/pallets/flask/issues/1145",
    "id": 39972305,
    "node_id": "MDU6SXNzdWUzOTk3MjMwNQ==",
    "number": 1145,
    "title": "Flask needs more opinions on config and deployment",
    "user": {
        "login": "robodude666",
        "id": 172501,
        "node_id": "MDQ6VXNlcjE3MjUwMQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/172501?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/robodude666",
        "html_url": "https://github.com/robodude666",
        "followers_url": "https://api.github.com/users/robodude666/followers",
        "following_url": "https://api.github.com/users/robodude666/following{/other_user}",
        "gists_url": "https://api.github.com/users/robodude666/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/robodude666/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/robodude666/subscriptions",
        "organizations_url": "https://api.github.com/users/robodude666/orgs",
        "repos_url": "https://api.github.com/users/robodude666/repos",
        "events_url": "https://api.github.com/users/robodude666/events{/privacy}",
        "received_events_url": "https://api.github.com/users/robodude666/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-08-11T15:57:48Z",
    "updated_at": "2014-08-11T18:20:13Z",
    "closed_at": "2014-08-11T18:20:13Z",
    "author_association": "NONE",
    "body": "I love Flask. It's really great.\n\nBut one of the things that bothers me about it is how un-opinionated it tries to be, which I think in the end makes it a lot more difficult to use.\n\nThere are at least half a dozen or so way of setting configurations:\n- You can set values manually.\n- You can read from an object.\n- You can read from a JSON file.\n- You can read from an environment variable.\n- You can read from a string to a module.\n- Not to mention all of the other extensions that add support for yaml, and other methods.\n\nAnd then, where do you place them?\n- You can use instance folders.\n- You can not use instance folders.\n- You can use some path defined in an environment variable.\n- You can dump them with the app.\n\nThis makes it very difficult to figure out what the _best_ way of setting up a project, because if you look through all of the different example starter projects on GitHub, they're all laid out completely differently.\n\nThen it comes to, how to structure your app?\n- Do you use an app factory?\n- Do you not use an app factory?\n\nIf you do use an app factory, and you want to use gunicorn:\n- Do I create a simple gunicorn.py that creates an app from the factory and makes an app?\n- Do I write a custom script with Click or Flask-Script that launches gunicorn?\n\nCertainly, if you've deployed dozens of Flask apps already, and you have your own template project setup and figured out the way you want to do everything it's okay. But, for those new to Flask, or coming from other Frameworks it can be a bit daunting to have so many options, and not having anyone agree on what should be used.\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/51801128",
            "html_url": "https://github.com/pallets/flask/issues/1145#issuecomment-51801128",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1145",
            "id": 51801128,
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxODAxMTI4",
            "user": {
                "login": "mattupstate",
                "id": 166176,
                "node_id": "MDQ6VXNlcjE2NjE3Ng==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/166176?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mattupstate",
                "html_url": "https://github.com/mattupstate",
                "followers_url": "https://api.github.com/users/mattupstate/followers",
                "following_url": "https://api.github.com/users/mattupstate/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattupstate/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mattupstate/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattupstate/subscriptions",
                "organizations_url": "https://api.github.com/users/mattupstate/orgs",
                "repos_url": "https://api.github.com/users/mattupstate/repos",
                "events_url": "https://api.github.com/users/mattupstate/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mattupstate/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-08-11T16:05:02Z",
            "updated_at": "2014-08-11T16:05:02Z",
            "author_association": "CONTRIBUTOR",
            "body": "The problem with being more opinionated is that you run the risk of trying to find a \"one size fits all\" solution. If you want something more opinionated there are plenty of other frameworks that can offer this direction for you. That said, I think you'll find that Flask will remain un-opinionated. Thats what makes it so great. And because its not opinionated it is very flexible and doesn't get in your way, leaving you to do things the way you wish.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/51804143",
            "html_url": "https://github.com/pallets/flask/issues/1145#issuecomment-51804143",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1145",
            "id": 51804143,
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxODA0MTQz",
            "user": {
                "login": "robodude666",
                "id": 172501,
                "node_id": "MDQ6VXNlcjE3MjUwMQ==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/172501?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/robodude666",
                "html_url": "https://github.com/robodude666",
                "followers_url": "https://api.github.com/users/robodude666/followers",
                "following_url": "https://api.github.com/users/robodude666/following{/other_user}",
                "gists_url": "https://api.github.com/users/robodude666/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/robodude666/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robodude666/subscriptions",
                "organizations_url": "https://api.github.com/users/robodude666/orgs",
                "repos_url": "https://api.github.com/users/robodude666/repos",
                "events_url": "https://api.github.com/users/robodude666/events{/privacy}",
                "received_events_url": "https://api.github.com/users/robodude666/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-08-11T16:27:55Z",
            "updated_at": "2014-08-11T16:28:32Z",
            "author_association": "NONE",
            "body": "I'm not saying Flask needs to force its configuration system to use a `settings.py` file with specific attribute names and configuration formats, or to limit configs to being python files only. The flexibility of Flask is one of my favorite parts. If someone wants to use a YAML file for config, then they're welcome to with extensions, which is cool.\n\nBut instead, offer more guided best practices, or scenarios to consider that have been approved by the Flask team for being secure and effective methods of doing things.\n\nThe docs do a fantastic job of explaining how each feature works separately by itself, but has very little documentation on best practices for combining the various components together.\n\nThe Configuration Handling docs talk about how you can separate your production and development configs using various config import methods in sequence (import from file, then vars, etc.). But then it talks about how you can use instance folders and not include them in source control to manage configs. That's really cool! But... no where else in the flask docs are instance folders used in examples.. Does that make them a bad feature to use? Based on reading that one page, it sounds to me that environment variables are preferred over instance folders.\n\nSo, it might not be a matter of becoming more opinionated, but offering more guidance.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/51809336",
            "html_url": "https://github.com/pallets/flask/issues/1145#issuecomment-51809336",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1145",
            "id": 51809336,
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxODA5MzM2",
            "user": {
                "login": "DasIch",
                "id": 182316,
                "node_id": "MDQ6VXNlcjE4MjMxNg==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/182316?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/DasIch",
                "html_url": "https://github.com/DasIch",
                "followers_url": "https://api.github.com/users/DasIch/followers",
                "following_url": "https://api.github.com/users/DasIch/following{/other_user}",
                "gists_url": "https://api.github.com/users/DasIch/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/DasIch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DasIch/subscriptions",
                "organizations_url": "https://api.github.com/users/DasIch/orgs",
                "repos_url": "https://api.github.com/users/DasIch/repos",
                "events_url": "https://api.github.com/users/DasIch/events{/privacy}",
                "received_events_url": "https://api.github.com/users/DasIch/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-08-11T17:07:19Z",
            "updated_at": "2014-08-11T17:07:19Z",
            "author_association": "CONTRIBUTOR",
            "body": "There is a solution to your problem: Django.\n\nBeing mostly un-opinionated is pretty much the point of Flask.\n\nFurthermore there simply often isn't a best way. Your very own configuration example works well to illustrate this: Is it a small one-off app, do I/we as developers host the ourselves? Is different configuration for testing, development and production required? Is the application supposed to be install- and configurable for \"normal\" end users?\n\nAll of these questions change the amount of effort, complexity and the features required of the configuration. There simply isn't a best solution.\n\nOn the other hand for templates there pretty much is a best solution no matter what you want to do: Jinja2. That we more or less enforce and are opinionated on. \n\nWe could be opinionated on more things such as which database to use but again there are many and valid use cases for almost all of them.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/51819256",
            "html_url": "https://github.com/pallets/flask/issues/1145#issuecomment-51819256",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1145",
            "id": 51819256,
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxODE5MjU2",
            "user": {
                "login": "robodude666",
                "id": 172501,
                "node_id": "MDQ6VXNlcjE3MjUwMQ==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/172501?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/robodude666",
                "html_url": "https://github.com/robodude666",
                "followers_url": "https://api.github.com/users/robodude666/followers",
                "following_url": "https://api.github.com/users/robodude666/following{/other_user}",
                "gists_url": "https://api.github.com/users/robodude666/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/robodude666/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robodude666/subscriptions",
                "organizations_url": "https://api.github.com/users/robodude666/orgs",
                "repos_url": "https://api.github.com/users/robodude666/repos",
                "events_url": "https://api.github.com/users/robodude666/events{/privacy}",
                "received_events_url": "https://api.github.com/users/robodude666/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-08-11T18:20:13Z",
            "updated_at": "2014-08-11T18:20:13Z",
            "author_association": "NONE",
            "body": "I'll stay with Flask.\n\nI guess my issues were unfounded.\n"
        }
    ]
}