{
    "url": "https://api.github.com/repos/pallets/flask/issues/1420",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1420/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1420/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1420/events",
    "html_url": "https://github.com/pallets/flask/issues/1420",
    "id": 66377261,
    "node_id": "MDU6SXNzdWU2NjM3NzI2MQ==",
    "number": 1420,
    "title": "Flask reloader adds stdout buffering when used with supervisord",
    "user": {
        "login": "hamiltont",
        "id": 305380,
        "node_id": "MDQ6VXNlcjMwNTM4MA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/305380?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hamiltont",
        "html_url": "https://github.com/hamiltont",
        "followers_url": "https://api.github.com/users/hamiltont/followers",
        "following_url": "https://api.github.com/users/hamiltont/following{/other_user}",
        "gists_url": "https://api.github.com/users/hamiltont/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/hamiltont/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/hamiltont/subscriptions",
        "organizations_url": "https://api.github.com/users/hamiltont/orgs",
        "repos_url": "https://api.github.com/users/hamiltont/repos",
        "events_url": "https://api.github.com/users/hamiltont/events{/privacy}",
        "received_events_url": "https://api.github.com/users/hamiltont/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2015-04-04T23:11:13Z",
    "updated_at": "2019-10-18T21:46:08Z",
    "closed_at": "2015-04-05T18:31:28Z",
    "author_association": "NONE",
    "body": "Sorry for long report, this took a while to debug. I'm not an expert on how reloading works, so hopefully someone can explain what is happening. This only happens when I use Flask's reload while launching flask using supervisord, so if it ends up being a supervisord bug I will refile it on their bug tracker, but the problem only appears when using flask's reloading feature. \n\nHere's my simple flask app: \n\n```\nfrom flask import Flask\n\napp = Flask(__name__, static_url_path='')\n\n@app.route('/start')\ndef start_build():\n  print \"Running command\"\n  return \"Starting\"\n\nif __name__ == \"__main__\":\n  app.run(debug=True)\n```\n\nAs you'd expect, this generates the following output\n\n```\nhamiltont$ python example.py\n * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n * Restarting with stat\nRunning command\n127.0.0.1 - - [04/Apr/2015 18:58:13] \"GET /start HTTP/1.1\" 200 -\nRunning command\n127.0.0.1 - - [04/Apr/2015 18:58:42] \"GET /start HTTP/1.1\" 200 -\nRunning command\n127.0.0.1 - - [04/Apr/2015 18:58:44] \"GET /start HTTP/1.1\" 200 -\n```\n\nThis output is generated correctly for all combinations of `python` vs `python -u` and `use_reloader=True` vs `use_reloader=False`. \n\nNow I try to run the application (with reloading enabled) using supervisord and this `supervisord.conf` file\n\n```\n[supervisord]\nnodaemon=true\n\n[program:flask]\ncommand=python -u example.py\n\n; Send stdout to console\nstdout_logfile=/dev/stdout\nstdout_logfile_maxbytes=0\n\n; Send stderr to console\nstderr_logfile=/dev/stderr\nstderr_logfile_maxbytes=0\n\n; Flask does not propagate signals to child processes when using debug\n; mode, so this tells supervisor to send the signal to the entire \n; process group instead of just the parent\nstopasgroup=true\n; Send interrupt so the server is shutdown gracefully\nstopsignal=INT\n```\n\nNote that I'm intentionally specifying `python -u` in my command, just to avoid issues. Here's the output: \n\n```\nhamiltont$ supervisord -c super.conf\n2015-04-04 19:02:59,762 INFO supervisord started with pid 22439\n2015-04-04 19:03:00,769 INFO spawned: 'flask' with pid 22442\n * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n * Restarting with stat\n2015-04-04 19:03:01,939 INFO success: flask entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n127.0.0.1 - - [04/Apr/2015 19:04:07] \"GET /start HTTP/1.1\" 200 -\n127.0.0.1 - - [04/Apr/2015 19:04:11] \"GET /start HTTP/1.1\" 200 -\n127.0.0.1 - - [04/Apr/2015 19:04:11] \"GET /start HTTP/1.1\" 200 -\n^C\n2015-04-04 19:04:14,198 WARN received SIGINT indicating exit request\n2015-04-04 19:04:14,198 INFO waiting for flask to die\nRunning command\nRunning command\nRunning command\n2015-04-04 19:04:14,209 INFO stopped: flask (exit status 0)\n```\n\nSo until I hit `Ctrl-C` to terminate, the stdout was being buffered. If I disable reloading, then everything works as expected: \n\n```\nhamiltont$ supervisord -c super.conf\n2015-04-04 19:06:49,711 INFO supervisord started with pid 22462\n2015-04-04 19:06:50,715 INFO spawned: 'flask' with pid 22465\n * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n2015-04-04 19:06:52,268 INFO success: flask entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\nRunning command\n127.0.0.1 - - [04/Apr/2015 19:06:54] \"GET /start HTTP/1.1\" 200 -\nRunning command\n127.0.0.1 - - [04/Apr/2015 19:06:57] \"GET /start HTTP/1.1\" 200 -\nRunning command\n127.0.0.1 - - [04/Apr/2015 19:06:58] \"GET /start HTTP/1.1\" 200 -\n^C\n2015-04-04 19:07:03,959 WARN received SIGINT indicating exit request\n2015-04-04 19:07:03,960 INFO waiting for flask to die\n2015-04-04 19:07:03,968 INFO stopped: flask (exit status 0)\n```\n\nI can also generate the expected output by manually wrapping stdout at the top of my `example.py` file\n\n```\nimport sys\nimport os\nsys.stdout = os.fdopen(sys.stdout.fileno(), 'w', 0)\n```\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/89680268",
            "html_url": "https://github.com/pallets/flask/issues/1420#issuecomment-89680268",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1420",
            "id": 89680268,
            "node_id": "MDEyOklzc3VlQ29tbWVudDg5NjgwMjY4",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-04-04T23:12:18Z",
            "updated_at": "2015-04-04T23:12:18Z",
            "author_association": "MEMBER",
            "body": "Are you trying to run the dev server in production? Because that's a **terrible idea**.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/89680854",
            "html_url": "https://github.com/pallets/flask/issues/1420#issuecomment-89680854",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1420",
            "id": 89680854,
            "node_id": "MDEyOklzc3VlQ29tbWVudDg5NjgwODU0",
            "user": {
                "login": "hamiltont",
                "id": 305380,
                "node_id": "MDQ6VXNlcjMwNTM4MA==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/305380?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hamiltont",
                "html_url": "https://github.com/hamiltont",
                "followers_url": "https://api.github.com/users/hamiltont/followers",
                "following_url": "https://api.github.com/users/hamiltont/following{/other_user}",
                "gists_url": "https://api.github.com/users/hamiltont/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hamiltont/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hamiltont/subscriptions",
                "organizations_url": "https://api.github.com/users/hamiltont/orgs",
                "repos_url": "https://api.github.com/users/hamiltont/repos",
                "events_url": "https://api.github.com/users/hamiltont/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hamiltont/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-04-04T23:14:31Z",
            "updated_at": "2015-04-04T23:17:06Z",
            "author_association": "NONE",
            "body": "Ha, no, that's definitely not what I'm doing - this has been reduced to a minimum example to show the bug \n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/89688961",
            "html_url": "https://github.com/pallets/flask/issues/1420#issuecomment-89688961",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1420",
            "id": 89688961,
            "node_id": "MDEyOklzc3VlQ29tbWVudDg5Njg4OTYx",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-04-04T23:36:40Z",
            "updated_at": "2015-04-04T23:36:40Z",
            "author_association": "MEMBER",
            "body": "It's a bug in Flask's dependency Werkzeug, but to my knowledge it's also impossible to fix. My advice would be to explicitly restart the server in your deployment scripts.\n\nI don't get why you're starting the dev server via supervisord though.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/89689647",
            "html_url": "https://github.com/pallets/flask/issues/1420#issuecomment-89689647",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1420",
            "id": 89689647,
            "node_id": "MDEyOklzc3VlQ29tbWVudDg5Njg5NjQ3",
            "user": {
                "login": "hamiltont",
                "id": 305380,
                "node_id": "MDQ6VXNlcjMwNTM4MA==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/305380?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hamiltont",
                "html_url": "https://github.com/hamiltont",
                "followers_url": "https://api.github.com/users/hamiltont/followers",
                "following_url": "https://api.github.com/users/hamiltont/following{/other_user}",
                "gists_url": "https://api.github.com/users/hamiltont/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hamiltont/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hamiltont/subscriptions",
                "organizations_url": "https://api.github.com/users/hamiltont/orgs",
                "repos_url": "https://api.github.com/users/hamiltont/repos",
                "events_url": "https://api.github.com/users/hamiltont/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hamiltont/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-04-04T23:46:53Z",
            "updated_at": "2015-04-04T23:46:53Z",
            "author_association": "NONE",
            "body": "@untitaker Good to know. Can you link me to the bug report? I'd like to read it. So far my workaround is to just check if I'm running flask in debug mode and wrapper stdout, and that has been working fine. \n\n> I don't get why you're starting the dev server via supervisord though.\n\nMy system has 5+ components needed when turning on/off. They mostly need to be restarted together. Its unfeasible to cycle through terminals just to be able to say \"restart everything\". I first used some bash scripts, but that's fairly inflexible, so switched to supervisor. It enables me to actually develop quicker than a snail\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/89769748",
            "html_url": "https://github.com/pallets/flask/issues/1420#issuecomment-89769748",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1420",
            "id": 89769748,
            "node_id": "MDEyOklzc3VlQ29tbWVudDg5NzY5NzQ4",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-04-05T13:16:50Z",
            "updated_at": "2015-04-05T13:16:50Z",
            "author_association": "MEMBER",
            "body": "> Good to know. Can you link me to the bug report? I'd like to read it.\n\nThere is none, only related bugs in Werkzeug (perhaps under the \"reloader\" label). I'll try to summarize the main problem here:\n\nTake a look at [this line in Werkzeug](https://github.com/mitsuhiko/werkzeug/blob/master/werkzeug/_reloader.py#L96):\n\n```\n args = [sys.executable] + sys.argv\n```\n\nThat's Werkzeug's attempt at recreating the original command that was used to start the server, As you can see, it doesn't take any options for the Python command itself into account.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/89769856",
            "html_url": "https://github.com/pallets/flask/issues/1420#issuecomment-89769856",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1420",
            "id": 89769856,
            "node_id": "MDEyOklzc3VlQ29tbWVudDg5NzY5ODU2",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-04-05T13:20:01Z",
            "updated_at": "2015-04-05T13:20:01Z",
            "author_association": "MEMBER",
            "body": "If all you need is `-u` to be active, simply set `PYTHONUNBUFFERED=1` in your environment. That does the same as `-u`.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/89829640",
            "html_url": "https://github.com/pallets/flask/issues/1420#issuecomment-89829640",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1420",
            "id": 89829640,
            "node_id": "MDEyOklzc3VlQ29tbWVudDg5ODI5NjQw",
            "user": {
                "login": "hamiltont",
                "id": 305380,
                "node_id": "MDQ6VXNlcjMwNTM4MA==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/305380?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hamiltont",
                "html_url": "https://github.com/hamiltont",
                "followers_url": "https://api.github.com/users/hamiltont/followers",
                "following_url": "https://api.github.com/users/hamiltont/following{/other_user}",
                "gists_url": "https://api.github.com/users/hamiltont/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hamiltont/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hamiltont/subscriptions",
                "organizations_url": "https://api.github.com/users/hamiltont/orgs",
                "repos_url": "https://api.github.com/users/hamiltont/repos",
                "events_url": "https://api.github.com/users/hamiltont/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hamiltont/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-04-05T18:31:28Z",
            "updated_at": "2015-04-05T18:31:28Z",
            "author_association": "NONE",
            "body": "Great, thanks for the help!!\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/543964847",
            "html_url": "https://github.com/pallets/flask/issues/1420#issuecomment-543964847",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1420",
            "id": 543964847,
            "node_id": "MDEyOklzc3VlQ29tbWVudDU0Mzk2NDg0Nw==",
            "user": {
                "login": "mirrorcoloured",
                "id": 2054119,
                "node_id": "MDQ6VXNlcjIwNTQxMTk=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/2054119?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mirrorcoloured",
                "html_url": "https://github.com/mirrorcoloured",
                "followers_url": "https://api.github.com/users/mirrorcoloured/followers",
                "following_url": "https://api.github.com/users/mirrorcoloured/following{/other_user}",
                "gists_url": "https://api.github.com/users/mirrorcoloured/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mirrorcoloured/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mirrorcoloured/subscriptions",
                "organizations_url": "https://api.github.com/users/mirrorcoloured/orgs",
                "repos_url": "https://api.github.com/users/mirrorcoloured/repos",
                "events_url": "https://api.github.com/users/mirrorcoloured/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mirrorcoloured/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-10-18T21:45:07Z",
            "updated_at": "2019-10-18T21:46:08Z",
            "author_association": "NONE",
            "body": "If anyone finds this in the future, you can call\r\n`sys.stdout.flush()` after print\r\nor use\r\n`print(\"test\", flush=True)`\r\nto correct this behavior."
        }
    ]
}