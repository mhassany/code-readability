{
    "url": "https://api.github.com/repos/pallets/flask/issues/3409",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/3409/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/3409/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/3409/events",
    "html_url": "https://github.com/pallets/flask/issues/3409",
    "id": 513527123,
    "node_id": "MDU6SXNzdWU1MTM1MjcxMjM=",
    "number": 3409,
    "title": "In PyTest, response.location is None",
    "user": {
        "login": "brandiqa",
        "id": 14043400,
        "node_id": "MDQ6VXNlcjE0MDQzNDAw",
        "avatar_url": "https://avatars1.githubusercontent.com/u/14043400?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brandiqa",
        "html_url": "https://github.com/brandiqa",
        "followers_url": "https://api.github.com/users/brandiqa/followers",
        "following_url": "https://api.github.com/users/brandiqa/following{/other_user}",
        "gists_url": "https://api.github.com/users/brandiqa/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/brandiqa/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/brandiqa/subscriptions",
        "organizations_url": "https://api.github.com/users/brandiqa/orgs",
        "repos_url": "https://api.github.com/users/brandiqa/repos",
        "events_url": "https://api.github.com/users/brandiqa/events{/privacy}",
        "received_events_url": "https://api.github.com/users/brandiqa/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-10-28T20:04:07Z",
    "updated_at": "2019-10-28T22:35:34Z",
    "closed_at": "2019-10-28T20:24:56Z",
    "author_association": "NONE",
    "body": "<!-- **This issue tracker is a tool to address bugs in Flask itself.\r\nPlease use the #pocoo IRC channel on freenode or Stack Overflow for general\r\nquestions about using Flask or issues not related to Flask.** -->\r\n\r\n<!-- If you'd like to report a bug in Flask, fill out the template below. Provide\r\nany extra information that may be useful / related to your problem.\r\nIdeally, create an [MCVE](https://stackoverflow.com/help/mcve), which helps us\r\nunderstand the problem and helps check that it is not caused by something in\r\nyour code. -->\r\n\r\n\r\n\r\n### Expected Behavior\r\nAm assuming calling response.location should return the current location i.e. url path\r\n\r\n```python\r\n# app/__init__.py\r\ndef create_app():\r\n    app = Flask(__name__)\r\n\r\n    @app.route('/')\r\n    def hello():\r\n        return 'Hello, World!'\r\n\r\n    return app\r\n\r\n\r\n# app/conftest.py\r\nimport pytest\r\nfrom app import create_app\r\n\r\n@pytest.fixture\r\ndef app():\r\n    app = create_app()\r\n    app.config['TESTING'] = True\r\n\r\n    yield app\r\n\r\n\r\n@pytest.fixture\r\ndef client(app):\r\n    return app.test_client()\r\n\r\n\r\n# app/test_hello.py\r\ndef test_hello(client):\r\n    response = client.get('/')\r\n    assert response.status_code == 200\r\n    assert response.data == b'Hello, World!'\r\n    assert response.location == \"http://localhost/\"\r\n```\r\n\r\n### Actual Behavior\r\nRunning `pytest` command results in a failed test\r\n\r\n```pytb\r\nclient = <FlaskClient <Flask 'app'>>\r\n\r\n    def test_hello(client):\r\n        response = client.get('/')\r\n        assert response.status_code == 200\r\n        assert response.data == b'Hello, World!'\r\n>       assert response.location == \"http://localhost/\"\r\nE       AssertionError: assert None == 'http://localhost/'\r\nE         -None\r\nE         +'http://localhost/'\r\n\r\napp/test_app.py:5: AssertionError\r\n\r\n```\r\n\r\n### Environment\r\n\r\n* Python version: 3.8\r\n* Flask version: 1.1.1\r\n* Werkzeug version: 0.16.0\r\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/547130148",
            "html_url": "https://github.com/pallets/flask/issues/3409#issuecomment-547130148",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3409",
            "id": 547130148,
            "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzEzMDE0OA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-10-28T20:24:56Z",
            "updated_at": "2019-10-28T20:26:45Z",
            "author_association": "MEMBER",
            "body": "[`location`](http://werkzeug.palletsprojects.com/en/0.16.x/wrappers/#werkzeug.wrappers.CommonResponseDescriptorsMixin.location) is a header used when redirecting. You didn't produce a redirect, so it's not set. The location hasn't changed from what you requested, there's no point in asserting it."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/547173949",
            "html_url": "https://github.com/pallets/flask/issues/3409#issuecomment-547173949",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3409",
            "id": 547173949,
            "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzE3Mzk0OQ==",
            "user": {
                "login": "brandiqa",
                "id": 14043400,
                "node_id": "MDQ6VXNlcjE0MDQzNDAw",
                "avatar_url": "https://avatars1.githubusercontent.com/u/14043400?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/brandiqa",
                "html_url": "https://github.com/brandiqa",
                "followers_url": "https://api.github.com/users/brandiqa/followers",
                "following_url": "https://api.github.com/users/brandiqa/following{/other_user}",
                "gists_url": "https://api.github.com/users/brandiqa/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/brandiqa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brandiqa/subscriptions",
                "organizations_url": "https://api.github.com/users/brandiqa/orgs",
                "repos_url": "https://api.github.com/users/brandiqa/repos",
                "events_url": "https://api.github.com/users/brandiqa/events{/privacy}",
                "received_events_url": "https://api.github.com/users/brandiqa/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-10-28T22:32:31Z",
            "updated_at": "2019-10-28T22:35:34Z",
            "author_association": "NONE",
            "body": "I have a different code where am using redirect after logging in. `response.location` still returns `None`\r\n\r\nKindly advice if there is a different way of accessing the final url regardless of whether the redirect was used. (for example: testing failed login)"
        }
    ]
}