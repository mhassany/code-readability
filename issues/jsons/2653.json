{
    "url": "https://api.github.com/repos/pallets/flask/issues/2653",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2653/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2653/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2653/events",
    "html_url": "https://github.com/pallets/flask/issues/2653",
    "id": 303120346,
    "node_id": "MDU6SXNzdWUzMDMxMjAzNDY=",
    "number": 2653,
    "title": "Support for multipart/mixed Content-Type?",
    "user": {
        "login": "dimmg",
        "id": 9215087,
        "node_id": "MDQ6VXNlcjkyMTUwODc=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/9215087?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dimmg",
        "html_url": "https://github.com/dimmg",
        "followers_url": "https://api.github.com/users/dimmg/followers",
        "following_url": "https://api.github.com/users/dimmg/following{/other_user}",
        "gists_url": "https://api.github.com/users/dimmg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dimmg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dimmg/subscriptions",
        "organizations_url": "https://api.github.com/users/dimmg/orgs",
        "repos_url": "https://api.github.com/users/dimmg/repos",
        "events_url": "https://api.github.com/users/dimmg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dimmg/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-03-07T14:30:57Z",
    "updated_at": "2018-03-07T14:55:45Z",
    "closed_at": "2018-03-07T14:55:45Z",
    "author_association": "NONE",
    "body": "Does Flask have support for working with `multipart/mixed `Content-Type?\r\nIf so, HOW? I'm having really hard time trying to understand how to do this. \r\n\r\nRequest example:\r\n```\r\ncurl -i -X POST 'http://localhost:5000/mixed' \\\r\n          -H 'Content-type:multipart/mixed' \\\r\n          -F 'file=@image.png;type=image/png' \\\r\n          -F 'foobar={\r\n                \"foo\": \"bar\",\r\n                \"bar\": \"foo\"\r\n          }; type=application/json'\r\n```\r\n\r\nFlask request object output:\r\n```\r\n...\r\n>> request.content_type\r\n>> 'multipart/mixed; boundary=------------------------ef723eaaa4c75a7b'\r\n\r\n>> request.files\r\n>> ImmutableMultiDict([])\r\n\r\n>> request.get_json()\r\n\r\n>> request.data\r\n>> b'--------------------------f1d947d065515352\\r\\nContent-Disposition: attachment; name=\"file\"; filename=\"image.png\"\\r\\nContent-Type: image/png\\r\\n\\r\\n\\r\\n--------------------------f1d947d065515352\\r\\nContent-Disposition: attachment; name=\"foobar\"\\r\\nContent-Type: application/json\\r\\n\\r\\n{\\n\"foo\": \"bar\",\\n\"bar\": \"foo\"\\n}\\r\\n--------------------------f1d947d065515352--\\r\\n'\r\n...\r\n```",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/371164256",
            "html_url": "https://github.com/pallets/flask/issues/2653#issuecomment-371164256",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2653",
            "id": 371164256,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTE2NDI1Ng==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-03-07T14:55:45Z",
            "updated_at": "2018-03-07T14:55:45Z",
            "author_association": "MEMBER",
            "body": "The only request bodies that Werkzeug knows how to parse are form data and JSON. Otherwise, you need to parse it yourself. There are many functions in Werkzeug, especially  `werkzeug.http` (with examples of how to use them in `werkzeug.formparser`), that may be helpful here. If anything needs to be added, that should be reported against Werkzeug."
        }
    ]
}