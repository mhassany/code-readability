{
    "url": "https://api.github.com/repos/pallets/flask/issues/981",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/981/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/981/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/981/events",
    "html_url": "https://github.com/pallets/flask/issues/981",
    "id": 27548151,
    "node_id": "MDU6SXNzdWUyNzU0ODE1MQ==",
    "number": 981,
    "title": "Cannot lazily load views in 0.10.1",
    "user": {
        "login": "str4d",
        "id": 4993799,
        "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/4993799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/str4d",
        "html_url": "https://github.com/str4d",
        "followers_url": "https://api.github.com/users/str4d/followers",
        "following_url": "https://api.github.com/users/str4d/following{/other_user}",
        "gists_url": "https://api.github.com/users/str4d/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/str4d/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
        "organizations_url": "https://api.github.com/users/str4d/orgs",
        "repos_url": "https://api.github.com/users/str4d/repos",
        "events_url": "https://api.github.com/users/str4d/events{/privacy}",
        "received_events_url": "https://api.github.com/users/str4d/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 12,
    "created_at": "2014-02-13T20:09:50Z",
    "updated_at": "2016-06-16T20:40:24Z",
    "closed_at": "2016-06-16T20:40:24Z",
    "author_association": "NONE",
    "body": "I was lazily loading views in 0.9, and some views needed to use the same function, e.g.\n\n```\nurl('/<lang:lang>/blog/', 'blog.views.blog_index', defaults={'page': 1})\nurl('/<lang:lang>/blog/page/<int:page>', 'blog.views.blog_index')\n```\n\nUpon updating Flask to 0.10.1, I now get the following error:\n\n```\nAssertionError: View function mapping is overwriting an existing endpoint function\n```\n\nThe cause is the same as #796, but [your current documentation still says this is a valid way of having a central URL map](http://flask.pocoo.org/docs/patterns/lazyloading/).\n\nIs there a way around this, beyond just storing every single `LazyView` in a dict and looking it up each time `url()` is called? The above documentation needs to be updated to reflect the answer.\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/44789996",
            "html_url": "https://github.com/pallets/flask/issues/981#issuecomment-44789996",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/981",
            "id": 44789996,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzg5OTk2",
            "user": {
                "login": "cpoppema",
                "id": 1432901,
                "node_id": "MDQ6VXNlcjE0MzI5MDE=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/1432901?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/cpoppema",
                "html_url": "https://github.com/cpoppema",
                "followers_url": "https://api.github.com/users/cpoppema/followers",
                "following_url": "https://api.github.com/users/cpoppema/following{/other_user}",
                "gists_url": "https://api.github.com/users/cpoppema/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/cpoppema/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cpoppema/subscriptions",
                "organizations_url": "https://api.github.com/users/cpoppema/orgs",
                "repos_url": "https://api.github.com/users/cpoppema/repos",
                "events_url": "https://api.github.com/users/cpoppema/events{/privacy}",
                "received_events_url": "https://api.github.com/users/cpoppema/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-06-01T21:30:56Z",
            "updated_at": "2014-06-01T21:47:21Z",
            "author_association": "NONE",
            "body": "The documentation however does not include functions with the same name.. See `views.index` vs `views.user`. Right now, I am starting to build a small application for the first time using Flask and had a function based view and was using the `route`-decorator. I then read about class based views and wanted to switch, using http://flask.pocoo.org/docs/views/ as a guideline. Then this error was raised when I switched from\n\n```\n# feed is my blueprint\n@feed.route('/', defaults={'page': 'index'})\n@feed.route('/<page>')\ndef list(page):\n```\n\nto\n\n```\nfeed.add_url_rule('/', defaults={'page': 'index'}, view_func=List.as_view('list'))\nfeed.add_url_rule('/<page>', view_func=List.as_view('list'))\n```\n\nThe first example creates the following map:\n\n```\nMap([<Rule '/static/<filename>' (HEAD, OPTIONS, GET) -> static>,\n <Rule '/<page>' (HEAD, OPTIONS, GET) -> feed.list>,\n <Rule '/' (HEAD, OPTIONS, GET) -> feed.list>])\n```\n\nWhich creates two rules for a single endpoint: `feed.list`.\n\nBut using `add_url_rule` raises `AssertionError: View function mapping is overwriting an existing endpoint function: feed.list\n`\n\nI guess there is no way around it, you could try using the `add_url_rule` function instead and provide different names for the endpoints instead. I'd assume you have to update some `url_for`-calls in your templates for when you do/don't provide page numbers.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/70381108",
            "html_url": "https://github.com/pallets/flask/issues/981#issuecomment-70381108",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/981",
            "id": 70381108,
            "node_id": "MDEyOklzc3VlQ29tbWVudDcwMzgxMTA4",
            "user": {
                "login": "playpauseandstop",
                "id": 21325,
                "node_id": "MDQ6VXNlcjIxMzI1",
                "avatar_url": "https://avatars0.githubusercontent.com/u/21325?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/playpauseandstop",
                "html_url": "https://github.com/playpauseandstop",
                "followers_url": "https://api.github.com/users/playpauseandstop/followers",
                "following_url": "https://api.github.com/users/playpauseandstop/following{/other_user}",
                "gists_url": "https://api.github.com/users/playpauseandstop/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/playpauseandstop/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/playpauseandstop/subscriptions",
                "organizations_url": "https://api.github.com/users/playpauseandstop/orgs",
                "repos_url": "https://api.github.com/users/playpauseandstop/repos",
                "events_url": "https://api.github.com/users/playpauseandstop/events{/privacy}",
                "received_events_url": "https://api.github.com/users/playpauseandstop/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-01-17T19:39:26Z",
            "updated_at": "2015-01-17T19:39:26Z",
            "author_association": "NONE",
            "body": "I suggest you to try my extension named [Flask-LazyViews](https://github.com/playpauseandstop/Flask-LazyViews), cause there already fixed [same issue](https://github.com/playpauseandstop/Flask-LazyViews/issues/4) and you can register multiple lazy views pointing to one function at same time\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/223351736",
            "html_url": "https://github.com/pallets/flask/issues/981#issuecomment-223351736",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/981",
            "id": 223351736,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzM1MTczNg==",
            "user": {
                "login": "dcfix",
                "id": 361378,
                "node_id": "MDQ6VXNlcjM2MTM3OA==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/361378?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/dcfix",
                "html_url": "https://github.com/dcfix",
                "followers_url": "https://api.github.com/users/dcfix/followers",
                "following_url": "https://api.github.com/users/dcfix/following{/other_user}",
                "gists_url": "https://api.github.com/users/dcfix/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/dcfix/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dcfix/subscriptions",
                "organizations_url": "https://api.github.com/users/dcfix/orgs",
                "repos_url": "https://api.github.com/users/dcfix/repos",
                "events_url": "https://api.github.com/users/dcfix/events{/privacy}",
                "received_events_url": "https://api.github.com/users/dcfix/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-06-02T16:48:49Z",
            "updated_at": "2016-06-04T17:18:57Z",
            "author_association": "CONTRIBUTOR",
            "body": "Working on this at pycon 2016 sprint.\n\nWhen assigning multiple routes to a function using the decorator, the function signature is the same and the assertionerror in add_url_rule() is avoided. When using the LazyView object, different object signatures are returned, which causes the assertionerror to be raised. \n\nWe discussed several options for fixing this:\n1. Modify the example in the docs to use metaclasses to cache and return the same object when called with the same import_name. Object signatures would match in add_url_rule() and the assertionerror would be avoided.\n2. Modify the example in the docs to specify a endpoint in the LazyView:\n   \n   ``` python\n   app.add_url_rule('/exampleTwo/', endpoint='exampleTwo()', view_func=LazyView('mytest.views.exampleTwo'))\n   app.add_url_rule('/exampleTwo/<name>', endpoint='exampleTwo(name)', view_func=LazyView('mytest.views.exampleTwo'))\n   ```\n\n@davidism \n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/223741439",
            "html_url": "https://github.com/pallets/flask/issues/981#issuecomment-223741439",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/981",
            "id": 223741439,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzc0MTQzOQ==",
            "user": {
                "login": "jeffwidman",
                "id": 483314,
                "node_id": "MDQ6VXNlcjQ4MzMxNA==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/483314?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jeffwidman",
                "html_url": "https://github.com/jeffwidman",
                "followers_url": "https://api.github.com/users/jeffwidman/followers",
                "following_url": "https://api.github.com/users/jeffwidman/following{/other_user}",
                "gists_url": "https://api.github.com/users/jeffwidman/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jeffwidman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jeffwidman/subscriptions",
                "organizations_url": "https://api.github.com/users/jeffwidman/orgs",
                "repos_url": "https://api.github.com/users/jeffwidman/repos",
                "events_url": "https://api.github.com/users/jeffwidman/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jeffwidman/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-06-04T07:19:44Z",
            "updated_at": "2016-06-04T07:19:44Z",
            "author_association": "MEMBER",
            "body": "Did you make a decision here on which solution to add to the docs @dcfix @davidism?\n\nPersonally, since the linked doc is an entire page devoted to lazy views, I would just add a section mentioning the problem and example code for both solutions, and leave it up to the end user to pick their desired solution. Not a strongly held opinion, just what I'd do if it were me.\n\n@dcfix IIRC, you were planning to put together a PR on this... I'd encourage you to start on it while it's still fresh in your mind, since I know you did a lot of great work digging into the internals here...\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/223767180",
            "html_url": "https://github.com/pallets/flask/issues/981#issuecomment-223767180",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/981",
            "id": 223767180,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzc2NzE4MA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-06-04T17:17:13Z",
            "updated_at": "2016-06-04T17:17:13Z",
            "author_association": "MEMBER",
            "body": "Enhance the error message that occurs in `add_url_rule`.  Showing something like `originally registered with <MyClass at 12345>, new callable is <MyClass at 67890>` would be a big hint about what went wrong, along with some documentation.\n\n> If you want to register a lazy view for two rules, create the view and then pass it to both rules.\n> \n> ``` python\n> hello_view = LazyView('hello')\n> app.add_url_rule('/', view_func=hello_view)\n> app.add_url_rule('/hello', view_func=hello_view)\n> ```\n\nThis avoids using custom endpoint names, since technically they are still the same endpoint.  A similar blurb should be added to the class based views docs, since the same issue occurs.\n\n---\n\nModifying the `LazyView` class to cache instantiation is too much of a hack to include in the docs.  But here's how it would work anyway.\n\n``` python\nclass LazyView(object):\n    _cache = {}\n\n    def __new__(cls, name):\n        if name not in cls._cache:\n            cls._cache[name] = object.__new__(cls)\n\n        return cls._cache[name]\n\n    ...\n\nLazyView('hello') is LazyView('hello')  # True\n```\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/223779996",
            "html_url": "https://github.com/pallets/flask/issues/981#issuecomment-223779996",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/981",
            "id": 223779996,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzc3OTk5Ng==",
            "user": {
                "login": "str4d",
                "id": 4993799,
                "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/4993799?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/str4d",
                "html_url": "https://github.com/str4d",
                "followers_url": "https://api.github.com/users/str4d/followers",
                "following_url": "https://api.github.com/users/str4d/following{/other_user}",
                "gists_url": "https://api.github.com/users/str4d/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/str4d/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
                "organizations_url": "https://api.github.com/users/str4d/orgs",
                "repos_url": "https://api.github.com/users/str4d/repos",
                "events_url": "https://api.github.com/users/str4d/events{/privacy}",
                "received_events_url": "https://api.github.com/users/str4d/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-06-04T21:44:41Z",
            "updated_at": "2016-06-04T21:44:41Z",
            "author_association": "NONE",
            "body": "> Modifying the `LazyView` class to cache instantiation is too much of a hack to include in the docs. But here's how it would work anyway.\n\nI've been doing [a variation of this](https://github.com/i2p/i2p.www/blob/master/i2p2www/urls.py#L33) (but in the `url()` function instead of the `LazyView` class) in the interim to solve the problem I originally created this issue for.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/224760326",
            "html_url": "https://github.com/pallets/flask/issues/981#issuecomment-224760326",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/981",
            "id": 224760326,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDc2MDMyNg==",
            "user": {
                "login": "dcfix",
                "id": 361378,
                "node_id": "MDQ6VXNlcjM2MTM3OA==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/361378?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/dcfix",
                "html_url": "https://github.com/dcfix",
                "followers_url": "https://api.github.com/users/dcfix/followers",
                "following_url": "https://api.github.com/users/dcfix/following{/other_user}",
                "gists_url": "https://api.github.com/users/dcfix/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/dcfix/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dcfix/subscriptions",
                "organizations_url": "https://api.github.com/users/dcfix/orgs",
                "repos_url": "https://api.github.com/users/dcfix/repos",
                "events_url": "https://api.github.com/users/dcfix/events{/privacy}",
                "received_events_url": "https://api.github.com/users/dcfix/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-06-08T23:21:24Z",
            "updated_at": "2016-06-08T23:21:24Z",
            "author_association": "CONTRIBUTOR",
            "body": "Ok, I've got a solution that will give us what we need by changing a few lines in the lazyloading.rst file. I've tested it and it works like a charm, but I've got to get Sphinx up and running on my system so that I can test it before creating a pr. Hopefully tonight or tomorrow.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/224864365",
            "html_url": "https://github.com/pallets/flask/issues/981#issuecomment-224864365",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/981",
            "id": 224864365,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDg2NDM2NQ==",
            "user": {
                "login": "str4d",
                "id": 4993799,
                "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/4993799?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/str4d",
                "html_url": "https://github.com/str4d",
                "followers_url": "https://api.github.com/users/str4d/followers",
                "following_url": "https://api.github.com/users/str4d/following{/other_user}",
                "gists_url": "https://api.github.com/users/str4d/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/str4d/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
                "organizations_url": "https://api.github.com/users/str4d/orgs",
                "repos_url": "https://api.github.com/users/str4d/repos",
                "events_url": "https://api.github.com/users/str4d/events{/privacy}",
                "received_events_url": "https://api.github.com/users/str4d/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-06-09T11:06:19Z",
            "updated_at": "2016-06-09T11:06:19Z",
            "author_association": "NONE",
            "body": "Hmm, this solution doesn't handle [default values](https://github.com/i2p/i2p.www/blob/master/i2p2www/urls.py#L61). Perhaps passing in a list of tuples of `(path, **options)`? But that's not as clean...\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/225050443",
            "html_url": "https://github.com/pallets/flask/issues/981#issuecomment-225050443",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/981",
            "id": 225050443,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTA1MDQ0Mw==",
            "user": {
                "login": "dcfix",
                "id": 361378,
                "node_id": "MDQ6VXNlcjM2MTM3OA==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/361378?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/dcfix",
                "html_url": "https://github.com/dcfix",
                "followers_url": "https://api.github.com/users/dcfix/followers",
                "following_url": "https://api.github.com/users/dcfix/following{/other_user}",
                "gists_url": "https://api.github.com/users/dcfix/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/dcfix/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dcfix/subscriptions",
                "organizations_url": "https://api.github.com/users/dcfix/orgs",
                "repos_url": "https://api.github.com/users/dcfix/repos",
                "events_url": "https://api.github.com/users/dcfix/events{/privacy}",
                "received_events_url": "https://api.github.com/users/dcfix/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-06-09T22:53:10Z",
            "updated_at": "2016-06-09T22:53:10Z",
            "author_association": "CONTRIBUTOR",
            "body": "@str4d , I wasn't able to replicate the problem with default values that you mentioned above, using the proposed sample code. I was looking at the code base that you referenced, and it seems much more complex than our simple example. \n\nIn order to test my proposed change, I had to set up the function to accept the default. i.e.\n\n```\ndef index(page=1):\n    return render_template('index.html', page=page)\n```\n\nI then set up my url statement as follows:\n\n```\nurl('981_test.views.index', ['/'], defaults={'page':3})\n```\n\nWhen I went to the page, the original default of 1 was overwritten with the value of 3. \n\nSo, it seems to work for me, but I'm not even sure if I understand the problem fully. Would you mind taking a look at the solution I've proposed with our simple example in the doc?\n\nThanks\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/225051335",
            "html_url": "https://github.com/pallets/flask/issues/981#issuecomment-225051335",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/981",
            "id": 225051335,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTA1MTMzNQ==",
            "user": {
                "login": "str4d",
                "id": 4993799,
                "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/4993799?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/str4d",
                "html_url": "https://github.com/str4d",
                "followers_url": "https://api.github.com/users/str4d/followers",
                "following_url": "https://api.github.com/users/str4d/following{/other_user}",
                "gists_url": "https://api.github.com/users/str4d/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/str4d/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
                "organizations_url": "https://api.github.com/users/str4d/orgs",
                "repos_url": "https://api.github.com/users/str4d/repos",
                "events_url": "https://api.github.com/users/str4d/events{/privacy}",
                "received_events_url": "https://api.github.com/users/str4d/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-06-09T22:58:11Z",
            "updated_at": "2016-06-09T22:58:11Z",
            "author_association": "NONE",
            "body": "I was meaning that different defaults for different URLs is not possible. But yes, if the defaults are the same for the same view handler for all possible URLs, then yes it works as-is.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/225053062",
            "html_url": "https://github.com/pallets/flask/issues/981#issuecomment-225053062",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/981",
            "id": 225053062,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTA1MzA2Mg==",
            "user": {
                "login": "dcfix",
                "id": 361378,
                "node_id": "MDQ6VXNlcjM2MTM3OA==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/361378?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/dcfix",
                "html_url": "https://github.com/dcfix",
                "followers_url": "https://api.github.com/users/dcfix/followers",
                "following_url": "https://api.github.com/users/dcfix/following{/other_user}",
                "gists_url": "https://api.github.com/users/dcfix/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/dcfix/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dcfix/subscriptions",
                "organizations_url": "https://api.github.com/users/dcfix/orgs",
                "repos_url": "https://api.github.com/users/dcfix/repos",
                "events_url": "https://api.github.com/users/dcfix/events{/privacy}",
                "received_events_url": "https://api.github.com/users/dcfix/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-06-09T23:07:44Z",
            "updated_at": "2016-06-09T23:07:44Z",
            "author_association": "CONTRIBUTOR",
            "body": "For me, the hardest part of writing this solution was deciding where to stop adding edge cases for a self-proclaimed micro framework. To me, your solution has advanced way past our simple lazy loading pattern. Do you think we should create and submit another pattern for your use case? \n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/225053420",
            "html_url": "https://github.com/pallets/flask/issues/981#issuecomment-225053420",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/981",
            "id": 225053420,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTA1MzQyMA==",
            "user": {
                "login": "str4d",
                "id": 4993799,
                "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/4993799?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/str4d",
                "html_url": "https://github.com/str4d",
                "followers_url": "https://api.github.com/users/str4d/followers",
                "following_url": "https://api.github.com/users/str4d/following{/other_user}",
                "gists_url": "https://api.github.com/users/str4d/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/str4d/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
                "organizations_url": "https://api.github.com/users/str4d/orgs",
                "repos_url": "https://api.github.com/users/str4d/repos",
                "events_url": "https://api.github.com/users/str4d/events{/privacy}",
                "received_events_url": "https://api.github.com/users/str4d/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-06-09T23:09:57Z",
            "updated_at": "2016-06-09T23:09:57Z",
            "author_association": "NONE",
            "body": "Maybe. I don't actually _use_ my use case above; what I should have said was, the documentation should note that any provided options are applied to all URLs, so people don't trip up on it.\n"
        }
    ]
}