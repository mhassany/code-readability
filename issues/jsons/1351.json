{
    "url": "https://api.github.com/repos/pallets/flask/issues/1351",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1351/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1351/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1351/events",
    "html_url": "https://github.com/pallets/flask/issues/1351",
    "id": 57817369,
    "node_id": "MDU6SXNzdWU1NzgxNzM2OQ==",
    "number": 1351,
    "title": "Overloading of JSON Decoder causing cookies decoding problems",
    "user": {
        "login": "Cabu",
        "id": 453185,
        "node_id": "MDQ6VXNlcjQ1MzE4NQ==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/453185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Cabu",
        "html_url": "https://github.com/Cabu",
        "followers_url": "https://api.github.com/users/Cabu/followers",
        "following_url": "https://api.github.com/users/Cabu/following{/other_user}",
        "gists_url": "https://api.github.com/users/Cabu/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Cabu/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Cabu/subscriptions",
        "organizations_url": "https://api.github.com/users/Cabu/orgs",
        "repos_url": "https://api.github.com/users/Cabu/repos",
        "events_url": "https://api.github.com/users/Cabu/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Cabu/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-02-16T15:29:17Z",
    "updated_at": "2015-02-16T16:06:10Z",
    "closed_at": "2015-02-16T15:41:15Z",
    "author_association": "NONE",
    "body": "When trying to change the flask.json_decoder to my own decoder, the unserialisation of cookies doesn't work anymore.\n\n```\n# -- coding: utf-8\n\nfrom flask import Flask, flash, url_for, redirect, render_template_string\nfrom flask.json import JSONEncoder, JSONDecoder\n\n\ntemplate = \"\"\"\n<!DOCTYPE html>\n<html><head><title>Test JSON encoder/decoder</title></head><body>\n{% with messages = get_flashed_messages(with_categories=true) %}{% if messages %}{% for message in messages %}\n<p>Flash: {{ message }}</p>\n{% endfor %}{% endif %}{% endwith %}\n<p>Flash should be: ['Flash message', 'success']</p>\n<p><a href=\"{{ url_for('index') }}\">Try again</a></p>\n</body></html>\n\"\"\"\n\n\nclass CustomJSONEncoder(JSONEncoder):\n    \"\"\" Do nothing custom json encoder \"\"\"\n    def default(self, obj):\n        return super(CustomJSONEncoder, self).defaults(obj)\n\n\nclass CustomJSONDecoder(JSONDecoder):\n    \"\"\" Do nothing custom json decoder \"\"\"\n    def __init__(self, *args, **kargs):\n        super(CustomJSONDecoder, self).__init__(object_hook=self.decode)\n\n    def decode(self, d):\n        return d\n\n\napp = Flask(__name__, static_url_path='')\napp.config['SECRET_KEY'] = 'secret-key'\napp.json_encoder = CustomJSONEncoder\napp.json_decoder = CustomJSONDecoder        # WorkingCustomJSONDecoder\n\n\n@app.route('/')\ndef index():\n    flash('Flash message', 'success')\n    return redirect(url_for('display'))\n\n\n@app.route('/b')\ndef display():\n    return render_template_string(template)\n\n\nif __name__ == '__main__':\n    app.run()\n```\n\nFor the cookies to work again I should copy part of TaggedJSONSerializer in my decoder...\n\n```\nimport uuid\nfrom base64 import b64decode\nfrom werkzeug.http import parse_date\nfrom markupsafe import Markup\nfrom flask._compat import iteritems\n\n\nclass CustomJSONDecoder(JSONDecoder):\n    \"\"\" Do nothing custom json decoder \"\"\"\n    def __init__(self, *args, **kargs):\n        super(CustomJSONDecoder, self).__init__(object_hook=self.decode)\n\n    def decode(self, d):\n        # Copy of the code from Flask.sessions.TaggedJSONSerializer(object).loads(self, value).object_hook(obj)\n        if len(d) == 1:\n            the_key, the_value = next(iteritems(d))\n            if the_key == ' t':\n                return tuple(the_value)\n            elif the_key == ' u':\n                return uuid.UUID(the_value)\n            elif the_key == ' b':\n                return b64decode(the_value)\n            elif the_key == ' m':\n                return Markup(the_value)\n            elif the_key == ' d':\n                return parse_date(the_value)\n        return d\n```\n\nCould it be a but or most probably an error from my part?\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/74526912",
            "html_url": "https://github.com/pallets/flask/issues/1351#issuecomment-74526912",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1351",
            "id": 74526912,
            "node_id": "MDEyOklzc3VlQ29tbWVudDc0NTI2OTEy",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-02-16T15:41:15Z",
            "updated_at": "2015-02-16T15:41:15Z",
            "author_association": "MEMBER",
            "body": "Your custom json decoder passes neither `*args` nor `**kwargs` to `super(CustomJSONDecoder, self).__init__`.\n\nDo not use the issuetracker as a support forum. Use StackOverflow.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/74527413",
            "html_url": "https://github.com/pallets/flask/issues/1351#issuecomment-74527413",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1351",
            "id": 74527413,
            "node_id": "MDEyOklzc3VlQ29tbWVudDc0NTI3NDEz",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-02-16T15:44:10Z",
            "updated_at": "2015-02-16T15:44:10Z",
            "author_association": "MEMBER",
            "body": "But please DO NOT dump large amounts of code on Stack Overflow. Code snippets in SO question should be as minimal as possible (while still triggering the behavior you are asking about of course).\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/74531075",
            "html_url": "https://github.com/pallets/flask/issues/1351#issuecomment-74531075",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1351",
            "id": 74531075,
            "node_id": "MDEyOklzc3VlQ29tbWVudDc0NTMxMDc1",
            "user": {
                "login": "Cabu",
                "id": 453185,
                "node_id": "MDQ6VXNlcjQ1MzE4NQ==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/453185?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Cabu",
                "html_url": "https://github.com/Cabu",
                "followers_url": "https://api.github.com/users/Cabu/followers",
                "following_url": "https://api.github.com/users/Cabu/following{/other_user}",
                "gists_url": "https://api.github.com/users/Cabu/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Cabu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Cabu/subscriptions",
                "organizations_url": "https://api.github.com/users/Cabu/orgs",
                "repos_url": "https://api.github.com/users/Cabu/repos",
                "events_url": "https://api.github.com/users/Cabu/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Cabu/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-02-16T16:06:10Z",
            "updated_at": "2015-02-16T16:06:10Z",
            "author_association": "NONE",
            "body": "For me the code snippet was minimal... \nWhat kind of snippet should I have written? \n"
        }
    ]
}