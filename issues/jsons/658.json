{
    "url": "https://api.github.com/repos/pallets/flask/issues/658",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/658/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/658/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/658/events",
    "html_url": "https://github.com/pallets/flask/issues/658",
    "id": 9637388,
    "node_id": "MDU6SXNzdWU5NjM3Mzg4",
    "number": 658,
    "title": "The problem with _micro_ frameworks is a lack of structure",
    "user": {
        "login": "daGrevis",
        "id": 509529,
        "node_id": "MDQ6VXNlcjUwOTUyOQ==",
        "avatar_url": "https://avatars1.githubusercontent.com/u/509529?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/daGrevis",
        "html_url": "https://github.com/daGrevis",
        "followers_url": "https://api.github.com/users/daGrevis/followers",
        "following_url": "https://api.github.com/users/daGrevis/following{/other_user}",
        "gists_url": "https://api.github.com/users/daGrevis/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/daGrevis/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/daGrevis/subscriptions",
        "organizations_url": "https://api.github.com/users/daGrevis/orgs",
        "repos_url": "https://api.github.com/users/daGrevis/repos",
        "events_url": "https://api.github.com/users/daGrevis/events{/privacy}",
        "received_events_url": "https://api.github.com/users/daGrevis/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 12,
    "created_at": "2013-01-03T07:54:41Z",
    "updated_at": "2013-01-27T00:52:53Z",
    "closed_at": "2013-01-27T00:52:53Z",
    "author_association": "NONE",
    "body": "So here is my pain \u2014 there are no structure restrictions. Single file is fine until there are more than X lines. And apps do grow. Very fast. No restrictions are good, but structure skeletons are awesome. Let me explain it...\n\nI had big problems w/ re-structuring my app so that everything is not in a single file. I'm just a newbie programmer, not an architect. At least for now. Micro frameworks should improve my productivity, not forcing me to structure things.\n\nI suggest to create skeletons / boilerplate for possible ways to structure app. They could be sorted for estimated size of the product (tiny, small, medium, big & huge) plus used components (ORM, template engine, test framework, form abstraction etc.). What do you think?\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/11837734",
            "html_url": "https://github.com/pallets/flask/issues/658#issuecomment-11837734",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/658",
            "id": 11837734,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExODM3NzM0",
            "user": {
                "login": "philsalesses",
                "id": 757781,
                "node_id": "MDQ6VXNlcjc1Nzc4MQ==",
                "avatar_url": "https://avatars3.githubusercontent.com/u/757781?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/philsalesses",
                "html_url": "https://github.com/philsalesses",
                "followers_url": "https://api.github.com/users/philsalesses/followers",
                "following_url": "https://api.github.com/users/philsalesses/following{/other_user}",
                "gists_url": "https://api.github.com/users/philsalesses/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/philsalesses/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/philsalesses/subscriptions",
                "organizations_url": "https://api.github.com/users/philsalesses/orgs",
                "repos_url": "https://api.github.com/users/philsalesses/repos",
                "events_url": "https://api.github.com/users/philsalesses/events{/privacy}",
                "received_events_url": "https://api.github.com/users/philsalesses/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-01-03T08:50:59Z",
            "updated_at": "2013-01-03T08:51:36Z",
            "author_association": "NONE",
            "body": "I hear that's what Django is\u2026 But I agree.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/11845668",
            "html_url": "https://github.com/pallets/flask/issues/658#issuecomment-11845668",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/658",
            "id": 11845668,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExODQ1NjY4",
            "user": {
                "login": "apiguy",
                "id": 163848,
                "node_id": "MDQ6VXNlcjE2Mzg0OA==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/163848?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/apiguy",
                "html_url": "https://github.com/apiguy",
                "followers_url": "https://api.github.com/users/apiguy/followers",
                "following_url": "https://api.github.com/users/apiguy/following{/other_user}",
                "gists_url": "https://api.github.com/users/apiguy/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/apiguy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/apiguy/subscriptions",
                "organizations_url": "https://api.github.com/users/apiguy/orgs",
                "repos_url": "https://api.github.com/users/apiguy/repos",
                "events_url": "https://api.github.com/users/apiguy/events{/privacy}",
                "received_events_url": "https://api.github.com/users/apiguy/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-01-03T14:43:42Z",
            "updated_at": "2013-01-03T14:43:42Z",
            "author_association": "NONE",
            "body": "I'm sorry but I don't agree at all if the idea behind this ticket is to add those features to Flask itself. I see the lack of a pre-defined structure as a feature, not a problem, and it's one of the reasons I don't use tools like Django or Ruby on Rails anymore.\n\nThe reality is, while an opinionated project structure would certainly make _some_ new programmers a bit more comfortable, those of us who use Flask daily and are quite comfortable with how it works would find that opinionated structure to be mental overhead; another thing to have to ignore, or configure away when I don't want it.\n\nOne of my favorite things about Flask is the ability to start small, and then grow the project's complexity as the actual project is built. It's very _very_ rare that a project's final size can be estimated at the beginning as you stated and so you'd simply end up back where you are now if you selected a skeleton that was too \"small\" or you'd be in dependency overhead hell if you selected a skeleton that was too \"large.\" \n\nLastly, Flask's documentation is excellent when it comes to directing you on how you might want to structure a larger application: http://flask.pocoo.org/docs/patterns/packages/ and beyond that there are hundreds of Flask based applications on github and bitbucket that you could look at to get an idea of how to structure your larger application.\n\nNow I _do_ support the idea of a 3rd party project that could provide this feature. There are already a few out there like [flask-boilerplate](https://github.com/swaroopch/flask-boilerplate) and [fbone](https://github.com/imwilsonxu/fbone).\n\nIf you absolutely have to be told what structure and extensions to use in order to be productive, you probably don't want a micro framework at all. You want a complete, kitchen-sink type of framework, and that's fine. For that case there is Django, Pyramid, and TurboGears. \n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/11847080",
            "html_url": "https://github.com/pallets/flask/issues/658#issuecomment-11847080",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/658",
            "id": 11847080,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExODQ3MDgw",
            "user": {
                "login": "mizhi",
                "id": 901983,
                "node_id": "MDQ6VXNlcjkwMTk4Mw==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/901983?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mizhi",
                "html_url": "https://github.com/mizhi",
                "followers_url": "https://api.github.com/users/mizhi/followers",
                "following_url": "https://api.github.com/users/mizhi/following{/other_user}",
                "gists_url": "https://api.github.com/users/mizhi/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mizhi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mizhi/subscriptions",
                "organizations_url": "https://api.github.com/users/mizhi/orgs",
                "repos_url": "https://api.github.com/users/mizhi/repos",
                "events_url": "https://api.github.com/users/mizhi/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mizhi/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-01-03T15:19:41Z",
            "updated_at": "2013-01-03T15:19:41Z",
            "author_association": "NONE",
            "body": "You seem to have a contradiction \u2014 on the one hand you want a structure provided for Flask apps, but on the other hand, you seem to balk at the examples showing everything in the same source. It seems to me that you actually have a problem with the _way_ apps are typically structured using flask, not that they _lack_ structure.\n\nThat said, I completely disagree with you. One of the appeals of Flask is that it is really easy to get started with and it lacks the learning curves associated with Django, Pyramid, TurboGears, RoR, etc. \n\nAdditionally, you'd probably find that trading the flexibility of Flask for the imposed structures of Django or RoR carries some drawbacks in addition to the perceived benefits. With tools like Django, you have to craft your solution to fit the model imposed by the framework. With Flask, because it doesn't impose a heavy structure on you, you have the flexibility to model your solution in the way that makes the most sense to you. It's a tradeoff that's worth considering.\n\nAs far as boilerplate, the flask project itself includes a few example apps and the documentation is excellent.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/11849038",
            "html_url": "https://github.com/pallets/flask/issues/658#issuecomment-11849038",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/658",
            "id": 11849038,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExODQ5MDM4",
            "user": {
                "login": "daGrevis",
                "id": 509529,
                "node_id": "MDQ6VXNlcjUwOTUyOQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/509529?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/daGrevis",
                "html_url": "https://github.com/daGrevis",
                "followers_url": "https://api.github.com/users/daGrevis/followers",
                "following_url": "https://api.github.com/users/daGrevis/following{/other_user}",
                "gists_url": "https://api.github.com/users/daGrevis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/daGrevis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daGrevis/subscriptions",
                "organizations_url": "https://api.github.com/users/daGrevis/orgs",
                "repos_url": "https://api.github.com/users/daGrevis/repos",
                "events_url": "https://api.github.com/users/daGrevis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/daGrevis/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-01-03T16:06:40Z",
            "updated_at": "2013-01-03T16:07:16Z",
            "author_association": "NONE",
            "body": "@apiguy Thanks for those links, it's enough and I don't think that it must be added to source code of Flask itself.\n@mizhi Thanks for your response!\n\nP.S. I didn't close issue because I want to hear @mitsuhiko feedback too!\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/11849452",
            "html_url": "https://github.com/pallets/flask/issues/658#issuecomment-11849452",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/658",
            "id": 11849452,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExODQ5NDUy",
            "user": {
                "login": "LarryEitel",
                "id": 299221,
                "node_id": "MDQ6VXNlcjI5OTIyMQ==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/299221?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/LarryEitel",
                "html_url": "https://github.com/LarryEitel",
                "followers_url": "https://api.github.com/users/LarryEitel/followers",
                "following_url": "https://api.github.com/users/LarryEitel/following{/other_user}",
                "gists_url": "https://api.github.com/users/LarryEitel/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/LarryEitel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LarryEitel/subscriptions",
                "organizations_url": "https://api.github.com/users/LarryEitel/orgs",
                "repos_url": "https://api.github.com/users/LarryEitel/repos",
                "events_url": "https://api.github.com/users/LarryEitel/events{/privacy}",
                "received_events_url": "https://api.github.com/users/LarryEitel/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-01-03T16:15:57Z",
            "updated_at": "2013-01-03T16:15:57Z",
            "author_association": "NONE",
            "body": "Just an observation... Although I have spent years with django and much less time with Flask, I DO find it productive to learn from real-world-grade implementations based on Flask. Typical apps involve common patterns. Although the docs are excellent, many learn first by reviewing best-case examples ALONG with good docs. I have personally made several REDO's of one of my apps with a view toward finding the RIGHT/BEST PRACTICE approach to achieve the objective. Again, although I see the value and have selected Flask (after getting cozy with a number of other python frameworks) based on its focus of NOT imposing structure, I am grateful for the mention just in THIS thread regarding fbone and flask-boilerplate. I would like to add a couple I also am currently learning much from: flask-kit, hip-flask, flask-security.\n\nWhat occurs to me would be perhaps a structure based on django's approach. Folks coming from django would be able to very quickly proceed from that. I always appreciate when the docs compare what django/others do with what is/can be done in flask... perhaps by using certain extensions.\n\nThanks again for everyone involved in making flask available.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/11850459",
            "html_url": "https://github.com/pallets/flask/issues/658#issuecomment-11850459",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/658",
            "id": 11850459,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExODUwNDU5",
            "user": {
                "login": "mizhi",
                "id": 901983,
                "node_id": "MDQ6VXNlcjkwMTk4Mw==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/901983?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mizhi",
                "html_url": "https://github.com/mizhi",
                "followers_url": "https://api.github.com/users/mizhi/followers",
                "following_url": "https://api.github.com/users/mizhi/following{/other_user}",
                "gists_url": "https://api.github.com/users/mizhi/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mizhi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mizhi/subscriptions",
                "organizations_url": "https://api.github.com/users/mizhi/orgs",
                "repos_url": "https://api.github.com/users/mizhi/repos",
                "events_url": "https://api.github.com/users/mizhi/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mizhi/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-01-03T16:40:47Z",
            "updated_at": "2013-01-03T16:40:47Z",
            "author_association": "NONE",
            "body": "@LarryEitel I definitely see a value in comparing/contrasting between different frameworks. I've not used Django all that much, but if you're coming from that model, it could help to see how to do it in Flask. Perhaps it may be a worthwhile endeavor to add to some of the examples currently in the repository?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/11852217",
            "html_url": "https://github.com/pallets/flask/issues/658#issuecomment-11852217",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/658",
            "id": 11852217,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExODUyMjE3",
            "user": {
                "login": "LarryEitel",
                "id": 299221,
                "node_id": "MDQ6VXNlcjI5OTIyMQ==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/299221?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/LarryEitel",
                "html_url": "https://github.com/LarryEitel",
                "followers_url": "https://api.github.com/users/LarryEitel/followers",
                "following_url": "https://api.github.com/users/LarryEitel/following{/other_user}",
                "gists_url": "https://api.github.com/users/LarryEitel/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/LarryEitel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LarryEitel/subscriptions",
                "organizations_url": "https://api.github.com/users/LarryEitel/orgs",
                "repos_url": "https://api.github.com/users/LarryEitel/repos",
                "events_url": "https://api.github.com/users/LarryEitel/events{/privacy}",
                "received_events_url": "https://api.github.com/users/LarryEitel/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-01-03T17:24:52Z",
            "updated_at": "2013-01-03T17:24:52Z",
            "author_association": "NONE",
            "body": "@mizhi I recognize everyone is busy. Likely if/when this idea is pursued, someone that is both conversant in djangop/flask would be best qualified for this.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/11882944",
            "html_url": "https://github.com/pallets/flask/issues/658#issuecomment-11882944",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/658",
            "id": 11882944,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExODgyOTQ0",
            "user": {
                "login": "sigmavirus24",
                "id": 240830,
                "node_id": "MDQ6VXNlcjI0MDgzMA==",
                "avatar_url": "https://avatars3.githubusercontent.com/u/240830?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/sigmavirus24",
                "html_url": "https://github.com/sigmavirus24",
                "followers_url": "https://api.github.com/users/sigmavirus24/followers",
                "following_url": "https://api.github.com/users/sigmavirus24/following{/other_user}",
                "gists_url": "https://api.github.com/users/sigmavirus24/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/sigmavirus24/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sigmavirus24/subscriptions",
                "organizations_url": "https://api.github.com/users/sigmavirus24/orgs",
                "repos_url": "https://api.github.com/users/sigmavirus24/repos",
                "events_url": "https://api.github.com/users/sigmavirus24/events{/privacy}",
                "received_events_url": "https://api.github.com/users/sigmavirus24/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-01-04T13:38:03Z",
            "updated_at": "2013-01-04T13:48:48Z",
            "author_association": "NONE",
            "body": "It is easy to split up a flask project and it is even described in the docs how to do so. I don't see the problem here. Maybe it should be more prominently displayed, sure, but it is there. If it weren't, my [sigmavirus24/mock_github_api](/sigmavirus24/mock_github_api) project would be one horribly large file (eventually).\n\n**Edit** and I can not find where in the docs I saw how to properly structure multi-file applications. In short, I have the following working:\n\n```\napplication_dir/\n  __init__.py\n  core.py  # where app is defined and a few others\n  file1.py  # defines one set of related views\n  file2.py  # defines another set\n  # etc.\n```\n\nAnd `__init__.py` looks like:\n\n``` python\n\"\"\"\nDocstring\n\"\"\"\n\n# Other information, author, version, copyright\n\nimport application_dir.file1\nimport application_dir.file2\n# etc\n```\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/11900247",
            "html_url": "https://github.com/pallets/flask/issues/658#issuecomment-11900247",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/658",
            "id": 11900247,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExOTAwMjQ3",
            "user": {
                "login": "daGrevis",
                "id": 509529,
                "node_id": "MDQ6VXNlcjUwOTUyOQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/509529?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/daGrevis",
                "html_url": "https://github.com/daGrevis",
                "followers_url": "https://api.github.com/users/daGrevis/followers",
                "following_url": "https://api.github.com/users/daGrevis/following{/other_user}",
                "gists_url": "https://api.github.com/users/daGrevis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/daGrevis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daGrevis/subscriptions",
                "organizations_url": "https://api.github.com/users/daGrevis/orgs",
                "repos_url": "https://api.github.com/users/daGrevis/repos",
                "events_url": "https://api.github.com/users/daGrevis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/daGrevis/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-01-04T21:18:40Z",
            "updated_at": "2013-01-04T21:18:40Z",
            "author_association": "NONE",
            "body": "I had some problems w/ importing app in tests in such way so that database is not actually created and so I can create temporary test database.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/11901356",
            "html_url": "https://github.com/pallets/flask/issues/658#issuecomment-11901356",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/658",
            "id": 11901356,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExOTAxMzU2",
            "user": {
                "login": "chauncey",
                "id": 94718,
                "node_id": "MDQ6VXNlcjk0NzE4",
                "avatar_url": "https://avatars1.githubusercontent.com/u/94718?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/chauncey",
                "html_url": "https://github.com/chauncey",
                "followers_url": "https://api.github.com/users/chauncey/followers",
                "following_url": "https://api.github.com/users/chauncey/following{/other_user}",
                "gists_url": "https://api.github.com/users/chauncey/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/chauncey/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chauncey/subscriptions",
                "organizations_url": "https://api.github.com/users/chauncey/orgs",
                "repos_url": "https://api.github.com/users/chauncey/repos",
                "events_url": "https://api.github.com/users/chauncey/events{/privacy}",
                "received_events_url": "https://api.github.com/users/chauncey/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-01-04T21:49:25Z",
            "updated_at": "2013-01-04T21:49:25Z",
            "author_association": "NONE",
            "body": "@sigmavirus24 I think this may be what you were looking for - http://flask.pocoo.org/docs/patterns/packages/\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/11915560",
            "html_url": "https://github.com/pallets/flask/issues/658#issuecomment-11915560",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/658",
            "id": 11915560,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExOTE1NTYw",
            "user": {
                "login": "sigmavirus24",
                "id": 240830,
                "node_id": "MDQ6VXNlcjI0MDgzMA==",
                "avatar_url": "https://avatars3.githubusercontent.com/u/240830?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/sigmavirus24",
                "html_url": "https://github.com/sigmavirus24",
                "followers_url": "https://api.github.com/users/sigmavirus24/followers",
                "following_url": "https://api.github.com/users/sigmavirus24/following{/other_user}",
                "gists_url": "https://api.github.com/users/sigmavirus24/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/sigmavirus24/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sigmavirus24/subscriptions",
                "organizations_url": "https://api.github.com/users/sigmavirus24/orgs",
                "repos_url": "https://api.github.com/users/sigmavirus24/repos",
                "events_url": "https://api.github.com/users/sigmavirus24/events{/privacy}",
                "received_events_url": "https://api.github.com/users/sigmavirus24/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-01-05T15:56:53Z",
            "updated_at": "2013-01-05T15:56:53Z",
            "author_association": "NONE",
            "body": "@chauncey seems to be what I remember reading. I could be wrong though, it was a while ago.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/12745503",
            "html_url": "https://github.com/pallets/flask/issues/658#issuecomment-12745503",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/658",
            "id": 12745503,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzQ1NTAz",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-01-27T00:52:53Z",
            "updated_at": "2013-01-27T00:52:53Z",
            "author_association": "MEMBER",
            "body": "My reply to that is that we should have better docs that outline how to structure apps.  I don't want Flask to force structure.\n"
        }
    ]
}