{
    "url": "https://api.github.com/repos/pallets/flask/issues/2790",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2790/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2790/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2790/events",
    "html_url": "https://github.com/pallets/flask/issues/2790",
    "id": 324076674,
    "node_id": "MDU6SXNzdWUzMjQwNzY2NzQ=",
    "number": 2790,
    "title": "Blueprint view function name should not contain dots",
    "user": {
        "login": "gdude2002",
        "id": 204153,
        "node_id": "MDQ6VXNlcjIwNDE1Mw==",
        "avatar_url": "https://avatars3.githubusercontent.com/u/204153?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gdude2002",
        "html_url": "https://github.com/gdude2002",
        "followers_url": "https://api.github.com/users/gdude2002/followers",
        "following_url": "https://api.github.com/users/gdude2002/following{/other_user}",
        "gists_url": "https://api.github.com/users/gdude2002/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gdude2002/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gdude2002/subscriptions",
        "organizations_url": "https://api.github.com/users/gdude2002/orgs",
        "repos_url": "https://api.github.com/users/gdude2002/repos",
        "events_url": "https://api.github.com/users/gdude2002/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gdude2002/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-05-17T15:34:13Z",
    "updated_at": "2018-05-24T14:18:13Z",
    "closed_at": "2018-05-24T14:10:08Z",
    "author_association": "NONE",
    "body": "I've done some homework and read up on #2450. I don't really understand the rationale behind that PR, and I don't think it really helps with Flask usage overall. To explain a bit...\r\n\r\nI maintain a [relatively complex project](https://github.com/discord-python/site) that builds its own API on top of Flask. This change heavily breaks our application structure, as we currently use dots as separators for view classes under our blueprints. Consider the following:\r\n\r\n* You have sets of blueprints - we use one for each subdomain\r\n* Each blueprint has a name - for example, `main`\r\n* Under a blueprint might be a logical section - for example, there might be an \"about\" section, so let's call this `main.about`\r\n* The logical section will have pages under it - to me, the logical thing to do is use more dots as separators, so `main.about.privacy` for example\r\n\r\nNow, one solution would be to use some other separator. Why not `about/privacy`? `about-privacy`? The thing is, regardless of what separator you decide to use there, blueprints must always be separated from the view name using a `.`. So in, `url_for()` for example, we would have to use `url_for(\"main.about/privacy\")`, which just looks plain ugly.\r\n\r\n<details>\r\n<summary>Some sample code</summary>\r\nA sample route:\r\n\r\n```py\r\nfrom pysite.base_route import TemplateView\r\n\r\nclass PrivacyView(TemplateView):\r\n    path = \"/about/privacy\"\r\n    name = \"about.privacy\"\r\n    template = \"main/about/privacy.html\"\r\n```\r\n\r\nHow we register this route:\r\n\r\n```py\r\nclass TemplateView(RouteView):\r\n    name = None  # type: str\r\n    path = None  # type: str\r\n\r\n    # We have a bunch of inheritance, but here's the relevant method from the superclass.\r\n    # RouteView inherits from MethodView and we dynamically load all our routes on startup.\r\n\r\n    @classmethod\r\n    def setup(cls: \"RouteView\", manager: \"pysite.route_manager.RouteManager\", blueprint: Blueprint):\r\n        \"\"\"\r\n        Set up the view by adding it to the blueprint passed in - this will also deal with multiple inheritance by\r\n        calling `super().setup()` as appropriate.\r\n\r\n        This is for a standard route view. Nothing special here.\r\n\r\n        :param manager: Instance of the current RouteManager\r\n        :param blueprint: Current Flask blueprint to register this route to\r\n        \"\"\"\r\n\r\n        # ... misc code\r\n\r\n        blueprint.add_url_rule(cls.path, view_func=cls.as_view(cls.name))\r\n```\r\n\r\nThis seems like the correct way to be doing this, right?\r\n</details>\r\n\r\n---\r\n\r\nSo, to summarize, here's what I'm asking:\r\n\r\n1. Why exactly was this change made in the first place?\r\n2. What should we be doing otherwise?",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/391729061",
            "html_url": "https://github.com/pallets/flask/issues/2790#issuecomment-391729061",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2790",
            "id": 391729061,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTcyOTA2MQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-05-24T14:10:07Z",
            "updated_at": "2018-05-24T14:18:13Z",
            "author_association": "MEMBER",
            "body": "> looks plain ugly\r\n\r\nLooks fine to me, although personally I'd go with `-`.\r\n\r\nThe linked issue explains what's wrong with dots in endpoint names: you can't tell which part is the blueprint vs the endpoint. Dots are for separating blueprints and endpoints. When we implement nestable blueprints (#593, #1548) it would be even more important that dots only separate full names (and would also probably make what you're doing now easier).\r\n\r\nFor now, the easiest solution is to refactor the names to use another separator. Sorry for the trouble caused!"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/391730701",
            "html_url": "https://github.com/pallets/flask/issues/2790#issuecomment-391730701",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2790",
            "id": 391730701,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTczMDcwMQ==",
            "user": {
                "login": "gdude2002",
                "id": 204153,
                "node_id": "MDQ6VXNlcjIwNDE1Mw==",
                "avatar_url": "https://avatars3.githubusercontent.com/u/204153?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gdude2002",
                "html_url": "https://github.com/gdude2002",
                "followers_url": "https://api.github.com/users/gdude2002/followers",
                "following_url": "https://api.github.com/users/gdude2002/following{/other_user}",
                "gists_url": "https://api.github.com/users/gdude2002/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gdude2002/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gdude2002/subscriptions",
                "organizations_url": "https://api.github.com/users/gdude2002/orgs",
                "repos_url": "https://api.github.com/users/gdude2002/repos",
                "events_url": "https://api.github.com/users/gdude2002/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gdude2002/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-05-24T14:14:50Z",
            "updated_at": "2018-05-24T14:14:50Z",
            "author_association": "NONE",
            "body": "Well if you don't have nestable blueprints, then the part before the first `.` is the blueprint, isn't it? Unless you're not using blueprints at all, I suppose.\r\n\r\n`-` does look marginally better I think, yeah. Still not a great situation for us, since we'll have to do a huge amount of replacing, but I guess that can't be helped.\r\n\r\nThanks for the response anyway."
        }
    ]
}