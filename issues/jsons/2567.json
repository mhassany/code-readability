{
    "url": "https://api.github.com/repos/pallets/flask/issues/2567",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2567/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2567/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2567/events",
    "html_url": "https://github.com/pallets/flask/issues/2567",
    "id": 283892902,
    "node_id": "MDU6SXNzdWUyODM4OTI5MDI=",
    "number": 2567,
    "title": "`flask.g` not reset when using  `test_client()` inside app context",
    "user": {
        "login": "malthejorgensen",
        "id": 615776,
        "node_id": "MDQ6VXNlcjYxNTc3Ng==",
        "avatar_url": "https://avatars1.githubusercontent.com/u/615776?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/malthejorgensen",
        "html_url": "https://github.com/malthejorgensen",
        "followers_url": "https://api.github.com/users/malthejorgensen/followers",
        "following_url": "https://api.github.com/users/malthejorgensen/following{/other_user}",
        "gists_url": "https://api.github.com/users/malthejorgensen/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/malthejorgensen/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/malthejorgensen/subscriptions",
        "organizations_url": "https://api.github.com/users/malthejorgensen/orgs",
        "repos_url": "https://api.github.com/users/malthejorgensen/repos",
        "events_url": "https://api.github.com/users/malthejorgensen/events{/privacy}",
        "received_events_url": "https://api.github.com/users/malthejorgensen/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-12-21T14:08:43Z",
    "updated_at": "2017-12-25T17:43:02Z",
    "closed_at": "2017-12-25T17:43:02Z",
    "author_association": "NONE",
    "body": "Using the `test_client()` inside an app context, seemingly prevents the `flask.g`-object from being reset.\r\n\r\nA test case like this \r\n\r\n```python\r\napp = flask.Flask(__name__)\r\n\r\n@app.route('/')\r\ndef index():\r\n    if hasattr(flask.g, 'value'):\r\n        flask.g.value += 1\r\n    else:\r\n        flask.g.value = 0\r\n    return bytes(flask.g.value)\r\n\r\nwith app.app_context():\r\n    with app.test_client() as client:\r\n        resp = client.get('/')\r\n        # `resp.data` will be '0'\r\n\r\n        resp = client.get('/')\r\n        # `resp.data` will be '1' here\r\n```\r\n\r\nwill return `'1'` from the second request made by the test client. As the `flask.g`-object is local to the request, I would expect a `'0'` to be returned.\r\n\r\nThis may outside of the scope of supported use-cases, or simply the way it _should_ behave. I can accept that, but I just wanted it here at least for future users.\r\n\r\n### Rationale for using `test_client()` inside an app context\r\n\r\nThe reason I do this is to be able to use `url_for()` inside my view tests, and have code like \r\n\r\n```python\r\nresponse = client.post(\r\n    url_for('blueprint_api.add_user'),\r\n    json={'name': 'John', 'email': 'john@example.org'},\r\n)\r\n```\r\n\r\nBasically I believe that my view tests shouldn't be testing a hard-coded URL (the single source of truth for that should be the route), but rather the logic of the view function.\r\n\r\n### Environment\r\n\r\n* Python version: 2.7.13\r\n* Flask version: 0.13.0\r\n* Werkzeug version: 0.13\r\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/353732404",
            "html_url": "https://github.com/pallets/flask/issues/2567#issuecomment-353732404",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2567",
            "id": 353732404,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzczMjQwNA==",
            "user": {
                "login": "wgwz",
                "id": 10120306,
                "node_id": "MDQ6VXNlcjEwMTIwMzA2",
                "avatar_url": "https://avatars2.githubusercontent.com/u/10120306?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/wgwz",
                "html_url": "https://github.com/wgwz",
                "followers_url": "https://api.github.com/users/wgwz/followers",
                "following_url": "https://api.github.com/users/wgwz/following{/other_user}",
                "gists_url": "https://api.github.com/users/wgwz/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/wgwz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wgwz/subscriptions",
                "organizations_url": "https://api.github.com/users/wgwz/orgs",
                "repos_url": "https://api.github.com/users/wgwz/repos",
                "events_url": "https://api.github.com/users/wgwz/events{/privacy}",
                "received_events_url": "https://api.github.com/users/wgwz/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-12-23T15:35:49Z",
            "updated_at": "2017-12-23T15:35:49Z",
            "author_association": "CONTRIBUTOR",
            "body": "http://flask.pocoo.org/docs/dev/api/#flask.g\r\n\r\n>Starting with Flask 0.10 this is stored on the application context and no longer on the request context which means it becomes available if only the application context is bound and not yet a request. This is especially useful when combined with the Faking Resources and Context pattern for testing.\r\n\r\nThis was interesting for me to look into! But it looks like you're misunderstanding where `flask.g` is stored. It looks like this is the intended behavior. It is perfectly reasonable to want to use `url_for` tests. \r\n\r\nThis is the MCVE that worked for me: \r\n```import flask                                                                   \r\n                                                                               \r\napp = flask.Flask(__name__)                                                    \r\napp.config.update({'SERVER_NAME':'test'})                                      \r\n                                                                               \r\n@app.route('/')                                                                \r\ndef index():                                                                   \r\n    if hasattr(flask.g, 'value'):                                              \r\n        flask.g.value += 1                                                     \r\n    else:                                                                      \r\n        flask.g.value = 0                                                      \r\n    return str(flask.g.value)                                                  \r\n                                                                               \r\nwith app.app_context() as ctx:                                                 \r\n    with app.test_client() as client:                                          \r\n        resp = client.get(flask.url_for('index'))                              \r\n        app.logger.info(resp)                                                  \r\n        app.logger.info(resp.data)                                             \r\n        # `resp.data` will be '0'                                              \r\n                                                                               \r\n        resp = client.get(flask.url_for('index'))                              \r\n        app.logger.info(resp)                                                  \r\n        app.logger.info(resp.data)                                             \r\n        # `resp.data` will be '1' here ```\r\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/353882157",
            "html_url": "https://github.com/pallets/flask/issues/2567#issuecomment-353882157",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2567",
            "id": 353882157,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM1Mzg4MjE1Nw==",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-12-25T17:43:02Z",
            "updated_at": "2017-12-25T17:43:02Z",
            "author_association": "MEMBER",
            "body": "Yep. The current behavior is intended behavior indeed. Whenever the last app context closes of the current app it's cleaned up."
        }
    ]
}