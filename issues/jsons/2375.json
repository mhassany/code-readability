{
    "url": "https://api.github.com/repos/pallets/flask/issues/2375",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2375/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2375/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2375/events",
    "html_url": "https://github.com/pallets/flask/issues/2375",
    "id": 235997561,
    "node_id": "MDU6SXNzdWUyMzU5OTc1NjE=",
    "number": 2375,
    "title": "Add .env support, take 2",
    "user": {
        "login": "davidism",
        "id": 1242887,
        "node_id": "MDQ6VXNlcjEyNDI4ODc=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidism",
        "html_url": "https://github.com/davidism",
        "followers_url": "https://api.github.com/users/davidism/followers",
        "following_url": "https://api.github.com/users/davidism/following{/other_user}",
        "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
        "organizations_url": "https://api.github.com/users/davidism/orgs",
        "repos_url": "https://api.github.com/users/davidism/repos",
        "events_url": "https://api.github.com/users/davidism/events{/privacy}",
        "received_events_url": "https://api.github.com/users/davidism/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 380608249,
            "node_id": "MDU6TGFiZWwzODA2MDgyNDk=",
            "url": "https://api.github.com/repos/pallets/flask/labels/cli",
            "name": "cli",
            "color": "1d76db",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
        "url": "https://api.github.com/repos/pallets/flask/milestones/2",
        "html_url": "https://github.com/pallets/flask/milestone/2",
        "labels_url": "https://api.github.com/repos/pallets/flask/milestones/2/labels",
        "id": 795954,
        "node_id": "MDk6TWlsZXN0b25lNzk1OTU0",
        "number": 2,
        "title": "1.0",
        "description": "",
        "creator": {
            "login": "untitaker",
            "id": 837573,
            "node_id": "MDQ6VXNlcjgzNzU3Mw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/untitaker",
            "html_url": "https://github.com/untitaker",
            "followers_url": "https://api.github.com/users/untitaker/followers",
            "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
            "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
            "organizations_url": "https://api.github.com/users/untitaker/orgs",
            "repos_url": "https://api.github.com/users/untitaker/repos",
            "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
            "received_events_url": "https://api.github.com/users/untitaker/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 0,
        "closed_issues": 159,
        "state": "closed",
        "created_at": "2014-09-19T15:47:20Z",
        "updated_at": "2018-04-26T21:07:44Z",
        "due_on": "2018-04-26T07:00:00Z",
        "closed_at": "2018-04-26T21:07:44Z"
    },
    "comments": 24,
    "created_at": "2017-06-14T20:18:30Z",
    "updated_at": "2017-07-16T20:55:19Z",
    "closed_at": "2017-07-16T20:55:19Z",
    "author_association": "MEMBER",
    "body": "Setting the `FLASK_APP` and `FLASK_DEBUG` for every new terminal session is inconvenient. The CLI could load a `.env` file that contained these values instead. Since Heroku is a popular deployment option, this would also help developers who want the same scheme locally.\r\n\r\nInstead of writing our own parser, we should use [python-dotenv](https://github.com/theskumar/python-dotenv). This reduces maintenance burden on us and can be an optional dependency. If it is installed, the CLI will load the `.env`, otherwise it will skip it.\r\n\r\nPreviously discussed in #2164.\r\n\r\n---\r\n\r\n@miguelgrinberg raised a good point in the previous thread. `.env` is typically used to store sensitive configuration. The convenience of setting `FLASK_APP=` there could encourage users to commit the file publicly, which would be bad.\r\n\r\nA solution would be to load two files, `.flask-env` and `.env`, and prominently document that `.flask-env` can be committed but should not contain secrets.",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/308546545",
            "html_url": "https://github.com/pallets/flask/issues/2375#issuecomment-308546545",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2375",
            "id": 308546545,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwODU0NjU0NQ==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-14T20:20:05Z",
            "updated_at": "2017-06-14T20:20:12Z",
            "author_association": "MEMBER",
            "body": "i'd prefer `.flaskenv` similar to `.foorc` (and not `.foo-rc`)"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/308548242",
            "html_url": "https://github.com/pallets/flask/issues/2375#issuecomment-308548242",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2375",
            "id": 308548242,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwODU0ODI0Mg==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-14T20:26:50Z",
            "updated_at": "2017-06-14T20:26:50Z",
            "author_association": "MEMBER",
            "body": "That makes sense, I have no strong opinion on the name."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/308553311",
            "html_url": "https://github.com/pallets/flask/issues/2375#issuecomment-308553311",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2375",
            "id": 308553311,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwODU1MzMxMQ==",
            "user": {
                "login": "miguelgrinberg",
                "id": 2715854,
                "node_id": "MDQ6VXNlcjI3MTU4NTQ=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/miguelgrinberg",
                "html_url": "https://github.com/miguelgrinberg",
                "followers_url": "https://api.github.com/users/miguelgrinberg/followers",
                "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions",
                "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs",
                "repos_url": "https://api.github.com/users/miguelgrinberg/repos",
                "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}",
                "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-14T20:47:18Z",
            "updated_at": "2017-06-14T20:50:56Z",
            "author_association": "MEMBER",
            "body": "I'm in favor of using python-dotenv. I have started using it on my projects, in place of my own less robust implementation. I'm also in favor of having Flask import a `.env` file, that is not supposed to be in source control. I think this would be a great addition regardless of the main point of this discussion.\r\n\r\nI think using a `.flaskenv` for the Flask env vars is a better idea than what we discussed in #2164. But I keep thinking that for people that use app factory functions now need to add two files: a `wsgi.py` that calls the factory function, and then this new `.flaskenv` that points to it.\r\n\r\nImplementing support for referencing a factory function in `FLASK_APP` is, in my opinion, not a great idea because the function might need custom arguments. So I see no way to avoid the need for a `wsgi.py` file.\r\n\r\nOn the other side, the Flask CLI is perfectly happy to look for `app` or `application` in the module referenced by `FLASK_APP` if you don't give it a specific app name. So what if we also add sensible defaults for module name? For example, if `FLASK_APP` is not defined, we look for `wsgi.py` and `flaskapp.py` and use those. So then we have the following options:\r\n\r\n- `FLASK_APP` is not defined: look for `app` or `application` in `wsgi.py` or `flaskapp.py`.\r\n- `FLASK_APP=module.py`: look for `app` or `application` in`module.py`\r\n- `FLASK_APP=:myapp`: look for `myapp` in `wsgi.py` or `flaskapp.py`\r\n- `FLASK_APP=module.py:myapp`: look for `myapp` in `module.py`"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/308555376",
            "html_url": "https://github.com/pallets/flask/issues/2375#issuecomment-308555376",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2375",
            "id": 308555376,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwODU1NTM3Ng==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-14T20:55:11Z",
            "updated_at": "2017-06-14T20:57:07Z",
            "author_association": "MEMBER",
            "body": "@miguelgrinberg at the PyCon sprints, @HndrkMkt merged in a set of patches that allows the `flask` command to autodetect factories and `FLASK_APP` to specify them, optionally with arguments. So no wrapper file will be required in the next version. For example, `FLASK_APP=myapp:create_app('dev') flask run`. #2297, #2319, #2326"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/308558261",
            "html_url": "https://github.com/pallets/flask/issues/2375#issuecomment-308558261",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2375",
            "id": 308558261,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwODU1ODI2MQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-14T21:06:36Z",
            "updated_at": "2017-06-14T21:06:36Z",
            "author_association": "MEMBER",
            "body": "I'm not sure about autodetecting the module, that seems a bit too magical. (Yes, I realize this is weird given the rest of the autodetection.) It would only benefit single-file apps, and devs like to choose all sorts of file names whether their app is a module or a package. They would also still use `FLASK_DEBUG`.\r\n\r\nAnyway, that's sort of tangential to the dotenv support. We should discuss that in a separate issue."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/308562882",
            "html_url": "https://github.com/pallets/flask/issues/2375#issuecomment-308562882",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2375",
            "id": 308562882,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwODU2Mjg4Mg==",
            "user": {
                "login": "miguelgrinberg",
                "id": 2715854,
                "node_id": "MDQ6VXNlcjI3MTU4NTQ=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/miguelgrinberg",
                "html_url": "https://github.com/miguelgrinberg",
                "followers_url": "https://api.github.com/users/miguelgrinberg/followers",
                "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions",
                "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs",
                "repos_url": "https://api.github.com/users/miguelgrinberg/repos",
                "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}",
                "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-14T21:26:04Z",
            "updated_at": "2017-06-14T21:30:50Z",
            "author_association": "MEMBER",
            "body": "In my opinion, `FLASK_APP` is not in the same category as `FLASK_DEBUG`. The former can be considered static and universal. Needs to be set regardless of environment (dev, prod or test). The latter is a configuration setting that only applies to specific cases. And it's a setting that you can also set via the Flask config object, or the `--debug` CLI option.\r\n\r\nThe reason I brought up the defaults for module names is that if we agree to implement them, then you have a way to not need to use `FLASK_APP`.\r\n\r\nRegarding the factory support for `FLASK_APP`, it looks pretty good, but it does not seem to cover all the possible cases. Basically I would need to do something like this:\r\n\r\n    FLASK_APP=app:create_app(os.getenv('FLASK_CONFIG') or 'default')\r\n\r\nThe `create_app` function is in the `app/__init__.py` module. I need to debug this, but Flask master fails to import `app` as given above, for some reason. If I move `create_app` to a top-level module then that part works, but the expression I need for the function's single argument does not seem to be accepted, the factory function gets `script_info` as this configuration argument."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/308668602",
            "html_url": "https://github.com/pallets/flask/issues/2375#issuecomment-308668602",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2375",
            "id": 308668602,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwODY2ODYwMg==",
            "user": {
                "login": "HndrkMkt",
                "id": 2699097,
                "node_id": "MDQ6VXNlcjI2OTkwOTc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/2699097?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/HndrkMkt",
                "html_url": "https://github.com/HndrkMkt",
                "followers_url": "https://api.github.com/users/HndrkMkt/followers",
                "following_url": "https://api.github.com/users/HndrkMkt/following{/other_user}",
                "gists_url": "https://api.github.com/users/HndrkMkt/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/HndrkMkt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/HndrkMkt/subscriptions",
                "organizations_url": "https://api.github.com/users/HndrkMkt/orgs",
                "repos_url": "https://api.github.com/users/HndrkMkt/repos",
                "events_url": "https://api.github.com/users/HndrkMkt/events{/privacy}",
                "received_events_url": "https://api.github.com/users/HndrkMkt/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-15T08:44:25Z",
            "updated_at": "2017-06-15T08:44:25Z",
            "author_association": "CONTRIBUTOR",
            "body": "@miguelgrinberg, that it fails to evaluate your argument expression is due to the fact that @davidism and I decided to limit the argument support to literals. (See https://github.com/pallets/flask/pull/2326/files#diff-61bbd5ac9238364564a7315cc6bc2156R114 for the evaluation).\r\n\r\nI'll prepare a PR later that updates docs and tests to point out this limitation."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/308708095",
            "html_url": "https://github.com/pallets/flask/issues/2375#issuecomment-308708095",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2375",
            "id": 308708095,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwODcwODA5NQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-15T11:49:33Z",
            "updated_at": "2017-06-15T11:49:33Z",
            "author_association": "MEMBER",
            "body": "Entering quotes in an env var is unfortunately not straightforward. We should document that. Also, it's possible to reference a var or default."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/308734983",
            "html_url": "https://github.com/pallets/flask/issues/2375#issuecomment-308734983",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2375",
            "id": 308734983,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwODczNDk4Mw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-15T13:51:04Z",
            "updated_at": "2017-06-15T13:55:04Z",
            "author_association": "MEMBER",
            "body": "```bash\r\n# need nested quotes to get \"string\" in arg list\r\nFLASK_APP=hello:create_app(\"'dev'\") flask run\r\n# can get var or default\r\nFLASK_CONFIG=\"'dev'\" FLASK_APP=hello:create_app(${FLASK_CONFIG:-\"'default'\"}) flask run\r\n```\r\n\r\nAlthough in the second one, while it works, I'd rather do it in Python instead.\r\n\r\n```python\r\ndef create_app(config=None):\r\n    if config is None:\r\n        config = os.environ.get('FLASK_CONFIG', 'default')\r\n    ...\r\n```\r\n\r\n```bash\r\n# all equivalent\r\nFLASK_APP=hello flask run\r\nFLASK_CONFIG='dev' FLASK_APP=hello flask run\r\nFLASK_APP=hello:create_app(\"'dev'\") flask run\r\n```\r\n\r\nAlso, python-dotenv says it doesn't support variable defaults yet."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/308756209",
            "html_url": "https://github.com/pallets/flask/issues/2375#issuecomment-308756209",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2375",
            "id": 308756209,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwODc1NjIwOQ==",
            "user": {
                "login": "miguelgrinberg",
                "id": 2715854,
                "node_id": "MDQ6VXNlcjI3MTU4NTQ=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/miguelgrinberg",
                "html_url": "https://github.com/miguelgrinberg",
                "followers_url": "https://api.github.com/users/miguelgrinberg/followers",
                "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions",
                "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs",
                "repos_url": "https://api.github.com/users/miguelgrinberg/repos",
                "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}",
                "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-15T14:47:43Z",
            "updated_at": "2017-06-15T14:47:43Z",
            "author_association": "MEMBER",
            "body": "Regarding quotes, looks like I did not do it above in my example, but for bash, the easiest is to enclose the whole thing in doble quotes, and only use single quotes for your literals. This is actually what I tried yesterday and failed to correctly copy here:\r\n\r\n    FLASK_APP=\"app:create_app(os.getenv('FLASK_CONFIG') or 'default')\"\r\n\r\nBut of course, this works in bash/zsh/etc only. I suspect you are going to have a lot more trouble to get something like this to work on Windows.\r\n\r\nYour suggested solution of letting the shell do the env var replacement should work, but again, it is a bash only solution.\r\n\r\nMoving this logic into the factory function, as you also suggested above, is not ideal. The default could be context based, so it is better handled by the caller. When you are running unit tests, for example, you will probably want the default configuration to be `'test'` instead of `'default'`. If you are starting a Celery worker for your app, for example, you'll probably want yet another configuration to be the default.\r\n\r\nI would personally not go through all these troubles to define `FLASK_APP`. Adding a `wsgi.py` file (which is already covered in the docs) is way more simple, and allows you to work in Python, regardless of the OS and shell that you use. So what I'm wondering is if we can agree that having a default for module name thus making `FLASK_APP` optional makes sense or not, maybe in addition to the .flaskenv effort which you seem to prefer."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/308791246",
            "html_url": "https://github.com/pallets/flask/issues/2375#issuecomment-308791246",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2375",
            "id": 308791246,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwODc5MTI0Ng==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-15T16:14:56Z",
            "updated_at": "2017-06-15T16:14:56Z",
            "author_association": "MEMBER",
            "body": "If the default changes per context, then it's not a default. Isn't that the whole point of changing the env var or the argument to the factory?\r\n\r\nAnyway, I understand that the wrapper file can still be useful for complex situations. Recognizing `wsgi.py` as a standard wrapper name, and `app.py` to support quick demo apps, seems fine.\r\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/308793239",
            "html_url": "https://github.com/pallets/flask/issues/2375#issuecomment-308793239",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2375",
            "id": 308793239,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwODc5MzIzOQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-15T16:22:02Z",
            "updated_at": "2017-06-15T16:22:02Z",
            "author_association": "MEMBER",
            "body": "I've moved detecting `wsgi.py` to a separate issue, #2376. Discussion here should be about the logistics of `.env` support itself."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/308794142",
            "html_url": "https://github.com/pallets/flask/issues/2375#issuecomment-308794142",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2375",
            "id": 308794142,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwODc5NDE0Mg==",
            "user": {
                "login": "miguelgrinberg",
                "id": 2715854,
                "node_id": "MDQ6VXNlcjI3MTU4NTQ=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/miguelgrinberg",
                "html_url": "https://github.com/miguelgrinberg",
                "followers_url": "https://api.github.com/users/miguelgrinberg/followers",
                "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions",
                "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs",
                "repos_url": "https://api.github.com/users/miguelgrinberg/repos",
                "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}",
                "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-15T16:25:30Z",
            "updated_at": "2017-06-15T16:25:30Z",
            "author_association": "MEMBER",
            "body": "Thanks. I'll see if I can come up with something for #2376.\r\n\r\nCircling back to the `.flaskenv` support. One thing that I think we need to clarify is its use for FLASK_DEBUG, which can be confusing. You obviously don't want to store `FLASK_DEBUG=1` in `.flaskenv` and then commit the file to source control. If we are going to have `.env` and `.flaskenv` with only the latter on source control, it seems to me debug settings should go on the former."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/308862008",
            "html_url": "https://github.com/pallets/flask/issues/2375#issuecomment-308862008",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2375",
            "id": 308862008,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwODg2MjAwOA==",
            "user": {
                "login": "bovarysme",
                "id": 25013194,
                "node_id": "MDQ6VXNlcjI1MDEzMTk0",
                "avatar_url": "https://avatars1.githubusercontent.com/u/25013194?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/bovarysme",
                "html_url": "https://github.com/bovarysme",
                "followers_url": "https://api.github.com/users/bovarysme/followers",
                "following_url": "https://api.github.com/users/bovarysme/following{/other_user}",
                "gists_url": "https://api.github.com/users/bovarysme/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/bovarysme/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bovarysme/subscriptions",
                "organizations_url": "https://api.github.com/users/bovarysme/orgs",
                "repos_url": "https://api.github.com/users/bovarysme/repos",
                "events_url": "https://api.github.com/users/bovarysme/events{/privacy}",
                "received_events_url": "https://api.github.com/users/bovarysme/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-15T20:50:19Z",
            "updated_at": "2017-06-15T20:50:19Z",
            "author_association": "CONTRIBUTOR",
            "body": "Repeating an issue that was brought up in the previous thread: if `.env` is used to store secrets and is only loaded when Flask's CLI is invoked, it might have a limited use on production environments that use a WSGI server to run the application.\r\n\r\nOn the contrary, if `.env` is loaded on app instanciation, does it deprecate instance relative configurations? It seems to me these features both solve the same problem (having different secrets on different environments). For example one could write multiple `.env` files (`.env.production`, `.env.staging`, `.env.development`), not checked in version control, and push the correct file on each environment using a configuration management tool."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/308865376",
            "html_url": "https://github.com/pallets/flask/issues/2375#issuecomment-308865376",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2375",
            "id": 308865376,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwODg2NTM3Ng==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-15T21:04:21Z",
            "updated_at": "2017-06-15T21:05:12Z",
            "author_association": "MEMBER",
            "body": "Instance folders don't work on services like Heroku that place their configuration in env vars and don't have persistent storage. This helps mirror that locally for developers using those services. They still have to do extra work to convert env vars to proper config values, which we recently documented. This shouldn't replace instance folders.\r\n\r\nI see this as a convenience during development. In production, there's probably something else like Systemd or Docker setting env vars. If a developer still wants to use a `.env` file they can use python-dotenv manually during `create_app` or in `wsgi.py`."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/308866103",
            "html_url": "https://github.com/pallets/flask/issues/2375#issuecomment-308866103",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2375",
            "id": 308866103,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwODg2NjEwMw==",
            "user": {
                "login": "miguelgrinberg",
                "id": 2715854,
                "node_id": "MDQ6VXNlcjI3MTU4NTQ=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/miguelgrinberg",
                "html_url": "https://github.com/miguelgrinberg",
                "followers_url": "https://api.github.com/users/miguelgrinberg/followers",
                "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions",
                "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs",
                "repos_url": "https://api.github.com/users/miguelgrinberg/repos",
                "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}",
                "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-15T21:07:29Z",
            "updated_at": "2017-06-15T21:08:58Z",
            "author_association": "MEMBER",
            "body": "I am going to side with @bovarysme. If the `.env` file is going to be imported, it needs to be imported regardless of how the application is started. It's too confusing and error prone to have this work only when you run the application via the flask cli.\r\n\r\nI agree that it is a feature designed to help development, but what if I want to do a quick test running gunicorn or uwsgi? Maybe I won't even realize that I'm running a completely different configuration.\r\n\r\nBesides, having a unified way to import environment is nice. I don't see a reason not to do this in all cases. If you don't want to do it, don't write a .env file."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/308868855",
            "html_url": "https://github.com/pallets/flask/issues/2375#issuecomment-308868855",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2375",
            "id": 308868855,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwODg2ODg1NQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-15T21:19:45Z",
            "updated_at": "2017-06-15T21:19:45Z",
            "author_association": "MEMBER",
            "body": "Where should it be loaded then? `Flask.__init__`? It needs to be loaded before that for the CLI, but shouldn't hurt to load it in both places."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/308870977",
            "html_url": "https://github.com/pallets/flask/issues/2375#issuecomment-308870977",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2375",
            "id": 308870977,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwODg3MDk3Nw==",
            "user": {
                "login": "miguelgrinberg",
                "id": 2715854,
                "node_id": "MDQ6VXNlcjI3MTU4NTQ=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/miguelgrinberg",
                "html_url": "https://github.com/miguelgrinberg",
                "followers_url": "https://api.github.com/users/miguelgrinberg/followers",
                "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions",
                "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs",
                "repos_url": "https://api.github.com/users/miguelgrinberg/repos",
                "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}",
                "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-15T21:28:54Z",
            "updated_at": "2017-06-15T21:28:54Z",
            "author_association": "MEMBER",
            "body": "Right, that sounds tricky. Would it make sense to do it in `flask/__init__.py`? This is the main `flask` package, not the `Flask` class."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/308873898",
            "html_url": "https://github.com/pallets/flask/issues/2375#issuecomment-308873898",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2375",
            "id": 308873898,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwODg3Mzg5OA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-15T21:42:27Z",
            "updated_at": "2017-06-15T21:42:27Z",
            "author_association": "MEMBER",
            "body": "I'm not sure if I'm comfortable with import side effects, although I can't think why it would hurt in this case."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/308873967",
            "html_url": "https://github.com/pallets/flask/issues/2375#issuecomment-308873967",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2375",
            "id": 308873967,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwODg3Mzk2Nw==",
            "user": {
                "login": "justanr",
                "id": 4221605,
                "node_id": "MDQ6VXNlcjQyMjE2MDU=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/4221605?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/justanr",
                "html_url": "https://github.com/justanr",
                "followers_url": "https://api.github.com/users/justanr/followers",
                "following_url": "https://api.github.com/users/justanr/following{/other_user}",
                "gists_url": "https://api.github.com/users/justanr/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/justanr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justanr/subscriptions",
                "organizations_url": "https://api.github.com/users/justanr/orgs",
                "repos_url": "https://api.github.com/users/justanr/repos",
                "events_url": "https://api.github.com/users/justanr/events{/privacy}",
                "received_events_url": "https://api.github.com/users/justanr/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-15T21:42:48Z",
            "updated_at": "2017-06-15T21:43:13Z",
            "author_association": "NONE",
            "body": "I think loading in any sort of init should be avoided if at all reasonably possible, having  dealt with packages that do that it's an absolute nightmare, not just in testing but sometimes in just running the thing.\r\n\r\nWhat value does this env file serve over a cfg file that's loaded at run time? And will this open the door to people asking for other config options - do we then debate loading from redis or consul? The answer is hopefully no, but this does set the precedent for considering those if accepted.\r\n\r\nIf this is accepted as something we want, would a new method on the config object be more appropriate? Say one that accepted an env file and how to handle it?  "
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/308875399",
            "html_url": "https://github.com/pallets/flask/issues/2375#issuecomment-308875399",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2375",
            "id": 308875399,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwODg3NTM5OQ==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-15T21:49:27Z",
            "updated_at": "2017-06-15T21:50:55Z",
            "author_association": "MEMBER",
            "body": "I'm also very much against having this code run at import time.\r\n\r\nHow about making it a normal function e.g. in `flask.util` and then call it from both the CLI code and from `Flask.__init__`?\r\n\r\n`Flask.__init__` and `FlaskGroup` (for custom CLIs) should probably also have kwargs to disable this completely."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/308876108",
            "html_url": "https://github.com/pallets/flask/issues/2375#issuecomment-308876108",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2375",
            "id": 308876108,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwODg3NjEwOA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-15T21:52:44Z",
            "updated_at": "2017-06-15T21:52:44Z",
            "author_association": "MEMBER",
            "body": "The immediate problem this was proposed to solve was setting the env vars for the cli, which has to happen before the app is available. The discussion is around keeping the behavior when not using the cli.\r\n\r\nNote that this will all be optional however it ends up working. If dotenv is not installed it will be skipped.\r\n\r\nI think loading in `Flask.__init__` with an argument to disable would be acceptable. In addition to loading early in the cli."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/309948275",
            "html_url": "https://github.com/pallets/flask/issues/2375#issuecomment-309948275",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2375",
            "id": 309948275,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTk0ODI3NQ==",
            "user": {
                "login": "lepture",
                "id": 290496,
                "node_id": "MDQ6VXNlcjI5MDQ5Ng==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/290496?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/lepture",
                "html_url": "https://github.com/lepture",
                "followers_url": "https://api.github.com/users/lepture/followers",
                "following_url": "https://api.github.com/users/lepture/following{/other_user}",
                "gists_url": "https://api.github.com/users/lepture/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/lepture/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lepture/subscriptions",
                "organizations_url": "https://api.github.com/users/lepture/orgs",
                "repos_url": "https://api.github.com/users/lepture/repos",
                "events_url": "https://api.github.com/users/lepture/events{/privacy}",
                "received_events_url": "https://api.github.com/users/lepture/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-21T02:52:47Z",
            "updated_at": "2017-06-21T02:52:47Z",
            "author_association": "MEMBER",
            "body": "> Setting the FLASK_APP and FLASK_DEBUG for every new terminal session is inconvenient.\r\n\r\nIs this the problem that we should solve? `.env` may be a solution, but it is not the only solution. I prefer the flask-script way.\r\n\r\ne.g. here is the `app.py`:\r\n\r\n```python\r\napp = create_app()\r\n\r\nif __name__ == '__main__':\r\n    app.create_cli()\r\n```\r\n\r\nAnd then, we can call `python app.py run`."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/311703343",
            "html_url": "https://github.com/pallets/flask/issues/2375#issuecomment-311703343",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2375",
            "id": 311703343,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTcwMzM0Mw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-28T15:51:48Z",
            "updated_at": "2017-06-28T15:51:48Z",
            "author_association": "MEMBER",
            "body": "@lepture you can still do that:\r\n\r\n```python\r\ncli = FlaskGroup(create_app=create_app)\r\n\r\nif __name__ == '__main__':\r\n    cli()\r\n```\r\n\r\nYou can also add an entry point for it:\r\n\r\n```python\r\nsetup(\r\n    ...,\r\n    entry_points={\r\n        'console_scripts': [\r\n            'myapp=myapp:cli',\r\n        ],\r\n    },\r\n)\r\n```\r\n\r\n```\r\nmyapp run\r\n```\r\n\r\nThis still doesn't replace the `FLASK_DEBUG` env var though."
        }
    ]
}