{
    "url": "https://api.github.com/repos/pallets/flask/issues/516",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/516/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/516/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/516/events",
    "html_url": "https://github.com/pallets/flask/issues/516",
    "id": 4828433,
    "node_id": "MDU6SXNzdWU0ODI4NDMz",
    "number": 516,
    "title": "Login example broke the flow",
    "user": {
        "login": "dansalmo",
        "id": 1775088,
        "node_id": "MDQ6VXNlcjE3NzUwODg=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1775088?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dansalmo",
        "html_url": "https://github.com/dansalmo",
        "followers_url": "https://api.github.com/users/dansalmo/followers",
        "following_url": "https://api.github.com/users/dansalmo/following{/other_user}",
        "gists_url": "https://api.github.com/users/dansalmo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dansalmo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dansalmo/subscriptions",
        "organizations_url": "https://api.github.com/users/dansalmo/orgs",
        "repos_url": "https://api.github.com/users/dansalmo/repos",
        "events_url": "https://api.github.com/users/dansalmo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dansalmo/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2012-05-31T01:31:16Z",
    "updated_at": "2014-07-26T13:53:28Z",
    "closed_at": "2014-07-26T13:53:28Z",
    "author_association": "NONE",
    "body": "I am very new to python, flask, heroku, git etc. but I was able to easily and successfully flow through the quickstart guide and get the minimal app deployed on heroku.  I was very impressed with documentation flow and accuracy.  However, I ran into a significant stumbling block with the \"HTTP Methods\" section.  There were two issues that caused me stumble and I think others may stumble here as well.\n\nThe most significant issue was that the login example code calls descriptive stubs that don't exist.  This may be fine for those that already understand what the example is showing, but for people like me that learn by trying to run the code examples, it took quite a while to figure that my app was crashing due to the non-existent function calls.\n\nThe second issue involves the difference between the flask routing and what I was familiar with for form processing in PHP.   I initially expected something along the lines of a login.py script that would get invoked by <code>action=\"http://mysite.com/login.py\"</code> attribute of the form.\n\nEventually I figured out how it worked by creating what I believe would be a more easily understood example for the method and form functionality.  This is the code that I eventually created to learn and confirm the functionality.\n\nPlease consider revising the Flask example(s) to show code that can actually be executed like the previous examples I have tried, and to show what the HTML would look like if needed. \n\n```\n@app.route('/form', methods=['POST', 'GET'])\ndef form():\n    if request.method == 'POST':\n        return 'form POST dictionary: %s' % request.form\n    if request.method == 'GET':\n        return 'form GET args: %s' % request.args\n```\n\n```\n<form method=\"POST\" action=\"http://your_sites_url_here.com/form\">\n  Username: <input type=\"text\" name=\"username\" size=\"15\" /><br />\n  Password: <input type=\"password\" name=\"password\" size=\"15\" /><br />\n            <p><input type=\"submit\" value=\"Login\" /></p>\n </form>\n```\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/6515281",
            "html_url": "https://github.com/pallets/flask/issues/516#issuecomment-6515281",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/516",
            "id": 6515281,
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTUyODE=",
            "user": {
                "login": "jasonLaster",
                "id": 254562,
                "node_id": "MDQ6VXNlcjI1NDU2Mg==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/254562?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jasonLaster",
                "html_url": "https://github.com/jasonLaster",
                "followers_url": "https://api.github.com/users/jasonLaster/followers",
                "following_url": "https://api.github.com/users/jasonLaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/jasonLaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jasonLaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jasonLaster/subscriptions",
                "organizations_url": "https://api.github.com/users/jasonLaster/orgs",
                "repos_url": "https://api.github.com/users/jasonLaster/repos",
                "events_url": "https://api.github.com/users/jasonLaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jasonLaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2012-06-22T18:42:38Z",
            "updated_at": "2012-06-22T18:42:38Z",
            "author_association": "NONE",
            "body": "I like the pseudocode `do_the_login()` and `show_the_login_form()`. Maybe we can comment them out so that it's obvious that these two methods are not supposed to be run. \n\nAlso, I got stuck at this point too because I did not know that I had to import Request. Maybe it would be possible to link to a complete working example for each of these small examples so that it would be easy to see the important code and then copy and paste the full example and play with it?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/10327146",
            "html_url": "https://github.com/pallets/flask/issues/516#issuecomment-10327146",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/516",
            "id": 10327146,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzI3MTQ2",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2012-11-13T14:07:49Z",
            "updated_at": "2012-11-13T14:07:49Z",
            "author_association": "MEMBER",
            "body": "IMO it's obvious that functions you didn't import or define in your code don't exist.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/10332673",
            "html_url": "https://github.com/pallets/flask/issues/516#issuecomment-10332673",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/516",
            "id": 10332673,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzMyNjcz",
            "user": {
                "login": "dansalmo",
                "id": 1775088,
                "node_id": "MDQ6VXNlcjE3NzUwODg=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/1775088?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/dansalmo",
                "html_url": "https://github.com/dansalmo",
                "followers_url": "https://api.github.com/users/dansalmo/followers",
                "following_url": "https://api.github.com/users/dansalmo/following{/other_user}",
                "gists_url": "https://api.github.com/users/dansalmo/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/dansalmo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dansalmo/subscriptions",
                "organizations_url": "https://api.github.com/users/dansalmo/orgs",
                "repos_url": "https://api.github.com/users/dansalmo/repos",
                "events_url": "https://api.github.com/users/dansalmo/events{/privacy}",
                "received_events_url": "https://api.github.com/users/dansalmo/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2012-11-13T16:37:04Z",
            "updated_at": "2012-11-13T16:37:04Z",
            "author_association": "NONE",
            "body": "Sometimes obvious is not good enough for a good user experience.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/10332780",
            "html_url": "https://github.com/pallets/flask/issues/516#issuecomment-10332780",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/516",
            "id": 10332780,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzMyNzgw",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2012-11-13T16:39:55Z",
            "updated_at": "2012-11-13T16:39:55Z",
            "author_association": "MEMBER",
            "body": "This is not targeted to the end user though, also a developer should at least work through a basic introductory book before just trying.\n\nFlask was made to make writing webapps faster in Python, but it will never work without a basic understanding of the language you're using.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/10334233",
            "html_url": "https://github.com/pallets/flask/issues/516#issuecomment-10334233",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/516",
            "id": 10334233,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzM0MjMz",
            "user": {
                "login": "dansalmo",
                "id": 1775088,
                "node_id": "MDQ6VXNlcjE3NzUwODg=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/1775088?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/dansalmo",
                "html_url": "https://github.com/dansalmo",
                "followers_url": "https://api.github.com/users/dansalmo/followers",
                "following_url": "https://api.github.com/users/dansalmo/following{/other_user}",
                "gists_url": "https://api.github.com/users/dansalmo/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/dansalmo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dansalmo/subscriptions",
                "organizations_url": "https://api.github.com/users/dansalmo/orgs",
                "repos_url": "https://api.github.com/users/dansalmo/repos",
                "events_url": "https://api.github.com/users/dansalmo/events{/privacy}",
                "received_events_url": "https://api.github.com/users/dansalmo/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2012-11-13T17:15:46Z",
            "updated_at": "2012-11-13T17:15:46Z",
            "author_association": "NONE",
            "body": "A key reason Python is so popular is the usability of the language, available documentation and tools as compared to other languages.  This seems to be by careful consideration and design.  This particular example was a stand out exception that could be easily fixed.  I am only qualified to say what I find easy to use and what I do not.  Everyone is a user at all levels and designing frameworks and documentation that is easier to understand and use is very hard.  Sometime the best you can do it put it out there and then improve it based on feedback.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/50234616",
            "html_url": "https://github.com/pallets/flask/issues/516#issuecomment-50234616",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/516",
            "id": 50234616,
            "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjM0NjE2",
            "user": {
                "login": "DasIch",
                "id": 182316,
                "node_id": "MDQ6VXNlcjE4MjMxNg==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/182316?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/DasIch",
                "html_url": "https://github.com/DasIch",
                "followers_url": "https://api.github.com/users/DasIch/followers",
                "following_url": "https://api.github.com/users/DasIch/following{/other_user}",
                "gists_url": "https://api.github.com/users/DasIch/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/DasIch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DasIch/subscriptions",
                "organizations_url": "https://api.github.com/users/DasIch/orgs",
                "repos_url": "https://api.github.com/users/DasIch/repos",
                "events_url": "https://api.github.com/users/DasIch/events{/privacy}",
                "received_events_url": "https://api.github.com/users/DasIch/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-07-26T13:53:28Z",
            "updated_at": "2014-07-26T13:53:28Z",
            "author_association": "CONTRIBUTOR",
            "body": "It's neither practical nor useful to make all examples executable, especially when in this case the focus is on abstractions. Of course in this case it could be turned into an executable example but it loses all information about potential use cases.\n\nAll of these different pieces of technolgy simply can't all be learned at the same time, at least not in a way that will provide you with a full understanding of them. Start learning Python and then build up on that step by step.\n"
        }
    ]
}