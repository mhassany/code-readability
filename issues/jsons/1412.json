{
    "url": "https://api.github.com/repos/pallets/flask/issues/1412",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1412/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1412/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1412/events",
    "html_url": "https://github.com/pallets/flask/issues/1412",
    "id": 65413791,
    "node_id": "MDU6SXNzdWU2NTQxMzc5MQ==",
    "number": 1412,
    "title": "url_for to another application during request?",
    "user": {
        "login": "a-urth",
        "id": 3456803,
        "node_id": "MDQ6VXNlcjM0NTY4MDM=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/3456803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/a-urth",
        "html_url": "https://github.com/a-urth",
        "followers_url": "https://api.github.com/users/a-urth/followers",
        "following_url": "https://api.github.com/users/a-urth/following{/other_user}",
        "gists_url": "https://api.github.com/users/a-urth/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/a-urth/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/a-urth/subscriptions",
        "organizations_url": "https://api.github.com/users/a-urth/orgs",
        "repos_url": "https://api.github.com/users/a-urth/repos",
        "events_url": "https://api.github.com/users/a-urth/events{/privacy}",
        "received_events_url": "https://api.github.com/users/a-urth/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 17,
    "created_at": "2015-03-31T10:03:36Z",
    "updated_at": "2017-04-19T21:42:05Z",
    "closed_at": "2015-03-31T12:00:26Z",
    "author_association": "NONE",
    "body": "Assuming I have more than one Flask application (I'm using blueprints too, so there is not need to advice me them) and I want to build url from one to another. With no request context I was just using forced context of target application and it worked. But what should I do with existing request context? If i receive request to one application and want to do redirect to another one?\n\nOr, in another words, why url_for first of all searches for request context? Maybe it should be optional, through _external parameter for example?\n\nPlease, do not send me to stackoverflow, my question about similar problem is hanging for more than a week with no responses at all.\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/88054547",
            "html_url": "https://github.com/pallets/flask/issues/1412#issuecomment-88054547",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1412",
            "id": 88054547,
            "node_id": "MDEyOklzc3VlQ29tbWVudDg4MDU0NTQ3",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-03-31T11:36:03Z",
            "updated_at": "2015-03-31T11:36:03Z",
            "author_association": "MEMBER",
            "body": "`url_for` searches in the request context because e.g. if an absolute URL is wanted, it will take a look at the current request to check whether the resulting URL should be HTTPS or HTTP.\n\nThis kind of entanglement of multiple apps is not officially supported. I'm not sure if the request context is even hindering you while generating the URL, but if it is, you can manually pop the request context from the stack, and push it after you generated the URL. While happening all within the Python interpreter, this is quite costly, and I think it's much smarter to generate your URLs ahead of time.\n\nThe _external parameter already exists, it controls whether absolute URLs should be generated.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/88056722",
            "html_url": "https://github.com/pallets/flask/issues/1412#issuecomment-88056722",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1412",
            "id": 88056722,
            "node_id": "MDEyOklzc3VlQ29tbWVudDg4MDU2NzIy",
            "user": {
                "login": "a-urth",
                "id": 3456803,
                "node_id": "MDQ6VXNlcjM0NTY4MDM=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/3456803?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/a-urth",
                "html_url": "https://github.com/a-urth",
                "followers_url": "https://api.github.com/users/a-urth/followers",
                "following_url": "https://api.github.com/users/a-urth/following{/other_user}",
                "gists_url": "https://api.github.com/users/a-urth/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/a-urth/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/a-urth/subscriptions",
                "organizations_url": "https://api.github.com/users/a-urth/orgs",
                "repos_url": "https://api.github.com/users/a-urth/repos",
                "events_url": "https://api.github.com/users/a-urth/events{/privacy}",
                "received_events_url": "https://api.github.com/users/a-urth/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-03-31T11:48:49Z",
            "updated_at": "2015-03-31T11:48:49Z",
            "author_association": "NONE",
            "body": "Popping request context just for url generation seems like a hack, Its easier for me to write my own url generator with possibility to choose which context should be used or, in another words, absolute or relative url should be built.\n\nI know that _external parameter controls absolute url behaviour, so maybe it should be responsible for request-application context determination too?\n\nMy motivation is that it seems not logical that if You want to built url to another application within request context, You have no clear way how to do it.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/88057453",
            "html_url": "https://github.com/pallets/flask/issues/1412#issuecomment-88057453",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1412",
            "id": 88057453,
            "node_id": "MDEyOklzc3VlQ29tbWVudDg4MDU3NDUz",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-03-31T11:52:39Z",
            "updated_at": "2015-03-31T11:52:39Z",
            "author_association": "MEMBER",
            "body": "This kind of usage is simply not supported, so yes, this is going to require hacks (or a new URL generator) on your side.\n\nApplication dispatching [is of course supported](http://flask.pocoo.org/docs/0.10/patterns/appdispatch/), but not the kind of combination you want: Poking at an application's internal state from another one.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/88060298",
            "html_url": "https://github.com/pallets/flask/issues/1412#issuecomment-88060298",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1412",
            "id": 88060298,
            "node_id": "MDEyOklzc3VlQ29tbWVudDg4MDYwMjk4",
            "user": {
                "login": "a-urth",
                "id": 3456803,
                "node_id": "MDQ6VXNlcjM0NTY4MDM=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/3456803?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/a-urth",
                "html_url": "https://github.com/a-urth",
                "followers_url": "https://api.github.com/users/a-urth/followers",
                "following_url": "https://api.github.com/users/a-urth/following{/other_user}",
                "gists_url": "https://api.github.com/users/a-urth/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/a-urth/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/a-urth/subscriptions",
                "organizations_url": "https://api.github.com/users/a-urth/orgs",
                "repos_url": "https://api.github.com/users/a-urth/repos",
                "events_url": "https://api.github.com/users/a-urth/events{/privacy}",
                "received_events_url": "https://api.github.com/users/a-urth/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-03-31T12:00:24Z",
            "updated_at": "2015-03-31T12:00:24Z",
            "author_association": "NONE",
            "body": "This looks really strange to me, especially that whole application context thing is designed for multi application usage. Or, I just missing something.\n\nAnyway, thanks, I'll think further on this problem.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/88492842",
            "html_url": "https://github.com/pallets/flask/issues/1412#issuecomment-88492842",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1412",
            "id": 88492842,
            "node_id": "MDEyOklzc3VlQ29tbWVudDg4NDkyODQy",
            "user": {
                "login": "RonnyPfannschmidt",
                "id": 156838,
                "node_id": "MDQ6VXNlcjE1NjgzOA==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/156838?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/RonnyPfannschmidt",
                "html_url": "https://github.com/RonnyPfannschmidt",
                "followers_url": "https://api.github.com/users/RonnyPfannschmidt/followers",
                "following_url": "https://api.github.com/users/RonnyPfannschmidt/following{/other_user}",
                "gists_url": "https://api.github.com/users/RonnyPfannschmidt/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/RonnyPfannschmidt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/RonnyPfannschmidt/subscriptions",
                "organizations_url": "https://api.github.com/users/RonnyPfannschmidt/orgs",
                "repos_url": "https://api.github.com/users/RonnyPfannschmidt/repos",
                "events_url": "https://api.github.com/users/RonnyPfannschmidt/events{/privacy}",
                "received_events_url": "https://api.github.com/users/RonnyPfannschmidt/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-04-01T14:01:46Z",
            "updated_at": "2015-04-01T14:01:46Z",
            "author_association": "CONTRIBUTOR",
            "body": "shouldnt entering a request context for the other application be suficient (in case both are served form the same process)\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/88501501",
            "html_url": "https://github.com/pallets/flask/issues/1412#issuecomment-88501501",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1412",
            "id": 88501501,
            "node_id": "MDEyOklzc3VlQ29tbWVudDg4NTAxNTAx",
            "user": {
                "login": "a-urth",
                "id": 3456803,
                "node_id": "MDQ6VXNlcjM0NTY4MDM=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/3456803?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/a-urth",
                "html_url": "https://github.com/a-urth",
                "followers_url": "https://api.github.com/users/a-urth/followers",
                "following_url": "https://api.github.com/users/a-urth/following{/other_user}",
                "gists_url": "https://api.github.com/users/a-urth/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/a-urth/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/a-urth/subscriptions",
                "organizations_url": "https://api.github.com/users/a-urth/orgs",
                "repos_url": "https://api.github.com/users/a-urth/repos",
                "events_url": "https://api.github.com/users/a-urth/events{/privacy}",
                "received_events_url": "https://api.github.com/users/a-urth/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-04-01T14:16:01Z",
            "updated_at": "2015-04-01T14:16:01Z",
            "author_association": "NONE",
            "body": "I don't clearly understand Your proposition, what do You mean entering context for other application? And whats the point with the process?\n\nBy the way, there is even deeper problem - I'm using dispatcher middleware, and my applications dispatched by url prefix. And application url map has nothing to do with this prefix. So, actually from application perspective its simply impossible to built correct url to another application.\nI ended up creating separated url builders for each application.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/88559836",
            "html_url": "https://github.com/pallets/flask/issues/1412#issuecomment-88559836",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1412",
            "id": 88559836,
            "node_id": "MDEyOklzc3VlQ29tbWVudDg4NTU5ODM2",
            "user": {
                "login": "RonnyPfannschmidt",
                "id": 156838,
                "node_id": "MDQ6VXNlcjE1NjgzOA==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/156838?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/RonnyPfannschmidt",
                "html_url": "https://github.com/RonnyPfannschmidt",
                "followers_url": "https://api.github.com/users/RonnyPfannschmidt/followers",
                "following_url": "https://api.github.com/users/RonnyPfannschmidt/following{/other_user}",
                "gists_url": "https://api.github.com/users/RonnyPfannschmidt/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/RonnyPfannschmidt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/RonnyPfannschmidt/subscriptions",
                "organizations_url": "https://api.github.com/users/RonnyPfannschmidt/orgs",
                "repos_url": "https://api.github.com/users/RonnyPfannschmidt/repos",
                "events_url": "https://api.github.com/users/RonnyPfannschmidt/events{/privacy}",
                "received_events_url": "https://api.github.com/users/RonnyPfannschmidt/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-04-01T17:12:24Z",
            "updated_at": "2015-04-01T17:12:24Z",
            "author_association": "CONTRIBUTOR",
            "body": "what exactly are your different applications?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/88582547",
            "html_url": "https://github.com/pallets/flask/issues/1412#issuecomment-88582547",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1412",
            "id": 88582547,
            "node_id": "MDEyOklzc3VlQ29tbWVudDg4NTgyNTQ3",
            "user": {
                "login": "a-urth",
                "id": 3456803,
                "node_id": "MDQ6VXNlcjM0NTY4MDM=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/3456803?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/a-urth",
                "html_url": "https://github.com/a-urth",
                "followers_url": "https://api.github.com/users/a-urth/followers",
                "following_url": "https://api.github.com/users/a-urth/following{/other_user}",
                "gists_url": "https://api.github.com/users/a-urth/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/a-urth/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/a-urth/subscriptions",
                "organizations_url": "https://api.github.com/users/a-urth/orgs",
                "repos_url": "https://api.github.com/users/a-urth/repos",
                "events_url": "https://api.github.com/users/a-urth/events{/privacy}",
                "received_events_url": "https://api.github.com/users/a-urth/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-04-01T18:16:46Z",
            "updated_at": "2015-04-01T18:16:46Z",
            "author_association": "NONE",
            "body": "Different Flask instances dispatched with DispatcherMiddleware\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/88587039",
            "html_url": "https://github.com/pallets/flask/issues/1412#issuecomment-88587039",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1412",
            "id": 88587039,
            "node_id": "MDEyOklzc3VlQ29tbWVudDg4NTg3MDM5",
            "user": {
                "login": "RonnyPfannschmidt",
                "id": 156838,
                "node_id": "MDQ6VXNlcjE1NjgzOA==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/156838?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/RonnyPfannschmidt",
                "html_url": "https://github.com/RonnyPfannschmidt",
                "followers_url": "https://api.github.com/users/RonnyPfannschmidt/followers",
                "following_url": "https://api.github.com/users/RonnyPfannschmidt/following{/other_user}",
                "gists_url": "https://api.github.com/users/RonnyPfannschmidt/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/RonnyPfannschmidt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/RonnyPfannschmidt/subscriptions",
                "organizations_url": "https://api.github.com/users/RonnyPfannschmidt/orgs",
                "repos_url": "https://api.github.com/users/RonnyPfannschmidt/repos",
                "events_url": "https://api.github.com/users/RonnyPfannschmidt/events{/privacy}",
                "received_events_url": "https://api.github.com/users/RonnyPfannschmidt/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-04-01T18:31:43Z",
            "updated_at": "2015-04-01T18:31:43Z",
            "author_association": "CONTRIBUTOR",
            "body": "so its the same app? is the database different?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/88605571",
            "html_url": "https://github.com/pallets/flask/issues/1412#issuecomment-88605571",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1412",
            "id": 88605571,
            "node_id": "MDEyOklzc3VlQ29tbWVudDg4NjA1NTcx",
            "user": {
                "login": "a-urth",
                "id": 3456803,
                "node_id": "MDQ6VXNlcjM0NTY4MDM=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/3456803?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/a-urth",
                "html_url": "https://github.com/a-urth",
                "followers_url": "https://api.github.com/users/a-urth/followers",
                "following_url": "https://api.github.com/users/a-urth/following{/other_user}",
                "gists_url": "https://api.github.com/users/a-urth/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/a-urth/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/a-urth/subscriptions",
                "organizations_url": "https://api.github.com/users/a-urth/orgs",
                "repos_url": "https://api.github.com/users/a-urth/repos",
                "events_url": "https://api.github.com/users/a-urth/events{/privacy}",
                "received_events_url": "https://api.github.com/users/a-urth/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-04-01T19:36:23Z",
            "updated_at": "2015-04-01T19:36:23Z",
            "author_association": "NONE",
            "body": "Ok, how is database related to how many applications do I have? App in terms web application - Yes, its same. App in terms flask.Flask application instances - than No, currently i have 4 of them, each one responsible for separate part of the project.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/101654752",
            "html_url": "https://github.com/pallets/flask/issues/1412#issuecomment-101654752",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1412",
            "id": 101654752,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTY1NDc1Mg==",
            "user": {
                "login": "patrickyan",
                "id": 858647,
                "node_id": "MDQ6VXNlcjg1ODY0Nw==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/858647?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/patrickyan",
                "html_url": "https://github.com/patrickyan",
                "followers_url": "https://api.github.com/users/patrickyan/followers",
                "following_url": "https://api.github.com/users/patrickyan/following{/other_user}",
                "gists_url": "https://api.github.com/users/patrickyan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/patrickyan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/patrickyan/subscriptions",
                "organizations_url": "https://api.github.com/users/patrickyan/orgs",
                "repos_url": "https://api.github.com/users/patrickyan/repos",
                "events_url": "https://api.github.com/users/patrickyan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/patrickyan/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-05-13T13:00:10Z",
            "updated_at": "2015-05-13T13:00:10Z",
            "author_association": "NONE",
            "body": "I am also trying to do this as well. I have separate \"applications\" dispatched using SubdomainDispatcher. I want to link from one subdomain app to another, but `url_for()` fails to build the urls. Currently, my only solution is to manually type the urls.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/101656489",
            "html_url": "https://github.com/pallets/flask/issues/1412#issuecomment-101656489",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1412",
            "id": 101656489,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTY1NjQ4OQ==",
            "user": {
                "login": "patrickyan",
                "id": 858647,
                "node_id": "MDQ6VXNlcjg1ODY0Nw==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/858647?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/patrickyan",
                "html_url": "https://github.com/patrickyan",
                "followers_url": "https://api.github.com/users/patrickyan/followers",
                "following_url": "https://api.github.com/users/patrickyan/following{/other_user}",
                "gists_url": "https://api.github.com/users/patrickyan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/patrickyan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/patrickyan/subscriptions",
                "organizations_url": "https://api.github.com/users/patrickyan/orgs",
                "repos_url": "https://api.github.com/users/patrickyan/repos",
                "events_url": "https://api.github.com/users/patrickyan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/patrickyan/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-05-13T13:05:18Z",
            "updated_at": "2015-05-13T13:05:18Z",
            "author_association": "NONE",
            "body": "I can give you a reason/example. I have an admin/employee app and a user app. The models etc. are shared, but the applications are under different subdomains for cookies, easy management, hosting, etc. reasons. In the user app, there may be actions that trigger emails to an admin with links to pages in the admin app. Currently, this must be done manually. It would be ideal to be able to do something like `url_for('mybp.myroute', _external=True, app=myadminapp)`.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/233486402",
            "html_url": "https://github.com/pallets/flask/issues/1412#issuecomment-233486402",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1412",
            "id": 233486402,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzQ4NjQwMg==",
            "user": {
                "login": "asteinlein",
                "id": 904794,
                "node_id": "MDQ6VXNlcjkwNDc5NA==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/904794?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/asteinlein",
                "html_url": "https://github.com/asteinlein",
                "followers_url": "https://api.github.com/users/asteinlein/followers",
                "following_url": "https://api.github.com/users/asteinlein/following{/other_user}",
                "gists_url": "https://api.github.com/users/asteinlein/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/asteinlein/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/asteinlein/subscriptions",
                "organizations_url": "https://api.github.com/users/asteinlein/orgs",
                "repos_url": "https://api.github.com/users/asteinlein/repos",
                "events_url": "https://api.github.com/users/asteinlein/events{/privacy}",
                "received_events_url": "https://api.github.com/users/asteinlein/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-07-18T23:11:14Z",
            "updated_at": "2016-07-18T23:11:14Z",
            "author_association": "NONE",
            "body": "Just came across this same requirement myself, similar to the last commenter's example. Has anyone found a good workaround for this? Would Flask be interested in having this supported somehow? Seems pretty useful to me in a framework built for multi-app support.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/233514515",
            "html_url": "https://github.com/pallets/flask/issues/1412#issuecomment-233514515",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1412",
            "id": 233514515,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzUxNDUxNQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-07-19T02:33:09Z",
            "updated_at": "2016-07-19T02:33:09Z",
            "author_association": "MEMBER",
            "body": "#1548\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/255359830",
            "html_url": "https://github.com/pallets/flask/issues/1412#issuecomment-255359830",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1412",
            "id": 255359830,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTM1OTgzMA==",
            "user": {
                "login": "Vitalium",
                "id": 8895155,
                "node_id": "MDQ6VXNlcjg4OTUxNTU=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/8895155?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Vitalium",
                "html_url": "https://github.com/Vitalium",
                "followers_url": "https://api.github.com/users/Vitalium/followers",
                "following_url": "https://api.github.com/users/Vitalium/following{/other_user}",
                "gists_url": "https://api.github.com/users/Vitalium/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Vitalium/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Vitalium/subscriptions",
                "organizations_url": "https://api.github.com/users/Vitalium/orgs",
                "repos_url": "https://api.github.com/users/Vitalium/repos",
                "events_url": "https://api.github.com/users/Vitalium/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Vitalium/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-10-21T11:41:55Z",
            "updated_at": "2016-10-21T11:41:55Z",
            "author_association": "NONE",
            "body": "Hi all!\n\nWhy this issue is closed? As I can see, there are nor solution neither workaround.\nAccording to [this advice](https://www.reddit.com/r/flask/comments/357mnu/using_url_for_with_multiple_apps/) for proper url generation there are must be set APPLICATION_ROOT (for correct url_prefix) and SERVER_NAME (for correct absolute URLs) and call url_for like this:\n\n``` python\n    with app.app_context(), app.test_request_context():\n        return url_for(endpoint, **values)\n```\n\nwhere app is destination\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/255362434",
            "html_url": "https://github.com/pallets/flask/issues/1412#issuecomment-255362434",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1412",
            "id": 255362434,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTM2MjQzNA==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-10-21T12:00:08Z",
            "updated_at": "2016-10-21T12:00:08Z",
            "author_association": "MEMBER",
            "body": "Yes, this kind of usage is simply not supported by Flask.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/295456495",
            "html_url": "https://github.com/pallets/flask/issues/1412#issuecomment-295456495",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1412",
            "id": 295456495,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTQ1NjQ5NQ==",
            "user": {
                "login": "anthonyjb",
                "id": 3046287,
                "node_id": "MDQ6VXNlcjMwNDYyODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/3046287?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/anthonyjb",
                "html_url": "https://github.com/anthonyjb",
                "followers_url": "https://api.github.com/users/anthonyjb/followers",
                "following_url": "https://api.github.com/users/anthonyjb/following{/other_user}",
                "gists_url": "https://api.github.com/users/anthonyjb/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/anthonyjb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/anthonyjb/subscriptions",
                "organizations_url": "https://api.github.com/users/anthonyjb/orgs",
                "repos_url": "https://api.github.com/users/anthonyjb/repos",
                "events_url": "https://api.github.com/users/anthonyjb/events{/privacy}",
                "received_events_url": "https://api.github.com/users/anthonyjb/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-19T21:42:05Z",
            "updated_at": "2017-04-19T21:42:05Z",
            "author_association": "NONE",
            "body": "In case it's useful I've used this approach to allow `url_for` to access endpoints against other apps:\r\n\r\n```python\r\nfrom flask import current_app, url_for\r\nfrom werkzeug.wsgi import DispatcherMiddleware\r\n\r\n__all__ = ['Dispatcher']\r\n\r\n\r\nclass Dispatcher:\r\n    \"\"\"\r\n    Allows one to mount middlewares or applications in a WSGI application.\r\n\r\n    This is useful if you want to combine multiple WSGI applications::\r\n\r\n        app = DispatcherMiddleware(app, {\r\n            '/app2':        app2,\r\n            '/app3':        app3\r\n        })\r\n\r\n    \"\"\"\r\n\r\n    def __init__(self, app, mounts=None):\r\n        self.app = app\r\n        self.mounts = mounts or {}\r\n        self.url_for_resolver = URLForResolver(\r\n            [self.app] + list(self.mounts.values())\r\n            )\r\n\r\n    def __call__(self, environ, start_response):\r\n        script = environ.get('PATH_INFO', '')\r\n        path_info = ''\r\n\r\n        while '/' in script:\r\n            if script in self.mounts:\r\n                app = self.mounts[script]\r\n                break\r\n            script, last_item = script.rsplit('/', 1)\r\n            path_info = '/%s%s' % (last_item, path_info)\r\n        else:\r\n            app = self.mounts.get(script, self.app)\r\n\r\n        original_script_name = environ.get('SCRIPT_NAME', '')\r\n        environ['SCRIPT_NAME'] = original_script_name + script\r\n\r\n        # Convert empty path info values to a forward slash '/'\r\n        environ['PATH_INFO'] = path_info or '/'\r\n\r\n        return app(environ, start_response)\r\n\r\n\r\nclass URLForResolver:\r\n    \"\"\"\r\n    A URL resolver that provides resolution of `url_for` across multiple apps.\r\n    \"\"\"\r\n\r\n    def __init__(self, apps):\r\n        self.apps = apps\r\n        self.cache = {}\r\n\r\n        for app in apps:\r\n            app.url_build_error_handlers.append(self)\r\n\r\n    def __call__(self, error, endpoint, values):\r\n        \"\"\"Attempt to resolve a URL any of the registered apps\"\"\"\r\n\r\n        # Check if we have a cached look up\r\n        if endpoint in self.cache:\r\n            app = self.cache[endpoint]\r\n            if app:\r\n                with app.app_context(), app.test_request_context():\r\n                    return url_for(endpoint, **values)\r\n            else:\r\n                raise error\r\n\r\n        # Attempt to find an app with the registered endpoint\r\n        for app in self.apps:\r\n\r\n            # No point in checking the current app\r\n            if app is current_app:\r\n                continue\r\n\r\n            for rule in app.url_map.iter_rules():\r\n\r\n                if rule.endpoint == endpoint:\r\n                    # Found - cache the result and call self to return the URL\r\n                    self.cache[endpoint] = app\r\n                    return self(error, endpoint, values)\r\n\r\n        # Not found - cache the result and re-raise the error\r\n        self.cache[endpoint] = None\r\n        raise error\r\n```"
        }
    ]
}