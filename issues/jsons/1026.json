{
    "url": "https://api.github.com/repos/pallets/flask/issues/1026",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1026/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1026/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1026/events",
    "html_url": "https://github.com/pallets/flask/pull/1026",
    "id": 31682770,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ4NDg1NDg=",
    "number": 1026,
    "title": "Append `Vary: Cookies` header to response when session is accessed",
    "user": {
        "login": "citruspi",
        "id": 2125849,
        "node_id": "MDQ6VXNlcjIxMjU4NDk=",
        "avatar_url": "https://avatars2.githubusercontent.com/u/2125849?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/citruspi",
        "html_url": "https://github.com/citruspi",
        "followers_url": "https://api.github.com/users/citruspi/followers",
        "following_url": "https://api.github.com/users/citruspi/following{/other_user}",
        "gists_url": "https://api.github.com/users/citruspi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/citruspi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/citruspi/subscriptions",
        "organizations_url": "https://api.github.com/users/citruspi/orgs",
        "repos_url": "https://api.github.com/users/citruspi/repos",
        "events_url": "https://api.github.com/users/citruspi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/citruspi/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 398835124,
            "node_id": "MDU6TGFiZWwzOTg4MzUxMjQ=",
            "url": "https://api.github.com/repos/pallets/flask/labels/session",
            "name": "session",
            "color": "1d76db",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
        "login": "davidism",
        "id": 1242887,
        "node_id": "MDQ6VXNlcjEyNDI4ODc=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidism",
        "html_url": "https://github.com/davidism",
        "followers_url": "https://api.github.com/users/davidism/followers",
        "following_url": "https://api.github.com/users/davidism/following{/other_user}",
        "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
        "organizations_url": "https://api.github.com/users/davidism/orgs",
        "repos_url": "https://api.github.com/users/davidism/repos",
        "events_url": "https://api.github.com/users/davidism/events{/privacy}",
        "received_events_url": "https://api.github.com/users/davidism/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "davidism",
            "id": 1242887,
            "node_id": "MDQ6VXNlcjEyNDI4ODc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidism",
            "html_url": "https://github.com/davidism",
            "followers_url": "https://api.github.com/users/davidism/followers",
            "following_url": "https://api.github.com/users/davidism/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
            "organizations_url": "https://api.github.com/users/davidism/orgs",
            "repos_url": "https://api.github.com/users/davidism/repos",
            "events_url": "https://api.github.com/users/davidism/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidism/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2014-04-16T21:45:42Z",
    "updated_at": "2018-10-23T17:44:06Z",
    "closed_at": "2017-05-20T19:16:26Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
        "url": "https://api.github.com/repos/pallets/flask/pulls/1026",
        "html_url": "https://github.com/pallets/flask/pull/1026",
        "diff_url": "https://github.com/pallets/flask/pull/1026.diff",
        "patch_url": "https://github.com/pallets/flask/pull/1026.patch"
    },
    "body": "To prevent caching proxies like Varnish from providing multiple users with the same cache, you can set a `Vary: Cookie` header. \n\nThis pull request appends the header to each response when the session is accessed.\n\nI came across this issue while working on Warehouse, PyPi 2.0. @dstufft wanted something that added the header to the response anytime the session was being used.\n\n&mdash; @citruspi + @abadger\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/40662797",
            "html_url": "https://github.com/pallets/flask/pull/1026#issuecomment-40662797",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1026",
            "id": 40662797,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjYyNzk3",
            "user": {
                "login": "citruspi",
                "id": 2125849,
                "node_id": "MDQ6VXNlcjIxMjU4NDk=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/2125849?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/citruspi",
                "html_url": "https://github.com/citruspi",
                "followers_url": "https://api.github.com/users/citruspi/followers",
                "following_url": "https://api.github.com/users/citruspi/following{/other_user}",
                "gists_url": "https://api.github.com/users/citruspi/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/citruspi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/citruspi/subscriptions",
                "organizations_url": "https://api.github.com/users/citruspi/orgs",
                "repos_url": "https://api.github.com/users/citruspi/repos",
                "events_url": "https://api.github.com/users/citruspi/events{/privacy}",
                "received_events_url": "https://api.github.com/users/citruspi/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-04-16T23:00:02Z",
            "updated_at": "2014-04-16T23:00:02Z",
            "author_association": "CONTRIBUTOR",
            "body": "At this point, the tests fail because you check for cookie headers in [this test](https://github.com/mitsuhiko/flask/blob/master/flask/testsuite/basic.py#L356) and expect none, but we're adding them because `flask.session` is accessed and we need to make sure that the cookie is available for the proxy server to add to the key.\n\n&mdash; @citruspi + @abadger\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/41565551",
            "html_url": "https://github.com/pallets/flask/pull/1026#issuecomment-41565551",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1026",
            "id": 41565551,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTY1NTUx",
            "user": {
                "login": "DasIch",
                "id": 182316,
                "node_id": "MDQ6VXNlcjE4MjMxNg==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/182316?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/DasIch",
                "html_url": "https://github.com/DasIch",
                "followers_url": "https://api.github.com/users/DasIch/followers",
                "following_url": "https://api.github.com/users/DasIch/following{/other_user}",
                "gists_url": "https://api.github.com/users/DasIch/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/DasIch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DasIch/subscriptions",
                "organizations_url": "https://api.github.com/users/DasIch/orgs",
                "repos_url": "https://api.github.com/users/DasIch/repos",
                "events_url": "https://api.github.com/users/DasIch/events{/privacy}",
                "received_events_url": "https://api.github.com/users/DasIch/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-04-28T14:36:30Z",
            "updated_at": "2014-04-28T14:36:30Z",
            "author_association": "CONTRIBUTOR",
            "body": "I didn't know exactly how `Vary: Cookie` worked before and I've read up on it a little bit. If I understand correctly the idea is, that a cache should generally ignore cookies entirely in his consideration on whether or not to send a cached response. If a server responds to a request with the `Vary: Cookie` header, the response depends on the cookie and therefore, the cache has to consider the existance and value of the cookie in the request to determine whether or not to send a response.\n\nPlease correct me, if anything about that is wrong. Anyway based on this I don't see why the cookie has to be set, if we respond with `Vary: cookie`, any cookie set in the response should be irrelevant to the cache, given the mechanism described earlier.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/41833320",
            "html_url": "https://github.com/pallets/flask/pull/1026#issuecomment-41833320",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1026",
            "id": 41833320,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxODMzMzIw",
            "user": {
                "login": "abadger",
                "id": 209242,
                "node_id": "MDQ6VXNlcjIwOTI0Mg==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/209242?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/abadger",
                "html_url": "https://github.com/abadger",
                "followers_url": "https://api.github.com/users/abadger/followers",
                "following_url": "https://api.github.com/users/abadger/following{/other_user}",
                "gists_url": "https://api.github.com/users/abadger/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/abadger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/abadger/subscriptions",
                "organizations_url": "https://api.github.com/users/abadger/orgs",
                "repos_url": "https://api.github.com/users/abadger/repos",
                "events_url": "https://api.github.com/users/abadger/events{/privacy}",
                "received_events_url": "https://api.github.com/users/abadger/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-04-30T18:41:06Z",
            "updated_at": "2014-04-30T18:41:06Z",
            "author_association": "NONE",
            "body": "Note: Sorry, github made it look like I double posted this so I deleted one of them.  Looks like it actually wasn't a double post so I'm reposting now. :-/\n\nVary: Cookie allows caching the response but the cache has to use the values in the cookie as part of its key. That way the cache can save separate entries for a request for /user/profile/ when there's a cookie for username=abadger and a request for /user/profile/ when the cookie is for username=citruspi\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/42136269",
            "html_url": "https://github.com/pallets/flask/pull/1026#issuecomment-42136269",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1026",
            "id": 42136269,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTM2MjY5",
            "user": {
                "login": "danielchatfield",
                "id": 1058676,
                "node_id": "MDQ6VXNlcjEwNTg2NzY=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/1058676?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/danielchatfield",
                "html_url": "https://github.com/danielchatfield",
                "followers_url": "https://api.github.com/users/danielchatfield/followers",
                "following_url": "https://api.github.com/users/danielchatfield/following{/other_user}",
                "gists_url": "https://api.github.com/users/danielchatfield/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/danielchatfield/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/danielchatfield/subscriptions",
                "organizations_url": "https://api.github.com/users/danielchatfield/orgs",
                "repos_url": "https://api.github.com/users/danielchatfield/repos",
                "events_url": "https://api.github.com/users/danielchatfield/events{/privacy}",
                "received_events_url": "https://api.github.com/users/danielchatfield/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-05-04T15:54:28Z",
            "updated_at": "2014-05-04T15:54:28Z",
            "author_association": "NONE",
            "body": "As per the spec the header fields listed in Vary should be used by the cache to determine whether a cached response is valid or not and thus two requests with different cookies but otherwise identical headers would not match.\n\nIt should be noted that not all caches (including varnish and Google's page speed service) implement what is described by @abadger and instead just drop caching for that request altogether with this header.\n\nDespite this, I've got a great big :+1: for this PR, this is a very clean and nice way of ensuring that whenever a request relies upon the data stored in the session then the cache will not serve a cached response if the session data has changed.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/42474435",
            "html_url": "https://github.com/pallets/flask/pull/1026#issuecomment-42474435",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1026",
            "id": 42474435,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDc0NDM1",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-05-07T19:48:59Z",
            "updated_at": "2014-05-07T19:48:59Z",
            "author_association": "MEMBER",
            "body": "I'm not so sure myself yet.  I would love to get more input on this.  For me this sounds like a neat idea but I need to think more about it.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/160002637",
            "html_url": "https://github.com/pallets/flask/pull/1026#issuecomment-160002637",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1026",
            "id": 160002637,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDAwMjYzNw==",
            "user": {
                "login": "jeffwidman",
                "id": 483314,
                "node_id": "MDQ6VXNlcjQ4MzMxNA==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/483314?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jeffwidman",
                "html_url": "https://github.com/jeffwidman",
                "followers_url": "https://api.github.com/users/jeffwidman/followers",
                "following_url": "https://api.github.com/users/jeffwidman/following{/other_user}",
                "gists_url": "https://api.github.com/users/jeffwidman/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jeffwidman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jeffwidman/subscriptions",
                "organizations_url": "https://api.github.com/users/jeffwidman/orgs",
                "repos_url": "https://api.github.com/users/jeffwidman/repos",
                "events_url": "https://api.github.com/users/jeffwidman/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jeffwidman/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-11-26T23:02:01Z",
            "updated_at": "2015-11-26T23:05:03Z",
            "author_association": "MEMBER",
            "body": "As of Nginx 1.7.7, the Nginx proxy cache (commonly used alongside uWSGI) also supports using the `Vary` header to manage what gets cached/returned--see the final FAQ question here: https://www.nginx.com/blog/nginx-caching-guide/\n\nI didn't dig into the implementation much, but I'm +1 on the general idea here. \n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/296486877",
            "html_url": "https://github.com/pallets/flask/pull/1026#issuecomment-296486877",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1026",
            "id": 296486877,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5NjQ4Njg3Nw==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-23T20:37:30Z",
            "updated_at": "2017-04-23T20:39:49Z",
            "author_association": "MEMBER",
            "body": "This appears to be the only way for Flask itself to do this automatically, but I'm not sure whose responsibility we want caching config to be.\r\n\r\nPerhaps this should be part of something like Flask-Login (e.g.: everything decorated with `login_required` sends with header).\r\n\r\nI'd much rather see an issue opened about this before we discuss a concrete implementation."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/298638071",
            "html_url": "https://github.com/pallets/flask/pull/1026#issuecomment-298638071",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1026",
            "id": 298638071,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODYzODA3MQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-05-02T13:38:40Z",
            "updated_at": "2017-05-02T13:38:40Z",
            "author_association": "MEMBER",
            "body": "Django adds `Vary: Cookie` based on session access: https://github.com/django/django/blob/1ce04bcce0076360623ae164afd3541a5c031af2/django/contrib/sessions/middleware.py#L45. It also checks to delete the cookie before adding the header."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/299113338",
            "html_url": "https://github.com/pallets/flask/pull/1026#issuecomment-299113338",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1026",
            "id": 299113338,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTExMzMzOA==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-05-04T07:19:40Z",
            "updated_at": "2017-05-04T07:19:40Z",
            "author_association": "MEMBER",
            "body": "Then I suppose I am fine with it conceptually."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/302893012",
            "html_url": "https://github.com/pallets/flask/pull/1026#issuecomment-302893012",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1026",
            "id": 302893012,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjg5MzAxMg==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-05-20T19:16:26Z",
            "updated_at": "2017-05-20T19:16:26Z",
            "author_association": "MEMBER",
            "body": "Continued in #2288."
        }
    ]
}