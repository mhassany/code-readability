{
    "url": "https://api.github.com/repos/pallets/flask/issues/1571",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1571/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1571/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1571/events",
    "html_url": "https://github.com/pallets/flask/issues/1571",
    "id": 107730841,
    "node_id": "MDU6SXNzdWUxMDc3MzA4NDE=",
    "number": 1571,
    "title": "@app.after_request should be able to process a non-response into a response",
    "user": {
        "login": "ddevault",
        "id": 1310872,
        "node_id": "MDQ6VXNlcjEzMTA4NzI=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/1310872?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ddevault",
        "html_url": "https://github.com/ddevault",
        "followers_url": "https://api.github.com/users/ddevault/followers",
        "following_url": "https://api.github.com/users/ddevault/following{/other_user}",
        "gists_url": "https://api.github.com/users/ddevault/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ddevault/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ddevault/subscriptions",
        "organizations_url": "https://api.github.com/users/ddevault/orgs",
        "repos_url": "https://api.github.com/users/ddevault/repos",
        "events_url": "https://api.github.com/users/ddevault/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ddevault/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2015-09-22T14:50:36Z",
    "updated_at": "2015-11-03T15:18:36Z",
    "closed_at": "2015-11-03T15:18:36Z",
    "author_association": "NONE",
    "body": "That is, the route should be able to return anything and after_request should be able to take that and convert it into an actual response object.\n\nUse case: all of our routes return dicts, which we serialize to JSON through a decorator. We have no non-JSON routes. I'd like to remove our decorator and make this change application-wide instead.\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/142313115",
            "html_url": "https://github.com/pallets/flask/issues/1571#issuecomment-142313115",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1571",
            "id": 142313115,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjMxMzExNQ==",
            "user": {
                "login": "RonnyPfannschmidt",
                "id": 156838,
                "node_id": "MDQ6VXNlcjE1NjgzOA==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/156838?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/RonnyPfannschmidt",
                "html_url": "https://github.com/RonnyPfannschmidt",
                "followers_url": "https://api.github.com/users/RonnyPfannschmidt/followers",
                "following_url": "https://api.github.com/users/RonnyPfannschmidt/following{/other_user}",
                "gists_url": "https://api.github.com/users/RonnyPfannschmidt/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/RonnyPfannschmidt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/RonnyPfannschmidt/subscriptions",
                "organizations_url": "https://api.github.com/users/RonnyPfannschmidt/orgs",
                "repos_url": "https://api.github.com/users/RonnyPfannschmidt/repos",
                "events_url": "https://api.github.com/users/RonnyPfannschmidt/events{/privacy}",
                "received_events_url": "https://api.github.com/users/RonnyPfannschmidt/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-09-22T14:56:10Z",
            "updated_at": "2015-09-22T14:56:10Z",
            "author_association": "CONTRIBUTOR",
            "body": "for that purpose you are supposed to override `Flask.make_response` or use a custom response class\n\nsince you always want to return dicts, you could just set the response class of your app to a JsonResponse that does the encoding\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/142314053",
            "html_url": "https://github.com/pallets/flask/issues/1571#issuecomment-142314053",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1571",
            "id": 142314053,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjMxNDA1Mw==",
            "user": {
                "login": "ddevault",
                "id": 1310872,
                "node_id": "MDQ6VXNlcjEzMTA4NzI=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/1310872?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ddevault",
                "html_url": "https://github.com/ddevault",
                "followers_url": "https://api.github.com/users/ddevault/followers",
                "following_url": "https://api.github.com/users/ddevault/following{/other_user}",
                "gists_url": "https://api.github.com/users/ddevault/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ddevault/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ddevault/subscriptions",
                "organizations_url": "https://api.github.com/users/ddevault/orgs",
                "repos_url": "https://api.github.com/users/ddevault/repos",
                "events_url": "https://api.github.com/users/ddevault/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ddevault/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-09-22T14:59:35Z",
            "updated_at": "2015-09-22T14:59:35Z",
            "author_association": "NONE",
            "body": "> for that purpose you are supposed to override Flask.make_response or use a custom response class\n\nMonkey patching is lame if a different solution is possible.\n\n> since you always want to return dicts, you could just set the response class of your app to a JsonResponse that does the encoding\n\nYeah, this is possible, but I don't see why we can't have after_request deal with it. It seems like a pretty reasonable place. I also had a look through the relevant code, and it wouldn't be too difficult to make it work.\n\nSide note, I changed the title of this issue to fix a mistake.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/142314364",
            "html_url": "https://github.com/pallets/flask/issues/1571#issuecomment-142314364",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1571",
            "id": 142314364,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjMxNDM2NA==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-09-22T15:00:16Z",
            "updated_at": "2015-09-22T15:00:16Z",
            "author_association": "MEMBER",
            "body": "Overriding a method is not monkeypatching.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/142314819",
            "html_url": "https://github.com/pallets/flask/issues/1571#issuecomment-142314819",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1571",
            "id": 142314819,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjMxNDgxOQ==",
            "user": {
                "login": "ddevault",
                "id": 1310872,
                "node_id": "MDQ6VXNlcjEzMTA4NzI=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/1310872?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ddevault",
                "html_url": "https://github.com/ddevault",
                "followers_url": "https://api.github.com/users/ddevault/followers",
                "following_url": "https://api.github.com/users/ddevault/following{/other_user}",
                "gists_url": "https://api.github.com/users/ddevault/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ddevault/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ddevault/subscriptions",
                "organizations_url": "https://api.github.com/users/ddevault/orgs",
                "repos_url": "https://api.github.com/users/ddevault/repos",
                "events_url": "https://api.github.com/users/ddevault/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ddevault/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-09-22T15:01:04Z",
            "updated_at": "2015-09-22T15:01:04Z",
            "author_association": "NONE",
            "body": "How do you \"override\" it?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/142315091",
            "html_url": "https://github.com/pallets/flask/issues/1571#issuecomment-142315091",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1571",
            "id": 142315091,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjMxNTA5MQ==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-09-22T15:01:37Z",
            "updated_at": "2015-09-22T15:01:37Z",
            "author_association": "MEMBER",
            "body": "```\nclass MyFlask(Flask):\n    ...\n```\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/142316135",
            "html_url": "https://github.com/pallets/flask/issues/1571#issuecomment-142316135",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1571",
            "id": 142316135,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjMxNjEzNQ==",
            "user": {
                "login": "ddevault",
                "id": 1310872,
                "node_id": "MDQ6VXNlcjEzMTA4NzI=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/1310872?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ddevault",
                "html_url": "https://github.com/ddevault",
                "followers_url": "https://api.github.com/users/ddevault/followers",
                "following_url": "https://api.github.com/users/ddevault/following{/other_user}",
                "gists_url": "https://api.github.com/users/ddevault/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ddevault/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ddevault/subscriptions",
                "organizations_url": "https://api.github.com/users/ddevault/orgs",
                "repos_url": "https://api.github.com/users/ddevault/repos",
                "events_url": "https://api.github.com/users/ddevault/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ddevault/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-09-22T15:03:58Z",
            "updated_at": "2015-09-22T15:03:58Z",
            "author_association": "NONE",
            "body": "Ah, I see. I could indeed do that, but I think that's a bit drastic, since now the Flask imported from flask will not behave correctly and several modules (and maybe even vendor modules) risk being broken.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/142316724",
            "html_url": "https://github.com/pallets/flask/issues/1571#issuecomment-142316724",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1571",
            "id": 142316724,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjMxNjcyNA==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-09-22T15:05:26Z",
            "updated_at": "2015-09-22T15:05:51Z",
            "author_association": "MEMBER",
            "body": "You usually only import `Flask` once in your application; in whatever place you use to create your app object. So there should be only once place where you need to use the custom object. A third-party module usually has no reason to create its own Flask instance.\n\nIt's also explicitly encouraged to subclass Flask: http://flask.readthedocs.org/en/latest/becomingbig/#subclass\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/142317390",
            "html_url": "https://github.com/pallets/flask/issues/1571#issuecomment-142317390",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1571",
            "id": 142317390,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjMxNzM5MA==",
            "user": {
                "login": "ddevault",
                "id": 1310872,
                "node_id": "MDQ6VXNlcjEzMTA4NzI=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/1310872?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ddevault",
                "html_url": "https://github.com/ddevault",
                "followers_url": "https://api.github.com/users/ddevault/followers",
                "following_url": "https://api.github.com/users/ddevault/following{/other_user}",
                "gists_url": "https://api.github.com/users/ddevault/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ddevault/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ddevault/subscriptions",
                "organizations_url": "https://api.github.com/users/ddevault/orgs",
                "repos_url": "https://api.github.com/users/ddevault/repos",
                "events_url": "https://api.github.com/users/ddevault/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ddevault/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-09-22T15:07:00Z",
            "updated_at": "2015-09-22T15:07:00Z",
            "author_association": "NONE",
            "body": "Good to know. So there are several ways of addressing this problem, then - but does that mean that this feature is not valuable? The decorator can be used several times and the response object can be repeatedly transformed (also via vendor libs, potentially) if we went this route.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/153385977",
            "html_url": "https://github.com/pallets/flask/issues/1571#issuecomment-153385977",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1571",
            "id": 153385977,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzM4NTk3Nw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-11-03T15:18:35Z",
            "updated_at": "2015-11-03T15:18:35Z",
            "author_association": "MEMBER",
            "body": "Agreed, if you need to handle another type of return value from every view, override `make_response`.\n\n``` python\nclass MyFlask(Flask):\n    def make_response(self, rv):\n        if isinstance(rv, dict):\n            return make_a_response_from_this_dict(rv)\n        return super().make_response(rv)\n```\n\n`after_request` is for modifying the `Response` object, not the data specifically.  You can still modify the data, you just need to parse it out and re-apply it.  There's no general way to handle `after_request` functions returning other data, as the next function in the change wouldn't know what to expect.\n"
        }
    ]
}