{
    "url": "https://api.github.com/repos/pallets/flask/issues/2673",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2673/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2673/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2673/events",
    "html_url": "https://github.com/pallets/flask/issues/2673",
    "id": 308909086,
    "node_id": "MDU6SXNzdWUzMDg5MDkwODY=",
    "number": 2673,
    "title": "teardown_request can't remove session's attribute",
    "user": {
        "login": "MrLiupython",
        "id": 26358836,
        "node_id": "MDQ6VXNlcjI2MzU4ODM2",
        "avatar_url": "https://avatars0.githubusercontent.com/u/26358836?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MrLiupython",
        "html_url": "https://github.com/MrLiupython",
        "followers_url": "https://api.github.com/users/MrLiupython/followers",
        "following_url": "https://api.github.com/users/MrLiupython/following{/other_user}",
        "gists_url": "https://api.github.com/users/MrLiupython/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/MrLiupython/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/MrLiupython/subscriptions",
        "organizations_url": "https://api.github.com/users/MrLiupython/orgs",
        "repos_url": "https://api.github.com/users/MrLiupython/repos",
        "events_url": "https://api.github.com/users/MrLiupython/events{/privacy}",
        "received_events_url": "https://api.github.com/users/MrLiupython/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-03-27T10:22:38Z",
    "updated_at": "2018-03-27T12:35:39Z",
    "closed_at": "2018-03-27T12:35:39Z",
    "author_association": "NONE",
    "body": "I use **before_request** to set session's attribute,and use **teardown_request** to remove it.But only first request don't have session's attribute in **before_request**,other requests all decide request have session's attribute in **before_request**.Why?\r\n\r\nSample code:\r\n`from flask import Flask,session\r\napp = Flask(__name__)\r\napp.secret_key='sdf'\r\n@app.route('/')\r\ndef index():\r\n    return \"\"\"sessoin: {}\"\"\".format(session['hello'])\r\n@app.before_request\r\ndef before():\r\n    if not session.get('hello'):\r\n        session['hello'] = 'Hello!'\r\n        print('before: add hello')\r\n    else:\r\n        print('beforeL: have',session['hello'])\r\n@app.teardown_request\r\ndef teardown(exception):\r\n    if session.get('hello'):\r\n        session.pop('hello')\r\n        print('teardown: delete hello')\r\n        try:\r\n            print(session['hello'])\r\n        except:\r\n            print('teardown: no have')`\r\n\r\nOutput:\r\n`* Serving Flask app \"app\"\r\n * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\r\nbefore: add hello\r\nteardown: delete hello\r\nteardown: no have\r\n127.0.0.1 - - [27/Mar/2018 18:17:35] \"GET / HTTP/1.1\" 200 -\r\nbeforeL: have Hello!\r\nteardown: delete hello\r\nteardown: no have\r\n127.0.0.1 - - [27/Mar/2018 18:17:35] \"GET /favicon.ico HTTP/1.1\" 404 -\r\nbeforeL: have Hello!\r\nteardown: delete hello\r\nteardown: no have\r\n127.0.0.1 - - [27/Mar/2018 18:17:35] \"GET /favicon.ico HTTP/1.1\" 404 -\r\nbeforeL: have Hello!\r\nteardown: delete hello\r\nteardown: no have\r\n127.0.0.1 - - [27/Mar/2018 18:17:43] \"GET / HTTP/1.1\" 200 -\r\nbeforeL: have Hello!\r\nteardown: delete hello\r\nteardown: no have\r\n127.0.0.1 - - [27/Mar/2018 18:17:46] \"GET / HTTP/1.1\" 200 -\r\nbeforeL: have Hello!\r\nteardown: delete hello\r\nteardown: no have\r\n127.0.0.1 - - [27/Mar/2018 18:17:47] \"GET / HTTP/1.1\" 200 -\r\nbeforeL: have Hello!\r\nteardown: delete hello\r\nteardown: no have\r\n127.0.0.1 - - [27/Mar/2018 18:17:50] \"GET / HTTP/1.1\" 200 -`\r\n\r\n\r\n* Python version: 3.6.3\r\n* Flask version: 0.12.2\r\n* Werkzeug version: 0.12.2\r\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/376508491",
            "html_url": "https://github.com/pallets/flask/issues/2673#issuecomment-376508491",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2673",
            "id": 376508491,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjUwODQ5MQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-03-27T12:35:39Z",
            "updated_at": "2018-03-27T12:35:39Z",
            "author_association": "MEMBER",
            "body": "The response can't be modified in teardown. Use after_request instead. Use g to store data during a request, not session."
        }
    ]
}