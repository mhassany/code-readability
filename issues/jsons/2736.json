{
    "url": "https://api.github.com/repos/pallets/flask/issues/2736",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2736/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2736/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2736/events",
    "html_url": "https://github.com/pallets/flask/issues/2736",
    "id": 318482785,
    "node_id": "MDU6SXNzdWUzMTg0ODI3ODU=",
    "number": 2736,
    "title": "make_response changes breaks custom response class",
    "user": {
        "login": "jesseops",
        "id": 4613566,
        "node_id": "MDQ6VXNlcjQ2MTM1NjY=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/4613566?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jesseops",
        "html_url": "https://github.com/jesseops",
        "followers_url": "https://api.github.com/users/jesseops/followers",
        "following_url": "https://api.github.com/users/jesseops/following{/other_user}",
        "gists_url": "https://api.github.com/users/jesseops/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jesseops/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jesseops/subscriptions",
        "organizations_url": "https://api.github.com/users/jesseops/orgs",
        "repos_url": "https://api.github.com/users/jesseops/repos",
        "events_url": "https://api.github.com/users/jesseops/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jesseops/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
        "url": "https://api.github.com/repos/pallets/flask/milestones/5",
        "html_url": "https://github.com/pallets/flask/milestone/5",
        "labels_url": "https://api.github.com/repos/pallets/flask/milestones/5/labels",
        "id": 3304290,
        "node_id": "MDk6TWlsZXN0b25lMzMwNDI5MA==",
        "number": 5,
        "title": "1.0.1",
        "description": "",
        "creator": {
            "login": "davidism",
            "id": 1242887,
            "node_id": "MDQ6VXNlcjEyNDI4ODc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidism",
            "html_url": "https://github.com/davidism",
            "followers_url": "https://api.github.com/users/davidism/followers",
            "following_url": "https://api.github.com/users/davidism/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
            "organizations_url": "https://api.github.com/users/davidism/orgs",
            "repos_url": "https://api.github.com/users/davidism/repos",
            "events_url": "https://api.github.com/users/davidism/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidism/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 0,
        "closed_issues": 18,
        "state": "closed",
        "created_at": "2018-04-27T13:46:37Z",
        "updated_at": "2018-04-30T01:11:27Z",
        "due_on": null,
        "closed_at": "2018-04-30T01:11:27Z"
    },
    "comments": 3,
    "created_at": "2018-04-27T17:05:04Z",
    "updated_at": "2018-04-27T19:47:02Z",
    "closed_at": "2018-04-27T19:47:01Z",
    "author_association": "NONE",
    "body": "### Expected Behavior\r\n\r\nI should be able to return a single value from my view(that is, not a tuple) and have my value passed to my custom response class. In this case I have a response class that detects whether JSON or pickle data was requested by the client and dumps the return value appropriately. This allows me to simply return a list or dict from my view without having to detect and dump the appropriate type.\r\n\r\n```python\r\n@mod.route('/')\r\ndef return_json_or_pickle():\r\n    return ['foo', 'bar', 'bat']\r\n```\r\n\r\nAs of Flask 0.12.2 this worked - make_response would pass the list to my custom response class and my client would get what it wanted.\r\n\r\n### Actual Behavior\r\n\r\nAs of 1.0, commit #2256 was merged which added an explicit check to see if the return value was a list; treating a list as a tuple return in that case. I now get a typeerror:\r\n\r\n```pytb\r\nTypeError: The view function did not return a valid response tuple. The tuple must have the form (body, status, headers), (body, status), or (body, headers).\r\n```\r\n\r\nIf I change my view function to return a tuple:\r\n\r\n```python\r\n@mod.route('/')\r\ndef return_json_or_pickle():\r\n    return ['foo', 'bar', 'bat'], 200\r\n```\r\nthe previous functionality is restored! This confirms that tuple handling is of course perfectly fine. I have a [pull request](https://github.com/pallets/flask/pull/2737) prepared which should do a very nice job of resolving the issue - it simply omits `list` from the type check in make_response. Since a list is not a valid response anyway, there's no reason I can see for it to be there.\r\n\r\n### Environment\r\n\r\n* Python version: 3.6\r\n* Flask version: 1.0\r\n* Werkzeug version: n/a\r\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/385037987",
            "html_url": "https://github.com/pallets/flask/issues/2736#issuecomment-385037987",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2736",
            "id": 385037987,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTAzNzk4Nw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-04-27T17:23:19Z",
            "updated_at": "2018-04-27T17:23:19Z",
            "author_association": "MEMBER",
            "body": "duplicate of #2726 \r\n\r\nThinking about it, it seems fine to relax this and only assume tuples are responses. Can always do `return make_resonse(list)` if you need to handle a list.\r\n\r\nAs pointed out in the other issue though, subclassing and overriding `Flask.make_response` was the intended way to handle this."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/385038808",
            "html_url": "https://github.com/pallets/flask/issues/2736#issuecomment-385038808",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2736",
            "id": 385038808,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTAzODgwOA==",
            "user": {
                "login": "jesseops",
                "id": 4613566,
                "node_id": "MDQ6VXNlcjQ2MTM1NjY=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/4613566?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jesseops",
                "html_url": "https://github.com/jesseops",
                "followers_url": "https://api.github.com/users/jesseops/followers",
                "following_url": "https://api.github.com/users/jesseops/following{/other_user}",
                "gists_url": "https://api.github.com/users/jesseops/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jesseops/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jesseops/subscriptions",
                "organizations_url": "https://api.github.com/users/jesseops/orgs",
                "repos_url": "https://api.github.com/users/jesseops/repos",
                "events_url": "https://api.github.com/users/jesseops/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jesseops/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-04-27T17:26:22Z",
            "updated_at": "2018-04-27T17:26:22Z",
            "author_association": "NONE",
            "body": "Thanks @davidism - that does make sense and if necessary I am prepared to update that for our internal systems as it makes plenty of sense. And oops, I missed that other issue as I was only looking at open ones when I submitted this one. Thanks for the heads up."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/385042754",
            "html_url": "https://github.com/pallets/flask/issues/2736#issuecomment-385042754",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2736",
            "id": 385042754,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTA0Mjc1NA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-04-27T17:41:02Z",
            "updated_at": "2018-04-27T17:41:02Z",
            "author_association": "MEMBER",
            "body": "It's ok, it made me rethink fixing it."
        }
    ]
}