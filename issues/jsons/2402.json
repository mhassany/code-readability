{
    "url": "https://api.github.com/repos/pallets/flask/issues/2402",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2402/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2402/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2402/events",
    "html_url": "https://github.com/pallets/flask/issues/2402",
    "id": 239551274,
    "node_id": "MDU6SXNzdWUyMzk1NTEyNzQ=",
    "number": 2402,
    "title": "render_template_string() recompiles the template every time",
    "user": {
        "login": "Vlad-Shcherbina",
        "id": 302938,
        "node_id": "MDQ6VXNlcjMwMjkzOA==",
        "avatar_url": "https://avatars1.githubusercontent.com/u/302938?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Vlad-Shcherbina",
        "html_url": "https://github.com/Vlad-Shcherbina",
        "followers_url": "https://api.github.com/users/Vlad-Shcherbina/followers",
        "following_url": "https://api.github.com/users/Vlad-Shcherbina/following{/other_user}",
        "gists_url": "https://api.github.com/users/Vlad-Shcherbina/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Vlad-Shcherbina/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Vlad-Shcherbina/subscriptions",
        "organizations_url": "https://api.github.com/users/Vlad-Shcherbina/orgs",
        "repos_url": "https://api.github.com/users/Vlad-Shcherbina/repos",
        "events_url": "https://api.github.com/users/Vlad-Shcherbina/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Vlad-Shcherbina/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2017-06-29T17:15:49Z",
    "updated_at": "2017-06-29T22:05:42Z",
    "closed_at": "2017-06-29T17:25:39Z",
    "author_association": "NONE",
    "body": "When `flask.render_template_string()` is invoked with the same template string multiple times, it still compiles it on every invocation. This makes it pretty much unusable in any application where performance is of any concern.\r\n\r\nAs a dirty workaround, I use memoized version.\r\nIt only makes sense if template strings are not generated dynamically, but that sounds like a reasonable assumption.\r\n\r\n```python\r\nimport flask.globals\r\nimport flask.templating\r\n\r\n_compiled_templates = {}\r\n\r\ndef memoized_render_template_string(source, **context):\r\n    \"\"\"Same as flask.render_template_string(), but does not recompile.\r\n\r\n    No cache expiration.\r\n    Assumes that Jinja environment configuration does not change at runtime.\r\n    \"\"\"\r\n    ctx = flask.globals._app_ctx_stack.top\r\n    ctx.app.update_template_context(context)\r\n    jinja_env = ctx.app.jinja_env\r\n    k = jinja_env, source\r\n    if k in _compiled_templates:\r\n        template = _compiled_templates[k]\r\n    else:\r\n        template = _compiled_templates[k] = jinja_env.from_string(source)\r\n    return flask.templating._render(template, context, ctx.app)\r\n```\r\n\r\nPerhaps this problem should be addressed in the actual implementation of `render_template_string()`?\r\nI'm not sure what would be the proper way to do it, though.",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/312033538",
            "html_url": "https://github.com/pallets/flask/issues/2402#issuecomment-312033538",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2402",
            "id": 312033538,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjAzMzUzOA==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-29T17:17:45Z",
            "updated_at": "2017-06-29T17:17:45Z",
            "author_association": "MEMBER",
            "body": "For what are you using it so much that the performance difference really matters?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/312035569",
            "html_url": "https://github.com/pallets/flask/issues/2402#issuecomment-312035569",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2402",
            "id": 312035569,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjAzNTU2OQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-29T17:25:39Z",
            "updated_at": "2017-06-29T17:25:39Z",
            "author_association": "MEMBER",
            "body": "If you need to cache the results, you should implement that yourself. Note that a global like you're using will not perform much better in production environments, where there are multiple worker processes spawning and dying independent of each other. Use memcached, redis, or something else external. Werkzeug has cache implementations and Flask-Caching provides some too."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/312069391",
            "html_url": "https://github.com/pallets/flask/issues/2402#issuecomment-312069391",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2402",
            "id": 312069391,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjA2OTM5MQ==",
            "user": {
                "login": "Vlad-Shcherbina",
                "id": 302938,
                "node_id": "MDQ6VXNlcjMwMjkzOA==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/302938?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Vlad-Shcherbina",
                "html_url": "https://github.com/Vlad-Shcherbina",
                "followers_url": "https://api.github.com/users/Vlad-Shcherbina/followers",
                "following_url": "https://api.github.com/users/Vlad-Shcherbina/following{/other_user}",
                "gists_url": "https://api.github.com/users/Vlad-Shcherbina/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Vlad-Shcherbina/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Vlad-Shcherbina/subscriptions",
                "organizations_url": "https://api.github.com/users/Vlad-Shcherbina/orgs",
                "repos_url": "https://api.github.com/users/Vlad-Shcherbina/repos",
                "events_url": "https://api.github.com/users/Vlad-Shcherbina/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Vlad-Shcherbina/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-29T19:05:24Z",
            "updated_at": "2017-06-29T19:05:24Z",
            "author_association": "NONE",
            "body": "@ThiefMaster , I use it in helper functions and template filters that render small UI elements.\r\nFor example, a date that is a hyperlink to timeanddate.\r\n\r\nI observed that even for fairly simple templates compilation times are in milliseconds.\r\nPut a hundred of such elements on a page and the app is sluggish."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/312069878",
            "html_url": "https://github.com/pallets/flask/issues/2402#issuecomment-312069878",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2402",
            "id": 312069878,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjA2OTg3OA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-29T19:07:23Z",
            "updated_at": "2017-06-29T19:07:23Z",
            "author_association": "MEMBER",
            "body": "A better strategy would be to use loaded templates, so that they get cached using Jinja's internal cache."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/312069918",
            "html_url": "https://github.com/pallets/flask/issues/2402#issuecomment-312069918",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2402",
            "id": 312069918,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjA2OTkxOA==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-29T19:07:35Z",
            "updated_at": "2017-06-29T19:07:35Z",
            "author_association": "MEMBER",
            "body": "Sounds like you should put them in an actual template file and create a jinja module from it if you want to execute it from non-template Python code."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/312091202",
            "html_url": "https://github.com/pallets/flask/issues/2402#issuecomment-312091202",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2402",
            "id": 312091202,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjA5MTIwMg==",
            "user": {
                "login": "Vlad-Shcherbina",
                "id": 302938,
                "node_id": "MDQ6VXNlcjMwMjkzOA==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/302938?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Vlad-Shcherbina",
                "html_url": "https://github.com/Vlad-Shcherbina",
                "followers_url": "https://api.github.com/users/Vlad-Shcherbina/followers",
                "following_url": "https://api.github.com/users/Vlad-Shcherbina/following{/other_user}",
                "gists_url": "https://api.github.com/users/Vlad-Shcherbina/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Vlad-Shcherbina/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Vlad-Shcherbina/subscriptions",
                "organizations_url": "https://api.github.com/users/Vlad-Shcherbina/orgs",
                "repos_url": "https://api.github.com/users/Vlad-Shcherbina/repos",
                "events_url": "https://api.github.com/users/Vlad-Shcherbina/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Vlad-Shcherbina/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-29T20:14:56Z",
            "updated_at": "2017-06-29T20:14:56Z",
            "author_association": "NONE",
            "body": "These are valid approaches. They offer good performance, but have some minor drawbacks (perhaps, subjective).\r\n\r\nDedicated template files hurt readability through unnecessary indirection (many of my templates are one or two lines).\r\n\r\nTemplate file with a collection of macros is ok as long as rendering doesn't require any actual python code, otherwise code locality suffers again.\r\n\r\nI was convinced that `render_template_string` is a perfect fit, designed specifically for my scenario, until I discovered that it's slow. Out of curiosity, what are legitimate uses for `render_template_string` then? (Does it have any?)"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/312100936",
            "html_url": "https://github.com/pallets/flask/issues/2402#issuecomment-312100936",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2402",
            "id": 312100936,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjEwMDkzNg==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-29T20:43:17Z",
            "updated_at": "2017-06-29T20:43:41Z",
            "author_association": "MEMBER",
            "body": "There are other loaders besides the filesystem, you can add more loaders to the one that Flask provides. You can probably use something in http://jinja.pocoo.org/docs/dev/api/#loaders or implement your own loader to get caching with strings. I think the key is that the template has some associated metadata to build a cache key.\r\n\r\nAs I said though, if you need caching that's something you need to implement based on your application's requirements and setup."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/312121616",
            "html_url": "https://github.com/pallets/flask/issues/2402#issuecomment-312121616",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2402",
            "id": 312121616,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjEyMTYxNg==",
            "user": {
                "login": "jpassaro",
                "id": 6754005,
                "node_id": "MDQ6VXNlcjY3NTQwMDU=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/6754005?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jpassaro",
                "html_url": "https://github.com/jpassaro",
                "followers_url": "https://api.github.com/users/jpassaro/followers",
                "following_url": "https://api.github.com/users/jpassaro/following{/other_user}",
                "gists_url": "https://api.github.com/users/jpassaro/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jpassaro/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jpassaro/subscriptions",
                "organizations_url": "https://api.github.com/users/jpassaro/orgs",
                "repos_url": "https://api.github.com/users/jpassaro/repos",
                "events_url": "https://api.github.com/users/jpassaro/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jpassaro/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-29T22:05:41Z",
            "updated_at": "2017-06-29T22:05:41Z",
            "author_association": "NONE",
            "body": "> what are legitimate uses for `render_template_string`\r\n\r\nFor me, mostly just poking around for debug purposes.\r\n\r\nIf keeping small templates is truly cumbersome, you could use one of the caches @davidism mentioned as implemented in werkzeug (e.g. memcached, redis): create a function that checks the database cache for some string identifier and the template parameters, if present then use that, otherwise use `render_template_string` to generate and store to that cache.\r\n\r\nThe string identifier could, if truly short enough, just be the string itself, or a sha1 or something. On the other hand, you could store as class docstrings and use the class name as an identifier [[gist](https://gist.github.com/jpassaro/6b0942c2affc63084b3328466ca3e2a4)]."
        }
    ]
}