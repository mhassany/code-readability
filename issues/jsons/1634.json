{
    "url": "https://api.github.com/repos/pallets/flask/issues/1634",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1634/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1634/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1634/events",
    "html_url": "https://github.com/pallets/flask/pull/1634",
    "id": 119860555,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTIzNDk4OTE=",
    "number": 1634,
    "title": "add before_init param to View.as_view",
    "user": {
        "login": "guyskk",
        "id": 6367792,
        "node_id": "MDQ6VXNlcjYzNjc3OTI=",
        "avatar_url": "https://avatars2.githubusercontent.com/u/6367792?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guyskk",
        "html_url": "https://github.com/guyskk",
        "followers_url": "https://api.github.com/users/guyskk/followers",
        "following_url": "https://api.github.com/users/guyskk/following{/other_user}",
        "gists_url": "https://api.github.com/users/guyskk/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/guyskk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/guyskk/subscriptions",
        "organizations_url": "https://api.github.com/users/guyskk/orgs",
        "repos_url": "https://api.github.com/users/guyskk/repos",
        "events_url": "https://api.github.com/users/guyskk/events{/privacy}",
        "received_events_url": "https://api.github.com/users/guyskk/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2015-12-02T03:37:04Z",
    "updated_at": "2018-10-23T17:43:40Z",
    "closed_at": "2015-12-02T04:30:12Z",
    "author_association": "NONE",
    "pull_request": {
        "url": "https://api.github.com/repos/pallets/flask/pulls/1634",
        "html_url": "https://github.com/pallets/flask/pull/1634",
        "diff_url": "https://github.com/pallets/flask/pull/1634.diff",
        "patch_url": "https://github.com/pallets/flask/pull/1634.patch"
    },
    "body": "I am writing a flask ext and need to do something before View init, \nbut I can't do that via app.before_request because I need to test my View without request.\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/161174345",
            "html_url": "https://github.com/pallets/flask/pull/1634#issuecomment-161174345",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1634",
            "id": 161174345,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTE3NDM0NQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-12-02T03:57:37Z",
            "updated_at": "2015-12-02T03:57:37Z",
            "author_association": "MEMBER",
            "body": "Please provide a concrete example of what you're trying to do with this as well as why you can't test a view with a request.  I'm not clear how this is different than just overriding `__init__` to call `do_something` first, or otherwise subclassing `View`.  Additionally, this patch needs tests and must pass existing tests as well.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/161175575",
            "html_url": "https://github.com/pallets/flask/pull/1634#issuecomment-161175575",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1634",
            "id": 161175575,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTE3NTU3NQ==",
            "user": {
                "login": "guyskk",
                "id": 6367792,
                "node_id": "MDQ6VXNlcjYzNjc3OTI=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/6367792?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/guyskk",
                "html_url": "https://github.com/guyskk",
                "followers_url": "https://api.github.com/users/guyskk/followers",
                "following_url": "https://api.github.com/users/guyskk/following{/other_user}",
                "gists_url": "https://api.github.com/users/guyskk/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/guyskk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/guyskk/subscriptions",
                "organizations_url": "https://api.github.com/users/guyskk/orgs",
                "repos_url": "https://api.github.com/users/guyskk/repos",
                "events_url": "https://api.github.com/users/guyskk/events{/privacy}",
                "received_events_url": "https://api.github.com/users/guyskk/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-12-02T04:10:23Z",
            "updated_at": "2015-12-02T04:10:23Z",
            "author_association": "NONE",
            "body": "I have  a Resource class subclassing View, and a Api class, just like flask-restful.\nApi need to parse request before Resource init, such as check user's permission.\n\nAnd the test is like this:\n\n```\n        with api.test_client() as c:\n            rv,code,header = c.resource.action(data)\n            assert code == 200\n            assert rv == {\"hello\":\"world\"}\n            assert c.resource.action_need_login(data).code == 403\n\n        with api.test_client(user_id) as c:\n            assert c.resource.action_need_login(data).code == 200\n            assert c.resource.action_need_login(data).rv == {\"hello\":\"guyskk\"}\n```\n\nIt will pass user_id and data directly.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/161176862",
            "html_url": "https://github.com/pallets/flask/pull/1634#issuecomment-161176862",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1634",
            "id": 161176862,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTE3Njg2Mg==",
            "user": {
                "login": "guyskk",
                "id": 6367792,
                "node_id": "MDQ6VXNlcjYzNjc3OTI=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/6367792?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/guyskk",
                "html_url": "https://github.com/guyskk",
                "followers_url": "https://api.github.com/users/guyskk/followers",
                "following_url": "https://api.github.com/users/guyskk/following{/other_user}",
                "gists_url": "https://api.github.com/users/guyskk/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/guyskk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/guyskk/subscriptions",
                "organizations_url": "https://api.github.com/users/guyskk/orgs",
                "repos_url": "https://api.github.com/users/guyskk/repos",
                "events_url": "https://api.github.com/users/guyskk/events{/privacy}",
                "received_events_url": "https://api.github.com/users/guyskk/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-12-02T04:20:07Z",
            "updated_at": "2015-12-02T04:20:07Z",
            "author_association": "NONE",
            "body": "A example:\n\n```\napp = Flask(__name__)\napi = Api(app)\n\nclass Hello(Resource):\n\n    def get(self):\n\n        return {\"hello\": \"name\"}\n\napi.add_resource(Hello)\n```\n\nIn api, `_restaction_test` means on testing.\n\n```\ndef _before_resource_init(self):\n\n    if not getattr(g, \"_restaction_test\", False):\n        resource, action = parse_request()\n        me = self.parse_auth_header()\n        request_data = get_request_data()\n        g.resource = resource\n        g.action = action\n        g.me = me\n        g.request_data = request_data\n\n    user_role = self._fn_user_role(g.me[\"id\"])\n    permit, res_role = self._permit(user_role, g.resource, g.action)\n    g.me[\"role\"] = res_role\n    if not permit:\n        if g.me[\"id\"] is None:\n            abort(403, \"permission deny: your token is invalid\")\n        else:\n            abort(403, \"You don't have permission: user_role=%s\" % user_role)\n```\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/161177103",
            "html_url": "https://github.com/pallets/flask/pull/1634#issuecomment-161177103",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1634",
            "id": 161177103,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTE3NzEwMw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-12-02T04:22:31Z",
            "updated_at": "2015-12-02T04:22:31Z",
            "author_association": "MEMBER",
            "body": "What is `c.resource`?  It's not a standard part of Flask.  Your example doesn't demonstrate the need for your patch.  Class creation should not have side effects that you might need to bypass.  Use decorators to check for permissions, which is already supported by `View`.  This seems like an incorrect design choice rather than a missing feature on Flask's part.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/161177727",
            "html_url": "https://github.com/pallets/flask/pull/1634#issuecomment-161177727",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1634",
            "id": 161177727,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTE3NzcyNw==",
            "user": {
                "login": "guyskk",
                "id": 6367792,
                "node_id": "MDQ6VXNlcjYzNjc3OTI=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/6367792?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/guyskk",
                "html_url": "https://github.com/guyskk",
                "followers_url": "https://api.github.com/users/guyskk/followers",
                "following_url": "https://api.github.com/users/guyskk/following{/other_user}",
                "gists_url": "https://api.github.com/users/guyskk/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/guyskk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/guyskk/subscriptions",
                "organizations_url": "https://api.github.com/users/guyskk/orgs",
                "repos_url": "https://api.github.com/users/guyskk/repos",
                "events_url": "https://api.github.com/users/guyskk/events{/privacy}",
                "received_events_url": "https://api.github.com/users/guyskk/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-12-02T04:30:12Z",
            "updated_at": "2015-12-02T04:30:12Z",
            "author_association": "NONE",
            "body": "You are right\nthank you\n"
        }
    ]
}