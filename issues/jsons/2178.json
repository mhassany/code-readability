{
    "url": "https://api.github.com/repos/pallets/flask/issues/2178",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2178/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2178/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2178/events",
    "html_url": "https://github.com/pallets/flask/issues/2178",
    "id": 206653080,
    "node_id": "MDU6SXNzdWUyMDY2NTMwODA=",
    "number": 2178,
    "title": "Callback on `app.run`",
    "user": {
        "login": "barischrooneyj",
        "id": 6631452,
        "node_id": "MDQ6VXNlcjY2MzE0NTI=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/6631452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/barischrooneyj",
        "html_url": "https://github.com/barischrooneyj",
        "followers_url": "https://api.github.com/users/barischrooneyj/followers",
        "following_url": "https://api.github.com/users/barischrooneyj/following{/other_user}",
        "gists_url": "https://api.github.com/users/barischrooneyj/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/barischrooneyj/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/barischrooneyj/subscriptions",
        "organizations_url": "https://api.github.com/users/barischrooneyj/orgs",
        "repos_url": "https://api.github.com/users/barischrooneyj/repos",
        "events_url": "https://api.github.com/users/barischrooneyj/events{/privacy}",
        "received_events_url": "https://api.github.com/users/barischrooneyj/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2017-02-09T22:46:32Z",
    "updated_at": "2017-09-12T23:27:42Z",
    "closed_at": "2017-02-09T23:14:05Z",
    "author_association": "NONE",
    "body": "When writing local-only apps we want to open the web browser after the flask app starts up.\r\n\r\nCurrently we do:\r\n```\r\nthreading.Timer(1.25, lambda: webbrowser.open(url) ).start()\r\napp.run(port=port)\r\n```\r\n\r\nHowever it would be nice not to have a guessed time like `1.25`, also it would be nice for the opening of the browser to be cancelled incase starting the flask app fails.\r\n\r\nPossibly would look like:\r\n\r\n`app.run(port=port, onstart=lambda: webbrowser.open(url))`",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/278804071",
            "html_url": "https://github.com/pallets/flask/issues/2178#issuecomment-278804071",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2178",
            "id": 278804071,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODgwNDA3MQ==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-02-09T23:05:25Z",
            "updated_at": "2017-02-09T23:05:25Z",
            "author_association": "MEMBER",
            "body": "To be honest, I don't think this would be a very useful feature - it's not too uncommon to restart the dev server during development and at least I wouldn't want to have another browser window/tab open all the time. Especially since it takes less than a second to open a tab and start typing `localhost` or whatever hostname you use and select the entry from history."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/278805474",
            "html_url": "https://github.com/pallets/flask/issues/2178#issuecomment-278805474",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2178",
            "id": 278805474,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODgwNTQ3NA==",
            "user": {
                "login": "barischrooneyj",
                "id": 6631452,
                "node_id": "MDQ6VXNlcjY2MzE0NTI=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/6631452?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/barischrooneyj",
                "html_url": "https://github.com/barischrooneyj",
                "followers_url": "https://api.github.com/users/barischrooneyj/followers",
                "following_url": "https://api.github.com/users/barischrooneyj/following{/other_user}",
                "gists_url": "https://api.github.com/users/barischrooneyj/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/barischrooneyj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/barischrooneyj/subscriptions",
                "organizations_url": "https://api.github.com/users/barischrooneyj/orgs",
                "repos_url": "https://api.github.com/users/barischrooneyj/repos",
                "events_url": "https://api.github.com/users/barischrooneyj/events{/privacy}",
                "received_events_url": "https://api.github.com/users/barischrooneyj/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-02-09T23:11:54Z",
            "updated_at": "2017-02-09T23:12:04Z",
            "author_association": "NONE",
            "body": "I'm don't mean development servers, but rather local only applications which use the web browser as a display."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/278805787",
            "html_url": "https://github.com/pallets/flask/issues/2178#issuecomment-278805787",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2178",
            "id": 278805787,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODgwNTc4Nw==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-02-09T23:13:17Z",
            "updated_at": "2017-02-09T23:13:17Z",
            "author_association": "MEMBER",
            "body": "`app.run()` (or to be more exact: the builtin dev server) is not intended to be used in any kind of production setup - including local non-development use (even if the drawbacks are less noticable in that case when threading is enabled)..."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/278807829",
            "html_url": "https://github.com/pallets/flask/issues/2178#issuecomment-278807829",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2178",
            "id": 278807829,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODgwNzgyOQ==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-02-09T23:22:03Z",
            "updated_at": "2017-02-09T23:22:03Z",
            "author_association": "MEMBER",
            "body": "@barischj As far as I recall there is no \"direct\" way to determine when the server is listening, so your best bet is spawning a new thread and poll that port. If it responds you can then open the browser."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/278811019",
            "html_url": "https://github.com/pallets/flask/issues/2178#issuecomment-278811019",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2178",
            "id": 278811019,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODgxMTAxOQ==",
            "user": {
                "login": "barischrooneyj",
                "id": 6631452,
                "node_id": "MDQ6VXNlcjY2MzE0NTI=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/6631452?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/barischrooneyj",
                "html_url": "https://github.com/barischrooneyj",
                "followers_url": "https://api.github.com/users/barischrooneyj/followers",
                "following_url": "https://api.github.com/users/barischrooneyj/following{/other_user}",
                "gists_url": "https://api.github.com/users/barischrooneyj/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/barischrooneyj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/barischrooneyj/subscriptions",
                "organizations_url": "https://api.github.com/users/barischrooneyj/orgs",
                "repos_url": "https://api.github.com/users/barischrooneyj/repos",
                "events_url": "https://api.github.com/users/barischrooneyj/events{/privacy}",
                "received_events_url": "https://api.github.com/users/barischrooneyj/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-02-09T23:36:11Z",
            "updated_at": "2017-02-09T23:36:11Z",
            "author_association": "NONE",
            "body": "Thanks for the help :)"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/278869797",
            "html_url": "https://github.com/pallets/flask/issues/2178#issuecomment-278869797",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2178",
            "id": 278869797,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODg2OTc5Nw==",
            "user": {
                "login": "mohamed-aziz",
                "id": 8514622,
                "node_id": "MDQ6VXNlcjg1MTQ2MjI=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/8514622?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mohamed-aziz",
                "html_url": "https://github.com/mohamed-aziz",
                "followers_url": "https://api.github.com/users/mohamed-aziz/followers",
                "following_url": "https://api.github.com/users/mohamed-aziz/following{/other_user}",
                "gists_url": "https://api.github.com/users/mohamed-aziz/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mohamed-aziz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mohamed-aziz/subscriptions",
                "organizations_url": "https://api.github.com/users/mohamed-aziz/orgs",
                "repos_url": "https://api.github.com/users/mohamed-aziz/repos",
                "events_url": "https://api.github.com/users/mohamed-aziz/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mohamed-aziz/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-02-10T06:41:31Z",
            "updated_at": "2017-02-10T06:41:31Z",
            "author_association": "NONE",
            "body": "@barischj I don't think that Flask.run should accept a callback method, but you can do something like @untitaker suggests\r\n\r\n    from flask import Flask\r\n    from threading import Thread\r\n    import socket\r\n    import time\r\n    import webbrowser\r\n\r\n\r\n    app = Flask(__name__)\r\n\r\n    class OpenBrowser(Thread):\r\n\r\n        def __init__(self):\r\n            super(OpenBrowser, self).__init__()\r\n\r\n        def notResponding(self):\r\n            sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\r\n            return sock.connect_ex(('127.0.0.1', 5000))\r\n\r\n        def run(self):\r\n            while self.notResponding():\r\n                print('Did not respond')\r\n            print('Responded')\r\n            webbrowser.open_new('http://127.0.0.1:5000/') \r\n\r\n    @app.route('/')\r\n    def index():\r\n        return 'Hello World'\r\n\r\n    th = OpenBrowser()\r\n\r\n    th.start()\r\n\r\n    app.run()\r\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/292765792",
            "html_url": "https://github.com/pallets/flask/issues/2178#issuecomment-292765792",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2178",
            "id": 292765792,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5Mjc2NTc5Mg==",
            "user": {
                "login": "lixk",
                "id": 7964424,
                "node_id": "MDQ6VXNlcjc5NjQ0MjQ=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/7964424?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/lixk",
                "html_url": "https://github.com/lixk",
                "followers_url": "https://api.github.com/users/lixk/followers",
                "following_url": "https://api.github.com/users/lixk/following{/other_user}",
                "gists_url": "https://api.github.com/users/lixk/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/lixk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lixk/subscriptions",
                "organizations_url": "https://api.github.com/users/lixk/orgs",
                "repos_url": "https://api.github.com/users/lixk/repos",
                "events_url": "https://api.github.com/users/lixk/events{/privacy}",
                "received_events_url": "https://api.github.com/users/lixk/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-09T05:46:18Z",
            "updated_at": "2017-04-09T05:47:24Z",
            "author_association": "NONE",
            "body": "You can do it like this:\r\n\r\n```\r\nimport webbrowser\r\nfrom application import app\r\nimport threading\r\nimport time\r\nfrom urllib import request\r\n\r\nINDEX_URL = \"http://127.0.0.1:5000\"\r\n\r\n\r\ndef open_browser():\r\n    print('server starting...')\r\n    while True:\r\n        try:\r\n            request.urlopen(url=INDEX_URL)\r\n            break\r\n        except Exception as e:\r\n            print(e)\r\n            time.sleep(0.5)\r\n    print('server started !')\r\n    # server started callback\r\n    webbrowser.open(INDEX_URL)\r\n\r\nthreading.Thread(target=open_browser).start()\r\n# start server\r\napp.run(host=\"0.0.0.0\", port=5000)\r\n\r\n```"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/328988542",
            "html_url": "https://github.com/pallets/flask/issues/2178#issuecomment-328988542",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2178",
            "id": 328988542,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMyODk4ODU0Mg==",
            "user": {
                "login": "arvindsree",
                "id": 21178759,
                "node_id": "MDQ6VXNlcjIxMTc4NzU5",
                "avatar_url": "https://avatars1.githubusercontent.com/u/21178759?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/arvindsree",
                "html_url": "https://github.com/arvindsree",
                "followers_url": "https://api.github.com/users/arvindsree/followers",
                "following_url": "https://api.github.com/users/arvindsree/following{/other_user}",
                "gists_url": "https://api.github.com/users/arvindsree/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/arvindsree/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/arvindsree/subscriptions",
                "organizations_url": "https://api.github.com/users/arvindsree/orgs",
                "repos_url": "https://api.github.com/users/arvindsree/repos",
                "events_url": "https://api.github.com/users/arvindsree/events{/privacy}",
                "received_events_url": "https://api.github.com/users/arvindsree/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-09-12T21:23:51Z",
            "updated_at": "2017-09-12T21:23:51Z",
            "author_association": "NONE",
            "body": "I would like to request for this feature. I would require a callback on successfull app.run( ) afgter it has loaded the files. My use case is that I want to delete private key file after the server has been run on this callback"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/328998235",
            "html_url": "https://github.com/pallets/flask/issues/2178#issuecomment-328998235",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2178",
            "id": 328998235,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMyODk5ODIzNQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-09-12T22:07:26Z",
            "updated_at": "2017-09-12T22:08:49Z",
            "author_association": "MEMBER",
            "body": "If it wasn't clear from being closed, this is not happening. The dev server is only for dev, so any solution would only work in that one case anyway. The same goes for any of the suggestions above. Do not rely on that behavior."
        }
    ]
}