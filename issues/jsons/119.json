{
    "url": "https://api.github.com/repos/pallets/flask/issues/119",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/119/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/119/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/119/events",
    "html_url": "https://github.com/pallets/flask/pull/119",
    "id": 348262,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTIxNDY=",
    "number": 119,
    "title": "support classes in addition to functions for views",
    "user": {
        "login": "orutherfurd",
        "id": 411934,
        "node_id": "MDQ6VXNlcjQxMTkzNA==",
        "avatar_url": "https://avatars1.githubusercontent.com/u/411934?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/orutherfurd",
        "html_url": "https://github.com/orutherfurd",
        "followers_url": "https://api.github.com/users/orutherfurd/followers",
        "following_url": "https://api.github.com/users/orutherfurd/following{/other_user}",
        "gists_url": "https://api.github.com/users/orutherfurd/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/orutherfurd/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/orutherfurd/subscriptions",
        "organizations_url": "https://api.github.com/users/orutherfurd/orgs",
        "repos_url": "https://api.github.com/users/orutherfurd/repos",
        "events_url": "https://api.github.com/users/orutherfurd/events{/privacy}",
        "received_events_url": "https://api.github.com/users/orutherfurd/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2010-10-05T19:33:45Z",
    "updated_at": "2014-06-12T05:16:59Z",
    "closed_at": "2011-09-19T14:58:22Z",
    "author_association": "NONE",
    "pull_request": {
        "url": "https://api.github.com/repos/pallets/flask/pulls/119",
        "html_url": "https://github.com/pallets/flask/pull/119",
        "diff_url": "https://github.com/pallets/flask/pull/119.diff",
        "patch_url": "https://github.com/pallets/flask/pull/119.patch"
    },
    "body": "Hope I did this right.  First time using github and using hg-git, as well.\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/1105659",
            "html_url": "https://github.com/pallets/flask/pull/119#issuecomment-1105659",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/119",
            "id": 1105659,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMDU2NTk=",
            "user": {
                "login": "kardan",
                "id": 31837,
                "node_id": "MDQ6VXNlcjMxODM3",
                "avatar_url": "https://avatars0.githubusercontent.com/u/31837?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/kardan",
                "html_url": "https://github.com/kardan",
                "followers_url": "https://api.github.com/users/kardan/followers",
                "following_url": "https://api.github.com/users/kardan/following{/other_user}",
                "gists_url": "https://api.github.com/users/kardan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/kardan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kardan/subscriptions",
                "organizations_url": "https://api.github.com/users/kardan/orgs",
                "repos_url": "https://api.github.com/users/kardan/repos",
                "events_url": "https://api.github.com/users/kardan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/kardan/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2011-05-05T13:43:40Z",
            "updated_at": "2011-05-05T13:43:40Z",
            "author_association": "NONE",
            "body": "Just out of curiosity: now when Django have shipped class based views are there any new thoughts on this subject?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/1111179",
            "html_url": "https://github.com/pallets/flask/pull/119#issuecomment-1111179",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/119",
            "id": 1111179,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMTExNzk=",
            "user": {
                "login": "orutherfurd",
                "id": 411934,
                "node_id": "MDQ6VXNlcjQxMTkzNA==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/411934?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/orutherfurd",
                "html_url": "https://github.com/orutherfurd",
                "followers_url": "https://api.github.com/users/orutherfurd/followers",
                "following_url": "https://api.github.com/users/orutherfurd/following{/other_user}",
                "gists_url": "https://api.github.com/users/orutherfurd/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/orutherfurd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/orutherfurd/subscriptions",
                "organizations_url": "https://api.github.com/users/orutherfurd/orgs",
                "repos_url": "https://api.github.com/users/orutherfurd/repos",
                "events_url": "https://api.github.com/users/orutherfurd/events{/privacy}",
                "received_events_url": "https://api.github.com/users/orutherfurd/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2011-05-06T13:10:21Z",
            "updated_at": "2011-05-06T13:10:21Z",
            "author_association": "NONE",
            "body": "Here are some untested decorators for using classes as views.  The first expects the class to have a **call** method and the second dispatches to a method of the same name (in lowercase) (e.g.: GET -> cls.get(_args, *_kw)).  It's certainly not the same as having built-in support, but they're enough to start experimenting with class based views.\n\n``` python\n\ndef view_with_call(rule, app_or_module, methods=None):\n    \"\"\"register class as view -- must implement __call__.\n\n    @view_with_call('/hello/', app)\n    class hello(object):\n        def __call__(self):\n            return 'hi!'\n    \"\"\"\n    def decorator(cls):\n        def wrapper(*args, **kwargs):\n            return cls()(*args, **kwargs)\n        app_or_module.add_rule(rule, cls.__name__, wrapper, methods=methods or ['GET'])\n    return decorator\n\ndef view_with_method(rule, app_or_module):\n    \"\"\"register class as view -- must implement .get, .post, .put, and/or .delete\n\n    @view_with_method('/hey/<you>/', app)\n    class heyyou(object):\n        def get(self, you):\n            return 'hey, %s' % you\n    \"\"\"\n    def decorator(cls):\n        methods = [m for m in 'GET POST PUT DELETE'.split() if hasattr(cls, m.lower())]\n        if not methods:\n            raise TypeError(\"%s doesn't have .get, .post, .put, or .delete\" % cls.__name__)\n        def wrapper(*args, **kwargs):\n            return cls()(*args, **kwargs)\n        app_or_module.add_url_rule(rule, cls.__name__, wrapper, methods=methods)\n    return decorator\n```\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/1187749",
            "html_url": "https://github.com/pallets/flask/pull/119#issuecomment-1187749",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/119",
            "id": 1187749,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExODc3NDk=",
            "user": {
                "login": "hcarvalhoalves",
                "id": 161577,
                "node_id": "MDQ6VXNlcjE2MTU3Nw==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/161577?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hcarvalhoalves",
                "html_url": "https://github.com/hcarvalhoalves",
                "followers_url": "https://api.github.com/users/hcarvalhoalves/followers",
                "following_url": "https://api.github.com/users/hcarvalhoalves/following{/other_user}",
                "gists_url": "https://api.github.com/users/hcarvalhoalves/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hcarvalhoalves/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hcarvalhoalves/subscriptions",
                "organizations_url": "https://api.github.com/users/hcarvalhoalves/orgs",
                "repos_url": "https://api.github.com/users/hcarvalhoalves/repos",
                "events_url": "https://api.github.com/users/hcarvalhoalves/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hcarvalhoalves/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2011-05-17T04:34:44Z",
            "updated_at": "2011-05-17T04:34:44Z",
            "author_association": "NONE",
            "body": "The last decorator is an interesting idea for implementing a REST interface.\n\nBesides that, I like the idea of just using any object and having Flask **call** it as appropriate. It's what one would expect to \"Just Work\".\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/2134460",
            "html_url": "https://github.com/pallets/flask/pull/119#issuecomment-2134460",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/119",
            "id": 2134460,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzQ0NjA=",
            "user": {
                "login": "rduplain",
                "id": 36428,
                "node_id": "MDQ6VXNlcjM2NDI4",
                "avatar_url": "https://avatars1.githubusercontent.com/u/36428?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rduplain",
                "html_url": "https://github.com/rduplain",
                "followers_url": "https://api.github.com/users/rduplain/followers",
                "following_url": "https://api.github.com/users/rduplain/following{/other_user}",
                "gists_url": "https://api.github.com/users/rduplain/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rduplain/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rduplain/subscriptions",
                "organizations_url": "https://api.github.com/users/rduplain/orgs",
                "repos_url": "https://api.github.com/users/rduplain/repos",
                "events_url": "https://api.github.com/users/rduplain/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rduplain/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2011-09-19T14:58:22Z",
            "updated_at": "2011-09-19T14:58:22Z",
            "author_association": "CONTRIBUTOR",
            "body": "Class-based views were added in Flask 0.7.\nhttp://flask.pocoo.org/docs/api/#class-based-views\n\nClosing -- thanks!\n"
        }
    ]
}