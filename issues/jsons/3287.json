{
    "url": "https://api.github.com/repos/pallets/flask/issues/3287",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/3287/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/3287/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/3287/events",
    "html_url": "https://github.com/pallets/flask/issues/3287",
    "id": 464800530,
    "node_id": "MDU6SXNzdWU0NjQ4MDA1MzA=",
    "number": 3287,
    "title": "Multi-level error handling support broken in ver: 1.1.0",
    "user": {
        "login": "ArshanKhanifar",
        "id": 10492324,
        "node_id": "MDQ6VXNlcjEwNDkyMzI0",
        "avatar_url": "https://avatars1.githubusercontent.com/u/10492324?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ArshanKhanifar",
        "html_url": "https://github.com/ArshanKhanifar",
        "followers_url": "https://api.github.com/users/ArshanKhanifar/followers",
        "following_url": "https://api.github.com/users/ArshanKhanifar/following{/other_user}",
        "gists_url": "https://api.github.com/users/ArshanKhanifar/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ArshanKhanifar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ArshanKhanifar/subscriptions",
        "organizations_url": "https://api.github.com/users/ArshanKhanifar/orgs",
        "repos_url": "https://api.github.com/users/ArshanKhanifar/repos",
        "events_url": "https://api.github.com/users/ArshanKhanifar/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ArshanKhanifar/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-07-06T00:23:49Z",
    "updated_at": "2019-07-06T00:52:00Z",
    "closed_at": "2019-07-06T00:36:39Z",
    "author_association": "NONE",
    "body": "---\r\n\r\n### Expected Behavior\r\nCatching an exception type in an error handler and raising another exception type breaks the flask app instead of passing control to the corresponding error handler.\r\n\r\nGiven the following `flask` application:\r\n```\r\nfrom flask import Flask, jsonify\r\nfrom werkzeug.exceptions import BadRequest, HTTPException\r\n\r\nclass CustomAppException(Exception):\r\n    pass\r\n\r\nclass AppFactory(object):\r\n    def create(self):\r\n        app = Flask(__name__)\r\n\r\n        @app.errorhandler(HTTPException)\r\n        def handle_generic_http_exceptions(e):\r\n            return jsonify({\r\n                \"error\": str(e)\r\n            }), e.code\r\n\r\n        @app.errorhandler(CustomAppException)\r\n        def unhandled_meteor_errors(e):\r\n            raise BadRequest(str(e))\r\n\r\n        @app.route(\"/\")\r\n        def raise_error_endpoint():\r\n            msg = 'some bad msg'\r\n            raise CustomAppException(msg)\r\n\r\n        return app\r\n```\r\nA get request to the endpoint `/` should show the following response: \r\n```\r\n{\r\n\"error\": \"400 Bad Request: some bad msg\"\r\n}\r\n```\r\n\r\n### Actual Behavior\r\n\r\nInstead it gives this response: \r\n```\r\n{\r\n\"error\": \"500 Internal Server Error: The server encountered an internal error and was unable to complete your request. Either the server is overloaded or there is an error in the application.\"\r\n}\r\n```\r\n\r\n### Environment\r\n* Python version: 3.7.3\r\n* Flask version: 1.1.0\r\n* Werkzeug version: 0.15.4\r\n\r\n```\r\n$ pip freeze\r\natomicwrites==1.3.0\r\nattrs==19.1.0\r\ncertifi==2019.6.16\r\nClick==7.0\r\nFlask==1.1.0\r\nimportlib-metadata==0.18\r\nitsdangerous==1.1.0\r\nJinja2==2.10.1\r\nMarkupSafe==1.1.1\r\nmore-itertools==7.1.0\r\npackaging==19.0\r\npluggy==0.12.0\r\npy==1.8.0\r\npyparsing==2.4.0\r\npytest==5.0.1\r\nsix==1.12.0\r\nwcwidth==0.1.7\r\nWerkzeug==0.15.4\r\nzipp==0.5.1\r\n```\r\n\r\nThis is not broken in `Flask 1.0.3`.  Here's the [repo](https://github.com/ArshanKhanifar/flask_bug_demonstration.git) that tests this. \r\n\r\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/508883937",
            "html_url": "https://github.com/pallets/flask/issues/3287#issuecomment-508883937",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3287",
            "id": 508883937,
            "node_id": "MDEyOklzc3VlQ29tbWVudDUwODg4MzkzNw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-07-06T00:29:02Z",
            "updated_at": "2019-07-06T00:36:55Z",
            "author_association": "MEMBER",
            "body": "This should be fixed by returning from the error handler instead of raising."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/508884424",
            "html_url": "https://github.com/pallets/flask/issues/3287#issuecomment-508884424",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3287",
            "id": 508884424,
            "node_id": "MDEyOklzc3VlQ29tbWVudDUwODg4NDQyNA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-07-06T00:36:39Z",
            "updated_at": "2019-07-06T00:36:39Z",
            "author_association": "MEMBER",
            "body": "This is expected behavior now. From the changelog:\r\n\r\n> Error handlers for `InternalServerError` or `500` will always be passed an instance of `InternalServerError`. If they are invoked due to an unhandled exception, that original exception is now available as `e.original_exception` rather than being passed directly to the handler. The same is true if the handler is for the base `HTTPException`. This makes error handler behavior more consistent. #3266\r\n\r\nThat your code worked before is sort of an accident, \"multilevel handling\" was not intended and in fact was only \"two level\". Error handlers should `return` a valid response, further errors are handled at a higher \"failsafe\" level."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/508885314",
            "html_url": "https://github.com/pallets/flask/issues/3287#issuecomment-508885314",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3287",
            "id": 508885314,
            "node_id": "MDEyOklzc3VlQ29tbWVudDUwODg4NTMxNA==",
            "user": {
                "login": "ArshanKhanifar",
                "id": 10492324,
                "node_id": "MDQ6VXNlcjEwNDkyMzI0",
                "avatar_url": "https://avatars1.githubusercontent.com/u/10492324?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ArshanKhanifar",
                "html_url": "https://github.com/ArshanKhanifar",
                "followers_url": "https://api.github.com/users/ArshanKhanifar/followers",
                "following_url": "https://api.github.com/users/ArshanKhanifar/following{/other_user}",
                "gists_url": "https://api.github.com/users/ArshanKhanifar/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ArshanKhanifar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ArshanKhanifar/subscriptions",
                "organizations_url": "https://api.github.com/users/ArshanKhanifar/orgs",
                "repos_url": "https://api.github.com/users/ArshanKhanifar/repos",
                "events_url": "https://api.github.com/users/ArshanKhanifar/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ArshanKhanifar/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-07-06T00:52:00Z",
            "updated_at": "2019-07-06T00:52:00Z",
            "author_association": "NONE",
            "body": "Thanks, I was treating them like normal python exceptions and had this kind of `catch-and-reraise` all over my code. Yikes \ud83d\ude2c"
        }
    ]
}