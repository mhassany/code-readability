{
    "url": "https://api.github.com/repos/pallets/flask/issues/2164",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2164/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2164/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2164/events",
    "html_url": "https://github.com/pallets/flask/pull/2164",
    "id": 203890085,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTAzNjU2ODcx",
    "number": 2164,
    "title": "Added .env support",
    "user": {
        "login": "mitsuhiko",
        "id": 7396,
        "node_id": "MDQ6VXNlcjczOTY=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mitsuhiko",
        "html_url": "https://github.com/mitsuhiko",
        "followers_url": "https://api.github.com/users/mitsuhiko/followers",
        "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
        "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
        "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
        "repos_url": "https://api.github.com/users/mitsuhiko/repos",
        "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 19,
    "created_at": "2017-01-29T19:30:31Z",
    "updated_at": "2018-10-23T17:44:05Z",
    "closed_at": "2017-04-07T16:39:08Z",
    "author_association": "MEMBER",
    "pull_request": {
        "url": "https://api.github.com/repos/pallets/flask/pulls/2164",
        "html_url": "https://github.com/pallets/flask/pull/2164",
        "diff_url": "https://github.com/pallets/flask/pull/2164.diff",
        "patch_url": "https://github.com/pallets/flask/pull/2164.patch"
    },
    "body": "This will instruct Flask to read .env files and then to load the\nenvironment variables from there.  Additionally it automatically\nchanges the working directory to the path the .env is contained in.",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/275940327",
            "html_url": "https://github.com/pallets/flask/pull/2164#issuecomment-275940327",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2164",
            "id": 275940327,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTk0MDMyNw==",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-01-29T19:43:23Z",
            "updated_at": "2017-01-29T19:43:23Z",
            "author_association": "MEMBER",
            "body": "Yeah, tests will come if we like this behavior."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/275941386",
            "html_url": "https://github.com/pallets/flask/pull/2164#issuecomment-275941386",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2164",
            "id": 275941386,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTk0MTM4Ng==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-01-29T19:58:59Z",
            "updated_at": "2017-01-29T19:58:59Z",
            "author_association": "MEMBER",
            "body": "In case it gets lost: https://github.com/pallets/flask/pull/2164#discussion_r98361152"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/275941444",
            "html_url": "https://github.com/pallets/flask/pull/2164#issuecomment-275941444",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2164",
            "id": 275941444,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTk0MTQ0NA==",
            "user": {
                "login": "RonnyPfannschmidt",
                "id": 156838,
                "node_id": "MDQ6VXNlcjE1NjgzOA==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/156838?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/RonnyPfannschmidt",
                "html_url": "https://github.com/RonnyPfannschmidt",
                "followers_url": "https://api.github.com/users/RonnyPfannschmidt/followers",
                "following_url": "https://api.github.com/users/RonnyPfannschmidt/following{/other_user}",
                "gists_url": "https://api.github.com/users/RonnyPfannschmidt/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/RonnyPfannschmidt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/RonnyPfannschmidt/subscriptions",
                "organizations_url": "https://api.github.com/users/RonnyPfannschmidt/orgs",
                "repos_url": "https://api.github.com/users/RonnyPfannschmidt/repos",
                "events_url": "https://api.github.com/users/RonnyPfannschmidt/events{/privacy}",
                "received_events_url": "https://api.github.com/users/RonnyPfannschmidt/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-01-29T19:59:47Z",
            "updated_at": "2017-01-29T19:59:47Z",
            "author_association": "CONTRIBUTOR",
            "body": "isnt there a library for env files? imho flask shouldnt reimplement"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/275941485",
            "html_url": "https://github.com/pallets/flask/pull/2164#issuecomment-275941485",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2164",
            "id": 275941485,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTk0MTQ4NQ==",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-01-29T20:00:19Z",
            "updated_at": "2017-01-29T20:00:19Z",
            "author_association": "MEMBER",
            "body": "@RonnyPfannschmidt i'm not going to pull in a one liner dependency here.\r\n\r\n@untitaker the behavior here is consistent with other libraries that implement .env loading."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/275945409",
            "html_url": "https://github.com/pallets/flask/pull/2164#issuecomment-275945409",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2164",
            "id": 275945409,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTk0NTQwOQ==",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-01-29T20:57:53Z",
            "updated_at": "2017-01-29T20:57:53Z",
            "author_association": "MEMBER",
            "body": "So maybe we put the conversation back to where this started: the goal was to make it easier during development to refer to the current Flask app. I do not see this as a feature for production. However let's see if we can figure out the production case as well.\r\n\r\nHow does one refer to their own app in production without exporting env variables?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/275950198",
            "html_url": "https://github.com/pallets/flask/pull/2164#issuecomment-275950198",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2164",
            "id": 275950198,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTk1MDE5OA==",
            "user": {
                "login": "miguelgrinberg",
                "id": 2715854,
                "node_id": "MDQ6VXNlcjI3MTU4NTQ=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/miguelgrinberg",
                "html_url": "https://github.com/miguelgrinberg",
                "followers_url": "https://api.github.com/users/miguelgrinberg/followers",
                "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions",
                "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs",
                "repos_url": "https://api.github.com/users/miguelgrinberg/repos",
                "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}",
                "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-01-29T22:07:16Z",
            "updated_at": "2017-01-29T22:07:59Z",
            "author_association": "MEMBER",
            "body": "@mitsuhiko I agree, good idea to pull back a bit.\r\n\r\nI think referring to the app instance should work in the same way for development and production, I don't see why the methods should differ, since the app instance is the same in all cases. And there is also the complication of app factories, which are not friendly to `FLASK_APP` (https://github.com/pallets/flask/issues/2027).\r\n\r\nWhat I do, is define a `wsgi.py` file for each of my projects. I started adopting this as a convention, so I can have a hardcoded `FLASK_APP=wsgi.app` set in my `.profile` file and switch from app to app without worries. Would you consider implementing one or more sensible defaults for `FLASK_APP`? I think `wsgi.application` and `wsgi.app` are fairly common and could be defaults."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/275979037",
            "html_url": "https://github.com/pallets/flask/pull/2164#issuecomment-275979037",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2164",
            "id": 275979037,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTk3OTAzNw==",
            "user": {
                "login": "jeffwidman",
                "id": 483314,
                "node_id": "MDQ6VXNlcjQ4MzMxNA==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/483314?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jeffwidman",
                "html_url": "https://github.com/jeffwidman",
                "followers_url": "https://api.github.com/users/jeffwidman/followers",
                "following_url": "https://api.github.com/users/jeffwidman/following{/other_user}",
                "gists_url": "https://api.github.com/users/jeffwidman/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jeffwidman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jeffwidman/subscriptions",
                "organizations_url": "https://api.github.com/users/jeffwidman/orgs",
                "repos_url": "https://api.github.com/users/jeffwidman/repos",
                "events_url": "https://api.github.com/users/jeffwidman/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jeffwidman/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-01-30T04:42:12Z",
            "updated_at": "2017-01-30T04:42:12Z",
            "author_association": "MEMBER",
            "body": "I've also commonly seen `.env` files used to store secrets, and managed via Ansible Vault or similar."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/276069773",
            "html_url": "https://github.com/pallets/flask/pull/2164#issuecomment-276069773",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2164",
            "id": 276069773,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjA2OTc3Mw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-01-30T14:03:11Z",
            "updated_at": "2017-01-30T14:08:05Z",
            "author_association": "MEMBER",
            "body": "> How does one refer to their own app in production without exporting env variables?\r\n\r\nI do it by not using the `flask` command directly. Instead, I install an entry point to the project's own `FlaskGroup`, configured appropriately, and expect the project to be installed in the env both in development and production.\r\n\r\n~~~python\r\ncli = FlaskGroup(create_app=create_app)\r\n~~~\r\n\r\n~~~python\r\nsetup(\r\n    ...,\r\n    entry_points={\r\n        'console_scripts': [\r\n            'myapp=myapp.cli:cli.main',\r\n        ],\r\n    },\r\n    ...,\r\n)\r\n~~~\r\n\r\n~~~\r\nFLASK_DEBUG=1 myapp run\r\n~~~"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/276070029",
            "html_url": "https://github.com/pallets/flask/pull/2164#issuecomment-276070029",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2164",
            "id": 276070029,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjA3MDAyOQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-01-30T14:04:26Z",
            "updated_at": "2017-01-30T14:08:21Z",
            "author_association": "MEMBER",
            "body": "One option for making this play nicer with the factory pattern is to allow making a call in the `FLASK_APP` var. Gunicorn and uWSGI allow this. `gunicorn myapp.app:create_app(where='dev')`"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/276167061",
            "html_url": "https://github.com/pallets/flask/pull/2164#issuecomment-276167061",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2164",
            "id": 276167061,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjE2NzA2MQ==",
            "user": {
                "login": "nickjj",
                "id": 813219,
                "node_id": "MDQ6VXNlcjgxMzIxOQ==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/813219?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nickjj",
                "html_url": "https://github.com/nickjj",
                "followers_url": "https://api.github.com/users/nickjj/followers",
                "following_url": "https://api.github.com/users/nickjj/following{/other_user}",
                "gists_url": "https://api.github.com/users/nickjj/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nickjj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nickjj/subscriptions",
                "organizations_url": "https://api.github.com/users/nickjj/orgs",
                "repos_url": "https://api.github.com/users/nickjj/repos",
                "events_url": "https://api.github.com/users/nickjj/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nickjj/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-01-30T19:38:43Z",
            "updated_at": "2017-01-30T19:43:38Z",
            "author_association": "CONTRIBUTOR",
            "body": "@mitsuhiko\r\n\r\n> How does one refer to their own app in production without exporting env variables?\r\n\r\nIs this a valid question? Because you could also say \"how does one refer to their own app in production without creating an instance/settings.py file\", and then it becomes the same thing.\r\n\r\nAt the end of the day, this file needs to be on the production box for the app to be usable.\r\n\r\nPersonally, I use Docker and it has mechanisms for supplying an `.env` file of my choosing, then it makes those env variables available to the Flask app with no extra dirty work.\r\n\r\nWithout Docker, I would likely drop an environment file in `/etc/default/fooapp` which is the defaco-standard place on a Debian system to write out app-level environment variables. Then I would source that file in whatever init system I use.\r\n\r\nIn other words, in both development and production this env file would be available to the Flask app.\r\n\r\nIf this feature does end up being implemented, please let us configure the `.env` filename.\r\n\r\nI would much prefer to use env variables instead of config/instance files because it plays much nicer when trying to scale applications on infrastructures that let you define clusters of servers, but then can define env variables in a central area (outside of each individual host), and then they become available to all hosts without worrying about the logistics of getting an env file on the system.\r\n\r\nThis could be done now of course, but it kind of goes against the norm which is to use config/instance based config files instead of env variables."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/276268004",
            "html_url": "https://github.com/pallets/flask/pull/2164#issuecomment-276268004",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2164",
            "id": 276268004,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjI2ODAwNA==",
            "user": {
                "login": "justanr",
                "id": 4221605,
                "node_id": "MDQ6VXNlcjQyMjE2MDU=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/4221605?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/justanr",
                "html_url": "https://github.com/justanr",
                "followers_url": "https://api.github.com/users/justanr/followers",
                "following_url": "https://api.github.com/users/justanr/following{/other_user}",
                "gists_url": "https://api.github.com/users/justanr/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/justanr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justanr/subscriptions",
                "organizations_url": "https://api.github.com/users/justanr/orgs",
                "repos_url": "https://api.github.com/users/justanr/repos",
                "events_url": "https://api.github.com/users/justanr/events{/privacy}",
                "received_events_url": "https://api.github.com/users/justanr/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-01-31T03:47:51Z",
            "updated_at": "2017-01-31T03:47:51Z",
            "author_association": "NONE",
            "body": "If I'm understanding this correctly, this would only read the `.env` when executed from the CLI, correct? That seems like it setting developers up for mistakes, I can see the bug reports and SO questions now: \"Flask loads my .env file when I run the development server, but not when executed from uWSGI\"\r\n\r\nIf this was going to be added, I'd rather see it implemented into either the Flask class or config class to at least be consistent between server options."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/292530743",
            "html_url": "https://github.com/pallets/flask/pull/2164#issuecomment-292530743",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2164",
            "id": 292530743,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjUzMDc0Mw==",
            "user": {
                "login": "greyli",
                "id": 12967000,
                "node_id": "MDQ6VXNlcjEyOTY3MDAw",
                "avatar_url": "https://avatars3.githubusercontent.com/u/12967000?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/greyli",
                "html_url": "https://github.com/greyli",
                "followers_url": "https://api.github.com/users/greyli/followers",
                "following_url": "https://api.github.com/users/greyli/following{/other_user}",
                "gists_url": "https://api.github.com/users/greyli/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/greyli/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/greyli/subscriptions",
                "organizations_url": "https://api.github.com/users/greyli/orgs",
                "repos_url": "https://api.github.com/users/greyli/repos",
                "events_url": "https://api.github.com/users/greyli/events{/privacy}",
                "received_events_url": "https://api.github.com/users/greyli/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-07T13:04:37Z",
            "updated_at": "2017-04-07T13:04:37Z",
            "author_association": "MEMBER",
            "body": "I did it by adding this into virtual environment's `activate script`, the variable will be set automatically when the virtual environment was activated. No multiple application crashing, no new file.\r\n\r\nFor example:  \r\nUnix Bash: `venv/bin/activate`:\r\n```\r\nFLASK_APP=foo.py\r\nexport FLASK_APP\r\n```\r\nWindows CMD.exe: `venv\\Scripts\\activate.bat`:\r\n```\r\nset \"FLASK_APP=foo.py\" \r\n:END\r\n```"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/292530947",
            "html_url": "https://github.com/pallets/flask/pull/2164#issuecomment-292530947",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2164",
            "id": 292530947,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjUzMDk0Nw==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-07T13:05:34Z",
            "updated_at": "2017-04-07T13:05:34Z",
            "author_association": "MEMBER",
            "body": "I don't recommend editing `activate` scripts."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/292531595",
            "html_url": "https://github.com/pallets/flask/pull/2164#issuecomment-292531595",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2164",
            "id": 292531595,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjUzMTU5NQ==",
            "user": {
                "login": "greyli",
                "id": 12967000,
                "node_id": "MDQ6VXNlcjEyOTY3MDAw",
                "avatar_url": "https://avatars3.githubusercontent.com/u/12967000?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/greyli",
                "html_url": "https://github.com/greyli",
                "followers_url": "https://api.github.com/users/greyli/followers",
                "following_url": "https://api.github.com/users/greyli/following{/other_user}",
                "gists_url": "https://api.github.com/users/greyli/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/greyli/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/greyli/subscriptions",
                "organizations_url": "https://api.github.com/users/greyli/orgs",
                "repos_url": "https://api.github.com/users/greyli/repos",
                "events_url": "https://api.github.com/users/greyli/events{/privacy}",
                "received_events_url": "https://api.github.com/users/greyli/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-07T13:08:35Z",
            "updated_at": "2017-04-07T13:08:35Z",
            "author_association": "MEMBER",
            "body": "@untitaker More detail?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/292531874",
            "html_url": "https://github.com/pallets/flask/pull/2164#issuecomment-292531874",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2164",
            "id": 292531874,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjUzMTg3NA==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-07T13:09:52Z",
            "updated_at": "2017-04-07T13:09:52Z",
            "author_association": "MEMBER",
            "body": "I already elaborated in the PR you sent. You are editing random files which will get overwritten if you recreate the virtualenv (e.g. because it grew too big, or because a Python upgrade trashed it)."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/292532009",
            "html_url": "https://github.com/pallets/flask/pull/2164#issuecomment-292532009",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2164",
            "id": 292532009,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjUzMjAwOQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-07T13:10:32Z",
            "updated_at": "2017-04-07T13:12:01Z",
            "author_association": "MEMBER",
            "body": "How about adding an entry point in setup.py to tell the flask command where the app is, similar to how we can add extra commands? Since we're encouraging the use of setup.py anyway, might as well take advantage. Not sure how we would handle multiple packages with the entry point though, if that ever comes up."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/292533591",
            "html_url": "https://github.com/pallets/flask/pull/2164#issuecomment-292533591",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2164",
            "id": 292533591,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjUzMzU5MQ==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-07T13:17:36Z",
            "updated_at": "2017-04-07T13:17:36Z",
            "author_association": "MEMBER",
            "body": "See https://github.com/pallets/flask/pull/2234#issuecomment-292532462"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/292548722",
            "html_url": "https://github.com/pallets/flask/pull/2164#issuecomment-292548722",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2164",
            "id": 292548722,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjU0ODcyMg==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-07T14:17:10Z",
            "updated_at": "2017-04-07T14:17:10Z",
            "author_association": "MEMBER",
            "body": "I'm leaning on the side of rejecting this. I agree that it would cause confusion, and we already have a documented way to set the env when working locally. "
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/292588404",
            "html_url": "https://github.com/pallets/flask/pull/2164#issuecomment-292588404",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2164",
            "id": 292588404,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjU4ODQwNA==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-07T16:43:50Z",
            "updated_at": "2017-04-07T16:43:50Z",
            "author_association": "MEMBER",
            "body": "Hmm, I'm not sure if we have discussed this enough yet. I only merged #2234\nbecause it enhanced the docs for existing recommendations.\n\nI would actually prefer a file separate from the virtualenv activate script,\nfor the additional reason that you would have to edit it for multiple shells.\n\nOn Fri, Apr 07, 2017 at 09:39:15AM -0700, David Lord wrote:\n> Closed #2164.\n> \n> -- \n> You are receiving this because you were mentioned.\n> Reply to this email directly or view it on GitHub:\n> https://github.com/pallets/flask/pull/2164#event-1034413035\n"
        }
    ]
}