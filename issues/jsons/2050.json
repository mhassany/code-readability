{
    "url": "https://api.github.com/repos/pallets/flask/issues/2050",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2050/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2050/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2050/events",
    "html_url": "https://github.com/pallets/flask/issues/2050",
    "id": 181403305,
    "node_id": "MDU6SXNzdWUxODE0MDMzMDU=",
    "number": 2050,
    "title": "Many 'requests.post' generates internal ImportError",
    "user": {
        "login": "jeff1evesque",
        "id": 2907085,
        "node_id": "MDQ6VXNlcjI5MDcwODU=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/2907085?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jeff1evesque",
        "html_url": "https://github.com/jeff1evesque",
        "followers_url": "https://api.github.com/users/jeff1evesque/followers",
        "following_url": "https://api.github.com/users/jeff1evesque/following{/other_user}",
        "gists_url": "https://api.github.com/users/jeff1evesque/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jeff1evesque/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jeff1evesque/subscriptions",
        "organizations_url": "https://api.github.com/users/jeff1evesque/orgs",
        "repos_url": "https://api.github.com/users/jeff1evesque/repos",
        "events_url": "https://api.github.com/users/jeff1evesque/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jeff1evesque/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-10-06T12:39:17Z",
    "updated_at": "2016-11-04T17:45:32Z",
    "closed_at": "2016-11-04T17:45:32Z",
    "author_association": "NONE",
    "body": "When running a script that performs several `requests.post` against flask's `app.py`, running in the background, various `ImportError`'s occur:\n\n``` bash\nOriginal exception was:\nTraceback (most recent call last):\n  File \"app.py\", line 32, in <module>\n    app.run(host='0.0.0.0')\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 843, in run\n    run_simple(host, port, self, **options)\n  File \"/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py\", line 694, in run_simple\n    inner()\n  File \"/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py\", line 659, in inner\n    srv.serve_forever()\n  File \"/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py\", line 499, in serve_forever\n    HTTPServer.serve_forever(self)\n  File \"/usr/lib/python2.7/SocketServer.py\", line 238, in serve_forever\n    self._handle_request_noblock()\n  File \"/usr/lib/python2.7/SocketServer.py\", line 297, in _handle_request_noblock\n    self.handle_error(request, client_address)\n  File \"/usr/lib/python2.7/SocketServer.py\", line 295, in _handle_request_noblock\n    self.process_request(request, client_address)\n  File \"/usr/lib/python2.7/SocketServer.py\", line 321, in process_request\n    self.finish_request(request, client_address)\n  File \"/usr/lib/python2.7/SocketServer.py\", line 334, in finish_request\n    self.RequestHandlerClass(request, client_address, self)\n  File \"/usr/lib/python2.7/SocketServer.py\", line 649, in __init__\n    self.handle()\n  File \"/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py\", line 216, in handle\n    rv = BaseHTTPRequestHandler.handle(self)\n  File \"/usr/lib/python2.7/BaseHTTPServer.py\", line 340, in handle\n    self.handle_one_request()\n  File \"/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py\", line 251, in handle_one_request\n    return self.run_wsgi()\n  File \"/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py\", line 193, in run_wsgi\n    execute(self.server.app)\n  File \"/usr/local/lib/python2.7/dist-packages/werkzeug/serving.py\", line 181, in execute\n    application_iter = app(environ, start_response)\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 2000, in __call__\n    return self.wsgi_app(environ, start_response)\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1991, in wsgi_app\n    response = self.make_response(self.handle_exception(e))\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1746, in make_response\n    rv = self.response_class.force_type(rv, request.environ)\n  File \"/usr/local/lib/python2.7/dist-packages/werkzeug/wrappers.py\", line 847, in force_type\n    response = BaseResponse(*_run_wsgi_app(response, environ))\n  File \"/usr/local/lib/python2.7/dist-packages/werkzeug/wrappers.py\", line 56, in _run_wsgi_app\n    from werkzeug.test import run_wsgi_app as _run_wsgi_app\nImportError: No module named test\n```\n\n**Note:** a more complete [traceback](https://github.com/jeff1evesque/machine-learning/pull/2763#issuecomment-251584807) can be reviewed.\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/251952424",
            "html_url": "https://github.com/pallets/flask/issues/2050#issuecomment-251952424",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2050",
            "id": 251952424,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTk1MjQyNA==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-10-06T12:52:50Z",
            "updated_at": "2016-10-06T12:52:50Z",
            "author_association": "MEMBER",
            "body": "A minimal reproducible example please.\n"
        }
    ]
}