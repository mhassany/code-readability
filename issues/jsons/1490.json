{
    "url": "https://api.github.com/repos/pallets/flask/issues/1490",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1490/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1490/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1490/events",
    "html_url": "https://github.com/pallets/flask/issues/1490",
    "id": 86373021,
    "node_id": "MDU6SXNzdWU4NjM3MzAyMQ==",
    "number": 1490,
    "title": "Get \u201cinsert_id\u201d for one to one relationship in Flask, SqlAlchemy",
    "user": {
        "login": "JeanClaude3",
        "id": 12805275,
        "node_id": "MDQ6VXNlcjEyODA1Mjc1",
        "avatar_url": "https://avatars3.githubusercontent.com/u/12805275?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeanClaude3",
        "html_url": "https://github.com/JeanClaude3",
        "followers_url": "https://api.github.com/users/JeanClaude3/followers",
        "following_url": "https://api.github.com/users/JeanClaude3/following{/other_user}",
        "gists_url": "https://api.github.com/users/JeanClaude3/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/JeanClaude3/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/JeanClaude3/subscriptions",
        "organizations_url": "https://api.github.com/users/JeanClaude3/orgs",
        "repos_url": "https://api.github.com/users/JeanClaude3/repos",
        "events_url": "https://api.github.com/users/JeanClaude3/events{/privacy}",
        "received_events_url": "https://api.github.com/users/JeanClaude3/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2015-06-08T23:39:36Z",
    "updated_at": "2015-06-10T07:54:42Z",
    "closed_at": "2015-06-10T07:54:42Z",
    "author_association": "NONE",
    "body": "Hey guys,\n\nI tried seeking help on SO, but couldn't get any feedback.  Thought I'd reach out to the Flask community.\n\nI'm trying to insert a new row through sqlalchemy. The parent table (Milestone) has a child table called Funding. Both tables share a relationship through a column called milestone_id. It is a one to one relationship.\n\nI have looked it up, but I can't figure out how to reference the milestone_id when INSERTING a new row in the Funding table. The parent ID is an autoincrement. I am using Flask and SqlAlchemy.\n\nmodels:\n\n``` python\nclass Milestone(db.Model):\n    __tablename__ = \"**************\"\n\n   milestone_id = db.Column(db.Integer, primary_key=True)\n   company_id = db.Column(db.Integer, db.ForeignKey('stlines_startups.company_id'))\n   milestone_date = db.Column(db.Integer)\n   snapshots = db.relationship('Snapshot', uselist=False, primaryjoin='Milestone.milestone_id==Snapshot.milestone_id', backref='milestone')\n   fundraising = db.relationship('Funding', uselist=False, primaryjoin='Milestone.milestone_id==Funding.milestone_id', backref='milestone')\n\n   def __init__(self, milestone_id, company_id, milestone_date, snapshots = [], fundraising = []):\n    self.milestone_id = milestone_id\n    self.company_id = company_id\n    self.milestone_date = milestone_date\n    self.snapshots = snapshots\n    self.fundraising = fundraising\n\nclass Funding(db.Model):\n    __tablename__ = \"**************************\"\n\n   funding_id = db.Column(db.Integer, primary_key=True)\n   funding_type = db.Column(db.Text)\n   funding_message = db.Column(db.Text)\n   funding_amount = db.Column(db.Integer)\n   milestone_source = db.Column(db.Text)\n   company_id = db.Column(db.Integer, db.ForeignKey('stlines_milestones.company_id'))\n   milestone_id = db.Column(db.Integer, db.ForeignKey('stlines_milestones.milestone_id'))\n   user_id = db.Column(db.Integer)\n   funding_timestamp = db.Column(db.Integer)\n\ndef __init__(self, funding_id, funding_type, funding_message, funding_amount, milestone_source, milestone_id, company_id, user_id, funding_timestamp):\n    self.funding_id = funding_id\n    self.funding_type = funding_type\n    self.funding_message = funding_message\n    self.funding_amount = funding_amount\n    self.milestone_source = milestone_source\n    self.milestone_id = milestone_id\n    self.company_id = company_id\n    self.user_id = user_id\n    self.funding_timestamp = funding_timestamp\n```\n\nAlchemy Query:\n\n``` python\n@app.route('/_add_funding')\ndef add_funding():\n    funding_type = request.args.get('funding_stage', '', type=str)\n    funding_message = request.args.get('funding_message', '', type=str)\n    funding_amount = request.args.get('funding_amount', 0, type=int)\n    milestone_source = request.args.get('milestone_source', '', type=str)\n    milestone_date = request.args.get('milestone_date', '', type=str)\n    company_id = request.args.get('company_id', '', type=int)\n\n    milestone_date_final = datetime.datetime.strptime(milestone_date, '%B %d, %Y')\n\n    ''' In this line, I try to reference milestone_id with new_milestone.milestone_id, but nothing shows up in the database '''\n    new_funding = Funding('', funding_type=funding_type, funding_message=funding_message, funding_amount=funding_amount, milestone_source=milestone_source, company_id=company_id, milestone_id=new_milestone.milestone_id, user_id='1', funding_timestamp=milestone_date_final)\n    new_milestone = Milestone('', company_id=company_id, milestone_date=milestone_date_final, snapshots=None, fundraising=new_funding)\n    db.session.add(new_milestone)\n    output = new_milestone.milestone_id\n    db.session.commit()\n\n    return jsonify(result=output)\n```\n\nHow can I tell SqlAlchemy to use the auto generated milestone_id from the milestone table when insert the funding information in the funding table? Should these be two separate queries?  When I do them as two separate queries I get the error: sqlalchemy.orm.exc.ObjectDeletedError: Instance '<Milestone at 0x39ebeb0>' has been deleted, or its row is otherwise not present.\n\nAny help would be greatly appreciated, thanks guys :)\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/110172479",
            "html_url": "https://github.com/pallets/flask/issues/1490#issuecomment-110172479",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1490",
            "id": 110172479,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMDE3MjQ3OQ==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-06-08T23:40:50Z",
            "updated_at": "2015-06-08T23:40:50Z",
            "author_association": "MEMBER",
            "body": "you need to `db.session.flush()` before you can access the ID\n\nalso, this is not the proper place for support questions.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/110172953",
            "html_url": "https://github.com/pallets/flask/issues/1490#issuecomment-110172953",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1490",
            "id": 110172953,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMDE3Mjk1Mw==",
            "user": {
                "login": "JeanClaude3",
                "id": 12805275,
                "node_id": "MDQ6VXNlcjEyODA1Mjc1",
                "avatar_url": "https://avatars3.githubusercontent.com/u/12805275?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/JeanClaude3",
                "html_url": "https://github.com/JeanClaude3",
                "followers_url": "https://api.github.com/users/JeanClaude3/followers",
                "following_url": "https://api.github.com/users/JeanClaude3/following{/other_user}",
                "gists_url": "https://api.github.com/users/JeanClaude3/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/JeanClaude3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JeanClaude3/subscriptions",
                "organizations_url": "https://api.github.com/users/JeanClaude3/orgs",
                "repos_url": "https://api.github.com/users/JeanClaude3/repos",
                "events_url": "https://api.github.com/users/JeanClaude3/events{/privacy}",
                "received_events_url": "https://api.github.com/users/JeanClaude3/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-06-08T23:45:06Z",
            "updated_at": "2015-06-08T23:45:06Z",
            "author_association": "NONE",
            "body": "Hey,\n\nthanks for getting back to me ... sorry for posting in the wrong spot.  I took up your advice, but I'm still getting an error:\nUnboundLocalError: local variable 'new_milestone' referenced before assignment\n\nhere's the updated code:\n\n``` python\n@app.route('/_add_funding')\ndef add_funding():\n    funding_type = request.args.get('funding_stage', '', type=str)\n    funding_message = request.args.get('funding_message', '', type=str)\n    funding_amount = request.args.get('funding_amount', 0, type=int)\n    milestone_source = request.args.get('milestone_source', '', type=str)\n    milestone_date = request.args.get('milestone_date', '', type=str)\n    company_id = request.args.get('company_id', '', type=int)\n\n    milestone_date_final = datetime.datetime.strptime(milestone_date, '%B %d, %Y')\n\n    new_funding = Funding('', funding_type=funding_type, funding_message=funding_message, funding_amount=funding_amount, milestone_source=milestone_source, company_id=company_id, milestone_id=new_milestone.milestone_id, user_id='1', funding_timestamp=milestone_date_final)\n    new_milestone = Milestone('', company_id=company_id, milestone_date=milestone_date_final, snapshots=None, fundraising=new_funding)\n    db.session.add(new_milestone)\n    db.session.commit()\n    db.session.flush()\n    output = new_milestone.milestone_id\n\n    return jsonify(result=output)\n```\n\nany ideas?  Thank you!\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/110173078",
            "html_url": "https://github.com/pallets/flask/issues/1490#issuecomment-110173078",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1490",
            "id": 110173078,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMDE3MzA3OA==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-06-08T23:46:07Z",
            "updated_at": "2015-06-08T23:46:07Z",
            "author_association": "MEMBER",
            "body": "Remove the `milestone_id=new_milestone.milestone_id` and link your two objects via the relationship instead. That's basic sqlalchemy; you can probably find an example for this in the SA docs\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/110177798",
            "html_url": "https://github.com/pallets/flask/issues/1490#issuecomment-110177798",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1490",
            "id": 110177798,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMDE3Nzc5OA==",
            "user": {
                "login": "JeanClaude3",
                "id": 12805275,
                "node_id": "MDQ6VXNlcjEyODA1Mjc1",
                "avatar_url": "https://avatars3.githubusercontent.com/u/12805275?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/JeanClaude3",
                "html_url": "https://github.com/JeanClaude3",
                "followers_url": "https://api.github.com/users/JeanClaude3/followers",
                "following_url": "https://api.github.com/users/JeanClaude3/following{/other_user}",
                "gists_url": "https://api.github.com/users/JeanClaude3/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/JeanClaude3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JeanClaude3/subscriptions",
                "organizations_url": "https://api.github.com/users/JeanClaude3/orgs",
                "repos_url": "https://api.github.com/users/JeanClaude3/repos",
                "events_url": "https://api.github.com/users/JeanClaude3/events{/privacy}",
                "received_events_url": "https://api.github.com/users/JeanClaude3/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-06-09T00:02:37Z",
            "updated_at": "2015-06-09T00:02:37Z",
            "author_association": "NONE",
            "body": "is there a section in the docs, you could at least refer me to?  I'm seeing a lot of stuff on building the model, which I have already done, but nothing on inserting with a relationship.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/110260245",
            "html_url": "https://github.com/pallets/flask/issues/1490#issuecomment-110260245",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1490",
            "id": 110260245,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMDI2MDI0NQ==",
            "user": {
                "login": "pussbb",
                "id": 335847,
                "node_id": "MDQ6VXNlcjMzNTg0Nw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/335847?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/pussbb",
                "html_url": "https://github.com/pussbb",
                "followers_url": "https://api.github.com/users/pussbb/followers",
                "following_url": "https://api.github.com/users/pussbb/following{/other_user}",
                "gists_url": "https://api.github.com/users/pussbb/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/pussbb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pussbb/subscriptions",
                "organizations_url": "https://api.github.com/users/pussbb/orgs",
                "repos_url": "https://api.github.com/users/pussbb/repos",
                "events_url": "https://api.github.com/users/pussbb/events{/privacy}",
                "received_events_url": "https://api.github.com/users/pussbb/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-06-09T07:30:09Z",
            "updated_at": "2015-06-09T07:30:09Z",
            "author_association": "NONE",
            "body": "e.g. http://docs.sqlalchemy.org/en/latest/orm/basic_relationships.html\n\n``` python\n# create parent, append a child via association\np = Parent()\na = Association(extra_data=\"some data\")\na.child = Child()\np.children.append(a)\n\n```\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/110641710",
            "html_url": "https://github.com/pallets/flask/issues/1490#issuecomment-110641710",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1490",
            "id": 110641710,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMDY0MTcxMA==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-06-10T07:54:42Z",
            "updated_at": "2015-06-10T07:54:42Z",
            "author_association": "MEMBER",
            "body": "@JeanClaude3 While I understand your situation that you're not getting any help on SO, posting your question on Flask's **bug** tracker, especially one that has nothing to do with Flask itself, is doing the vastly understaffed maintainers of Flask (e.g. me) a strong disservice. The tracker has already a lot of open, unanswered and unresolved tickets, and this one is just adding fuel to what is already a huge bonfire.\n\nIn other words, please don't ask support questions on the issue tracker.\n"
        }
    ]
}