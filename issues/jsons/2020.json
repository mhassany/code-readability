{
    "url": "https://api.github.com/repos/pallets/flask/issues/2020",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2020/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2020/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2020/events",
    "html_url": "https://github.com/pallets/flask/issues/2020",
    "id": 176152328,
    "node_id": "MDU6SXNzdWUxNzYxNTIzMjg=",
    "number": 2020,
    "title": "Default flask.cli commands are not override-able",
    "user": {
        "login": "allanlei",
        "id": 391251,
        "node_id": "MDQ6VXNlcjM5MTI1MQ==",
        "avatar_url": "https://avatars3.githubusercontent.com/u/391251?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/allanlei",
        "html_url": "https://github.com/allanlei",
        "followers_url": "https://api.github.com/users/allanlei/followers",
        "following_url": "https://api.github.com/users/allanlei/following{/other_user}",
        "gists_url": "https://api.github.com/users/allanlei/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/allanlei/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/allanlei/subscriptions",
        "organizations_url": "https://api.github.com/users/allanlei/orgs",
        "repos_url": "https://api.github.com/users/allanlei/repos",
        "events_url": "https://api.github.com/users/allanlei/events{/privacy}",
        "received_events_url": "https://api.github.com/users/allanlei/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2016-09-10T03:04:02Z",
    "updated_at": "2017-02-01T16:15:06Z",
    "closed_at": "2016-10-08T23:55:53Z",
    "author_association": "NONE",
    "body": "The default commands `run` and `shell` cannot be overridden.\n\nUsing a custom command called `shell`, I expect the custom `shell` to override the builtin `shell`\n\n``` python\n@app.cli.command('shell', short_help='My custom shell')\ndef shell():\n    pass\n```\n\nBut running `--help` still produces `flask.cli.shell`'s help\n\n``` bash\n> python -m flask\nUsage: python -m flask [OPTIONS] COMMAND [ARGS]...\n\n  This shell command acts as general utility script for Flask applications.\n\n  It loads the application configured (either through the FLASK_APP\n  environment variable) and then provides commands either provided by the\n  application or Flask itself.\n\n  The most useful commands are the \"run\" and \"shell\" command.\n\n  Example usage:\n\n    $ export FLASK_APP=hello\n    $ export FLASK_DEBUG=1\n    $ flask run\n\nOptions:\n  --help  Show this message and exit.\n\nCommands:\n  run    Runs a development server.\n  shell  Runs a shell in the app context.\n```\n\nAnd running gives me `flask.cli.shell`'s shell\n\n``` bash\n> python -m flask shell\n\nPython 3.5.2 (default, Jul 17 2016, 00:00:00) \n[GCC 4.8.4] on linux\nApp: wallet\nInstance: app/instance\n>>> \n```\n\nAlso,\n\n``` python\n@app.cli.command('shell_plus', short_help='bar')\ndef shell_plus_1():\n    pass\n\n@app.cli.command('shell_plus', short_help='foo')\ndef shell_plus_2():\n    pass\n```\n\nhas the behaviour I expect\n\n``` bash\nUsage: python -m flask [OPTIONS] COMMAND [ARGS]...\n\n  This shell command acts as general utility script for Flask applications.\n\n  It loads the application configured (either through the FLASK_APP\n  environment variable) and then provides commands either provided by the\n  application or Flask itself.\n\n  The most useful commands are the \"run\" and \"shell\" command.\n\n  Example usage:\n\n    $ export FLASK_APP=hello\n    $ export FLASK_DEBUG=1\n    $ flask run\n\nOptions:\n  --help  Show this message and exit.\n\nCommands:\n  run         Runs a development server.\n  shell       Runs a shell in the app context.\n  shell_plus  foo\n```\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/252453919",
            "html_url": "https://github.com/pallets/flask/issues/2020#issuecomment-252453919",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2020",
            "id": 252453919,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjQ1MzkxOQ==",
            "user": {
                "login": "mrecachinas",
                "id": 924243,
                "node_id": "MDQ6VXNlcjkyNDI0Mw==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/924243?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mrecachinas",
                "html_url": "https://github.com/mrecachinas",
                "followers_url": "https://api.github.com/users/mrecachinas/followers",
                "following_url": "https://api.github.com/users/mrecachinas/following{/other_user}",
                "gists_url": "https://api.github.com/users/mrecachinas/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mrecachinas/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mrecachinas/subscriptions",
                "organizations_url": "https://api.github.com/users/mrecachinas/orgs",
                "repos_url": "https://api.github.com/users/mrecachinas/repos",
                "events_url": "https://api.github.com/users/mrecachinas/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mrecachinas/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-10-08T23:20:45Z",
            "updated_at": "2016-10-08T23:20:45Z",
            "author_association": "CONTRIBUTOR",
            "body": "This appears to be the intended behavior to ensure basic script functionality in the event the application fails. See https://github.com/pallets/flask/blob/master/flask/cli.py#L329-L349. \n\nIf there is internal interest in changing that, I have a patch ready for review.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/252455025",
            "html_url": "https://github.com/pallets/flask/issues/2020#issuecomment-252455025",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2020",
            "id": 252455025,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjQ1NTAyNQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-10-08T23:55:53Z",
            "updated_at": "2016-10-08T23:55:53Z",
            "author_association": "MEMBER",
            "body": "``` python\nfrom flask.cli import FlaskGroup, run_command\n\ncli = FlaskGroup(add_default_commands=False, create_app=create_app)\ncli.add_command(run_command)\n\n@cli.command('shell', short_help='Starts an interactive shell in an app context.')\ndef shell_command():\n    ctx = current_app.make_shell_context()\n\n    try:\n        from IPython import start_ipython\n        start_ipython(argv=(), user_ns=ctx)\n    except ImportError:\n        from code import interact\n        interact(local=ctx)\n```\n\nCreate your own `FlaskGroup`, omit the default commands, add the `run` command, add your own `shell` command.\n\n@mrecachinas PRs are always welcome, for discussion even if we don't end up merging it.  I'd be interested to see what you changed.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/276688732",
            "html_url": "https://github.com/pallets/flask/issues/2020#issuecomment-276688732",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2020",
            "id": 276688732,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjY4ODczMg==",
            "user": {
                "login": "bluephoen1x",
                "id": 7692637,
                "node_id": "MDQ6VXNlcjc2OTI2Mzc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7692637?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/bluephoen1x",
                "html_url": "https://github.com/bluephoen1x",
                "followers_url": "https://api.github.com/users/bluephoen1x/followers",
                "following_url": "https://api.github.com/users/bluephoen1x/following{/other_user}",
                "gists_url": "https://api.github.com/users/bluephoen1x/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/bluephoen1x/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bluephoen1x/subscriptions",
                "organizations_url": "https://api.github.com/users/bluephoen1x/orgs",
                "repos_url": "https://api.github.com/users/bluephoen1x/repos",
                "events_url": "https://api.github.com/users/bluephoen1x/events{/privacy}",
                "received_events_url": "https://api.github.com/users/bluephoen1x/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-02-01T15:33:20Z",
            "updated_at": "2017-02-01T15:33:20Z",
            "author_association": "NONE",
            "body": "How to use flask.cli to launch the program in factory environment?\r\n\r\nI know how to use flask_script and I have found a solution by using 'click' to make my program running. But the official document propose to use flask.cli instead of flask_script extension while I think 'click' solution is a dirty solution.\r\n\r\nAs davidism propose the code:\r\n\r\n<!-- begin snippet: js hide: false console: true babel: false -->\r\n\r\n<!-- language: lang-html -->\r\n\r\n    from flask.cli import FlaskGroup, run_command\r\n\r\n    cli = FlaskGroup(add_default_commands=False, create_app=create_app)\r\n    cli.add_command(run_command)\r\n\r\n    @cli.command('shell', short_help='Starts an interactive shell in an app context.')\r\n    def shell_command():\r\n        ctx = current_app.make_shell_context()\r\n\r\n        try:\r\n            from IPython import start_ipython\r\n            start_ipython(argv=(), user_ns=ctx)\r\n        except ImportError:\r\n            from code import interact\r\n            interact(local=ctx)\r\n\r\n\r\n<!-- end snippet -->\r\n\r\nIt seems that there is a clean method to use 'flask.cli' by instantiating the 'FlaskGroup'. But then? What code should I write in 'if __name__ == \"__main__\":' segment? I don't know how to run this cli, by decorator like 'click' does or something else?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/276689688",
            "html_url": "https://github.com/pallets/flask/issues/2020#issuecomment-276689688",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2020",
            "id": 276689688,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjY4OTY4OA==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-02-01T15:36:31Z",
            "updated_at": "2017-02-01T15:36:31Z",
            "author_association": "MEMBER",
            "body": "There is absolutely no reason to override the `shell` command like you did - if you want ipython, simply `pip install flask-shell-ipython`, then the `flask shell` command will use ipython instead of the default python REPL.\r\n\r\n> while I think 'click' solution is a dirty solution\r\n\r\nWould you care to elaborate? Possibly on IRC since this seem off-topic for the issue tracker."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/276700982",
            "html_url": "https://github.com/pallets/flask/issues/2020#issuecomment-276700982",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2020",
            "id": 276700982,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjcwMDk4Mg==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-02-01T16:14:50Z",
            "updated_at": "2017-02-01T16:15:06Z",
            "author_association": "MEMBER",
            "body": "As Thief said, use the extension now. But in case you still want to do it manually, it's just like all other Click applications: you call `cli.main()`."
        }
    ]
}