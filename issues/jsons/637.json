{
    "url": "https://api.github.com/repos/pallets/flask/issues/637",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/637/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/637/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/637/events",
    "html_url": "https://github.com/pallets/flask/issues/637",
    "id": 8644737,
    "node_id": "MDU6SXNzdWU4NjQ0NzM3",
    "number": 637,
    "title": "Flask not sending 304 Not Modified even if last_modified<=if_modified_since.",
    "user": {
        "login": "a9entropy",
        "id": 2264421,
        "node_id": "MDQ6VXNlcjIyNjQ0MjE=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/2264421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/a9entropy",
        "html_url": "https://github.com/a9entropy",
        "followers_url": "https://api.github.com/users/a9entropy/followers",
        "following_url": "https://api.github.com/users/a9entropy/following{/other_user}",
        "gists_url": "https://api.github.com/users/a9entropy/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/a9entropy/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/a9entropy/subscriptions",
        "organizations_url": "https://api.github.com/users/a9entropy/orgs",
        "repos_url": "https://api.github.com/users/a9entropy/repos",
        "events_url": "https://api.github.com/users/a9entropy/events{/privacy}",
        "received_events_url": "https://api.github.com/users/a9entropy/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2012-11-25T06:48:49Z",
    "updated_at": "2012-12-10T05:23:23Z",
    "closed_at": "2012-12-10T05:23:23Z",
    "author_association": "NONE",
    "body": "Here's my view.\n\n``` python\n@app.route('/image/<file_id>')\n@login_required\ndef images(file_id):\n    file = file_like_object_here\n    rv = send_file(file,\n            mimetype=file.content_type,\n            # as_attachment=True,\n            attachment_filename=file.filename,\n            add_etags=False,\n            conditional=True\n        )\n    rv.last_modified = file.upload_date\n    app.logger.debug(rv.last_modified)    # 2012-11-24 08:51:27\n    app.logger.debug(request.if_modified_since)    # 2012-11-24 08:51:27\n    app.logger.debug(rv.last_modified<=request.if_modified_since)    # True\n    return rv\n```\n\nHere is the HTTP:\nRequest\n\n```\nRequest URL:http://127.0.0.1:5000/image/50b0855f2c2d291cbe896e56\nRequest Method:GET\nStatus Code:200 OK\n\nGET /image/50b0855f2c2d291cbe896e56 HTTP/1.1\nHost: 127.0.0.1:5000\nConnection: keep-alive\nCache-Control: max-age=0\nUser-Agent: Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Encoding: gzip,deflate,sdch\nAccept-Language: en-US,en;q=0.8\nAccept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3\nCookie: session=\"lde2mnK7NSOGS8DqcU5YVgTkVEc=?_expires=STEzNTY1MDE0OTgKLg==&_permanent=STAxCi4=&username=VmFhYWFhCnAxCi4=\"\nIf-Modified-Since: Sat, 24 Nov 2012 08:51:27 GMT\n```\n\nResponse:\n\n```\nHTTP/1.0 200 OK\nContent-Type: image/png\nCache-Control: public, max-age=43200\nExpires: Sun, 25 Nov 2012 18:43:12 GMT\nLast-Modified: Sat, 24 Nov 2012 08:51:27 GMT\nConnection: close\nServer: Werkzeug/0.8.3 Python/2.7.3\nDate: Sun, 25 Nov 2012 06:43:12 GMT\n```\n\nIdeally it should return `304 Not Modified` but you can see that's not happening.\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/10691154",
            "html_url": "https://github.com/pallets/flask/issues/637#issuecomment-10691154",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/637",
            "id": 10691154,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjkxMTU0",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2012-11-25T07:30:16Z",
            "updated_at": "2012-11-25T09:11:54Z",
            "author_association": "MEMBER",
            "body": "Maybe it's because in this case `last_modified == if_modified_since`. Can you test with a `last_modified < if_modified_since`?\n\nEDIT: That should work anyways. I'll check it out.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/10691722",
            "html_url": "https://github.com/pallets/flask/issues/637#issuecomment-10691722",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/637",
            "id": 10691722,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjkxNzIy",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2012-11-25T09:23:55Z",
            "updated_at": "2012-11-25T09:23:55Z",
            "author_association": "MEMBER",
            "body": "I was able to reproduce this with https://gist.github.com/4142919\n\nAdding\n\n```\nrv.make_conditional(request)\n```\n\nfixed it.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/10691960",
            "html_url": "https://github.com/pallets/flask/issues/637#issuecomment-10691960",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/637",
            "id": 10691960,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjkxOTYw",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2012-11-25T10:10:44Z",
            "updated_at": "2012-11-25T10:10:44Z",
            "author_association": "MEMBER",
            "body": "I guess another way would be to set the `conditional` argument of `flask.send_file` to `True`.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/10692821",
            "html_url": "https://github.com/pallets/flask/issues/637#issuecomment-10692821",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/637",
            "id": 10692821,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjkyODIx",
            "user": {
                "login": "soulseekah",
                "id": 685880,
                "node_id": "MDQ6VXNlcjY4NTg4MA==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/685880?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/soulseekah",
                "html_url": "https://github.com/soulseekah",
                "followers_url": "https://api.github.com/users/soulseekah/followers",
                "following_url": "https://api.github.com/users/soulseekah/following{/other_user}",
                "gists_url": "https://api.github.com/users/soulseekah/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/soulseekah/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/soulseekah/subscriptions",
                "organizations_url": "https://api.github.com/users/soulseekah/orgs",
                "repos_url": "https://api.github.com/users/soulseekah/repos",
                "events_url": "https://api.github.com/users/soulseekah/events{/privacy}",
                "received_events_url": "https://api.github.com/users/soulseekah/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2012-11-25T12:14:59Z",
            "updated_at": "2012-11-25T12:14:59Z",
            "author_association": "CONTRIBUTOR",
            "body": "Setting only `conditional` will not work, though, it seems, as `send_etags` has to be enabled as well: https://github.com/mitsuhiko/flask/blob/master/flask/helpers.py#L521\n\nSo using `rv.make_conditional(request)` makes much more sense I think, as @untitaker suggests\nhttps://github.com/mitsuhiko/werkzeug/blob/master/werkzeug/wrappers.py#L1249\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/10692965",
            "html_url": "https://github.com/pallets/flask/issues/637#issuecomment-10692965",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/637",
            "id": 10692965,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjkyOTY1",
            "user": {
                "login": "a9entropy",
                "id": 2264421,
                "node_id": "MDQ6VXNlcjIyNjQ0MjE=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/2264421?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/a9entropy",
                "html_url": "https://github.com/a9entropy",
                "followers_url": "https://api.github.com/users/a9entropy/followers",
                "following_url": "https://api.github.com/users/a9entropy/following{/other_user}",
                "gists_url": "https://api.github.com/users/a9entropy/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/a9entropy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/a9entropy/subscriptions",
                "organizations_url": "https://api.github.com/users/a9entropy/orgs",
                "repos_url": "https://api.github.com/users/a9entropy/repos",
                "events_url": "https://api.github.com/users/a9entropy/events{/privacy}",
                "received_events_url": "https://api.github.com/users/a9entropy/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2012-11-25T12:33:45Z",
            "updated_at": "2012-11-25T12:33:45Z",
            "author_association": "NONE",
            "body": "I'm pretty sure that's not ideal behavior since the server should return a 304: http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.25\n\n```\nIf the variant has not been modified since a valid If-\nModified-Since date, the server SHOULD return a 304 (Not\nModified) response.\n```\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/10693890",
            "html_url": "https://github.com/pallets/flask/issues/637#issuecomment-10693890",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/637",
            "id": 10693890,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjkzODkw",
            "user": {
                "login": "soulseekah",
                "id": 685880,
                "node_id": "MDQ6VXNlcjY4NTg4MA==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/685880?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/soulseekah",
                "html_url": "https://github.com/soulseekah",
                "followers_url": "https://api.github.com/users/soulseekah/followers",
                "following_url": "https://api.github.com/users/soulseekah/following{/other_user}",
                "gists_url": "https://api.github.com/users/soulseekah/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/soulseekah/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/soulseekah/subscriptions",
                "organizations_url": "https://api.github.com/users/soulseekah/orgs",
                "repos_url": "https://api.github.com/users/soulseekah/repos",
                "events_url": "https://api.github.com/users/soulseekah/events{/privacy}",
                "received_events_url": "https://api.github.com/users/soulseekah/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2012-11-25T14:20:25Z",
            "updated_at": "2012-11-25T14:21:25Z",
            "author_association": "CONTRIBUTOR",
            "body": "Actually :neckbeard: ... Werkzeug is HTTP/1.0, but the same stands true.\n\nhttp://www.w3.org/Protocols/HTTP/1.0/spec.html#If-Modified-Since\nhttp://www.w3.org/Protocols/HTTP/1.0/spec.html#Code304\n\nBy default Werkzeug does do this for static file serving, and `make_conditional` is only employed in Flask's `send_file` (which is used for static files, too), the development server uses the `SharedDataMiddleware` middleware for static paths:\n\nhttps://github.com/mitsuhiko/werkzeug/blob/master/werkzeug/serving.py#L662\nhttps://github.com/mitsuhiko/werkzeug/blob/master/werkzeug/wsgi.py#L254\nhttps://github.com/mitsuhiko/werkzeug/blob/master/werkzeug/wsgi.py#L418\n\n`send_file` doesn't do this as it can accept a filestream without a creation time at all, for one. Perhaps you should serve your files via the `SharedDataMiddleware` instead (multiple static paths). But, yes, `send_file` seems quirky at first glance...\n\nProduction-ready servers are able to handle this much more reliably for static data; dynamically generated content caching logic is always custom, though.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/10693954",
            "html_url": "https://github.com/pallets/flask/issues/637#issuecomment-10693954",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/637",
            "id": 10693954,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjkzOTU0",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2012-11-25T14:29:12Z",
            "updated_at": "2012-11-25T14:29:12Z",
            "author_association": "MEMBER",
            "body": "At least Etags would be possible for streams. So they could be enabled by default.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/10694048",
            "html_url": "https://github.com/pallets/flask/issues/637#issuecomment-10694048",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/637",
            "id": 10694048,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjk0MDQ4",
            "user": {
                "login": "soulseekah",
                "id": 685880,
                "node_id": "MDQ6VXNlcjY4NTg4MA==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/685880?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/soulseekah",
                "html_url": "https://github.com/soulseekah",
                "followers_url": "https://api.github.com/users/soulseekah/followers",
                "following_url": "https://api.github.com/users/soulseekah/following{/other_user}",
                "gists_url": "https://api.github.com/users/soulseekah/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/soulseekah/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/soulseekah/subscriptions",
                "organizations_url": "https://api.github.com/users/soulseekah/orgs",
                "repos_url": "https://api.github.com/users/soulseekah/repos",
                "events_url": "https://api.github.com/users/soulseekah/events{/privacy}",
                "received_events_url": "https://api.github.com/users/soulseekah/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2012-11-25T14:41:00Z",
            "updated_at": "2012-11-25T14:42:28Z",
            "author_association": "CONTRIBUTOR",
            "body": "That was deprecated https://github.com/mitsuhiko/flask/blob/master/flask/helpers.py#L461\n\n> In future flask releases etags will no longer be generated for file objects passed to the send_file function because this behavior was unreliable.  Pass filenames instead if possible, otherwise attach an etag yourself based on another value\n\nhttps://github.com/mitsuhiko/flask/commit/fda14678c07d036ef3a1984a4e346e793cc5a63c huge discussion in [related issue](https://github.com/mitsuhiko/flask/issues/104)\n"
        }
    ]
}