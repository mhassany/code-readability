{
    "url": "https://api.github.com/repos/pallets/flask/issues/738",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/738/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/738/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/738/events",
    "html_url": "https://github.com/pallets/flask/issues/738",
    "id": 14629235,
    "node_id": "MDU6SXNzdWUxNDYyOTIzNQ==",
    "number": 738,
    "title": "URLConf like Django -> urls.py",
    "user": {
        "login": "micfan",
        "id": 2443027,
        "node_id": "MDQ6VXNlcjI0NDMwMjc=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/2443027?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/micfan",
        "html_url": "https://github.com/micfan",
        "followers_url": "https://api.github.com/users/micfan/followers",
        "following_url": "https://api.github.com/users/micfan/following{/other_user}",
        "gists_url": "https://api.github.com/users/micfan/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/micfan/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/micfan/subscriptions",
        "organizations_url": "https://api.github.com/users/micfan/orgs",
        "repos_url": "https://api.github.com/users/micfan/repos",
        "events_url": "https://api.github.com/users/micfan/events{/privacy}",
        "received_events_url": "https://api.github.com/users/micfan/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2013-05-22T15:33:54Z",
    "updated_at": "2013-05-31T23:14:46Z",
    "closed_at": "2013-05-31T23:14:46Z",
    "author_association": "NONE",
    "body": "hi, I have thought that if flask use a URLConfig moudule instead of the derecrator of functions as its router, which like Django urls.py,  and built-in regular-expression will help it make big projects. \nyes or no?\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/18289442",
            "html_url": "https://github.com/pallets/flask/issues/738#issuecomment-18289442",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/738",
            "id": 18289442,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE4Mjg5NDQy",
            "user": {
                "login": "lyndsysimon",
                "id": 131414,
                "node_id": "MDQ6VXNlcjEzMTQxNA==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/131414?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/lyndsysimon",
                "html_url": "https://github.com/lyndsysimon",
                "followers_url": "https://api.github.com/users/lyndsysimon/followers",
                "following_url": "https://api.github.com/users/lyndsysimon/following{/other_user}",
                "gists_url": "https://api.github.com/users/lyndsysimon/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/lyndsysimon/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lyndsysimon/subscriptions",
                "organizations_url": "https://api.github.com/users/lyndsysimon/orgs",
                "repos_url": "https://api.github.com/users/lyndsysimon/repos",
                "events_url": "https://api.github.com/users/lyndsysimon/events{/privacy}",
                "received_events_url": "https://api.github.com/users/lyndsysimon/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-05-22T16:12:49Z",
            "updated_at": "2013-05-22T16:12:49Z",
            "author_association": "NONE",
            "body": "Flask exposes `Flask.add_url_rule()` for this reason - there's nothing really requiring you to use the decorators.\n\nFor larger projects, I tend to create a `routes.py` in the application root, where I wire up all of my URLs. If the functionality is big enough to warrant it's own path (e.g., user handing at `/user/*`), I wrap that up as a Blueprint and map it to the base path. If it's just a couple of pages (e.g., a static homepage), I'll use the decorator on a function directly in the file.\n\nThe only thing that's really that different is that you're not using a regular expression to specify path. If you really wanted to, there's no reason you couldn't write a routing function and map it to `/<path:path>`, completely overriding both Flask and Werkzeug.\n\nDon't do that, though. It's silly :)\n\nInstead, if you really need regex-based routing for something, write a routing function that consumes only those URLs that are absolutely necessary (e.g., `/users/<path:user_path>`).\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/18290852",
            "html_url": "https://github.com/pallets/flask/issues/738#issuecomment-18290852",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/738",
            "id": 18290852,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjkwODUy",
            "user": {
                "login": "micfan",
                "id": 2443027,
                "node_id": "MDQ6VXNlcjI0NDMwMjc=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/2443027?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/micfan",
                "html_url": "https://github.com/micfan",
                "followers_url": "https://api.github.com/users/micfan/followers",
                "following_url": "https://api.github.com/users/micfan/following{/other_user}",
                "gists_url": "https://api.github.com/users/micfan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/micfan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/micfan/subscriptions",
                "organizations_url": "https://api.github.com/users/micfan/orgs",
                "repos_url": "https://api.github.com/users/micfan/repos",
                "events_url": "https://api.github.com/users/micfan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/micfan/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-05-22T16:34:05Z",
            "updated_at": "2013-05-22T16:34:05Z",
            "author_association": "NONE",
            "body": "@lyndsysimon Thanks for you reply. We have common idea on that a `routes.py` or `urls.py` is required for a big project. So why not mak it a default practice in Flask?\n\nThe second point, I don't konw how to write that function for regex-expression...>_<\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/18295158",
            "html_url": "https://github.com/pallets/flask/issues/738#issuecomment-18295158",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/738",
            "id": 18295158,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE4Mjk1MTU4",
            "user": {
                "login": "klinkin",
                "id": 461927,
                "node_id": "MDQ6VXNlcjQ2MTkyNw==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/461927?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/klinkin",
                "html_url": "https://github.com/klinkin",
                "followers_url": "https://api.github.com/users/klinkin/followers",
                "following_url": "https://api.github.com/users/klinkin/following{/other_user}",
                "gists_url": "https://api.github.com/users/klinkin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/klinkin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/klinkin/subscriptions",
                "organizations_url": "https://api.github.com/users/klinkin/orgs",
                "repos_url": "https://api.github.com/users/klinkin/repos",
                "events_url": "https://api.github.com/users/klinkin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/klinkin/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-05-22T17:43:14Z",
            "updated_at": "2013-05-22T17:43:14Z",
            "author_association": "NONE",
            "body": "Regexp in url routes very easy, see the link  https://github.com/rhyselsmore/flask-reggie   \n\n## \n\nC \u0443\u0432\u0430\u0436\u0435\u043d\u0438\u0435\u043c,  \n\u041a\u043b\u0438\u043c\u0438\u043d \u041c\u0438\u0445\u0430\u0438\u043b.\n\n\u0441\u0440\u0435\u0434\u0430, 22 \u043c\u0430\u044f 2013 \u0433. \u0432 20:34, Michael Fan \u043d\u0430\u043f\u0438\u0441\u0430\u043b:\n\n> @lyndsysimon (https://github.com/lyndsysimon) Thanks for you reply. We have common idea on that a routes.py or urls.py is required for a big project. So why not mak it a default practice in Flask?\n> The second point, I don't konw how to write that function for regex-expression...>_<\n> \n> \u2014\n> Reply to this email directly or view it on GitHub (https://github.com/mitsuhiko/flask/issues/738#issuecomment-18290852).\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/18320530",
            "html_url": "https://github.com/pallets/flask/issues/738#issuecomment-18320530",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/738",
            "id": 18320530,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE4MzIwNTMw",
            "user": {
                "login": "lyndsysimon",
                "id": 131414,
                "node_id": "MDQ6VXNlcjEzMTQxNA==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/131414?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/lyndsysimon",
                "html_url": "https://github.com/lyndsysimon",
                "followers_url": "https://api.github.com/users/lyndsysimon/followers",
                "following_url": "https://api.github.com/users/lyndsysimon/following{/other_user}",
                "gists_url": "https://api.github.com/users/lyndsysimon/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/lyndsysimon/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lyndsysimon/subscriptions",
                "organizations_url": "https://api.github.com/users/lyndsysimon/orgs",
                "repos_url": "https://api.github.com/users/lyndsysimon/repos",
                "events_url": "https://api.github.com/users/lyndsysimon/events{/privacy}",
                "received_events_url": "https://api.github.com/users/lyndsysimon/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-05-23T02:44:12Z",
            "updated_at": "2013-05-23T02:44:12Z",
            "author_association": "NONE",
            "body": "@micfan \n\nYou really shouldn't have a large number of URL rules in one file IMO. You should be doing the vast majority of your routing through Blueprints, and mounting those Blueprints to their own paths. I use a `routes.py` because I want to split them out from the application wireup and configuration. This also makes my git history much clearer - when I add or change a path I'm not changing the file that contains much of the core application setup.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/18777521",
            "html_url": "https://github.com/pallets/flask/issues/738#issuecomment-18777521",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/738",
            "id": 18777521,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE4Nzc3NTIx",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-05-31T23:14:46Z",
            "updated_at": "2013-05-31T23:14:46Z",
            "author_association": "MEMBER",
            "body": "There already is a pattern in the docs for that.\n"
        }
    ]
}