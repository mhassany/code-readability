{
    "url": "https://api.github.com/repos/pallets/flask/issues/2948",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2948/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2948/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2948/events",
    "html_url": "https://github.com/pallets/flask/issues/2948",
    "id": 371350814,
    "node_id": "MDU6SXNzdWUzNzEzNTA4MTQ=",
    "number": 2948,
    "title": "@app.errorhandler scope too wide",
    "user": {
        "login": "StoneMoe",
        "id": 5786577,
        "node_id": "MDQ6VXNlcjU3ODY1Nzc=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/5786577?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/StoneMoe",
        "html_url": "https://github.com/StoneMoe",
        "followers_url": "https://api.github.com/users/StoneMoe/followers",
        "following_url": "https://api.github.com/users/StoneMoe/following{/other_user}",
        "gists_url": "https://api.github.com/users/StoneMoe/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/StoneMoe/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/StoneMoe/subscriptions",
        "organizations_url": "https://api.github.com/users/StoneMoe/orgs",
        "repos_url": "https://api.github.com/users/StoneMoe/repos",
        "events_url": "https://api.github.com/users/StoneMoe/events{/privacy}",
        "received_events_url": "https://api.github.com/users/StoneMoe/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-10-18T03:48:55Z",
    "updated_at": "2019-07-26T02:18:32Z",
    "closed_at": "2018-10-18T03:58:10Z",
    "author_association": "NONE",
    "body": "---\r\n\r\n### Expected Behavior\r\n\r\nHandle any exception in route function\r\n\r\n```python\r\n#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\nfrom flask import Flask, Blueprint\r\n\r\nbp = Blueprint('section', __name__)\r\n\r\n\r\n@bp.route(\"/\")\r\ndef hello():\r\n    return \"you are visiting 'http://hostname/section/'\"\r\n\r\n@bp.route(\"/exc\")\r\ndef exc_test():\r\n    raise Exception(\"bug\")\r\n\r\napp = Flask(__name__)\r\n\r\n\r\n@app.errorhandler(Exception)\r\ndef any_unknown_error(e):\r\n    upload_exception_to_log_server(e)\r\n    if app.debug:\r\n        raise e  # Show Werkzeug debugger while debugging\r\n\r\n    # return api json with message\r\n    # rather than break front-end page ajax\r\n    return '{\"code\": 5, \"message\": \"%s\"}' % e\r\n\r\n\r\napp.register_blueprint(bp, url_prefix='/%s' % bp.name)\r\n\r\n```\r\n\r\n### Actual Behavior\r\n\r\nThis break strict_slash redirect, which raised a `werkzeug.routing.RequestRedirect: 301 Moved Permanently: None` to do the redirection\r\n\r\nTo reproduce this, visit localhost:5000/section  (without trailing slash)\r\n\r\n```pytb\r\nFile \"f:\\code\\flask_bug_test\\venv\\lib\\site-packages\\flask\\app.py\", line 2309, in __call__\r\n    return self.wsgi_app(environ, start_response)\r\nFile \"f:\\code\\flask_bug_test\\venv\\lib\\site-packages\\flask\\app.py\", line 2295, in wsgi_app\r\n    response = self.handle_exception(e)\r\nFile \"f:\\code\\flask_bug_test\\venv\\lib\\site-packages\\flask\\app.py\", line 1741, in handle_exception\r\n    reraise(exc_type, exc_value, tb)\r\nFile \"f:\\code\\flask_bug_test\\venv\\lib\\site-packages\\flask\\_compat.py\", line 35, in reraise\r\n    raise value\r\nFile \"f:\\code\\flask_bug_test\\venv\\lib\\site-packages\\flask\\app.py\", line 2292, in wsgi_app\r\n    response = self.full_dispatch_request()\r\nFile \"f:\\code\\flask_bug_test\\venv\\lib\\site-packages\\flask\\app.py\", line 1815, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\nFile \"f:\\code\\flask_bug_test\\venv\\lib\\site-packages\\flask\\app.py\", line 1713, in handle_user_exception\r\n    return self.handle_http_exception(e)\r\nFile \"f:\\code\\flask_bug_test\\venv\\lib\\site-packages\\flask\\app.py\", line 1644, in handle_http_exception\r\n    return handler(e)\r\nFile \"F:\\Code\\flask_bug_test\\start.py\", line 21, in any_unknown_error\r\n    raise e  # Show exception while debugging\r\nFile \"f:\\code\\flask_bug_test\\venv\\lib\\site-packages\\flask\\app.py\", line 1813, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\nFile \"f:\\code\\flask_bug_test\\venv\\lib\\site-packages\\flask\\app.py\", line 1791, in dispatch_request\r\n    self.raise_routing_exception(req)\r\nFile \"f:\\code\\flask_bug_test\\venv\\lib\\site-packages\\flask\\app.py\", line 1774, in raise_routing_exception\r\n    raise request.routing_exception\r\nFile \"f:\\code\\flask_bug_test\\venv\\lib\\site-packages\\flask\\ctx.py\", line 336, in match_request\r\nself.url_adapter.match(return_rule=True)\r\nFile \"f:\\code\\flask_bug_test\\venv\\lib\\site-packages\\werkzeug\\routing.py\", line 1542, in match\r\nsafe='/:|+') + '/', query_args))\r\n    werkzeug.routing.RequestRedirect: 301 Moved Permanently: None\r\n```\r\n\r\n### Environment\r\n\r\n* Python version: 3.6.6\r\n* Flask version: 1.0.2\r\n* Werkzeug version: 0.14.1\r\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/430867522",
            "html_url": "https://github.com/pallets/flask/issues/2948#issuecomment-430867522",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2948",
            "id": 430867522,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDg2NzUyMg==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-10-18T03:58:09Z",
            "updated_at": "2018-10-18T03:58:09Z",
            "author_association": "MEMBER",
            "body": "You added an error handler for `Exception`. Catching every exception isn't \"too wide\", it's exactly what you asked for. It's what would happen if you did `except Exception` in Python. Check the if the exception is an instance of `HTTPException` that's not an error exception and re-raise it if so."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/515282548",
            "html_url": "https://github.com/pallets/flask/issues/2948#issuecomment-515282548",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2948",
            "id": 515282548,
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTI4MjU0OA==",
            "user": {
                "login": "StoneMoe",
                "id": 5786577,
                "node_id": "MDQ6VXNlcjU3ODY1Nzc=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/5786577?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/StoneMoe",
                "html_url": "https://github.com/StoneMoe",
                "followers_url": "https://api.github.com/users/StoneMoe/followers",
                "following_url": "https://api.github.com/users/StoneMoe/following{/other_user}",
                "gists_url": "https://api.github.com/users/StoneMoe/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/StoneMoe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/StoneMoe/subscriptions",
                "organizations_url": "https://api.github.com/users/StoneMoe/orgs",
                "repos_url": "https://api.github.com/users/StoneMoe/repos",
                "events_url": "https://api.github.com/users/StoneMoe/events{/privacy}",
                "received_events_url": "https://api.github.com/users/StoneMoe/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-07-26T02:18:32Z",
            "updated_at": "2019-07-26T02:18:32Z",
            "author_association": "NONE",
            "body": "For who may concerned about this:\r\n\r\nThis has been fixed in Flask>=1.0.3\r\n\r\nOr use `@app.errorhandler(500)` as a workaround if you can't upgrade due to some reason."
        }
    ]
}