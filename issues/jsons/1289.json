{
    "url": "https://api.github.com/repos/pallets/flask/issues/1289",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1289/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1289/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1289/events",
    "html_url": "https://github.com/pallets/flask/issues/1289",
    "id": 52526455,
    "node_id": "MDU6SXNzdWU1MjUyNjQ1NQ==",
    "number": 1289,
    "title": "bad content-length default",
    "user": {
        "login": "reteptilian",
        "id": 10247461,
        "node_id": "MDQ6VXNlcjEwMjQ3NDYx",
        "avatar_url": "https://avatars1.githubusercontent.com/u/10247461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reteptilian",
        "html_url": "https://github.com/reteptilian",
        "followers_url": "https://api.github.com/users/reteptilian/followers",
        "following_url": "https://api.github.com/users/reteptilian/following{/other_user}",
        "gists_url": "https://api.github.com/users/reteptilian/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/reteptilian/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/reteptilian/subscriptions",
        "organizations_url": "https://api.github.com/users/reteptilian/orgs",
        "repos_url": "https://api.github.com/users/reteptilian/repos",
        "events_url": "https://api.github.com/users/reteptilian/events{/privacy}",
        "received_events_url": "https://api.github.com/users/reteptilian/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 125213303,
            "node_id": "MDU6TGFiZWwxMjUyMTMzMDM=",
            "url": "https://api.github.com/repos/pallets/flask/labels/discussion",
            "name": "discussion",
            "color": "c5def5",
            "default": false,
            "description": null
        },
        {
            "id": 170296925,
            "node_id": "MDU6TGFiZWwxNzAyOTY5MjU=",
            "url": "https://api.github.com/repos/pallets/flask/labels/good%20first%20issue",
            "name": "good first issue",
            "color": "fbca04",
            "default": true,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 27,
    "created_at": "2014-12-19T20:43:10Z",
    "updated_at": "2016-12-12T22:17:23Z",
    "closed_at": "2016-12-12T22:03:52Z",
    "author_association": "NONE",
    "body": "In werkzeug's WSGIRequestHandler, CONTENT-LENGTH defaults to an empty string ('') if the client did not provide a Content-Length header.\n\nThis is causing me problems in my flask web service, which is trying to proxy requests.  The user creates a request without Content-Length, flask gives it to me and then I pass it along to another server, which then returns HTTP 400 due to the bad Content-Length that werkzeug has inserted.  According to RFC 2616, Content-Length must be a number.\n\nInitially I thought this should be considered a werkzeug bug but maybe the empty string was intended to be werkzeug's signifier for a non-existent Content-Length, rather than an actual Content-Length value that could be used directly.  If that's the case, then I would modify flask so that Content-Length isn't included in the incoming request's headers if it is the empty string.\n\nBottom line, I believe that a client request that is missing a Content-Length header should not result in an incoming flask request with the Content-Length equal to the empty string.  \n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/67695361",
            "html_url": "https://github.com/pallets/flask/issues/1289#issuecomment-67695361",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1289",
            "id": 67695361,
            "node_id": "MDEyOklzc3VlQ29tbWVudDY3Njk1MzYx",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-12-19T20:50:26Z",
            "updated_at": "2014-12-19T20:51:00Z",
            "author_association": "MEMBER",
            "body": "I don't think the WSGI environment Werkzeug generates is wrong... according to https://www.python.org/dev/peps/pep-0333/#environ-variables, the empty string and the nonexistent value should be treated symonymously:\n\n> The following variables must be present, unless their value would be an empty string, in which case they may be omitted, except as otherwise noted below. \n> \n> [...] May be empty or absent.\n\nSo either behavior is fine, I myself don't see a reason why we couldn't change Werkzeug's behavior to omit `Content-Type` (and also `Content-Length`) if they're `== ''`.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/87496648",
            "html_url": "https://github.com/pallets/flask/issues/1289#issuecomment-87496648",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1289",
            "id": 87496648,
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDk2NjQ4",
            "user": {
                "login": "keyan",
                "id": 6401746,
                "node_id": "MDQ6VXNlcjY0MDE3NDY=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/6401746?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/keyan",
                "html_url": "https://github.com/keyan",
                "followers_url": "https://api.github.com/users/keyan/followers",
                "following_url": "https://api.github.com/users/keyan/following{/other_user}",
                "gists_url": "https://api.github.com/users/keyan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/keyan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/keyan/subscriptions",
                "organizations_url": "https://api.github.com/users/keyan/orgs",
                "repos_url": "https://api.github.com/users/keyan/repos",
                "events_url": "https://api.github.com/users/keyan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/keyan/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-03-29T23:29:09Z",
            "updated_at": "2015-03-29T23:29:09Z",
            "author_association": "MEMBER",
            "body": "The `beginner friendly` tag might be too generous, but I'm trying to tag some stuff besides documentation and this seems like a reasonably self contained fix. That is, if we can get to a consensus on whether we actually want to change Werkzeug's behavior as you suggested @untitaker.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/87498203",
            "html_url": "https://github.com/pallets/flask/issues/1289#issuecomment-87498203",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1289",
            "id": 87498203,
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDk4MjAz",
            "user": {
                "login": "KWinston",
                "id": 10407170,
                "node_id": "MDQ6VXNlcjEwNDA3MTcw",
                "avatar_url": "https://avatars0.githubusercontent.com/u/10407170?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/KWinston",
                "html_url": "https://github.com/KWinston",
                "followers_url": "https://api.github.com/users/KWinston/followers",
                "following_url": "https://api.github.com/users/KWinston/following{/other_user}",
                "gists_url": "https://api.github.com/users/KWinston/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/KWinston/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/KWinston/subscriptions",
                "organizations_url": "https://api.github.com/users/KWinston/orgs",
                "repos_url": "https://api.github.com/users/KWinston/repos",
                "events_url": "https://api.github.com/users/KWinston/events{/privacy}",
                "received_events_url": "https://api.github.com/users/KWinston/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-03-29T23:43:31Z",
            "updated_at": "2015-03-30T05:07:17Z",
            "author_association": "CONTRIBUTOR",
            "body": "Is it the way you are creating the response? I have tested it by generating a response header without a Content-Length and then running it through flask which routes it through nginx. (Not sure exactly when this occurs naturally in Flask)\n\nResult: When you throw the response just in flask alone, it works fine (follows PEP-333).\nBut when you try to send it through nginx it'll crash when reading the response because it does not like what is passed, the empty content-length (follows RFC 2616). For improved compatibility with other applications, I agree with @untitaker that Flask omit empty Content-Type and or Content-Length.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/87780651",
            "html_url": "https://github.com/pallets/flask/issues/1289#issuecomment-87780651",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1289",
            "id": 87780651,
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NzgwNjUx",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-03-30T18:25:29Z",
            "updated_at": "2015-03-30T18:25:29Z",
            "author_association": "MEMBER",
            "body": "We should let this @mitsuhiko decide... maybe Werkzeug's current behavior is also due to other software's behavior.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/95749189",
            "html_url": "https://github.com/pallets/flask/issues/1289#issuecomment-95749189",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1289",
            "id": 95749189,
            "node_id": "MDEyOklzc3VlQ29tbWVudDk1NzQ5MTg5",
            "user": {
                "login": "omarkhd",
                "id": 307306,
                "node_id": "MDQ6VXNlcjMwNzMwNg==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/307306?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/omarkhd",
                "html_url": "https://github.com/omarkhd",
                "followers_url": "https://api.github.com/users/omarkhd/followers",
                "following_url": "https://api.github.com/users/omarkhd/following{/other_user}",
                "gists_url": "https://api.github.com/users/omarkhd/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/omarkhd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/omarkhd/subscriptions",
                "organizations_url": "https://api.github.com/users/omarkhd/orgs",
                "repos_url": "https://api.github.com/users/omarkhd/repos",
                "events_url": "https://api.github.com/users/omarkhd/events{/privacy}",
                "received_events_url": "https://api.github.com/users/omarkhd/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-04-23T23:39:56Z",
            "updated_at": "2015-04-23T23:39:56Z",
            "author_association": "NONE",
            "body": "And what did he decide? I'd be glad to start contributing with some code.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/95815457",
            "html_url": "https://github.com/pallets/flask/issues/1289#issuecomment-95815457",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1289",
            "id": 95815457,
            "node_id": "MDEyOklzc3VlQ29tbWVudDk1ODE1NDU3",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-04-24T06:17:39Z",
            "updated_at": "2015-04-24T06:17:39Z",
            "author_association": "MEMBER",
            "body": "We did not yet contact him.\n\nI'm glad that you want to help @omarkhd -- feel free to ping mitsuhiko on the #pocoo IRC channel!\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/95821110",
            "html_url": "https://github.com/pallets/flask/issues/1289#issuecomment-95821110",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1289",
            "id": 95821110,
            "node_id": "MDEyOklzc3VlQ29tbWVudDk1ODIxMTEw",
            "user": {
                "login": "KWinston",
                "id": 10407170,
                "node_id": "MDQ6VXNlcjEwNDA3MTcw",
                "avatar_url": "https://avatars0.githubusercontent.com/u/10407170?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/KWinston",
                "html_url": "https://github.com/KWinston",
                "followers_url": "https://api.github.com/users/KWinston/followers",
                "following_url": "https://api.github.com/users/KWinston/following{/other_user}",
                "gists_url": "https://api.github.com/users/KWinston/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/KWinston/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/KWinston/subscriptions",
                "organizations_url": "https://api.github.com/users/KWinston/orgs",
                "repos_url": "https://api.github.com/users/KWinston/repos",
                "events_url": "https://api.github.com/users/KWinston/events{/privacy}",
                "received_events_url": "https://api.github.com/users/KWinston/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-04-24T06:37:01Z",
            "updated_at": "2015-04-24T06:37:22Z",
            "author_association": "CONTRIBUTOR",
            "body": "For anyone seeking a quick fix solution to this error, take a look at the Proposed Solution section under Issue 1289.\n[Link to Proposed Solution](https://winstonkouch.wordpress.com/2015/04/06/attempt-to-fix-some-issues-in-flask/#this-is-problem)\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/95829991",
            "html_url": "https://github.com/pallets/flask/issues/1289#issuecomment-95829991",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1289",
            "id": 95829991,
            "node_id": "MDEyOklzc3VlQ29tbWVudDk1ODI5OTkx",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-04-24T07:09:43Z",
            "updated_at": "2015-04-24T07:09:43Z",
            "author_association": "MEMBER",
            "body": "I'm fine with the proposed solution, but please let @mitsuhiko confirm it, on the unlikely off-chance that this behavior is actually intended.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/219165813",
            "html_url": "https://github.com/pallets/flask/issues/1289#issuecomment-219165813",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1289",
            "id": 219165813,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTE2NTgxMw==",
            "user": {
                "login": "matheuspoleza",
                "id": 8049914,
                "node_id": "MDQ6VXNlcjgwNDk5MTQ=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/8049914?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/matheuspoleza",
                "html_url": "https://github.com/matheuspoleza",
                "followers_url": "https://api.github.com/users/matheuspoleza/followers",
                "following_url": "https://api.github.com/users/matheuspoleza/following{/other_user}",
                "gists_url": "https://api.github.com/users/matheuspoleza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/matheuspoleza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matheuspoleza/subscriptions",
                "organizations_url": "https://api.github.com/users/matheuspoleza/orgs",
                "repos_url": "https://api.github.com/users/matheuspoleza/repos",
                "events_url": "https://api.github.com/users/matheuspoleza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/matheuspoleza/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-05-13T21:38:46Z",
            "updated_at": "2016-05-13T21:38:46Z",
            "author_association": "NONE",
            "body": "@KWinston can I take this solution? Its the better way to solve the problem?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/219205165",
            "html_url": "https://github.com/pallets/flask/issues/1289#issuecomment-219205165",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1289",
            "id": 219205165,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTIwNTE2NQ==",
            "user": {
                "login": "KWinston",
                "id": 10407170,
                "node_id": "MDQ6VXNlcjEwNDA3MTcw",
                "avatar_url": "https://avatars0.githubusercontent.com/u/10407170?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/KWinston",
                "html_url": "https://github.com/KWinston",
                "followers_url": "https://api.github.com/users/KWinston/followers",
                "following_url": "https://api.github.com/users/KWinston/following{/other_user}",
                "gists_url": "https://api.github.com/users/KWinston/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/KWinston/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/KWinston/subscriptions",
                "organizations_url": "https://api.github.com/users/KWinston/orgs",
                "repos_url": "https://api.github.com/users/KWinston/repos",
                "events_url": "https://api.github.com/users/KWinston/events{/privacy}",
                "received_events_url": "https://api.github.com/users/KWinston/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-05-14T07:05:58Z",
            "updated_at": "2016-05-14T07:05:58Z",
            "author_association": "CONTRIBUTOR",
            "body": "@matheuspoleza yes, you can use the solution I provided. The proposed solution should stop your application from crashing if you are having issues with CONTENT-LENGTH not being a number.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/219225594",
            "html_url": "https://github.com/pallets/flask/issues/1289#issuecomment-219225594",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1289",
            "id": 219225594,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTIyNTU5NA==",
            "user": {
                "login": "matheuspoleza",
                "id": 8049914,
                "node_id": "MDQ6VXNlcjgwNDk5MTQ=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/8049914?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/matheuspoleza",
                "html_url": "https://github.com/matheuspoleza",
                "followers_url": "https://api.github.com/users/matheuspoleza/followers",
                "following_url": "https://api.github.com/users/matheuspoleza/following{/other_user}",
                "gists_url": "https://api.github.com/users/matheuspoleza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/matheuspoleza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matheuspoleza/subscriptions",
                "organizations_url": "https://api.github.com/users/matheuspoleza/orgs",
                "repos_url": "https://api.github.com/users/matheuspoleza/repos",
                "events_url": "https://api.github.com/users/matheuspoleza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/matheuspoleza/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-05-14T15:14:00Z",
            "updated_at": "2016-05-14T15:14:00Z",
            "author_association": "NONE",
            "body": "@KWinston ok, I'll do that \n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/266054016",
            "html_url": "https://github.com/pallets/flask/issues/1289#issuecomment-266054016",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1289",
            "id": 266054016,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjA1NDAxNg==",
            "user": {
                "login": "ferbecab03",
                "id": 21295596,
                "node_id": "MDQ6VXNlcjIxMjk1NTk2",
                "avatar_url": "https://avatars2.githubusercontent.com/u/21295596?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ferbecab03",
                "html_url": "https://github.com/ferbecab03",
                "followers_url": "https://api.github.com/users/ferbecab03/followers",
                "following_url": "https://api.github.com/users/ferbecab03/following{/other_user}",
                "gists_url": "https://api.github.com/users/ferbecab03/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ferbecab03/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ferbecab03/subscriptions",
                "organizations_url": "https://api.github.com/users/ferbecab03/orgs",
                "repos_url": "https://api.github.com/users/ferbecab03/repos",
                "events_url": "https://api.github.com/users/ferbecab03/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ferbecab03/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-12-09T16:17:43Z",
            "updated_at": "2016-12-09T16:17:43Z",
            "author_association": "NONE",
            "body": "@mitsuhiko : Is the proposed solution ok to implement?\r\n@KWinston  : May I use your solution?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/266054593",
            "html_url": "https://github.com/pallets/flask/issues/1289#issuecomment-266054593",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1289",
            "id": 266054593,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjA1NDU5Mw==",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-12-09T16:20:08Z",
            "updated_at": "2016-12-09T16:20:08Z",
            "author_association": "MEMBER",
            "body": "I do not understand the proposed solution. Where do we generate an empty content length string?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/266062639",
            "html_url": "https://github.com/pallets/flask/issues/1289#issuecomment-266062639",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1289",
            "id": 266062639,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjA2MjYzOQ==",
            "user": {
                "login": "ferbecab03",
                "id": 21295596,
                "node_id": "MDQ6VXNlcjIxMjk1NTk2",
                "avatar_url": "https://avatars2.githubusercontent.com/u/21295596?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ferbecab03",
                "html_url": "https://github.com/ferbecab03",
                "followers_url": "https://api.github.com/users/ferbecab03/followers",
                "following_url": "https://api.github.com/users/ferbecab03/following{/other_user}",
                "gists_url": "https://api.github.com/users/ferbecab03/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ferbecab03/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ferbecab03/subscriptions",
                "organizations_url": "https://api.github.com/users/ferbecab03/orgs",
                "repos_url": "https://api.github.com/users/ferbecab03/repos",
                "events_url": "https://api.github.com/users/ferbecab03/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ferbecab03/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-12-09T16:50:53Z",
            "updated_at": "2016-12-09T16:51:07Z",
            "author_association": "NONE",
            "body": "> In werkzeug's WSGIRequestHandler, CONTENT-LENGTH defaults to an empty string ('') if the client did not provide a Content-Length header.\r\n\r\nWhen used with other applications that default to an empty string or a non-number passed through flask. It is more a compatibility issue with other apps.\r\n\r\nProbably more of a documentation addition to incorporate this when using other apps while running flask?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/266063039",
            "html_url": "https://github.com/pallets/flask/issues/1289#issuecomment-266063039",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1289",
            "id": 266063039,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjA2MzAzOQ==",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-12-09T16:52:25Z",
            "updated_at": "2016-12-09T16:52:25Z",
            "author_association": "MEMBER",
            "body": "I'm not sure I follow. Surely an empty string is a valid value for `CONTENT_LENGTH` so should this not be reported against whatever application fails?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/266063332",
            "html_url": "https://github.com/pallets/flask/issues/1289#issuecomment-266063332",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1289",
            "id": 266063332,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjA2MzMzMg==",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-12-09T16:53:31Z",
            "updated_at": "2016-12-09T16:53:31Z",
            "author_association": "MEMBER",
            "body": "Can someone make a minimal test case of what is wrong and what is expected? I'm at a loss here. `WSGIRequestHandler` handles incoming data only. So that should be irrelevant here, no?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/266079014",
            "html_url": "https://github.com/pallets/flask/issues/1289#issuecomment-266079014",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1289",
            "id": 266079014,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjA3OTAxNA==",
            "user": {
                "login": "reteptilian",
                "id": 10247461,
                "node_id": "MDQ6VXNlcjEwMjQ3NDYx",
                "avatar_url": "https://avatars1.githubusercontent.com/u/10247461?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/reteptilian",
                "html_url": "https://github.com/reteptilian",
                "followers_url": "https://api.github.com/users/reteptilian/followers",
                "following_url": "https://api.github.com/users/reteptilian/following{/other_user}",
                "gists_url": "https://api.github.com/users/reteptilian/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/reteptilian/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/reteptilian/subscriptions",
                "organizations_url": "https://api.github.com/users/reteptilian/orgs",
                "repos_url": "https://api.github.com/users/reteptilian/repos",
                "events_url": "https://api.github.com/users/reteptilian/events{/privacy}",
                "received_events_url": "https://api.github.com/users/reteptilian/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-12-09T17:59:07Z",
            "updated_at": "2016-12-09T17:59:07Z",
            "author_association": "NONE",
            "body": "@mitsuhiko according to my reading of rfc2616, you can either (1) have a content-length header, in which case it must be a number, or 2) if the header is not provided, it explains how to compute it. The situation here has the client does not provide the header ... but then flask/werkzeug artificially creates a header that is the empty string, which is not legal according to rfc 2616. I am traveling this weekend but can make a test case next week. "
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/266080165",
            "html_url": "https://github.com/pallets/flask/issues/1289#issuecomment-266080165",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1289",
            "id": 266080165,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjA4MDE2NQ==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-12-09T18:04:03Z",
            "updated_at": "2016-12-09T18:04:03Z",
            "author_association": "MEMBER",
            "body": "The HTTP RFC is irrelevant here. An empty WSGI environ value is to be treated as nonexistent according to the WSGI PEP."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/266081317",
            "html_url": "https://github.com/pallets/flask/issues/1289#issuecomment-266081317",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1289",
            "id": 266081317,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjA4MTMxNw==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-12-09T18:09:19Z",
            "updated_at": "2016-12-09T18:09:19Z",
            "author_association": "MEMBER",
            "body": "However, if you find an abstraction over the WSGI env (within Flask/Werkzeug or outside) whose behavior differs when given an empty string instead of a nonexistent value, it's totally a bug."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/266087333",
            "html_url": "https://github.com/pallets/flask/issues/1289#issuecomment-266087333",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1289",
            "id": 266087333,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjA4NzMzMw==",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-12-09T18:34:50Z",
            "updated_at": "2016-12-09T18:34:50Z",
            "author_association": "MEMBER",
            "body": "@reteptilian as @untitaker mentioned the rfc does not matter here because this is an internal header on the incoming side and we hide it. This really needs a clear testcase."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/266566206",
            "html_url": "https://github.com/pallets/flask/issues/1289#issuecomment-266566206",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1289",
            "id": 266566206,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjU2NjIwNg==",
            "user": {
                "login": "reteptilian",
                "id": 10247461,
                "node_id": "MDQ6VXNlcjEwMjQ3NDYx",
                "avatar_url": "https://avatars1.githubusercontent.com/u/10247461?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/reteptilian",
                "html_url": "https://github.com/reteptilian",
                "followers_url": "https://api.github.com/users/reteptilian/followers",
                "following_url": "https://api.github.com/users/reteptilian/following{/other_user}",
                "gists_url": "https://api.github.com/users/reteptilian/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/reteptilian/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/reteptilian/subscriptions",
                "organizations_url": "https://api.github.com/users/reteptilian/orgs",
                "repos_url": "https://api.github.com/users/reteptilian/repos",
                "events_url": "https://api.github.com/users/reteptilian/events{/privacy}",
                "received_events_url": "https://api.github.com/users/reteptilian/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-12-12T21:59:14Z",
            "updated_at": "2016-12-12T22:00:56Z",
            "author_association": "NONE",
            "body": "echoheaders.py:\r\n\r\n    import flask\r\n    app = flask.Flask(__name__)\r\n\r\n    @app.route('/')\r\n    def echo_headers():\r\n        return flask.jsonify(dict(flask.request.headers))\r\n\r\nRun it:\r\n\r\n    $ FLASK_APP=echoheaders python -m flask run\r\n     * Serving Flask app \"echoheaders\"\r\n     * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\r\n\r\nTest:\r\n\r\n    $ curl -v http://localhost:5000\r\n    > GET / HTTP/1.1\r\n    > User-Agent: curl/7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.19.7 NSS/3.19.1 Basic ECC zlib/1.2.3 libidn/1.18 libssh2/1.4.2\r\n    > Host: localhost:5000\r\n    > Accept: */*\r\n    {\r\n      \"Accept\": \"*/*\",\r\n      \"Content-Length\": \"\",    <-----------   THIS IS MY COMPLAINT  ------------\r\n      \"Content-Type\": \"\",\r\n      \"Host\": \"localhost:5000\",\r\n      \"User-Agent\": \"curl/7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.19.7 NSS/3.19.1 Basic ECC zlib/1.2.3 libidn/1.18 libssh2/1.4.2\"\r\n    }\r\n\r\n**The client did not provide a Content-Length header, but flask creates one that is set to an illegal empty string.**  \r\n\r\n_This is problematic for us, because my team made the (questionable) decision to use flask as a kind of smart proxy service, so it forwards all the client headers along to the destination, which then rightly complains (per RFC 2616) that it cannot parse the value from the Content-Length header_.  So we had to write our own code to overwrite flask's version with a correct Content-Length.  It would be nicer if flask did not artificially create this header, or at the very least, set it to a valid value (zero in this case)."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/266567355",
            "html_url": "https://github.com/pallets/flask/issues/1289#issuecomment-266567355",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1289",
            "id": 266567355,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjU2NzM1NQ==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-12-12T22:03:46Z",
            "updated_at": "2016-12-12T22:03:46Z",
            "author_association": "MEMBER",
            "body": "That is clearer. Your previous comments were about the WSGI Value, not the header abstraction."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/266567374",
            "html_url": "https://github.com/pallets/flask/issues/1289#issuecomment-266567374",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1289",
            "id": 266567374,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjU2NzM3NA==",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-12-12T22:03:52Z",
            "updated_at": "2016-12-12T22:03:52Z",
            "author_association": "MEMBER",
            "body": "I see. So unfortunately this is something that's not actually up to Flask. You would have to file this against Werkzeug. However there is a limit to what we can do with the `EnvironHeaders` (which is what drives this).\r\n\r\nI could imagine skipping over empty content-length and content-type headers however then you can't tell a client actually sending an empty header apart. This is because this is really a limitation in the underlying WSGI protocol."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/266567450",
            "html_url": "https://github.com/pallets/flask/issues/1289#issuecomment-266567450",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1289",
            "id": 266567450,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjU2NzQ1MA==",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-12-12T22:04:09Z",
            "updated_at": "2016-12-12T22:04:09Z",
            "author_association": "MEMBER",
            "body": "Closing this for now, because this is definitely a [Werkzeug](https://github.com/pallets/werkzeug) issue."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/266568080",
            "html_url": "https://github.com/pallets/flask/issues/1289#issuecomment-266568080",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1289",
            "id": 266568080,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjU2ODA4MA==",
            "user": {
                "login": "reteptilian",
                "id": 10247461,
                "node_id": "MDQ6VXNlcjEwMjQ3NDYx",
                "avatar_url": "https://avatars1.githubusercontent.com/u/10247461?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/reteptilian",
                "html_url": "https://github.com/reteptilian",
                "followers_url": "https://api.github.com/users/reteptilian/followers",
                "following_url": "https://api.github.com/users/reteptilian/following{/other_user}",
                "gists_url": "https://api.github.com/users/reteptilian/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/reteptilian/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/reteptilian/subscriptions",
                "organizations_url": "https://api.github.com/users/reteptilian/orgs",
                "repos_url": "https://api.github.com/users/reteptilian/repos",
                "events_url": "https://api.github.com/users/reteptilian/events{/privacy}",
                "received_events_url": "https://api.github.com/users/reteptilian/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-12-12T22:06:30Z",
            "updated_at": "2016-12-12T22:06:30Z",
            "author_association": "NONE",
            "body": "@untitaker Do you agree that I should open it against Werkzeug?  It sounded to me like you were arguing this was a flask issue not werkzeug.\r\n\r\nMy apologies for the confusion, I guess I had debugged it down to werkzeug and was trying to be helpful about the root cause but should have stuck with the simple flask example at the start."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/266568431",
            "html_url": "https://github.com/pallets/flask/issues/1289#issuecomment-266568431",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1289",
            "id": 266568431,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjU2ODQzMQ==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-12-12T22:07:57Z",
            "updated_at": "2016-12-12T22:07:57Z",
            "author_association": "MEMBER",
            "body": "Yes it is a Werkzeug bug!"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/266570797",
            "html_url": "https://github.com/pallets/flask/issues/1289#issuecomment-266570797",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1289",
            "id": 266570797,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjU3MDc5Nw==",
            "user": {
                "login": "reteptilian",
                "id": 10247461,
                "node_id": "MDQ6VXNlcjEwMjQ3NDYx",
                "avatar_url": "https://avatars1.githubusercontent.com/u/10247461?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/reteptilian",
                "html_url": "https://github.com/reteptilian",
                "followers_url": "https://api.github.com/users/reteptilian/followers",
                "following_url": "https://api.github.com/users/reteptilian/following{/other_user}",
                "gists_url": "https://api.github.com/users/reteptilian/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/reteptilian/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/reteptilian/subscriptions",
                "organizations_url": "https://api.github.com/users/reteptilian/orgs",
                "repos_url": "https://api.github.com/users/reteptilian/repos",
                "events_url": "https://api.github.com/users/reteptilian/events{/privacy}",
                "received_events_url": "https://api.github.com/users/reteptilian/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-12-12T22:17:23Z",
            "updated_at": "2016-12-12T22:17:23Z",
            "author_association": "NONE",
            "body": "OK, all set.  \r\n\r\nPS, thanks for the great work on these projects.  They really are fantastic."
        }
    ]
}