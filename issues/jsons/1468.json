{
    "url": "https://api.github.com/repos/pallets/flask/issues/1468",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1468/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1468/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1468/events",
    "html_url": "https://github.com/pallets/flask/pull/1468",
    "id": 79563508,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzYwNTc4MDA=",
    "number": 1468,
    "title": "Add before_first_request_context signal.",
    "user": {
        "login": "nitori",
        "id": 1561831,
        "node_id": "MDQ6VXNlcjE1NjE4MzE=",
        "avatar_url": "https://avatars2.githubusercontent.com/u/1561831?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nitori",
        "html_url": "https://github.com/nitori",
        "followers_url": "https://api.github.com/users/nitori/followers",
        "following_url": "https://api.github.com/users/nitori/following{/other_user}",
        "gists_url": "https://api.github.com/users/nitori/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nitori/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nitori/subscriptions",
        "organizations_url": "https://api.github.com/users/nitori/orgs",
        "repos_url": "https://api.github.com/users/nitori/repos",
        "events_url": "https://api.github.com/users/nitori/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nitori/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2015-05-22T18:39:18Z",
    "updated_at": "2015-05-27T13:35:06Z",
    "closed_at": "2015-05-27T13:35:06Z",
    "author_association": "NONE",
    "pull_request": {
        "url": "https://api.github.com/repos/pallets/flask/pulls/1468",
        "html_url": "https://github.com/pallets/flask/pull/1468",
        "diff_url": "https://github.com/pallets/flask/pull/1468.diff",
        "patch_url": "https://github.com/pallets/flask/pull/1468.patch"
    },
    "body": "I essentially cloned what `before_first_request` does.\n\nIntention is to get the registration of the static route out of `__init__`, and register it instead right before the first request. (for a feature I mentioned in issue #1466)\n\n~~Another possibility would be to pass `environ` along, to make it possible to modify it (for whatever reasons) before it get's passed to `RequestContext` - if desired.~~ well, not actually reasonable for before__first__request_context.\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/105207986",
            "html_url": "https://github.com/pallets/flask/pull/1468#issuecomment-105207986",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1468",
            "id": 105207986,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTIwNzk4Ng==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-05-25T11:06:13Z",
            "updated_at": "2015-05-25T11:06:13Z",
            "author_association": "MEMBER",
            "body": "Couldn't this cause problems in a multithreaded environment?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/105230641",
            "html_url": "https://github.com/pallets/flask/pull/1468#issuecomment-105230641",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1468",
            "id": 105230641,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTIzMDY0MQ==",
            "user": {
                "login": "nitori",
                "id": 1561831,
                "node_id": "MDQ6VXNlcjE1NjE4MzE=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/1561831?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nitori",
                "html_url": "https://github.com/nitori",
                "followers_url": "https://api.github.com/users/nitori/followers",
                "following_url": "https://api.github.com/users/nitori/following{/other_user}",
                "gists_url": "https://api.github.com/users/nitori/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nitori/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nitori/subscriptions",
                "organizations_url": "https://api.github.com/users/nitori/orgs",
                "repos_url": "https://api.github.com/users/nitori/repos",
                "events_url": "https://api.github.com/users/nitori/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nitori/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-05-25T13:21:04Z",
            "updated_at": "2015-05-25T13:21:46Z",
            "author_association": "NONE",
            "body": "If so, then wouldn't `before_first_request` cause them as well?\n\nI basically just duplicated what `before_first_request` does, including [the lock](https://github.com/mitsuhiko/flask/pull/1468/files#diff-c3c1b62367ae818e58e148e2e1840b39R1940), that's being used.\n\nThough, maybe I've missed something.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/105252880",
            "html_url": "https://github.com/pallets/flask/pull/1468#issuecomment-105252880",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1468",
            "id": 105252880,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTI1Mjg4MA==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-05-25T15:34:26Z",
            "updated_at": "2015-05-25T15:34:26Z",
            "author_association": "MEMBER",
            "body": "Couldn't you subclass the Flask app and override the `request_context` method for your purpose? It seems easy enough without introducing more API.\n\nBTW I think you can reuse `_got_first_request` instead of having your own variable.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/105910152",
            "html_url": "https://github.com/pallets/flask/pull/1468#issuecomment-105910152",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1468",
            "id": 105910152,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTkxMDE1Mg==",
            "user": {
                "login": "nitori",
                "id": 1561831,
                "node_id": "MDQ6VXNlcjE1NjE4MzE=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/1561831?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nitori",
                "html_url": "https://github.com/nitori",
                "followers_url": "https://api.github.com/users/nitori/followers",
                "following_url": "https://api.github.com/users/nitori/following{/other_user}",
                "gists_url": "https://api.github.com/users/nitori/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nitori/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nitori/subscriptions",
                "organizations_url": "https://api.github.com/users/nitori/orgs",
                "repos_url": "https://api.github.com/users/nitori/repos",
                "events_url": "https://api.github.com/users/nitori/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nitori/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-05-27T13:33:56Z",
            "updated_at": "2015-05-27T13:33:56Z",
            "author_association": "NONE",
            "body": "Okay, I guess I'll do that instead. Haven't even thought of just subclassing.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/105910848",
            "html_url": "https://github.com/pallets/flask/pull/1468#issuecomment-105910848",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1468",
            "id": 105910848,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTkxMDg0OA==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-05-27T13:35:06Z",
            "updated_at": "2015-05-27T13:35:06Z",
            "author_association": "MEMBER",
            "body": "Happy that this covers your usecase, I personally think the API of Flask needs to rather shrink than grow. :)\n"
        }
    ]
}