{
    "url": "https://api.github.com/repos/pallets/flask/issues/2866",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2866/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2866/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2866/events",
    "html_url": "https://github.com/pallets/flask/issues/2866",
    "id": 342303538,
    "node_id": "MDU6SXNzdWUzNDIzMDM1Mzg=",
    "number": 2866,
    "title": "DispatcherMiddleware with different loggers per app in flask 1.0",
    "user": {
        "login": "jwldk",
        "id": 1695004,
        "node_id": "MDQ6VXNlcjE2OTUwMDQ=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1695004?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jwldk",
        "html_url": "https://github.com/jwldk",
        "followers_url": "https://api.github.com/users/jwldk/followers",
        "following_url": "https://api.github.com/users/jwldk/following{/other_user}",
        "gists_url": "https://api.github.com/users/jwldk/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jwldk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jwldk/subscriptions",
        "organizations_url": "https://api.github.com/users/jwldk/orgs",
        "repos_url": "https://api.github.com/users/jwldk/repos",
        "events_url": "https://api.github.com/users/jwldk/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jwldk/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 648340773,
            "node_id": "MDU6TGFiZWw2NDgzNDA3NzM=",
            "url": "https://api.github.com/repos/pallets/flask/labels/logging",
            "name": "logging",
            "color": "1d76db",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
        "url": "https://api.github.com/repos/pallets/flask/milestones/3",
        "html_url": "https://github.com/pallets/flask/milestone/3",
        "labels_url": "https://api.github.com/repos/pallets/flask/milestones/3/labels",
        "id": 3093266,
        "node_id": "MDk6TWlsZXN0b25lMzA5MzI2Ng==",
        "number": 3,
        "title": "1.1.0",
        "description": "",
        "creator": {
            "login": "davidism",
            "id": 1242887,
            "node_id": "MDQ6VXNlcjEyNDI4ODc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidism",
            "html_url": "https://github.com/davidism",
            "followers_url": "https://api.github.com/users/davidism/followers",
            "following_url": "https://api.github.com/users/davidism/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
            "organizations_url": "https://api.github.com/users/davidism/orgs",
            "repos_url": "https://api.github.com/users/davidism/repos",
            "events_url": "https://api.github.com/users/davidism/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidism/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 0,
        "closed_issues": 48,
        "state": "closed",
        "created_at": "2018-02-06T16:14:43Z",
        "updated_at": "2019-07-06T22:03:23Z",
        "due_on": null,
        "closed_at": "2019-07-06T22:03:23Z"
    },
    "comments": 5,
    "created_at": "2018-07-18T12:18:21Z",
    "updated_at": "2019-07-02T00:42:51Z",
    "closed_at": "2019-07-02T00:42:51Z",
    "author_association": "NONE",
    "body": "After upgrading to flask 1.0 logging from different apps using DispatcherMiddleware, each log emitted is written to all handlers in the different apps. I assume this caused by `app.logger` always having the name `flask.app`, maybe?\r\n\r\nHere is a example:\r\n\r\n\r\n```\r\nfrom werkzeug.wsgi import DispatcherMiddleware\r\nfrom flask import Flask\r\nfrom logging.handlers import RotatingFileHandler\r\n\r\n\r\nhandler1 = RotatingFileHandler('app1.log')\r\napp1 = Flask('app1')\r\napp1.logger.addHandler(handler1)\r\n\r\nhandler2 = RotatingFileHandler('app2.log')\r\napp2 = Flask('app2')\r\napp2.logger.addHandler(handler2)\r\n\r\n\r\n@app1.route(\"/\")\r\ndef hello():\r\n    app1.logger.error(\"from app1\")\r\n    return ''\r\n\r\n\r\n@app2.route(\"/\")\r\ndef hello2():\r\n    app2.logger.error(\"from app2\")\r\n    return ''\r\n\r\n\r\napp = DispatcherMiddleware(app1, {\r\n    '/app2': app2\r\n})\r\n```\r\n\r\nRun with\r\n```\r\nuwsgi --socket 0.0.0.0:8000 --protocol=http -w app --callable app\r\n```\r\n\r\nAnd then make a request to / and /app2/. Each error log will be written in both logfiles.\r\n\r\n### Environment\r\n\r\n* Python version: 3.6.5\r\n* Flask version: 1.0.2\r\n* Werkzeug version: 0.14.1\r\n\r\nMy actual app is using `current_app.logger` with blueprints with the same behaviour, but I assume it the same issue.",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/406412319",
            "html_url": "https://github.com/pallets/flask/issues/2866#issuecomment-406412319",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2866",
            "id": 406412319,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjQxMjMxOQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-07-19T20:58:52Z",
            "updated_at": "2019-06-27T15:54:52Z",
            "author_association": "MEMBER",
            "body": "It logs twice because you're adding two handlers to the same logger. Add one handler to the `\"flask.app\"` logger instead.\r\n\r\nTo get different names, override `Flask.logger`:\r\n\r\n```python\r\nclass LoggerFlask(Flask):\r\n    @property\r\n    def logger(self):\r\n        return super().logger.getChild(self.name)\r\n\r\napp1 = LoggerFlask(\"app1\")\r\napp2 = LoggerFlask(\"app2\")\r\n```\r\n\r\nOr see the docs on logging for how to inject extra information into log records. In your case you would inject `current_app.name`."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/406511131",
            "html_url": "https://github.com/pallets/flask/issues/2866#issuecomment-406511131",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2866",
            "id": 406511131,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjUxMTEzMQ==",
            "user": {
                "login": "jwldk",
                "id": 1695004,
                "node_id": "MDQ6VXNlcjE2OTUwMDQ=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/1695004?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jwldk",
                "html_url": "https://github.com/jwldk",
                "followers_url": "https://api.github.com/users/jwldk/followers",
                "following_url": "https://api.github.com/users/jwldk/following{/other_user}",
                "gists_url": "https://api.github.com/users/jwldk/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jwldk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jwldk/subscriptions",
                "organizations_url": "https://api.github.com/users/jwldk/orgs",
                "repos_url": "https://api.github.com/users/jwldk/repos",
                "events_url": "https://api.github.com/users/jwldk/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jwldk/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-07-20T07:17:38Z",
            "updated_at": "2018-07-20T07:17:38Z",
            "author_association": "NONE",
            "body": "Thanks for the workaround. I can see this is not really a bug per se - just a breaking change for my setup :), but while I can see from PR 2436 that ` LOGGER_NAME` was removed to simply things. However wouldn't it make sense to at least be able to override the default `flask.app` in the constructor like `app = Flask(..., logger_name=\"myapp\")` which can then be used by `create_logger` ? Because another unfortunate side effect I've encountered, is that if you add a Sentry error handler to the logging, the Sentry interface groups errors by `logger.name` - so if you have a bunch of flask applications, everything is now simply called `flask.app`."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/410733609",
            "html_url": "https://github.com/pallets/flask/issues/2866#issuecomment-410733609",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2866",
            "id": 410733609,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDczMzYwOQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-08-06T14:47:03Z",
            "updated_at": "2018-08-06T14:47:03Z",
            "author_association": "MEMBER",
            "body": "Since we now use the `flask.` prefix for logger names, it's easy to autoconfigure a handler just for Flask, rather than interfering with other libraries by messing with the root logger, which was part of the whole original problem.\r\n\r\nMultiple apps was an unforseen case, and I understand how this can be inconvenient. \r\n\r\nI'm hesitant to make this configurable again. Perhaps a compromise would be `f\"flask.app:{app.name}\"` so that it's unique but still under the `flask` namespace."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/410741633",
            "html_url": "https://github.com/pallets/flask/issues/2866#issuecomment-410741633",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2866",
            "id": 410741633,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDc0MTYzMw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-08-06T15:09:41Z",
            "updated_at": "2018-08-06T15:09:41Z",
            "author_association": "MEMBER",
            "body": "Or even just hard code using `app.name` instead of `\"flask.app\"`. If we can be reasonably sure that it won't cause issues like the previous implementation, I'm fine with changing it."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/481341801",
            "html_url": "https://github.com/pallets/flask/issues/2866#issuecomment-481341801",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2866",
            "id": 481341801,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTM0MTgwMQ==",
            "user": {
                "login": "chinmayprabhudesai",
                "id": 29960411,
                "node_id": "MDQ6VXNlcjI5OTYwNDEx",
                "avatar_url": "https://avatars0.githubusercontent.com/u/29960411?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/chinmayprabhudesai",
                "html_url": "https://github.com/chinmayprabhudesai",
                "followers_url": "https://api.github.com/users/chinmayprabhudesai/followers",
                "following_url": "https://api.github.com/users/chinmayprabhudesai/following{/other_user}",
                "gists_url": "https://api.github.com/users/chinmayprabhudesai/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/chinmayprabhudesai/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chinmayprabhudesai/subscriptions",
                "organizations_url": "https://api.github.com/users/chinmayprabhudesai/orgs",
                "repos_url": "https://api.github.com/users/chinmayprabhudesai/repos",
                "events_url": "https://api.github.com/users/chinmayprabhudesai/events{/privacy}",
                "received_events_url": "https://api.github.com/users/chinmayprabhudesai/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-04-09T17:16:07Z",
            "updated_at": "2019-06-27T15:54:41Z",
            "author_association": "NONE",
            "body": "> It logs twice because you're adding two handlers to the same logger. Add one handler to the `\"flask.app\"` logger instead.\r\n> \r\n> To get different names, override `Flask.logger`:\r\n> \r\n> ```python\r\n> class LoggerFlask(Flask):\r\n>     @property\r\n>     def logger(self):\r\n>         return super().logger.getChild(self.name)\r\n> \r\n> app1 = Flask(\"app1\")\r\n> app2 = Flask(\"app2\")\r\n> ```\r\n> \r\n> Or see the docs on logging for how to inject extra information into log records. In your case you would inject `current_app.name`.\r\n\r\nHere, shouldn't the apps be instantiated with the sub-classed `LoggerFlask`  to use the overridden logger property?"
        }
    ]
}