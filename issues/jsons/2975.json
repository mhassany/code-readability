{
    "url": "https://api.github.com/repos/pallets/flask/issues/2975",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2975/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2975/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2975/events",
    "html_url": "https://github.com/pallets/flask/pull/2975",
    "id": 375128361,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjI2NjQ2MzQ2",
    "number": 2975,
    "title": "[Feature proposal] Add instance folders to the template searchpath",
    "user": {
        "login": "padraic-padraic",
        "id": 3513885,
        "node_id": "MDQ6VXNlcjM1MTM4ODU=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/3513885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/padraic-padraic",
        "html_url": "https://github.com/padraic-padraic",
        "followers_url": "https://api.github.com/users/padraic-padraic/followers",
        "following_url": "https://api.github.com/users/padraic-padraic/following{/other_user}",
        "gists_url": "https://api.github.com/users/padraic-padraic/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/padraic-padraic/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/padraic-padraic/subscriptions",
        "organizations_url": "https://api.github.com/users/padraic-padraic/orgs",
        "repos_url": "https://api.github.com/users/padraic-padraic/repos",
        "events_url": "https://api.github.com/users/padraic-padraic/events{/privacy}",
        "received_events_url": "https://api.github.com/users/padraic-padraic/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-10-29T17:21:48Z",
    "updated_at": "2018-10-29T17:59:40Z",
    "closed_at": "2018-10-29T17:59:39Z",
    "author_association": "NONE",
    "pull_request": {
        "url": "https://api.github.com/repos/pallets/flask/pulls/2975",
        "html_url": "https://github.com/pallets/flask/pull/2975",
        "diff_url": "https://github.com/pallets/flask/pull/2975.diff",
        "patch_url": "https://github.com/pallets/flask/pull/2975.patch"
    },
    "body": "**Summary**\r\nAdds the instance folder to the template search path for `Flask` objects.\r\n\r\n**Pupose**\r\n\r\nInstance folders are currently limited to specifying config. However, they have the potential to be more flexible. \r\n\r\nFor example, consider writing a static site generator in flask. The CLI could handle initialising the application, setting up routes etc. It would make sense to specify the site directory as an instance folder, for loading configuration. This pull request would enable features like custom themes by adding them to the site directory, overriding or extending the package defaults.\r\n\r\n**Changes**\r\n\r\nThe Jinja `FileSystemLoader` allows for multiple search paths to be specified. Each path will be tested in order, so we simply override `_PackageBoundObject.jinja_loader`, and add the instance folder to the searchpaths.\r\n\r\n**Evaluation of Alternatives**\r\n\r\nOne alternative solution to the example specified above would be to instead change the `root_path` of the application. However, this wouldn't allow for the user to use resources installed in the package.\r\n\r\nAnother alternative solution would be to use Blueprints to solve cases where we want to create multiple similar applications. If this is the preferred solution, the I'm happy to close the request.\r\n\r\n**Other points**\r\n\r\nI noticed that `tests/test_templating.py::test_custom_template_loader` tested overriding `Flask.create_global_jinja_loader`. I changed the test to use the recommended method of overloading `_PackageBoundObejct.jinja_loader` instead. Let me know if you think this should be in a separate pull request.\r\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/434015290",
            "html_url": "https://github.com/pallets/flask/pull/2975#issuecomment-434015290",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2975",
            "id": 434015290,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDAxNTI5MA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-10-29T17:59:39Z",
            "updated_at": "2018-10-29T17:59:39Z",
            "author_association": "MEMBER",
            "body": "Thanks for looking into this. This is a very specific use case. If it's something a developer needs for their application, they should override `Flask.jinja_loader` as you've done here. But it's not something that belongs in Flask by default.\r\n\r\n```python\r\nfrom flask import Flask\r\nfrom flask.helpers import locked_cached_property\r\n\r\nclass InstanceTemplateFlask(Flask):\r\n    @locked_cached_property\r\n    def jinja_loader(self):\r\n        ...\r\n\r\napp = InstanceTemplateFlask(__name__)\r\n```"
        }
    ]
}