{
    "url": "https://api.github.com/repos/pallets/flask/issues/1202",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1202/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1202/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1202/events",
    "html_url": "https://github.com/pallets/flask/issues/1202",
    "id": 45661046,
    "node_id": "MDU6SXNzdWU0NTY2MTA0Ng==",
    "number": 1202,
    "title": "Large Dictionaries Not Released From Memory",
    "user": {
        "login": "pawl",
        "id": 992533,
        "node_id": "MDQ6VXNlcjk5MjUzMw==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/992533?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pawl",
        "html_url": "https://github.com/pawl",
        "followers_url": "https://api.github.com/users/pawl/followers",
        "following_url": "https://api.github.com/users/pawl/following{/other_user}",
        "gists_url": "https://api.github.com/users/pawl/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pawl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pawl/subscriptions",
        "organizations_url": "https://api.github.com/users/pawl/orgs",
        "repos_url": "https://api.github.com/users/pawl/repos",
        "events_url": "https://api.github.com/users/pawl/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pawl/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2014-10-13T16:31:53Z",
    "updated_at": "2014-10-14T07:20:26Z",
    "closed_at": "2014-10-13T17:29:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Example: https://gist.github.com/pawl/8067c988b1cbfd48b855\n\nI'm using Flask==0.10.1 and python 2.7.4.\n\nIs there a way to release the large dictionary from memory after the return?\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/58919135",
            "html_url": "https://github.com/pallets/flask/issues/1202#issuecomment-58919135",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1202",
            "id": 58919135,
            "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTE5MTM1",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-10-13T16:39:23Z",
            "updated_at": "2014-10-13T16:39:23Z",
            "author_association": "MEMBER",
            "body": "There's still a reference to the memory, `large_dict`, when you run the profiler.  Even if there wasn't you can't guarantee that the interpreter will have released the memory.\n\nTry running the profiler in the `after_request` handler, or on a subsequent request. (Provided that the garbage collection has run.)\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/58919745",
            "html_url": "https://github.com/pallets/flask/issues/1202#issuecomment-58919745",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1202",
            "id": 58919745,
            "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTE5NzQ1",
            "user": {
                "login": "pawl",
                "id": 992533,
                "node_id": "MDQ6VXNlcjk5MjUzMw==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/992533?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/pawl",
                "html_url": "https://github.com/pawl",
                "followers_url": "https://api.github.com/users/pawl/followers",
                "following_url": "https://api.github.com/users/pawl/following{/other_user}",
                "gists_url": "https://api.github.com/users/pawl/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/pawl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pawl/subscriptions",
                "organizations_url": "https://api.github.com/users/pawl/orgs",
                "repos_url": "https://api.github.com/users/pawl/repos",
                "events_url": "https://api.github.com/users/pawl/events{/privacy}",
                "received_events_url": "https://api.github.com/users/pawl/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-10-13T16:43:59Z",
            "updated_at": "2014-10-13T16:43:59Z",
            "author_association": "CONTRIBUTOR",
            "body": "I'm watching the process in htop, and it's definitely not being garbage collected after it runs.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/58926546",
            "html_url": "https://github.com/pallets/flask/issues/1202#issuecomment-58926546",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1202",
            "id": 58926546,
            "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTI2NTQ2",
            "user": {
                "login": "DasIch",
                "id": 182316,
                "node_id": "MDQ6VXNlcjE4MjMxNg==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/182316?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/DasIch",
                "html_url": "https://github.com/DasIch",
                "followers_url": "https://api.github.com/users/DasIch/followers",
                "following_url": "https://api.github.com/users/DasIch/following{/other_user}",
                "gists_url": "https://api.github.com/users/DasIch/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/DasIch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DasIch/subscriptions",
                "organizations_url": "https://api.github.com/users/DasIch/orgs",
                "repos_url": "https://api.github.com/users/DasIch/repos",
                "events_url": "https://api.github.com/users/DasIch/events{/privacy}",
                "received_events_url": "https://api.github.com/users/DasIch/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-10-13T17:29:37Z",
            "updated_at": "2014-10-13T17:29:37Z",
            "author_association": "CONTRIBUTOR",
            "body": "This is not a Flask issue, if it's actually an issue it's an issue with your interpreter. As @davidism already described, the way you are using memory_profiler is wrong.\n\nWatching what happens in htop doesn't really say anything about the garbage collector. It will tell you when memory has been freed and you can thereby assume that the garbage collector collected some objects but just because memory isn't freed, doesn't necessarily mean that the garbage collector didn't collect an object. Both CPython itself as well as the malloc implementation on your platform will cache allocations, so the process will continue consuming memory even though it's unused. CPython further specifically caches ints.\n\nBased on that what should happen is that the interpreter makes a lot of allocations to create the dict and after the response is generated, it should collect the object and then some of that memory will be cached, some of it will be freed, some of the freed memory may be cached by malloc and some of it will actually be released to the operating system.\n\nThis is exactly what I see happening with htop. Memory rises to about 4600M of virtual memory, that drops down to about 3200M after the response has been sent. If I make a second request, the memory rises again to 4600M and drops back to about 3200M. If there would be a leak, memory consumption should increase with each request.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/58930937",
            "html_url": "https://github.com/pallets/flask/issues/1202#issuecomment-58930937",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1202",
            "id": 58930937,
            "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTMwOTM3",
            "user": {
                "login": "pawl",
                "id": 992533,
                "node_id": "MDQ6VXNlcjk5MjUzMw==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/992533?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/pawl",
                "html_url": "https://github.com/pawl",
                "followers_url": "https://api.github.com/users/pawl/followers",
                "following_url": "https://api.github.com/users/pawl/following{/other_user}",
                "gists_url": "https://api.github.com/users/pawl/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/pawl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pawl/subscriptions",
                "organizations_url": "https://api.github.com/users/pawl/orgs",
                "repos_url": "https://api.github.com/users/pawl/repos",
                "events_url": "https://api.github.com/users/pawl/events{/privacy}",
                "received_events_url": "https://api.github.com/users/pawl/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-10-13T18:02:51Z",
            "updated_at": "2014-10-13T18:02:51Z",
            "author_association": "CONTRIBUTOR",
            "body": "Thanks for the help @DasIch and @davidism \n\nI realize that calling it a leak is incorrect now, also thanks for the advice on the correct way to use the memory_profiler. \n\nHere's my updated example with the solution: https://gist.github.com/pawl/95769724848269cff890\n\nRunning it as a separate process seems like the best way to make sure the OS releases the memory.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/58999020",
            "html_url": "https://github.com/pallets/flask/issues/1202#issuecomment-58999020",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1202",
            "id": 58999020,
            "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTk5MDIw",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-10-14T07:12:31Z",
            "updated_at": "2014-10-14T07:12:31Z",
            "author_association": "MEMBER",
            "body": "Not related to your issue, but you should really use 4 spaces for indentation instead of hard tabs.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/58999668",
            "html_url": "https://github.com/pallets/flask/issues/1202#issuecomment-58999668",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1202",
            "id": 58999668,
            "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTk5NjY4",
            "user": {
                "login": "pawl",
                "id": 992533,
                "node_id": "MDQ6VXNlcjk5MjUzMw==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/992533?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/pawl",
                "html_url": "https://github.com/pawl",
                "followers_url": "https://api.github.com/users/pawl/followers",
                "following_url": "https://api.github.com/users/pawl/following{/other_user}",
                "gists_url": "https://api.github.com/users/pawl/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/pawl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pawl/subscriptions",
                "organizations_url": "https://api.github.com/users/pawl/orgs",
                "repos_url": "https://api.github.com/users/pawl/repos",
                "events_url": "https://api.github.com/users/pawl/events{/privacy}",
                "received_events_url": "https://api.github.com/users/pawl/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-10-14T07:20:26Z",
            "updated_at": "2014-10-14T07:20:26Z",
            "author_association": "CONTRIBUTOR",
            "body": "Thanks for the tip @ThiefMaster \n\nBy the way, I learned some more about what caused this issue. It only happens on Linux: http://www.paulsprogrammingnotes.com/2014/10/large-dictionaries-not-released-from.html\n"
        }
    ]
}