{
    "url": "https://api.github.com/repos/pallets/flask/issues/3311",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/3311/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/3311/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/3311/events",
    "html_url": "https://github.com/pallets/flask/issues/3311",
    "id": 471170191,
    "node_id": "MDU6SXNzdWU0NzExNzAxOTE=",
    "number": 3311,
    "title": "RequestContext documentation",
    "user": {
        "login": "Lyla-Fischer",
        "id": 549661,
        "node_id": "MDQ6VXNlcjU0OTY2MQ==",
        "avatar_url": "https://avatars3.githubusercontent.com/u/549661?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Lyla-Fischer",
        "html_url": "https://github.com/Lyla-Fischer",
        "followers_url": "https://api.github.com/users/Lyla-Fischer/followers",
        "following_url": "https://api.github.com/users/Lyla-Fischer/following{/other_user}",
        "gists_url": "https://api.github.com/users/Lyla-Fischer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Lyla-Fischer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Lyla-Fischer/subscriptions",
        "organizations_url": "https://api.github.com/users/Lyla-Fischer/orgs",
        "repos_url": "https://api.github.com/users/Lyla-Fischer/repos",
        "events_url": "https://api.github.com/users/Lyla-Fischer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Lyla-Fischer/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-07-22T16:16:37Z",
    "updated_at": "2019-07-22T20:21:33Z",
    "closed_at": "2019-07-22T20:21:33Z",
    "author_association": "NONE",
    "body": "### Expected Behavior\r\nI think that the documentation for mocking request contexts in Flask 1.1.x might be a bit off. I'm filing an issue instead of submitting a pull request in case there is something about my configuration that doesn't fit the target audience of the documentation. \r\n\r\nThe docs say that in order to mock a request context, you should use the `with` functionality as such: \r\n\r\n```python\r\nwith app.test_request_context(\r\n        '/make_report/2017', data={'format': 'short'}):\r\n    generate_report()\r\n```\r\n\r\n### Actual Behavior\r\nIn order to actually gain access to the request context, I has to insert as `as` with the `with`\r\n```python\r\nwith app.test_request_context(\r\n        '/make_report/2017', data={'format': 'short'}) as request:\r\n    generate_report(request)\r\n```\r\n\r\nIt's not hard to guess, but it seemed like it might be worth updating the docs. \r\n\r\n### Environment\r\n\r\n* Python version: 3.7.3\r\n* Flask version: 1.1.1\r\n* Werkzeug version:  0.15.5\r\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/513865769",
            "html_url": "https://github.com/pallets/flask/issues/3311#issuecomment-513865769",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3311",
            "id": 513865769,
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzg2NTc2OQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-07-22T16:54:43Z",
            "updated_at": "2019-07-22T20:11:18Z",
            "author_association": "MEMBER",
            "body": "The `request` object is typically used as an import instead of being passed as an argument. `test_request_context` returns the request *context*, which is the thing that controls what `request` points at, not `request` itself, so your change isn't doing exactly what you meant.\r\n\r\nYou'd typically define `generate_report` like:\r\n\r\n```python\r\nfrom flask import request\r\n\r\ndef generate_report():\r\n    format = request.form[\"format\"]\r\n    ...\r\n```\r\n\r\nIf you want to be able to pass other request objects, use a default:\r\n\r\n```python\r\nfrom flask import request\r\n\r\ndef generate_report(request=request):\r\n    ...\r\n```\r\n\r\nYou'd need to use `ctx.request` if you used the `with/as` statement, but I don't think this is something I want to document as it's getting more internal.\r\n\r\n```python\r\nwith app.test_request_context() as ctx:\r\n    generate_report(ctx.request)  # flask.request points to the same thing though\r\n```"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/513930300",
            "html_url": "https://github.com/pallets/flask/issues/3311#issuecomment-513930300",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3311",
            "id": 513930300,
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzkzMDMwMA==",
            "user": {
                "login": "Lyla-Fischer",
                "id": 549661,
                "node_id": "MDQ6VXNlcjU0OTY2MQ==",
                "avatar_url": "https://avatars3.githubusercontent.com/u/549661?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Lyla-Fischer",
                "html_url": "https://github.com/Lyla-Fischer",
                "followers_url": "https://api.github.com/users/Lyla-Fischer/followers",
                "following_url": "https://api.github.com/users/Lyla-Fischer/following{/other_user}",
                "gists_url": "https://api.github.com/users/Lyla-Fischer/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Lyla-Fischer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Lyla-Fischer/subscriptions",
                "organizations_url": "https://api.github.com/users/Lyla-Fischer/orgs",
                "repos_url": "https://api.github.com/users/Lyla-Fischer/repos",
                "events_url": "https://api.github.com/users/Lyla-Fischer/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Lyla-Fischer/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-07-22T19:55:28Z",
            "updated_at": "2019-07-22T19:55:28Z",
            "author_association": "NONE",
            "body": "Ah. I guess I was confused about how thread-locals work, and that you need `from flask import request` in order to access the variable `request` (I was just treating the availability of the variable as \"magic I don't understand, but I can work with it anyway\"). Thanks for the clarification. "
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/513939147",
            "html_url": "https://github.com/pallets/flask/issues/3311#issuecomment-513939147",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3311",
            "id": 513939147,
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzkzOTE0Nw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-07-22T20:21:33Z",
            "updated_at": "2019-07-22T20:21:33Z",
            "author_association": "MEMBER",
            "body": "If you have a specific change you think would make the docs clearer, I'm open to a PR, but going to close this for now."
        }
    ]
}