{
    "url": "https://api.github.com/repos/pallets/flask/issues/2264",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2264/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2264/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2264/events",
    "html_url": "https://github.com/pallets/flask/issues/2264",
    "id": 225440375,
    "node_id": "MDU6SXNzdWUyMjU0NDAzNzU=",
    "number": 2264,
    "title": "Handle app factory in FLASK_APP",
    "user": {
        "login": "davidism",
        "id": 1242887,
        "node_id": "MDQ6VXNlcjEyNDI4ODc=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidism",
        "html_url": "https://github.com/davidism",
        "followers_url": "https://api.github.com/users/davidism/followers",
        "following_url": "https://api.github.com/users/davidism/following{/other_user}",
        "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
        "organizations_url": "https://api.github.com/users/davidism/orgs",
        "repos_url": "https://api.github.com/users/davidism/repos",
        "events_url": "https://api.github.com/users/davidism/events{/privacy}",
        "received_events_url": "https://api.github.com/users/davidism/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 380608249,
            "node_id": "MDU6TGFiZWwzODA2MDgyNDk=",
            "url": "https://api.github.com/repos/pallets/flask/labels/cli",
            "name": "cli",
            "color": "1d76db",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2017-05-01T14:07:50Z",
    "updated_at": "2017-05-28T01:15:19Z",
    "closed_at": "2017-05-28T01:14:50Z",
    "author_association": "MEMBER",
    "body": "`FLASK_APP=myproject.app:create_app('dev')`\r\n[\r\nGunicorn does this with `eval`](https://github.com/benoitc/gunicorn/blob/fbd151e9841e2c87a18512d71475bcff863a5171/gunicorn/util.py#L364), which I'm not super happy with. Instead, we could use `literal_eval` to allow a simple list of arguments. The line should never be so complicated that `eval` would be necessary anyway.\r\n\r\n~~~python\r\n# might need to fix this regex\r\nm = re.search(r'(\\w+)(\\(.*\\))', app_obj)\r\n\r\nif m:\r\n    app = getattr(mod, m.group(1))(*literal_eval(m.group(2)))\r\n~~~",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/298384086",
            "html_url": "https://github.com/pallets/flask/issues/2264#issuecomment-298384086",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2264",
            "id": 298384086,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODM4NDA4Ng==",
            "user": {
                "login": "wgwz",
                "id": 10120306,
                "node_id": "MDQ6VXNlcjEwMTIwMzA2",
                "avatar_url": "https://avatars2.githubusercontent.com/u/10120306?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/wgwz",
                "html_url": "https://github.com/wgwz",
                "followers_url": "https://api.github.com/users/wgwz/followers",
                "following_url": "https://api.github.com/users/wgwz/following{/other_user}",
                "gists_url": "https://api.github.com/users/wgwz/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/wgwz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wgwz/subscriptions",
                "organizations_url": "https://api.github.com/users/wgwz/orgs",
                "repos_url": "https://api.github.com/users/wgwz/repos",
                "events_url": "https://api.github.com/users/wgwz/events{/privacy}",
                "received_events_url": "https://api.github.com/users/wgwz/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-05-01T17:42:49Z",
            "updated_at": "2017-05-01T17:44:27Z",
            "author_association": "CONTRIBUTOR",
            "body": "Should be `re.search` instead of `re.match`, right?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/303514428",
            "html_url": "https://github.com/pallets/flask/issues/2264#issuecomment-303514428",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2264",
            "id": 303514428,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzUxNDQyOA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-05-23T19:58:55Z",
            "updated_at": "2017-05-23T20:00:57Z",
            "author_association": "MEMBER",
            "body": "Also handle `myproject.app:create_app` without parens.\r\n\r\n`literal_eval(\"('dev')\")` evaluates to a string, not a tuple, so need to special case one positional arg, probably by adding a comma at the end. Need to check that it's not empty parens though, because then inserting is a syntax error.\r\n\r\nThis solution only allows positional arguments (and named `script_info` argument implicitly), but I'm ok with not supporting keyword arguments."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/303639534",
            "html_url": "https://github.com/pallets/flask/issues/2264#issuecomment-303639534",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2264",
            "id": 303639534,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzYzOTUzNA==",
            "user": {
                "login": "lepture",
                "id": 290496,
                "node_id": "MDQ6VXNlcjI5MDQ5Ng==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/290496?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/lepture",
                "html_url": "https://github.com/lepture",
                "followers_url": "https://api.github.com/users/lepture/followers",
                "following_url": "https://api.github.com/users/lepture/following{/other_user}",
                "gists_url": "https://api.github.com/users/lepture/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/lepture/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lepture/subscriptions",
                "organizations_url": "https://api.github.com/users/lepture/orgs",
                "repos_url": "https://api.github.com/users/lepture/repos",
                "events_url": "https://api.github.com/users/lepture/events{/privacy}",
                "received_events_url": "https://api.github.com/users/lepture/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-05-24T07:19:16Z",
            "updated_at": "2017-05-24T07:19:16Z",
            "author_association": "MEMBER",
            "body": "Down vote on this feature.\r\n\r\nThe environ `FLASK_ENV=dev` way would be better."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/303640162",
            "html_url": "https://github.com/pallets/flask/issues/2264#issuecomment-303640162",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2264",
            "id": 303640162,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzY0MDE2Mg==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-05-24T07:22:37Z",
            "updated_at": "2017-05-24T07:22:48Z",
            "author_association": "MEMBER",
            "body": "Something like `FLASK_ENV`  would not belong into the core of a microframework like Flask. You don't necessarily have multiple configs available - actually, if you want to be able to specify which config to use I'd just use `app.config.from_envvar('MYAPP_CONFIG')`.\r\n\r\nI'm \u00b10 on this issue: It does make `FLASK_APP` more flexible, but on the other hand always calling the app factory with no arguments - which. in my opinion, should use the most common default values - keeps things nice and simple."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/303641115",
            "html_url": "https://github.com/pallets/flask/issues/2264#issuecomment-303641115",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2264",
            "id": 303641115,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzY0MTExNQ==",
            "user": {
                "login": "lepture",
                "id": 290496,
                "node_id": "MDQ6VXNlcjI5MDQ5Ng==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/290496?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/lepture",
                "html_url": "https://github.com/lepture",
                "followers_url": "https://api.github.com/users/lepture/followers",
                "following_url": "https://api.github.com/users/lepture/following{/other_user}",
                "gists_url": "https://api.github.com/users/lepture/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/lepture/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lepture/subscriptions",
                "organizations_url": "https://api.github.com/users/lepture/orgs",
                "repos_url": "https://api.github.com/users/lepture/repos",
                "events_url": "https://api.github.com/users/lepture/events{/privacy}",
                "received_events_url": "https://api.github.com/users/lepture/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-05-24T07:27:16Z",
            "updated_at": "2017-05-24T07:27:16Z",
            "author_association": "MEMBER",
            "body": "@ThiefMaster Actually I don't use `FLASK_ENV` either. The `FLASK_ENV` way is a suggested replacement for this issue.\r\n\r\nI've always been using the `MYAPP_CONF=/path/to/conf.py` to bootstrap the flask app."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/304217035",
            "html_url": "https://github.com/pallets/flask/issues/2264#issuecomment-304217035",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2264",
            "id": 304217035,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDIxNzAzNQ==",
            "user": {
                "login": "Kamekameha",
                "id": 8525842,
                "node_id": "MDQ6VXNlcjg1MjU4NDI=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/8525842?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Kamekameha",
                "html_url": "https://github.com/Kamekameha",
                "followers_url": "https://api.github.com/users/Kamekameha/followers",
                "following_url": "https://api.github.com/users/Kamekameha/following{/other_user}",
                "gists_url": "https://api.github.com/users/Kamekameha/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Kamekameha/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Kamekameha/subscriptions",
                "organizations_url": "https://api.github.com/users/Kamekameha/orgs",
                "repos_url": "https://api.github.com/users/Kamekameha/repos",
                "events_url": "https://api.github.com/users/Kamekameha/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Kamekameha/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-05-26T07:53:43Z",
            "updated_at": "2017-05-26T07:53:43Z",
            "author_association": "NONE",
            "body": "I'm not that fond either with such flexibility in `FLASK_APP`, a simple call with no arguments to the application factory might be enough, IMO. By looking at the deployment options in the docs we may need to write our own `wsgi.py` (or something similar) application file for a handful of cases anyway."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/304304673",
            "html_url": "https://github.com/pallets/flask/issues/2264#issuecomment-304304673",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2264",
            "id": 304304673,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDMwNDY3Mw==",
            "user": {
                "login": "kennethreitz",
                "id": 119893,
                "node_id": "MDQ6VXNlcjExOTg5Mw==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/119893?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/kennethreitz",
                "html_url": "https://github.com/kennethreitz",
                "followers_url": "https://api.github.com/users/kennethreitz/followers",
                "following_url": "https://api.github.com/users/kennethreitz/following{/other_user}",
                "gists_url": "https://api.github.com/users/kennethreitz/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/kennethreitz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kennethreitz/subscriptions",
                "organizations_url": "https://api.github.com/users/kennethreitz/orgs",
                "repos_url": "https://api.github.com/users/kennethreitz/repos",
                "events_url": "https://api.github.com/users/kennethreitz/events{/privacy}",
                "received_events_url": "https://api.github.com/users/kennethreitz/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-05-26T14:56:27Z",
            "updated_at": "2017-05-26T14:56:27Z",
            "author_association": "CONTRIBUTOR",
            "body": "I merged a pull request yesterday which [provides this functionality](https://github.com/pallets/flask/pull/2326)"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/304304914",
            "html_url": "https://github.com/pallets/flask/issues/2264#issuecomment-304304914",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2264",
            "id": 304304914,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDMwNDkxNA==",
            "user": {
                "login": "kennethreitz",
                "id": 119893,
                "node_id": "MDQ6VXNlcjExOTg5Mw==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/119893?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/kennethreitz",
                "html_url": "https://github.com/kennethreitz",
                "followers_url": "https://api.github.com/users/kennethreitz/followers",
                "following_url": "https://api.github.com/users/kennethreitz/following{/other_user}",
                "gists_url": "https://api.github.com/users/kennethreitz/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/kennethreitz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kennethreitz/subscriptions",
                "organizations_url": "https://api.github.com/users/kennethreitz/orgs",
                "repos_url": "https://api.github.com/users/kennethreitz/repos",
                "events_url": "https://api.github.com/users/kennethreitz/events{/privacy}",
                "received_events_url": "https://api.github.com/users/kennethreitz/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-05-26T14:57:19Z",
            "updated_at": "2017-05-26T14:57:19Z",
            "author_association": "CONTRIBUTOR",
            "body": "The PR looked good to me, and from what I could tell, this was @davidism's plan for the project, so I went ahead with it. Leaving this ticket open for further discussion, if any is needed."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/304485971",
            "html_url": "https://github.com/pallets/flask/issues/2264#issuecomment-304485971",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2264",
            "id": 304485971,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDQ4NTk3MQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-05-28T01:14:50Z",
            "updated_at": "2017-05-28T01:15:19Z",
            "author_association": "MEMBER",
            "body": "I *really* like the shortcut of being able to call the factory in uWSGI and Gunicorn config. I think the ease of setup outweighs the complexity here. If users want to use env vars instead, that's fine and should probably be documented as an alternative."
        }
    ]
}