{
    "url": "https://api.github.com/repos/pallets/flask/issues/601",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/601/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/601/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/601/events",
    "html_url": "https://github.com/pallets/flask/issues/601",
    "id": 7210646,
    "node_id": "MDU6SXNzdWU3MjEwNjQ2",
    "number": 601,
    "title": "Getting raw POST data for whatever mimetype",
    "user": {
        "login": "tito",
        "id": 37904,
        "node_id": "MDQ6VXNlcjM3OTA0",
        "avatar_url": "https://avatars1.githubusercontent.com/u/37904?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tito",
        "html_url": "https://github.com/tito",
        "followers_url": "https://api.github.com/users/tito/followers",
        "following_url": "https://api.github.com/users/tito/following{/other_user}",
        "gists_url": "https://api.github.com/users/tito/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tito/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tito/subscriptions",
        "organizations_url": "https://api.github.com/users/tito/orgs",
        "repos_url": "https://api.github.com/users/tito/repos",
        "events_url": "https://api.github.com/users/tito/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tito/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-09-28T11:12:01Z",
    "updated_at": "2012-10-07T13:46:25Z",
    "closed_at": "2012-10-07T13:46:25Z",
    "author_association": "NONE",
    "body": "Ok, this issue have been raised twice, but i got an use-case that i don't know how to handle without the raw POST data.\n\nIf you use PubSubHubbub api, you can can give a secret, and any data that you will receive will be signed:\n- When you subscribe to a new hub, you can give a \"secret\"\n- When you get a POST request, you get a `X-Hub-Signature` in the format \"sha1:xxxx\"\n- The signature is based on the secret you give at the subscription + the raw request data\n- The request data are POSTed, and accessible with request.form\n\nTo verify the signature, i think it should be something like:\n\n``` python\nfrom hashlib import sha1\nimport hmac\nsignature = 'sha1:' + hmac.new(my_secret, request.data, sha1).hex_digest()\n```\n\nI've tried to use `json.dumps(request.form)` to get the initial raw data, but it doesn't work, maybe cause of a space or a line break.\n\n(The real use case here is using the PubSubHubbub hook from Github, to get a CIA.vc like service)\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/8972398",
            "html_url": "https://github.com/pallets/flask/issues/601#issuecomment-8972398",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/601",
            "id": 8972398,
            "node_id": "MDEyOklzc3VlQ29tbWVudDg5NzIzOTg=",
            "user": {
                "login": "tito",
                "id": 37904,
                "node_id": "MDQ6VXNlcjM3OTA0",
                "avatar_url": "https://avatars1.githubusercontent.com/u/37904?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/tito",
                "html_url": "https://github.com/tito",
                "followers_url": "https://api.github.com/users/tito/followers",
                "following_url": "https://api.github.com/users/tito/following{/other_user}",
                "gists_url": "https://api.github.com/users/tito/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/tito/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tito/subscriptions",
                "organizations_url": "https://api.github.com/users/tito/orgs",
                "repos_url": "https://api.github.com/users/tito/repos",
                "events_url": "https://api.github.com/users/tito/events{/privacy}",
                "received_events_url": "https://api.github.com/users/tito/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2012-09-28T11:13:40Z",
            "updated_at": "2012-09-28T11:13:40Z",
            "author_association": "NONE",
            "body": "Here is an example of request received from github, with the secret 'aoserchsr989898h': http://requestb.in/153mbk31\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/9208057",
            "html_url": "https://github.com/pallets/flask/issues/601#issuecomment-9208057",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/601",
            "id": 9208057,
            "node_id": "MDEyOklzc3VlQ29tbWVudDkyMDgwNTc=",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2012-10-07T13:37:27Z",
            "updated_at": "2012-10-07T13:37:27Z",
            "author_association": "MEMBER",
            "body": "The correct solution here is to wrap the stream and to do the sha1 as you go.  I will add an example to the docs.\n"
        }
    ]
}