{
    "url": "https://api.github.com/repos/pallets/flask/issues/674",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/674/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/674/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/674/events",
    "html_url": "https://github.com/pallets/flask/issues/674",
    "id": 10769680,
    "node_id": "MDU6SXNzdWUxMDc2OTY4MA==",
    "number": 674,
    "title": "Need instructions about pylint/pychecker setup",
    "user": {
        "login": "patrakov",
        "id": 2943163,
        "node_id": "MDQ6VXNlcjI5NDMxNjM=",
        "avatar_url": "https://avatars2.githubusercontent.com/u/2943163?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/patrakov",
        "html_url": "https://github.com/patrakov",
        "followers_url": "https://api.github.com/users/patrakov/followers",
        "following_url": "https://api.github.com/users/patrakov/following{/other_user}",
        "gists_url": "https://api.github.com/users/patrakov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/patrakov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/patrakov/subscriptions",
        "organizations_url": "https://api.github.com/users/patrakov/orgs",
        "repos_url": "https://api.github.com/users/patrakov/repos",
        "events_url": "https://api.github.com/users/patrakov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/patrakov/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2013-02-08T06:46:03Z",
    "updated_at": "2013-08-02T10:31:20Z",
    "closed_at": "2013-08-02T10:31:20Z",
    "author_association": "NONE",
    "body": "Any attempt to run pylint or pychecker on anything that uses any Flask extension, e.g.:\n\n```\nfrom flask.ext.login import user_logged_in, user_logged_out\n```\n\n produces errors like the following:\n\n```\nF:  5,0: Unable to import 'flask.ext.login'\nE:  5,0: No name 'login' in module 'flask.ext'\n```\n\nSome documentation is needed how to coerce pylint and pychecker into understanding how flask.ext.login is imported.\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/13279791",
            "html_url": "https://github.com/pallets/flask/issues/674#issuecomment-13279791",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/674",
            "id": 13279791,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjc5Nzkx",
            "user": {
                "login": "hellysmile",
                "id": 1834317,
                "node_id": "MDQ6VXNlcjE4MzQzMTc=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/1834317?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hellysmile",
                "html_url": "https://github.com/hellysmile",
                "followers_url": "https://api.github.com/users/hellysmile/followers",
                "following_url": "https://api.github.com/users/hellysmile/following{/other_user}",
                "gists_url": "https://api.github.com/users/hellysmile/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hellysmile/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hellysmile/subscriptions",
                "organizations_url": "https://api.github.com/users/hellysmile/orgs",
                "repos_url": "https://api.github.com/users/hellysmile/repos",
                "events_url": "https://api.github.com/users/hellysmile/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hellysmile/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-02-08T07:28:46Z",
            "updated_at": "2013-02-08T07:28:46Z",
            "author_association": "NONE",
            "body": "thats looks that you are using virtualenv, but your pylint\\pychecker\\pep8\\pyflakes\\flake8 installed at system globally\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/13289849",
            "html_url": "https://github.com/pallets/flask/issues/674#issuecomment-13289849",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/674",
            "id": 13289849,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjg5ODQ5",
            "user": {
                "login": "patrakov",
                "id": 2943163,
                "node_id": "MDQ6VXNlcjI5NDMxNjM=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/2943163?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/patrakov",
                "html_url": "https://github.com/patrakov",
                "followers_url": "https://api.github.com/users/patrakov/followers",
                "following_url": "https://api.github.com/users/patrakov/following{/other_user}",
                "gists_url": "https://api.github.com/users/patrakov/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/patrakov/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/patrakov/subscriptions",
                "organizations_url": "https://api.github.com/users/patrakov/orgs",
                "repos_url": "https://api.github.com/users/patrakov/repos",
                "events_url": "https://api.github.com/users/patrakov/events{/privacy}",
                "received_events_url": "https://api.github.com/users/patrakov/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-02-08T13:19:32Z",
            "updated_at": "2013-02-08T13:19:32Z",
            "author_association": "NONE",
            "body": "No virtualenv is used here. All of flask, flask-login, pylint, pychecker and pyflakes are installed system-wide. Pylint is started as follows:\n\n```\nPYTHONPATH=. pylint cabinet\n```\n\ni.e. the modules related to \"cabinet\" are not installed system-wide, but they import flask-related modules from the global installation. And they work when imported from the command line or from a script.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/13291152",
            "html_url": "https://github.com/pallets/flask/issues/674#issuecomment-13291152",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/674",
            "id": 13291152,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjkxMTUy",
            "user": {
                "login": "ghost",
                "id": 10137,
                "node_id": "MDQ6VXNlcjEwMTM3",
                "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ghost",
                "html_url": "https://github.com/ghost",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-02-08T13:57:53Z",
            "updated_at": "2013-02-08T13:57:53Z",
            "author_association": "NONE",
            "body": "Well, actually, module `flask.ext.login` does not exists: it's just a \"shortcut\" to module `flask_login`, implemented with `sys.meta_path` (check out [Python docs](http://docs.python.org/2/library/sys.html#sys.meta_path) and [Flask implementation](https://github.com/mitsuhiko/flask/blob/master/flask/exthook.py#L26)).\n\nPS @patrakov: that's the output of Pylint or Pychecker?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/13298291",
            "html_url": "https://github.com/pallets/flask/issues/674#issuecomment-13298291",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/674",
            "id": 13298291,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjk4Mjkx",
            "user": {
                "login": "patrakov",
                "id": 2943163,
                "node_id": "MDQ6VXNlcjI5NDMxNjM=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/2943163?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/patrakov",
                "html_url": "https://github.com/patrakov",
                "followers_url": "https://api.github.com/users/patrakov/followers",
                "following_url": "https://api.github.com/users/patrakov/following{/other_user}",
                "gists_url": "https://api.github.com/users/patrakov/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/patrakov/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/patrakov/subscriptions",
                "organizations_url": "https://api.github.com/users/patrakov/orgs",
                "repos_url": "https://api.github.com/users/patrakov/repos",
                "events_url": "https://api.github.com/users/patrakov/events{/privacy}",
                "received_events_url": "https://api.github.com/users/patrakov/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-02-08T16:29:03Z",
            "updated_at": "2013-02-08T16:29:03Z",
            "author_association": "NONE",
            "body": "This is the minimal test file demonstrating the problem (save as cabinet.py):\n\n```\nfrom flask import Flask\nfrom flask.ext.login import user_logged_in, user_logged_out\nfrom flask.ext.babel import Babel\n\ndef create_app():\n    app = Flask(__name__)\n    babel = Babel(app)\n    return app\n```\n\nThis is the beginning of the output from pylint:\n\n```\nNo config file found, using default configuration\n************* Module cabinet\nC:  1,0: Missing docstring\nF:  2,0: Unable to import 'flask.ext.login'\nE:  2,0: No name 'login' in module 'flask.ext'\nF:  3,0: Unable to import 'flask.ext.babel'\nE:  3,0: No name 'babel' in module 'flask.ext'\nC:  5,0:create_app: Missing docstring\nW:  7,4:create_app: Unused variable 'babel'\nW:  2,0: Unused import user_logged_out\nW:  2,0: Unused import user_logged_in\n```\n\nThis is the output from pychecker:\n\n```\nProcessing module cabinet (cabinet)...\n  Caught exception importing module cabinet:\n    File \"/usr/lib64/python2.7/site-packages/pychecker/pcmodules.py\", line 540, in setupMainCode()\n      module = imp.load_module(self.moduleName, handle, filename, smt)\n    File \"cabinet.py\", line 3, in <module>()\n      from flask.ext.babel import Babel\n    File \"/usr/lib64/python2.7/site-packages/flask/exthook.py\", line 61, in load_module()\n      __import__(realname)\n    File \"/usr/lib64/python2.7/site-packages/flaskext/babel.py\", line 21, in <module>()\n      from babel import dates, numbers, support, Locale\n    File \"/usr/lib64/python2.7/site-packages/babel/__init__.py\", line 33, in <module>()\n      from pkg_resources import get_distribution, ResolutionError\n    File \"/usr/lib64/python2.7/site-packages/pkg_resources.py\", line 2793, in <module>()\n      _declare_state('object', working_set = WorkingSet())\n    File \"/usr/lib64/python2.7/site-packages/pkg_resources.py\", line 442, in __init__()\n      self.add_entry(entry)\n    File \"/usr/lib64/python2.7/site-packages/pkg_resources.py\", line 457, in add_entry()\n      for dist in find_distributions(entry, True):\n    File \"/usr/lib64/python2.7/site-packages/pkg_resources.py\", line 1704, in find_distributions()\n      importer = get_importer(path_item)\n    File \"/usr/lib64/python2.7/pkgutil.py\", line 384, in get_importer()\n      importer = path_hook(path_item)\n  TypeError: must be string, not None\n\nWarnings...\n\ncabinet:1: NOT PROCESSED UNABLE TO IMPORT\n```\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/21965279",
            "html_url": "https://github.com/pallets/flask/issues/674#issuecomment-21965279",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/674",
            "id": 21965279,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTY1Mjc5",
            "user": {
                "login": "malicustommade",
                "id": 3865581,
                "node_id": "MDQ6VXNlcjM4NjU1ODE=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/3865581?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/malicustommade",
                "html_url": "https://github.com/malicustommade",
                "followers_url": "https://api.github.com/users/malicustommade/followers",
                "following_url": "https://api.github.com/users/malicustommade/following{/other_user}",
                "gists_url": "https://api.github.com/users/malicustommade/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/malicustommade/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/malicustommade/subscriptions",
                "organizations_url": "https://api.github.com/users/malicustommade/orgs",
                "repos_url": "https://api.github.com/users/malicustommade/repos",
                "events_url": "https://api.github.com/users/malicustommade/events{/privacy}",
                "received_events_url": "https://api.github.com/users/malicustommade/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-08-01T19:58:30Z",
            "updated_at": "2013-08-01T19:58:30Z",
            "author_association": "NONE",
            "body": "I hit this too. There is this: \n\nhttp://engineering.pave.com/post/51820567994/welcome-linting-flask-ext\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/21998025",
            "html_url": "https://github.com/pallets/flask/issues/674#issuecomment-21998025",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/674",
            "id": 21998025,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTk4MDI1",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-08-02T10:31:20Z",
            "updated_at": "2013-08-02T10:31:20Z",
            "author_association": "MEMBER",
            "body": "I think this should be covered elsewhere.  Just for the record: flask.ext.foo does not have to be used, you can use flask_foo with new extensions and flaskext.foo with old ones.  The `flask.ext` module mainly exists so that transitions for users is less painful.\n"
        }
    ]
}