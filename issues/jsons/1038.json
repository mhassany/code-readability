{
    "url": "https://api.github.com/repos/pallets/flask/issues/1038",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1038/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1038/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1038/events",
    "html_url": "https://github.com/pallets/flask/issues/1038",
    "id": 32353719,
    "node_id": "MDU6SXNzdWUzMjM1MzcxOQ==",
    "number": 1038,
    "title": "security hazard in app.route decorator ordering",
    "user": {
        "login": "joernhees",
        "id": 464192,
        "node_id": "MDQ6VXNlcjQ2NDE5Mg==",
        "avatar_url": "https://avatars1.githubusercontent.com/u/464192?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/joernhees",
        "html_url": "https://github.com/joernhees",
        "followers_url": "https://api.github.com/users/joernhees/followers",
        "following_url": "https://api.github.com/users/joernhees/following{/other_user}",
        "gists_url": "https://api.github.com/users/joernhees/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/joernhees/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/joernhees/subscriptions",
        "organizations_url": "https://api.github.com/users/joernhees/orgs",
        "repos_url": "https://api.github.com/users/joernhees/repos",
        "events_url": "https://api.github.com/users/joernhees/events{/privacy}",
        "received_events_url": "https://api.github.com/users/joernhees/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2014-04-28T12:12:47Z",
    "updated_at": "2014-04-29T14:20:59Z",
    "closed_at": "2014-04-28T13:33:39Z",
    "author_association": "NONE",
    "body": "It's quite common to use the `app.route` decorator together with other decorators to restrict access like this for example:\n\n``` python\n@app.route('/foo')\n@auth.admin_required\ndef foo():\n  pass\n```\n\nThis can easily become a security issue (also described in gae-init/gae-init#149) if you sloppily swap the order of the decorators:\n\n``` python\n@auth.admin_required\n@app.route('/foo')\ndef foo():\n  pass\n```\n\nThis will silently register `foo` without any guards and can easily hit developers \"off-guard\" ;). IMO this is a bit too easy and silent. I'd even bet that quite some people make this mistake.\n\nI can think of a solution based on inspection at decoration time (inside `app.route` above `app.route.decorator`) check that `@app.route` decorators are not decorated with anything else. This doesn't feel nice but might prevent security flaws... thoughts?\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/41553675",
            "html_url": "https://github.com/pallets/flask/issues/1038#issuecomment-41553675",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1038",
            "id": 41553675,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTUzNjc1",
            "user": {
                "login": "methane",
                "id": 199592,
                "node_id": "MDQ6VXNlcjE5OTU5Mg==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/methane",
                "html_url": "https://github.com/methane",
                "followers_url": "https://api.github.com/users/methane/followers",
                "following_url": "https://api.github.com/users/methane/following{/other_user}",
                "gists_url": "https://api.github.com/users/methane/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/methane/subscriptions",
                "organizations_url": "https://api.github.com/users/methane/orgs",
                "repos_url": "https://api.github.com/users/methane/repos",
                "events_url": "https://api.github.com/users/methane/events{/privacy}",
                "received_events_url": "https://api.github.com/users/methane/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-04-28T12:46:31Z",
            "updated_at": "2014-04-28T12:46:31Z",
            "author_association": "CONTRIBUTOR",
            "body": "I recommend class based view for larger apps.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/41555018",
            "html_url": "https://github.com/pallets/flask/issues/1038#issuecomment-41555018",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1038",
            "id": 41555018,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTU1MDE4",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-04-28T13:02:20Z",
            "updated_at": "2014-04-28T13:02:20Z",
            "author_association": "MEMBER",
            "body": "To be honest, I think it's much more common to simply forget adding the decorator in the first place.\n\nI don't think any automated check really helps since you might very well want to have multiple `route` decorators in some cases..\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/41558242",
            "html_url": "https://github.com/pallets/flask/issues/1038#issuecomment-41558242",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1038",
            "id": 41558242,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTU4MjQy",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-04-28T13:33:39Z",
            "updated_at": "2014-04-28T13:33:39Z",
            "author_association": "MEMBER",
            "body": "That's outside the scope of Flask. If you want to have a hardened flask you can probably override something in route.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/41581654",
            "html_url": "https://github.com/pallets/flask/issues/1038#issuecomment-41581654",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1038",
            "id": 41581654,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTgxNjU0",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-04-28T16:40:09Z",
            "updated_at": "2014-04-28T16:40:09Z",
            "author_association": "MEMBER",
            "body": "I think we could help extensions detect whether the route decorator already has been applied. This could be done by setting a special attribute. However, extensions can already do this detection by checking whether the function is in app.view_functions. I therefore recommend to file this bug against the various extensions which provide additional decorators.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/41585324",
            "html_url": "https://github.com/pallets/flask/issues/1038#issuecomment-41585324",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1038",
            "id": 41585324,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTg1MzI0",
            "user": {
                "login": "DasIch",
                "id": 182316,
                "node_id": "MDQ6VXNlcjE4MjMxNg==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/182316?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/DasIch",
                "html_url": "https://github.com/DasIch",
                "followers_url": "https://api.github.com/users/DasIch/followers",
                "following_url": "https://api.github.com/users/DasIch/following{/other_user}",
                "gists_url": "https://api.github.com/users/DasIch/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/DasIch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DasIch/subscriptions",
                "organizations_url": "https://api.github.com/users/DasIch/orgs",
                "repos_url": "https://api.github.com/users/DasIch/repos",
                "events_url": "https://api.github.com/users/DasIch/events{/privacy}",
                "received_events_url": "https://api.github.com/users/DasIch/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-04-28T17:10:18Z",
            "updated_at": "2014-04-28T17:10:18Z",
            "author_association": "CONTRIBUTOR",
            "body": "No matter what we do this should be discovered immediately through testing. If you don't have any tests, especially for security critical stuff, no amount of effort on our side or on the side of any extension developers will solve the problem.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/41677101",
            "html_url": "https://github.com/pallets/flask/issues/1038#issuecomment-41677101",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1038",
            "id": 41677101,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjc3MTAx",
            "user": {
                "login": "joernhees",
                "id": 464192,
                "node_id": "MDQ6VXNlcjQ2NDE5Mg==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/464192?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/joernhees",
                "html_url": "https://github.com/joernhees",
                "followers_url": "https://api.github.com/users/joernhees/followers",
                "following_url": "https://api.github.com/users/joernhees/following{/other_user}",
                "gists_url": "https://api.github.com/users/joernhees/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/joernhees/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/joernhees/subscriptions",
                "organizations_url": "https://api.github.com/users/joernhees/orgs",
                "repos_url": "https://api.github.com/users/joernhees/repos",
                "events_url": "https://api.github.com/users/joernhees/events{/privacy}",
                "received_events_url": "https://api.github.com/users/joernhees/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-04-29T13:44:33Z",
            "updated_at": "2014-04-29T13:44:33Z",
            "author_association": "NONE",
            "body": "My point was that it fails silently and that rather than checking it in each and every other decorator it could be checked in one place in the route decorator... True, proper testing should detect the issue, but this problem would be detectable from within the flask lib and is security relevant.\n\nIt's a design decision about how much you want to guide developers using flask not to make a simple mistake. That's why i asked and i'm happy i asked before investing my time into a fix which is then rejected.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/41681552",
            "html_url": "https://github.com/pallets/flask/issues/1038#issuecomment-41681552",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1038",
            "id": 41681552,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjgxNTUy",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-04-29T14:20:59Z",
            "updated_at": "2014-04-29T14:20:59Z",
            "author_association": "MEMBER",
            "body": "Telling arbitrary functions apart from wrapper functions seems technically\nimpossible to me. And even if you do that, you would have the assumption that\nall decorators are closure-based...\n\nOn Tue, Apr 29, 2014 at 06:44:43AM -0700, J\u00f6rn Hees wrote:\n\n> My point was that it fails silently and that rather than checking it in each and every other decorator it could be checked in one place in the route decorator... True, proper testing should detect the issue, but this problem would be detectable from within the flask lib and is security relevant.\n> \n> It's a design decision about how much you want to guide developers using flask not to make a simple mistake. That's why i asked and i'm happy i asked before investing my time into a fix which is then rejected.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mitsuhiko/flask/issues/1038#issuecomment-41677101\n"
        }
    ]
}