{
    "url": "https://api.github.com/repos/pallets/flask/issues/2741",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2741/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2741/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2741/events",
    "html_url": "https://github.com/pallets/flask/issues/2741",
    "id": 318650640,
    "node_id": "MDU6SXNzdWUzMTg2NTA2NDA=",
    "number": 2741,
    "title": "Better exception handling when env vars are missing for flask CLI",
    "user": {
        "login": "rochacbruno",
        "id": 458654,
        "node_id": "MDQ6VXNlcjQ1ODY1NA==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/458654?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rochacbruno",
        "html_url": "https://github.com/rochacbruno",
        "followers_url": "https://api.github.com/users/rochacbruno/followers",
        "following_url": "https://api.github.com/users/rochacbruno/following{/other_user}",
        "gists_url": "https://api.github.com/users/rochacbruno/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rochacbruno/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rochacbruno/subscriptions",
        "organizations_url": "https://api.github.com/users/rochacbruno/orgs",
        "repos_url": "https://api.github.com/users/rochacbruno/repos",
        "events_url": "https://api.github.com/users/rochacbruno/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rochacbruno/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-04-28T16:37:34Z",
    "updated_at": "2019-02-11T04:03:57Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Expected Behavior\r\n\r\nAs there is the support for `lazy loading` the app, when running `flask` CLI without providing the proper environment variables we must see a better warning instead of raw exception.\r\n\r\nTell us what should happen.\r\n\r\n**we should see a better warning or message pointing to the problem**\r\n\r\n```pytb\r\n# there is no FLASK_APP env var\r\n$ flask --help\r\nWARNING: You need to define the app e.g: `export FLASK_APP=app.py`\r\n```\r\n### Actual Behavior\r\n\r\nTell us what happens instead.\r\n\r\n**we see traceback before the help message**\r\n\r\n```pytb\r\n# there is no FLASK_APP env var\r\n$ flask --help                                                               Sat 28 Apr 2018 01:25:50 PM -03\r\nTraceback (most recent call last):\r\n  File \"~Projects/personal/flasgger/venv/lib/python3.6/site-packages/flask/cli.py\", line 235, in locate_app\r\n    __import__(module_name)\r\nModuleNotFoundError: No module named 'app'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"~/Projects/personal/flasgger/venv/lib/python3.6/site-packages/flask/cli.py\", line 529, in list_commands\r\n    rv.update(info.load_app().cli.list_commands(ctx))\r\n  File \"~/Projects/personal/flasgger/venv/lib/python3.6/site-packages/flask/cli.py\", line 372, in load_app\r\n    app = locate_app(self, import_name, name)\r\n  File \"~/Projects/personal/flasgger/venv/lib/python3.6/site-packages/flask/cli.py\", line 246, in locate_app\r\n    'Could not import \"{name}\".'.format(name=module_name)\r\nflask.cli.NoAppException: Could not import \"app\".\r\nUsage: flask [OPTIONS] COMMAND [ARGS]...\r\n\r\n  A general utility script for Flask applications.\r\n\r\n  Provides commands from Flask, extensions, and the application. Loads the\r\n  application defined in the FLASK_APP environment variable, or from a\r\n  wsgi.py file. Setting the FLASK_ENV environment variable to 'development'\r\n  will enable debug mode.\r\n\r\n    $ export FLASK_APP=hello.py\r\n    $ export FLASK_ENV=development\r\n    $ flask run\r\n\r\nOptions:\r\n  --version  Show the flask version\r\n  --help     Show this message and exit.\r\n\r\nCommands:\r\n  routes  Show the routes for the app.\r\n  run     Runs a development server.\r\n  shell   Runs a shell in the app context.\r\n\r\n```\r\n\r\nThe same happens to `run`\r\n\r\n```pytb\r\n$ flask run                                                          429ms \ue0b3 Sat 28 Apr 2018 01:32:48 PM -03\r\n * Serving Flask app \"app.py\"\r\n * Environment: production\r\n   WARNING: Do not use the development server in a production environment.\r\n   Use a production WSGI server instead.\r\n * Debug mode: off\r\nUsage: flask run [OPTIONS]\r\n\r\nError: Could not import \"app\".\r\n```\r\n\r\nThe `Error: Could not import \"app\".` could include `WARNING: You need to define the app e.g: export FLASK_APP=app.py`\r\n\r\n\r\n### Suggestion\r\n\r\nWe could check the existence of `FLASK_APP` envvar before running any of the commands in the Group Cli, if FLASK_APP does not exist the dispatch of commands never happens.\r\n\r\n\r\n### Environment\r\n\r\n* Python version: 3.6.0\r\n* Flask version: Flask==1.0\r\n* Werkzeug version: Werkzeug==0.14.1\r\n* Click: click==6.7 \r\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/385189075",
            "html_url": "https://github.com/pallets/flask/issues/2741#issuecomment-385189075",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2741",
            "id": 385189075,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTE4OTA3NQ==",
            "user": {
                "login": "rochacbruno",
                "id": 458654,
                "node_id": "MDQ6VXNlcjQ1ODY1NA==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/458654?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rochacbruno",
                "html_url": "https://github.com/rochacbruno",
                "followers_url": "https://api.github.com/users/rochacbruno/followers",
                "following_url": "https://api.github.com/users/rochacbruno/following{/other_user}",
                "gists_url": "https://api.github.com/users/rochacbruno/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rochacbruno/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rochacbruno/subscriptions",
                "organizations_url": "https://api.github.com/users/rochacbruno/orgs",
                "repos_url": "https://api.github.com/users/rochacbruno/repos",
                "events_url": "https://api.github.com/users/rochacbruno/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rochacbruno/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-04-28T16:38:40Z",
            "updated_at": "2018-04-28T16:38:40Z",
            "author_association": "CONTRIBUTOR",
            "body": "* I can implement that and send a PR, just want to know if the idea is acceptable"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/385296572",
            "html_url": "https://github.com/pallets/flask/issues/2741#issuecomment-385296572",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2741",
            "id": 385296572,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTI5NjU3Mg==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-04-30T01:01:06Z",
            "updated_at": "2018-04-30T01:01:06Z",
            "author_association": "MEMBER",
            "body": "Anything that improves help messages is great."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/462214626",
            "html_url": "https://github.com/pallets/flask/issues/2741#issuecomment-462214626",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2741",
            "id": 462214626,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjIxNDYyNg==",
            "user": {
                "login": "nerixim",
                "id": 26106502,
                "node_id": "MDQ6VXNlcjI2MTA2NTAy",
                "avatar_url": "https://avatars2.githubusercontent.com/u/26106502?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nerixim",
                "html_url": "https://github.com/nerixim",
                "followers_url": "https://api.github.com/users/nerixim/followers",
                "following_url": "https://api.github.com/users/nerixim/following{/other_user}",
                "gists_url": "https://api.github.com/users/nerixim/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nerixim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nerixim/subscriptions",
                "organizations_url": "https://api.github.com/users/nerixim/orgs",
                "repos_url": "https://api.github.com/users/nerixim/repos",
                "events_url": "https://api.github.com/users/nerixim/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nerixim/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-02-11T04:03:57Z",
            "updated_at": "2019-02-11T04:03:57Z",
            "author_association": "NONE",
            "body": "Looks better in flask 1.0.2, so maybe we can close this?\r\n\r\n- with a `help` option\r\n\r\n```\r\n~/flask flask --help\r\nTraceback (most recent call last):\r\n  File \"/Users/username/.local/share/virtualenvs/flask-C1e3YqV7/lib/python3.7/site-packages/flask/cli.py\", line 529, in list_commands\r\n    rv.update(info.load_app().cli.list_commands(ctx))\r\n  File \"/Users/username/.local/share/virtualenvs/flask-C1e3YqV7/lib/python3.7/site-packages/flask/cli.py\", line 384, in load_app\r\n    'Could not locate a Flask application. You did not provide '\r\nflask.cli.NoAppException: Could not locate a Flask application. You did not provide the \"FLASK_APP\" environment variable, and a \"wsgi.py\" or \"app.py\" module was not found in the current directory.\r\nUsage: flask [OPTIONS] COMMAND [ARGS]...\r\n\r\n  A general utility script for Flask applications.\r\n\r\n  Provides commands from Flask, extensions, and the application. Loads the\r\n  application defined in the FLASK_APP environment variable, or from a\r\n  wsgi.py file. Setting the FLASK_ENV environment variable to 'development'\r\n  will enable debug mode.\r\n\r\n    $ export FLASK_APP=hello.py\r\n    $ export FLASK_ENV=development\r\n    $ flask run\r\n\r\nOptions:\r\n  --version  Show the flask version\r\n  --help     Show this message and exit.\r\n\r\nCommands:\r\n  routes  Show the routes for the app.\r\n  run     Runs a development server.\r\n  shell   Runs a shell in the app context.\r\n```\r\n\r\n- without any options:\r\n\r\n```\r\n ~/flask flask run   \r\n * Environment: production\r\n   WARNING: Do not use the development server in a production environment.\r\n   Use a production WSGI server instead.\r\n * Debug mode: off\r\nUsage: flask run [OPTIONS]\r\n\r\nError: Could not locate a Flask application. You did not provide the \"FLASK_APP\" environment variable, and a \"wsgi.py\" or \"app.py\" module was not found in the current directory.\r\n```"
        }
    ]
}