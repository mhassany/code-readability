{
    "url": "https://api.github.com/repos/pallets/flask/issues/2405",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2405/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2405/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2405/events",
    "html_url": "https://github.com/pallets/flask/issues/2405",
    "id": 240802621,
    "node_id": "MDU6SXNzdWUyNDA4MDI2MjE=",
    "number": 2405,
    "title": "Custom JSON encoder doesn't work for dictionary keys",
    "user": {
        "login": "mtourne",
        "id": 214840,
        "node_id": "MDQ6VXNlcjIxNDg0MA==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/214840?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mtourne",
        "html_url": "https://github.com/mtourne",
        "followers_url": "https://api.github.com/users/mtourne/followers",
        "following_url": "https://api.github.com/users/mtourne/following{/other_user}",
        "gists_url": "https://api.github.com/users/mtourne/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mtourne/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mtourne/subscriptions",
        "organizations_url": "https://api.github.com/users/mtourne/orgs",
        "repos_url": "https://api.github.com/users/mtourne/repos",
        "events_url": "https://api.github.com/users/mtourne/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mtourne/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-07-05T23:21:35Z",
    "updated_at": "2017-07-06T00:01:13Z",
    "closed_at": "2017-07-05T23:58:59Z",
    "author_association": "NONE",
    "body": "I have defined a custom json encoder that supports encoding a bson ObjectId() into a string (see below for encoder code).\r\n\r\nThis works great until I attempt to serialize a dictionary who's key is an ObjectId(). The custom encoder seems to only work for dictionary values.\r\n\r\nTo reproduce the bug, see the /test_json2 route in the example below :\r\n\r\n```python\r\nimport bson\r\n@app.route(\"/test_json\", methods=['GET'])\r\ndef test_json():\r\n    test = {\r\n        'a': bson.objectid.ObjectId(\"595d5f4c4588b817c4030277\")\r\n    }\r\n    return flask.jsonify(test=test)\r\n\r\n@app.route(\"/test_json2\", methods=['GET'])\r\ndef test_json2():\r\n    test = {\r\n        bson.objectid.ObjectId(\"595d5f4c4588b817c4030277\"): 'a'\r\n    }\r\n    return flask.jsonify(test=test)\r\n```\r\n\r\nCustom json encoder code : \r\n\r\n```python\r\nimport bson\r\nfrom flask.json import JSONEncoder\r\n\r\nclass CustomJSONEncoder(JSONEncoder):\r\n    '''custom json encoder that supports mongo's ObjectID()\r\nout of the box\r\n    '''\r\n    def default(self, obj):\r\n        if isinstance(obj, bson.objectid.ObjectId):\r\n            return str(obj)\r\n        return JSONEncoder.default(self, obj)\r\n\r\napp.json_encoder = CustomJSONEncoder\r\n```\r\n\r\nUsing \r\nWerkzeug==0.12.2\r\nFlask==0.12.2",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/313258412",
            "html_url": "https://github.com/pallets/flask/issues/2405#issuecomment-313258412",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2405",
            "id": 313258412,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzI1ODQxMg==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-07-05T23:58:58Z",
            "updated_at": "2017-07-06T00:01:13Z",
            "author_association": "MEMBER",
            "body": "A simple `JSONEncoder` subclass passed to Python's `json.dumps` also doesn't support this as written, so the issue is not with Flask. A search for \"python json encode dict key\" returns https://stackoverflow.com/q/28079221/400617."
        }
    ]
}