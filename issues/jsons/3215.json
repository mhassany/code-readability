{
    "url": "https://api.github.com/repos/pallets/flask/issues/3215",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/3215/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/3215/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/3215/events",
    "html_url": "https://github.com/pallets/flask/issues/3215",
    "id": 448299378,
    "node_id": "MDU6SXNzdWU0NDgyOTkzNzg=",
    "number": 3215,
    "title": "Identify the common API between Flask and Blueprint classes",
    "user": {
        "login": "davidism",
        "id": 1242887,
        "node_id": "MDQ6VXNlcjEyNDI4ODc=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidism",
        "html_url": "https://github.com/davidism",
        "followers_url": "https://api.github.com/users/davidism/followers",
        "following_url": "https://api.github.com/users/davidism/following{/other_user}",
        "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
        "organizations_url": "https://api.github.com/users/davidism/orgs",
        "repos_url": "https://api.github.com/users/davidism/repos",
        "events_url": "https://api.github.com/users/davidism/events{/privacy}",
        "received_events_url": "https://api.github.com/users/davidism/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-05-24T18:25:04Z",
    "updated_at": "2019-08-28T13:21:15Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "Blueprints are supposed to provide a very similar API to the Flask object itself, the difference being that Blueprints defer registration until later. Currently, blueprints can only be registered on apps, they're not nestable, and apps can't be registered with other apps, but this is something that #593 and #1548 want to change.\r\n\r\n`Blueprint` and `Flask` do derive from `helpers._PackageBoundObject`, but this is mostly concerned with managing static files, templates, and other resource files. I think identifying the common API between the two and extracting it to a common base class may be a good step towards understanding how we can support app and blueprint nesting. Hopefully, it may at least make the code cleaner and easier to maintain.",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/503673164",
            "html_url": "https://github.com/pallets/flask/issues/3215#issuecomment-503673164",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3215",
            "id": 503673164,
            "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzY3MzE2NA==",
            "user": {
                "login": "sridk",
                "id": 48504745,
                "node_id": "MDQ6VXNlcjQ4NTA0NzQ1",
                "avatar_url": "https://avatars0.githubusercontent.com/u/48504745?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/sridk",
                "html_url": "https://github.com/sridk",
                "followers_url": "https://api.github.com/users/sridk/followers",
                "following_url": "https://api.github.com/users/sridk/following{/other_user}",
                "gists_url": "https://api.github.com/users/sridk/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/sridk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sridk/subscriptions",
                "organizations_url": "https://api.github.com/users/sridk/orgs",
                "repos_url": "https://api.github.com/users/sridk/repos",
                "events_url": "https://api.github.com/users/sridk/events{/privacy}",
                "received_events_url": "https://api.github.com/users/sridk/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-06-19T18:17:43Z",
            "updated_at": "2019-07-01T18:57:37Z",
            "author_association": "NONE",
            "body": "Hey! Can I work on this?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/525729484",
            "html_url": "https://github.com/pallets/flask/issues/3215#issuecomment-525729484",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3215",
            "id": 525729484,
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTcyOTQ4NA==",
            "user": {
                "login": "Maksych",
                "id": 33151219,
                "node_id": "MDQ6VXNlcjMzMTUxMjE5",
                "avatar_url": "https://avatars3.githubusercontent.com/u/33151219?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Maksych",
                "html_url": "https://github.com/Maksych",
                "followers_url": "https://api.github.com/users/Maksych/followers",
                "following_url": "https://api.github.com/users/Maksych/following{/other_user}",
                "gists_url": "https://api.github.com/users/Maksych/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Maksych/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Maksych/subscriptions",
                "organizations_url": "https://api.github.com/users/Maksych/orgs",
                "repos_url": "https://api.github.com/users/Maksych/repos",
                "events_url": "https://api.github.com/users/Maksych/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Maksych/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-08-28T12:47:28Z",
            "updated_at": "2019-08-28T13:21:08Z",
            "author_association": "NONE",
            "body": "Hi, this way is correct?\r\n\r\n```python\r\nfrom flask import Flask, Blueprint\r\n\r\n\r\nclass NewBlueprint(Blueprint):\r\n    def register_blueprint(self, blueprint, **options):\r\n        def deferred(state):\r\n            blueprint.name = f'{state.blueprint.name}.{blueprint.name}'\r\n            options['url_prefix'] = f'{state.url_prefix or \"\"}{options.get(\"url_prefix\", blueprint.url_prefix) or \"\"}'\r\n            state.app.register_blueprint(blueprint, **options)\r\n        self.record(deferred)\r\n        \r\n    def register(self, app, options, first_registration=False):\r\n        self.record(self._prepare_before_request_funcs)\r\n        self.record(self._prepare_after_request_funcs)\r\n        super().register(app, options, first_registration=first_registration)\r\n\r\n    def _prepare_before_request_funcs(self, state):\r\n        self._prepare_request_funcs(state, state.app.before_request_funcs)\r\n\r\n    def _prepare_after_request_funcs(self, state):\r\n        self._prepare_request_funcs(state, state.app.after_request_funcs)\r\n\r\n    def _prepare_request_funcs(self, state, funcs):\r\n        if '.' not in state.blueprint.name:\r\n            for name in funcs:\r\n                if name is not None and name.startswith(state.blueprint.name) and '.' in name:\r\n                    parent_name = '.'.join(name.split('.')[:-1])\r\n                    funcs[name] = funcs.get(parent_name, []) + funcs.get(name, [])\r\n            print(funcs)\r\n\r\n\r\napp = Flask(__name__)\r\n\r\n\r\n@app.before_request\r\ndef app_before_request():\r\n    print(app_before_request.__name__)\r\n\r\n\r\napi = NewBlueprint('api', __name__, url_prefix='/api')\r\n\r\n\r\n@api.before_request\r\ndef api_before_request():\r\n    print(api_before_request.__name__)\r\n\r\n\r\nv1 = NewBlueprint('v1', __name__, url_prefix='/v1')\r\n\r\n\r\n@v1.before_request\r\ndef v1_before_request():\r\n    print(v1_before_request.__name__)\r\n\r\n\r\naccount = NewBlueprint('account', __name__, url_prefix='/account')\r\n\r\n\r\n@account.before_request\r\ndef account_before_request():\r\n    print(account_before_request.__name__)\r\n\r\n\r\n@account.after_request\r\ndef account_after_request(resp):\r\n    print(account_after_request.__name__)\r\n    return resp\r\n\r\n\r\n@account.route('/')\r\ndef account_index():\r\n    return account_index.__name__\r\n\r\n\r\nproject = NewBlueprint('project', __name__, url_prefix='/project')\r\n\r\n\r\n@project.before_request\r\ndef project_before_request():\r\n    print(project_before_request.__name__)\r\n\r\n\r\n@project.route('/')\r\ndef project_index():\r\n    return project_index.__name__\r\n\r\n\r\nv1.register_blueprint(account)\r\nv1.register_blueprint(project)\r\napi.register_blueprint(v1)\r\napp.register_blueprint(api)\r\napp.run()\r\n\r\n```\r\n\r\n```bash\r\n{None: [<function app_before_request at 0x00AEE738>], 'api': [<function api_before_request at 0x038ACDB0>], 'api.v1': [<function api_before_request at 0x038ACDB0>, <function v1_before_request at 0x038ACE88>], 'api.v1.account': [<function api_before_request at 0x038ACDB0>, <function v1_before_request at 0x038ACE88>, <function account_before_request at 0x038ACF60>], 'api.v1.project': [<function api_before_request at 0x038ACDB0>, <function v1_before_request at 0x038ACE88>, <function project_before_request at 0x038B61E0>]}\r\n{'api.v1.account': [<function account_after_request at 0x038ACED0>]}\r\n```"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/525734471",
            "html_url": "https://github.com/pallets/flask/issues/3215#issuecomment-525734471",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3215",
            "id": 525734471,
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTczNDQ3MQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-08-28T13:01:10Z",
            "updated_at": "2019-08-28T13:02:17Z",
            "author_association": "MEMBER",
            "body": "@Maksych kind of, maybe? I'm having a hard time telling what the code is doing. Stuff like concatenating `state.url_prefix` with `url_prefix` definitely isn't right though. And the goal of this issue is to create a common base for `Flask` and `Blueprint`, not a new `Blueprint` subclass.\r\n\r\nIt looks like you're trying to solve nestable blueprints here, which is not what this issue is about."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/525736469",
            "html_url": "https://github.com/pallets/flask/issues/3215#issuecomment-525736469",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3215",
            "id": 525736469,
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTczNjQ2OQ==",
            "user": {
                "login": "Maksych",
                "id": 33151219,
                "node_id": "MDQ6VXNlcjMzMTUxMjE5",
                "avatar_url": "https://avatars3.githubusercontent.com/u/33151219?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Maksych",
                "html_url": "https://github.com/Maksych",
                "followers_url": "https://api.github.com/users/Maksych/followers",
                "following_url": "https://api.github.com/users/Maksych/following{/other_user}",
                "gists_url": "https://api.github.com/users/Maksych/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Maksych/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Maksych/subscriptions",
                "organizations_url": "https://api.github.com/users/Maksych/orgs",
                "repos_url": "https://api.github.com/users/Maksych/repos",
                "events_url": "https://api.github.com/users/Maksych/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Maksych/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-08-28T13:06:24Z",
            "updated_at": "2019-08-28T13:21:15Z",
            "author_association": "NONE",
            "body": "@davidism \r\nThanks for clarification."
        }
    ]
}