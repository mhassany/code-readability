{
    "url": "https://api.github.com/repos/pallets/flask/issues/2634",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2634/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2634/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2634/events",
    "html_url": "https://github.com/pallets/flask/issues/2634",
    "id": 298239857,
    "node_id": "MDU6SXNzdWUyOTgyMzk4NTc=",
    "number": 2634,
    "title": "url_for fails to use route parameters for non-POST routes during POST requests",
    "user": {
        "login": "antialiasis",
        "id": 1326447,
        "node_id": "MDQ6VXNlcjEzMjY0NDc=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/1326447?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/antialiasis",
        "html_url": "https://github.com/antialiasis",
        "followers_url": "https://api.github.com/users/antialiasis/followers",
        "following_url": "https://api.github.com/users/antialiasis/following{/other_user}",
        "gists_url": "https://api.github.com/users/antialiasis/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/antialiasis/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/antialiasis/subscriptions",
        "organizations_url": "https://api.github.com/users/antialiasis/orgs",
        "repos_url": "https://api.github.com/users/antialiasis/repos",
        "events_url": "https://api.github.com/users/antialiasis/events{/privacy}",
        "received_events_url": "https://api.github.com/users/antialiasis/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-02-19T11:18:25Z",
    "updated_at": "2018-02-23T22:57:48Z",
    "closed_at": "2018-02-23T22:57:48Z",
    "author_association": "NONE",
    "body": "This is a bit of a weird one cropping up under very particular circumstances, but I spent a while last week puzzling over the issue. Probably best explained through the example.\r\n\r\n---\r\n\r\n### Expected Behavior\r\n\r\nEntering \"Todd\" into the form field in this simple example app and submitting the form takes the user to /hello/Todd, just like clicking the \"Click here if your name is Todd\" link does.\r\n\r\n```python\r\nfrom flask import Flask, redirect, request, url_for\r\napp = Flask(__name__)\r\n\r\n@app.route(\"/\")\r\ndef form():\r\n    return \"\"\"\r\n        <p><a href=\"{}\">Click here if your name is Todd</a><p>\r\n        <form action=\"{}\" method=\"post\">\r\n            <input type=\"text\" name=\"name\">\r\n            <button type=\"submit\">This is my name!</button>\r\n        </form>\r\n    \"\"\".format(\r\n        url_for(\"hello\", name=\"Todd\"),\r\n        url_for(\"hello\")\r\n    )\r\n\r\n@app.route(\"/hello\", methods=[\"GET\", \"POST\"])\r\n@app.route(\"/hello/<name>\")\r\ndef hello(name=None):\r\n    if request.method == \"POST\":\r\n        return redirect(url_for(\"hello\", name=request.form.get(\"name\")))\r\n    if name:\r\n        return \"Hello {}!\".format(name)\r\n    else:\r\n        return \"Hello World!\"\r\n```\r\n\r\n### Actual Behavior\r\n\r\nSubmitting the form instead takes you to /hello?name=Todd.\r\n\r\nThrough my own testing I've concluded that `url_for(\"hello\", name=\"Todd\")` will return `/hello?name=Todd` if\r\n- we are currently processing a POST request, _and_\r\n- the target endpoint has a parameter-less route with the POST method allowed (`/hello`), _but_ the route we actually want (`/hello/<name>`) only allows GET requests.\r\n\r\nThis seems obviously bizarre and counterintuitive.\r\n\r\n### Environment\r\n\r\n* Python version: 3.6.4\r\n* Flask version: 0.12.2\r\n* Werkzeug version: 0.13\r\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/366674432",
            "html_url": "https://github.com/pallets/flask/issues/2634#issuecomment-366674432",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2634",
            "id": 366674432,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjY3NDQzMg==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-02-19T12:13:24Z",
            "updated_at": "2018-02-19T12:13:24Z",
            "author_association": "MEMBER",
            "body": "Try passing `_method='GET'` to `url_for()`"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/366676924",
            "html_url": "https://github.com/pallets/flask/issues/2634#issuecomment-366676924",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2634",
            "id": 366676924,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjY3NjkyNA==",
            "user": {
                "login": "antialiasis",
                "id": 1326447,
                "node_id": "MDQ6VXNlcjEzMjY0NDc=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/1326447?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/antialiasis",
                "html_url": "https://github.com/antialiasis",
                "followers_url": "https://api.github.com/users/antialiasis/followers",
                "following_url": "https://api.github.com/users/antialiasis/following{/other_user}",
                "gists_url": "https://api.github.com/users/antialiasis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/antialiasis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/antialiasis/subscriptions",
                "organizations_url": "https://api.github.com/users/antialiasis/orgs",
                "repos_url": "https://api.github.com/users/antialiasis/repos",
                "events_url": "https://api.github.com/users/antialiasis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/antialiasis/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-02-19T12:20:32Z",
            "updated_at": "2018-02-19T12:20:32Z",
            "author_association": "NONE",
            "body": "That does cause it to return the correct URL; however, I still don't think the displayed behaviour here makes any sense. The fact we're _currently_ processing a POST request does not in any way indicate that we should default to assuming we're going to make a POST request to any URL we happen to generate within the view function (quite the opposite, I'd think, since _most_ of the time in your average web app POST requests involve returning a redirect, which will be fetched with a GET request by the browser)."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/368162693",
            "html_url": "https://github.com/pallets/flask/issues/2634#issuecomment-368162693",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2634",
            "id": 368162693,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODE2MjY5Mw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-02-23T22:57:48Z",
            "updated_at": "2018-02-23T22:57:48Z",
            "author_association": "MEMBER",
            "body": "Duplicate of #2469."
        }
    ]
}