{
    "url": "https://api.github.com/repos/pallets/flask/issues/3087",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/3087/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/3087/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/3087/events",
    "html_url": "https://github.com/pallets/flask/issues/3087",
    "id": 404798812,
    "node_id": "MDU6SXNzdWU0MDQ3OTg4MTI=",
    "number": 3087,
    "title": "banner statements not directed to log when app starts",
    "user": {
        "login": "bandtank",
        "id": 1170415,
        "node_id": "MDQ6VXNlcjExNzA0MTU=",
        "avatar_url": "https://avatars2.githubusercontent.com/u/1170415?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bandtank",
        "html_url": "https://github.com/bandtank",
        "followers_url": "https://api.github.com/users/bandtank/followers",
        "following_url": "https://api.github.com/users/bandtank/following{/other_user}",
        "gists_url": "https://api.github.com/users/bandtank/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bandtank/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bandtank/subscriptions",
        "organizations_url": "https://api.github.com/users/bandtank/orgs",
        "repos_url": "https://api.github.com/users/bandtank/repos",
        "events_url": "https://api.github.com/users/bandtank/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bandtank/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-01-30T14:34:03Z",
    "updated_at": "2019-01-30T15:24:00Z",
    "closed_at": "2019-01-30T15:24:00Z",
    "author_association": "NONE",
    "body": "The initial banner messages emitted from flask to the console are not routed to the log handler as expected. The only way to work around this is to change all log statements to go to `stderr` and then redirect `stdout` to `/dev/null`. Otherwise, the statements appear in the console with no obvious way to enable suppression or reroute them to a log handler.\r\n\r\nI suspect this is intentional, but I think the statements should be able to be suppressed or rerouted in some manner. Something as simple as a flag to show or hide the banner would suffice in `flask/app.py`:\r\n```\r\n938         if self.show_banner:\r\n939             cli.show_server_banner(self.env, self.debug, self.name, False)\r\n```\r\n\r\nConsole excerpt showing the statements not redirecting to the log handler:\r\n```\r\n[2019-01-30 07:20:02.254] [DBUG] [api.py:35              ] Starting API\r\n * Serving Flask app \"api\" (lazy loading)\r\n * Environment: production\r\n   WARNING: Do not use the development server in a production environment.\r\n   Use a production WSGI server instead.\r\n * Debug mode: off\r\n[2019-01-30 07:20:02.264] [DBUG] [fps.py:23              ] FPS[0] main loop\r\n```\r\nInstantiation is from a class that is called as part of a larger application, which embeds the API:\r\n```\r\n  def __init__():\r\n    self.app = flask.Flask(__name__)\r\n    self.app.config.from_object(\"config\")\r\n    self.bp  = flask.Blueprint(\"fpsApi\", __name__)\r\n    self.api = flask_restful.Api(self.bp)\r\n    self.api.add_resource(Hello, \"/Hello\")\r\n    self.app.register_blueprint(self.bp, url_prefix = \"/api\")\r\n    \r\n  def run(self):\r\n    logging.debug(f\"Starting API\")\r\n    self.app.run(\r\n      debug = self.dbgMode,\r\n      use_reloader = self.useReloader,\r\n      port = self.cfg[\"apiPort\"],\r\n      host = self.hostIp\r\n    )\r\n```\r\n\r\nVersion information:\r\n```\r\n$ python --version\r\nPython 3.7.2\r\n\r\n$ pip freeze\r\naniso8601==4.1.0\r\nClick==7.0\r\nFlask==1.0.2\r\nFlask-RESTful==0.3.7\r\ngnureadline==6.3.8\r\nitsdangerous==1.1.0\r\nJinja2==2.10\r\nMarkupSafe==1.1.0\r\nmysqlclient==1.4.1\r\npbr==5.1.1\r\npython-dotenv==0.10.1\r\npytz==2018.9\r\nschema==0.6.8\r\nsix==1.12.0\r\nstevedore==1.30.0\r\nvirtualenv==16.2.0\r\nvirtualenv-clone==0.5.1\r\nvirtualenvwrapper==4.8.2\r\nWerkzeug==0.14.1\r\n```",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/458970555",
            "html_url": "https://github.com/pallets/flask/issues/3087#issuecomment-458970555",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3087",
            "id": 458970555,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODk3MDU1NQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-01-30T14:48:31Z",
            "updated_at": "2019-01-30T14:54:24Z",
            "author_association": "MEMBER",
            "body": "They're not log messages, so that part's intentional. It's *also* intentional that they can't be silenced, as they contain important information about the development server.\r\n\r\nThe development server is not meant to be run in production, even embedded in another application. Use a production WSGI server, such as Gunicorn; it can still be called in Python code to do what you want."
        }
    ]
}