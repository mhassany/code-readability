{
    "url": "https://api.github.com/repos/pallets/flask/issues/3151",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/3151/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/3151/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/3151/events",
    "html_url": "https://github.com/pallets/flask/issues/3151",
    "id": 432383693,
    "node_id": "MDU6SXNzdWU0MzIzODM2OTM=",
    "number": 3151,
    "title": "test_instance_config.py fails",
    "user": {
        "login": "vedantroy",
        "id": 8407819,
        "node_id": "MDQ6VXNlcjg0MDc4MTk=",
        "avatar_url": "https://avatars2.githubusercontent.com/u/8407819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vedantroy",
        "html_url": "https://github.com/vedantroy",
        "followers_url": "https://api.github.com/users/vedantroy/followers",
        "following_url": "https://api.github.com/users/vedantroy/following{/other_user}",
        "gists_url": "https://api.github.com/users/vedantroy/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/vedantroy/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vedantroy/subscriptions",
        "organizations_url": "https://api.github.com/users/vedantroy/orgs",
        "repos_url": "https://api.github.com/users/vedantroy/repos",
        "events_url": "https://api.github.com/users/vedantroy/events{/privacy}",
        "received_events_url": "https://api.github.com/users/vedantroy/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2019-04-12T04:36:45Z",
    "updated_at": "2019-05-18T11:49:15Z",
    "closed_at": "2019-05-18T11:49:15Z",
    "author_association": "NONE",
    "body": "### Expected Behavior\r\n\r\nThe following set of commands should result in all tests being passed or skipped (no failures).\r\n\r\n```\r\ngit clone https://github.com/pallets/flask\r\ncd flask\r\npython3 -m venv env\r\n. env/bin/activate\r\npip install -e \".[dev]\"\r\npip install pytest\r\n```\r\n\r\n### Actual Behavior\r\n\r\nI get the following failures:\r\n\r\n```\r\n=================================== FAILURES ===================================\r\n____________________________ test_main_module_paths ____________________________\r\n\r\nmodules_tmpdir = local('/tmp/pytest-of-vedantroy/pytest-5/test_main_module_paths0/modules_tmpdir')\r\npurge_module = <function purge_module.<locals>.inner at 0x7fdb8852a268>\r\n\r\n    def test_main_module_paths(modules_tmpdir, purge_module):\r\n        app = modules_tmpdir.join('main_app.py')\r\n        app.write('import flask\\n\\napp = flask.Flask(\"__main__\")')\r\n        purge_module('main_app')\r\n    \r\n>       from main_app import app\r\nE       ModuleNotFoundError: No module named 'main_app'\r\n\r\ntests/test_instance_config.py:32: ModuleNotFoundError\r\n________________________ test_uninstalled_package_paths ________________________\r\n\r\nmodules_tmpdir = local('/tmp/pytest-of-vedantroy/pytest-5/test_uninstalled_package_paths0/modules_tmpdir')\r\npurge_module = <function purge_module.<locals>.inner at 0x7fdb88548f28>\r\n\r\n    def test_uninstalled_package_paths(modules_tmpdir, purge_module):\r\n        app = modules_tmpdir.mkdir('config_package_app')\r\n        init = app.join('__init__.py')\r\n        init.write(\r\n            'import os\\n'\r\n            'import flask\\n'\r\n            'here = os.path.abspath(os.path.dirname(__file__))\\n'\r\n            'app = flask.Flask(__name__)\\n'\r\n        )\r\n        purge_module('config_package_app')\r\n    \r\n>       from config_package_app import app\r\nE       ModuleNotFoundError: No module named 'config_package_app'\r\n\r\ntests/test_instance_config.py:61: ModuleNotFoundError\r\n______________________ test_installed_module_paths[True] _______________________\r\n\r\nmodules_tmpdir = local('/tmp/pytest-of-vedantroy/pytest-5/test_installed_module_paths_Tr0/modules_tmpdir')\r\nmodules_tmpdir_prefix = local('/tmp/pytest-of-vedantroy/pytest-5/test_installed_module_paths_Tr0/modules_tmpdir')\r\npurge_module = <function purge_module.<locals>.inner at 0x7fdb8852a268>\r\nsite_packages = local('/tmp/pytest-of-vedantroy/pytest-5/test_installed_module_paths_Tr0/modules_tmpdir/lib/python3.6/site-packages')\r\nlimit_loader = None\r\n\r\n    def test_installed_module_paths(modules_tmpdir, modules_tmpdir_prefix,\r\n                                    purge_module, site_packages, limit_loader):\r\n        site_packages.join('site_app.py').write(\r\n            'import flask\\n'\r\n            'app = flask.Flask(__name__)\\n'\r\n        )\r\n        purge_module('site_app')\r\n    \r\n>       from site_app import app\r\nE       ModuleNotFoundError: No module named 'site_app'\r\n\r\ntests/test_instance_config.py:73: ModuleNotFoundError\r\n______________________ test_installed_module_paths[False] ______________________\r\n\r\nmodules_tmpdir = local('/tmp/pytest-of-vedantroy/pytest-5/test_installed_module_paths_Fa0/modules_tmpdir')\r\nmodules_tmpdir_prefix = local('/tmp/pytest-of-vedantroy/pytest-5/test_installed_module_paths_Fa0/modules_tmpdir')\r\npurge_module = <function purge_module.<locals>.inner at 0x7fdb884dd488>\r\nsite_packages = local('/tmp/pytest-of-vedantroy/pytest-5/test_installed_module_paths_Fa0/modules_tmpdir/lib/python3.6/site-packages')\r\nlimit_loader = None\r\n\r\n    def test_installed_module_paths(modules_tmpdir, modules_tmpdir_prefix,\r\n                                    purge_module, site_packages, limit_loader):\r\n        site_packages.join('site_app.py').write(\r\n            'import flask\\n'\r\n            'app = flask.Flask(__name__)\\n'\r\n        )\r\n        purge_module('site_app')\r\n    \r\n>       from site_app import app\r\nE       ModuleNotFoundError: No module named 'site_app'\r\n\r\ntests/test_instance_config.py:73: ModuleNotFoundError\r\n______________________ test_installed_package_paths[True] ______________________\r\n\r\nlimit_loader = None\r\nmodules_tmpdir = local('/tmp/pytest-of-vedantroy/pytest-5/test_installed_package_paths_T0/modules_tmpdir')\r\nmodules_tmpdir_prefix = local('/tmp/pytest-of-vedantroy/pytest-5/test_installed_package_paths_T0/modules_tmpdir')\r\npurge_module = <function purge_module.<locals>.inner at 0x7fdb8850b950>\r\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7fdb884f5a90>\r\n\r\n    def test_installed_package_paths(limit_loader, modules_tmpdir,\r\n                                     modules_tmpdir_prefix, purge_module,\r\n                                     monkeypatch):\r\n        installed_path = modules_tmpdir.mkdir('path')\r\n        monkeypatch.syspath_prepend(installed_path)\r\n    \r\n        app = installed_path.mkdir('installed_package')\r\n        init = app.join('__init__.py')\r\n        init.write('import flask\\napp = flask.Flask(__name__)')\r\n        purge_module('installed_package')\r\n    \r\n>       from installed_package import app\r\nE       ModuleNotFoundError: No module named 'installed_package'\r\n\r\ntests/test_instance_config.py:89: ModuleNotFoundError\r\n_____________________ test_installed_package_paths[False] ______________________\r\n\r\nlimit_loader = None\r\nmodules_tmpdir = local('/tmp/pytest-of-vedantroy/pytest-5/test_installed_package_paths_F0/modules_tmpdir')\r\nmodules_tmpdir_prefix = local('/tmp/pytest-of-vedantroy/pytest-5/test_installed_package_paths_F0/modules_tmpdir')\r\npurge_module = <function purge_module.<locals>.inner at 0x7fdb884dd488>\r\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7fdb8851b390>\r\n\r\n    def test_installed_package_paths(limit_loader, modules_tmpdir,\r\n                                     modules_tmpdir_prefix, purge_module,\r\n                                     monkeypatch):\r\n        installed_path = modules_tmpdir.mkdir('path')\r\n        monkeypatch.syspath_prepend(installed_path)\r\n    \r\n        app = installed_path.mkdir('installed_package')\r\n        init = app.join('__init__.py')\r\n        init.write('import flask\\napp = flask.Flask(__name__)')\r\n        purge_module('installed_package')\r\n    \r\n>       from installed_package import app\r\nE       ModuleNotFoundError: No module named 'installed_package'\r\n\r\ntests/test_instance_config.py:89: ModuleNotFoundError\r\n_______________________ test_prefix_package_paths[True] ________________________\r\n\r\nlimit_loader = None\r\nmodules_tmpdir = local('/tmp/pytest-of-vedantroy/pytest-5/test_prefix_package_paths_True0/modules_tmpdir')\r\nmodules_tmpdir_prefix = local('/tmp/pytest-of-vedantroy/pytest-5/test_prefix_package_paths_True0/modules_tmpdir')\r\npurge_module = <function purge_module.<locals>.inner at 0x7fdb8850bc80>\r\nsite_packages = local('/tmp/pytest-of-vedantroy/pytest-5/test_prefix_package_paths_True0/modules_tmpdir/lib/python3.6/site-packages')\r\n\r\n    def test_prefix_package_paths(limit_loader, modules_tmpdir,\r\n                                  modules_tmpdir_prefix, purge_module,\r\n                                  site_packages):\r\n        app = site_packages.mkdir('site_package')\r\n        init = app.join('__init__.py')\r\n        init.write('import flask\\napp = flask.Flask(__name__)')\r\n        purge_module('site_package')\r\n    \r\n>       import site_package\r\nE       ModuleNotFoundError: No module named 'site_package'\r\n\r\ntests/test_instance_config.py:102: ModuleNotFoundError\r\n_______________________ test_prefix_package_paths[False] _______________________\r\n\r\nlimit_loader = None\r\nmodules_tmpdir = local('/tmp/pytest-of-vedantroy/pytest-5/test_prefix_package_paths_Fals0/modules_tmpdir')\r\nmodules_tmpdir_prefix = local('/tmp/pytest-of-vedantroy/pytest-5/test_prefix_package_paths_Fals0/modules_tmpdir')\r\npurge_module = <function purge_module.<locals>.inner at 0x7fdb8850bea0>\r\nsite_packages = local('/tmp/pytest-of-vedantroy/pytest-5/test_prefix_package_paths_Fals0/modules_tmpdir/lib/python3.6/site-packages')\r\n\r\n    def test_prefix_package_paths(limit_loader, modules_tmpdir,\r\n                                  modules_tmpdir_prefix, purge_module,\r\n                                  site_packages):\r\n        app = site_packages.mkdir('site_package')\r\n        init = app.join('__init__.py')\r\n        init.write('import flask\\napp = flask.Flask(__name__)')\r\n        purge_module('site_package')\r\n    \r\n>       import site_package\r\nE       ModuleNotFoundError: No module named 'site_package'\r\n\r\ntests/test_instance_config.py:102: ModuleNotFoundError\r\n============== 8 failed, 492 passed, 13 skipped in 12.53 seconds ===============\r\n```\r\n\r\n### Environment\r\n\r\n* Python version: 3.6.7\r\n* Flask version: 1.1.dev\r\n* Werkzeug version: 0.15.2\r\n\r\nUbuntu 18 LTS.\r\nHere's the result of `ls` in the `flask` directory:\r\n```\r\nartwork           docs      Flask.egg-info  README.rst  tests\r\nAUTHORS           env       LICENSE         scripts     tox.ini\r\nCHANGES.rst       examples  Makefile        setup.cfg\r\nCONTRIBUTING.rst  flask     MANIFEST.in     setup.py\r\n```\r\n\r\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/482576789",
            "html_url": "https://github.com/pallets/flask/issues/3151#issuecomment-482576789",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3151",
            "id": 482576789,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MjU3Njc4OQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-04-12T13:35:32Z",
            "updated_at": "2019-04-12T13:35:32Z",
            "author_association": "MEMBER",
            "body": "This appears to be an issue with the upgrade from pytest 4.3.1 to 4.4.0. Downgrade and the tests pass.\r\n\r\n@blueyed @nicoddemus I think the issue came from pytest-dev/pytest#4980 because the tests that are failing here use a fixture that uses `monkeypatch.syspath_prepend`, but I'm not clear what the change was or how to go about debugging or fixing it. Can you take a look?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/482582064",
            "html_url": "https://github.com/pallets/flask/issues/3151#issuecomment-482582064",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3151",
            "id": 482582064,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MjU4MjA2NA==",
            "user": {
                "login": "blueyed",
                "id": 9766,
                "node_id": "MDQ6VXNlcjk3NjY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/blueyed",
                "html_url": "https://github.com/blueyed",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-04-12T13:50:47Z",
            "updated_at": "2019-04-12T13:50:47Z",
            "author_association": "NONE",
            "body": "Does commenting https://github.com/pytest-dev/pytest/pull/4980/files#diff-1f034a0f101912ca729b09e39a3973bbR272 fix the tests then?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/482587107",
            "html_url": "https://github.com/pallets/flask/issues/3151#issuecomment-482587107",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3151",
            "id": 482587107,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MjU4NzEwNw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-04-12T14:05:17Z",
            "updated_at": "2019-04-12T14:05:17Z",
            "author_association": "MEMBER",
            "body": "Yes, commenting out that line allows the tests to pass again."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/482609578",
            "html_url": "https://github.com/pallets/flask/issues/3151#issuecomment-482609578",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3151",
            "id": 482609578,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MjYwOTU3OA==",
            "user": {
                "login": "blueyed",
                "id": 9766,
                "node_id": "MDQ6VXNlcjk3NjY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/blueyed",
                "html_url": "https://github.com/blueyed",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-04-12T15:06:55Z",
            "updated_at": "2019-04-12T15:06:55Z",
            "author_association": "NONE",
            "body": "Hmm.. inside of tox it passes at least, right?\r\n\r\nAnd with e.g. `p -k test_main_module_paths` it also passes sometimes for me?!\r\n(Python 3.7.3, pytest-4.4.1.dev15+gbc157417)\r\n\r\nWill look into it later.."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/482612509",
            "html_url": "https://github.com/pallets/flask/issues/3151#issuecomment-482612509",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3151",
            "id": 482612509,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MjYxMjUwOQ==",
            "user": {
                "login": "blueyed",
                "id": 9766,
                "node_id": "MDQ6VXNlcjk3NjY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/blueyed",
                "html_url": "https://github.com/blueyed",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-04-12T15:14:40Z",
            "updated_at": "2019-04-12T15:14:51Z",
            "author_association": "NONE",
            "body": "This fixes it (for `tests/test_instance_config.py::test_main_module_paths`, but not all):\r\n```diff\r\ndiff --git i/tests/test_instance_config.py w/tests/test_instance_config.py\r\nindex bc912c64..a7b66203 100644\r\n--- i/tests/test_instance_config.py\r\n+++ w/tests/test_instance_config.py\r\n@@ -26,6 +26,8 @@ def test_explicit_instance_paths(modules_tmpdir):\r\n \r\n def test_main_module_paths(modules_tmpdir, purge_module):\r\n     app = modules_tmpdir.join('main_app.py')\r\n+    from importlib import invalidate_caches\r\n+    invalidate_caches()\r\n     app.write('import flask\\n\\napp = flask.Flask(\"__main__\")')\r\n     purge_module('main_app')\r\n \r\n```\r\n\r\nE.g. here it is also needed, likely due to some other fixture:\r\n```diff\r\ndiff --git i/tests/test_instance_config.py w/tests/test_instance_config.py\r\nindex bc912c64..1f2be9ce 100644\r\n--- i/tests/test_instance_config.py\r\n+++ w/tests/test_instance_config.py\r\n@@ -94,6 +94,8 @@ def test_installed_package_paths(limit_loader, modules_tmpdir,\r\n def test_prefix_package_paths(limit_loader, modules_tmpdir,\r\n                               modules_tmpdir_prefix, purge_module,\r\n                               site_packages):\r\n+    from importlib import invalidate_caches\r\n+    invalidate_caches()\r\n     app = site_packages.mkdir('site_package')\r\n     init = app.join('__init__.py')\r\n     init.write('import flask\\napp = flask.Flask(__name__)')\r\n```"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/482616121",
            "html_url": "https://github.com/pallets/flask/issues/3151#issuecomment-482616121",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3151",
            "id": 482616121,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MjYxNjEyMQ==",
            "user": {
                "login": "blueyed",
                "id": 9766,
                "node_id": "MDQ6VXNlcjk3NjY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/blueyed",
                "html_url": "https://github.com/blueyed",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-04-12T15:24:24Z",
            "updated_at": "2019-04-12T15:24:24Z",
            "author_association": "NONE",
            "body": "`invalidate_caches` should be called in `syspath_prepend` also (only done with `testdir.syspathinster`).."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/482655409",
            "html_url": "https://github.com/pallets/flask/issues/3151#issuecomment-482655409",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3151",
            "id": 482655409,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MjY1NTQwOQ==",
            "user": {
                "login": "blueyed",
                "id": 9766,
                "node_id": "MDQ6VXNlcjk3NjY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/blueyed",
                "html_url": "https://github.com/blueyed",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-04-12T17:22:38Z",
            "updated_at": "2019-04-12T17:22:38Z",
            "author_association": "NONE",
            "body": "https://github.com/pytest-dev/pytest/pull/5098 fixes it."
        }
    ]
}