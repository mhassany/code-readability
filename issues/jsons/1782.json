{
    "url": "https://api.github.com/repos/pallets/flask/issues/1782",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1782/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1782/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1782/events",
    "html_url": "https://github.com/pallets/flask/issues/1782",
    "id": 148723605,
    "node_id": "MDU6SXNzdWUxNDg3MjM2MDU=",
    "number": 1782,
    "title": "send_file() function tries to get the file from filesystem even if file-like object is passed",
    "user": {
        "login": "margru",
        "id": 1311837,
        "node_id": "MDQ6VXNlcjEzMTE4Mzc=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/1311837?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/margru",
        "html_url": "https://github.com/margru",
        "followers_url": "https://api.github.com/users/margru/followers",
        "following_url": "https://api.github.com/users/margru/following{/other_user}",
        "gists_url": "https://api.github.com/users/margru/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/margru/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/margru/subscriptions",
        "organizations_url": "https://api.github.com/users/margru/orgs",
        "repos_url": "https://api.github.com/users/margru/repos",
        "events_url": "https://api.github.com/users/margru/events{/privacy}",
        "received_events_url": "https://api.github.com/users/margru/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2016-04-15T17:46:06Z",
    "updated_at": "2017-06-04T20:27:08Z",
    "closed_at": "2017-06-04T20:27:08Z",
    "author_association": "NONE",
    "body": "I use `send_file()` function for serving file-like objects from GridFS. However, if the file-like object obtained from the GridFS has assigned a file name, the `send_file()` function tries to get the file from the file system and I get a \"File not found\"-like error. It should serve the data from the file-like object directly and not to try to find the file on the file system (even when there is a file name assigned to the file-like object). Or am I missing something?\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/210659259",
            "html_url": "https://github.com/pallets/flask/issues/1782#issuecomment-210659259",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1782",
            "id": 210659259,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDY1OTI1OQ==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-04-15T21:46:13Z",
            "updated_at": "2016-04-15T21:46:13Z",
            "author_association": "MEMBER",
            "body": "The handle is used for reading the file content, but additional information is guessed off the filename if one is existent:\n- The mimetype is guessed. This would work even if the filepath is pointing to a nonexistent file.\n- The content length is inferred. This is actually fairly important, without content length header you basically get no percentage progress when downloading files.\n- X-Sendfile support\n\nWithout a full traceback it's hard to guess which one is causing the problem.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/211342549",
            "html_url": "https://github.com/pallets/flask/issues/1782#issuecomment-211342549",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1782",
            "id": 211342549,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTM0MjU0OQ==",
            "user": {
                "login": "margru",
                "id": 1311837,
                "node_id": "MDQ6VXNlcjEzMTE4Mzc=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/1311837?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/margru",
                "html_url": "https://github.com/margru",
                "followers_url": "https://api.github.com/users/margru/followers",
                "following_url": "https://api.github.com/users/margru/following{/other_user}",
                "gists_url": "https://api.github.com/users/margru/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/margru/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/margru/subscriptions",
                "organizations_url": "https://api.github.com/users/margru/orgs",
                "repos_url": "https://api.github.com/users/margru/repos",
                "events_url": "https://api.github.com/users/margru/events{/privacy}",
                "received_events_url": "https://api.github.com/users/margru/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-04-18T11:43:50Z",
            "updated_at": "2016-04-18T11:43:50Z",
            "author_association": "NONE",
            "body": "The traceback is as follows (I just shortened/replaced the real file paths):\n\n```\nu'/absolute/path/to/file.ext'\nTraceback (most recent call last):\n  File \"...\\lib\\site-packages\\flask\\app.py\", line 1475, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"...\\lib\\site-packages\\flask\\app.py\", line 1461, in dispatch_request\n    return self.view_functions[rule.endpoint](**req.view_args)\n  File \"...\\blueprints\\api_blueprint.py\", line 1124, in req_file\n    return send_file(file_obj, as_attachment=False, mimetype=file_obj.content_type)\n  File \"...\\lib\\site-packages\\flask\\helpers.py\", line 542, in send_file\n    os.path.getmtime(filename),\n  File \"...\\lib\\genericpath.py\", line 54, in getmtime\n    return os.stat(filename).st_mtime\nWindowsError: [Error 2] Cannot find file: u'/absolute/path/to/file.ext'\n```\n\nThe `file_obj` passed to the `send_file()` function on line 1124 is created as follows:\n\n```\nfile_obj = grid_fs_client.get(file_id)\n```\n\nIf the file is saved in the GridFS (and then loaded from the GridFS) with `.name` and `.filename` attributes set to `None` then there is no error. But if the file is saved/loaded with these attributes set to some string (e.g. `file.ext` in this case) then the described error occurs as in my case the file name is coming from the client and thus the file doesn't really exist on the server's file system. In addition, the absolute path is somehow created by the `send_file()` function.\n\nFor now, I did a workaround and I'm setting these attributes to `None` when saving files to GridFS and everything works OK but I'm loosing the file name (which was provided by the client).\n\nI think that when the file-like object is passed as an input parameter, no operations requiring the file to exist on the file system should be performed. In addition, it could be also dangerous as if the file with the file name existed on the server's file system, it wouldn't necessarily have to be the same file which the file-like object represents.\n\nI'm using Flask version: 0.10.1.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/211441966",
            "html_url": "https://github.com/pallets/flask/issues/1782#issuecomment-211441966",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1782",
            "id": 211441966,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTQ0MTk2Ng==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-04-18T15:52:01Z",
            "updated_at": "2016-04-18T15:52:14Z",
            "author_association": "MEMBER",
            "body": "I'd happily accept patches that make `send_file` more robust against `.name` and `.filename` properties that don't exist on the local FS, but since expecting files that are passed to `send_file` to exist on the path they are associated with is IMO a reasonable assumption, I'll mark this as enhancement.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/216939221",
            "html_url": "https://github.com/pallets/flask/issues/1782#issuecomment-216939221",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1782",
            "id": 216939221,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjkzOTIyMQ==",
            "user": {
                "login": "g3wanghc",
                "id": 7648872,
                "node_id": "MDQ6VXNlcjc2NDg4NzI=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7648872?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/g3wanghc",
                "html_url": "https://github.com/g3wanghc",
                "followers_url": "https://api.github.com/users/g3wanghc/followers",
                "following_url": "https://api.github.com/users/g3wanghc/following{/other_user}",
                "gists_url": "https://api.github.com/users/g3wanghc/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/g3wanghc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/g3wanghc/subscriptions",
                "organizations_url": "https://api.github.com/users/g3wanghc/orgs",
                "repos_url": "https://api.github.com/users/g3wanghc/repos",
                "events_url": "https://api.github.com/users/g3wanghc/events{/privacy}",
                "received_events_url": "https://api.github.com/users/g3wanghc/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-05-04T17:24:41Z",
            "updated_at": "2016-05-04T17:24:41Z",
            "author_association": "NONE",
            "body": "@untitaker was wondering if adding an optional flag is a good idea to indicated that a file-like object is being passed. \n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/216940764",
            "html_url": "https://github.com/pallets/flask/issues/1782#issuecomment-216940764",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1782",
            "id": 216940764,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjk0MDc2NA==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-05-04T17:30:09Z",
            "updated_at": "2016-05-04T17:30:09Z",
            "author_association": "MEMBER",
            "body": "I don't think that's a good idea, I'd rather silently swallow the errors that occur when the `.name` and `.filename` params are invalid.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/216944428",
            "html_url": "https://github.com/pallets/flask/issues/1782#issuecomment-216944428",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1782",
            "id": 216944428,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjk0NDQyOA==",
            "user": {
                "login": "margru",
                "id": 1311837,
                "node_id": "MDQ6VXNlcjEzMTE4Mzc=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/1311837?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/margru",
                "html_url": "https://github.com/margru",
                "followers_url": "https://api.github.com/users/margru/followers",
                "following_url": "https://api.github.com/users/margru/following{/other_user}",
                "gists_url": "https://api.github.com/users/margru/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/margru/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/margru/subscriptions",
                "organizations_url": "https://api.github.com/users/margru/orgs",
                "repos_url": "https://api.github.com/users/margru/repos",
                "events_url": "https://api.github.com/users/margru/events{/privacy}",
                "received_events_url": "https://api.github.com/users/margru/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-05-04T17:43:14Z",
            "updated_at": "2016-05-04T17:43:14Z",
            "author_association": "NONE",
            "body": "I agree with @untitaker as it doesn't make sense to pass another flag indicating file-like object if a file-like object is indeed passed into `send_file()` function. I think it would be better to silently ignore the errors if a file-like object is passed and the associated filename doesn't exist on the FS.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/216968655",
            "html_url": "https://github.com/pallets/flask/issues/1782#issuecomment-216968655",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1782",
            "id": 216968655,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjk2ODY1NQ==",
            "user": {
                "login": "g3wanghc",
                "id": 7648872,
                "node_id": "MDQ6VXNlcjc2NDg4NzI=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7648872?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/g3wanghc",
                "html_url": "https://github.com/g3wanghc",
                "followers_url": "https://api.github.com/users/g3wanghc/followers",
                "following_url": "https://api.github.com/users/g3wanghc/following{/other_user}",
                "gists_url": "https://api.github.com/users/g3wanghc/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/g3wanghc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/g3wanghc/subscriptions",
                "organizations_url": "https://api.github.com/users/g3wanghc/orgs",
                "repos_url": "https://api.github.com/users/g3wanghc/repos",
                "events_url": "https://api.github.com/users/g3wanghc/events{/privacy}",
                "received_events_url": "https://api.github.com/users/g3wanghc/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-05-04T19:05:14Z",
            "updated_at": "2016-05-04T19:05:14Z",
            "author_association": "NONE",
            "body": "On a side note, do you guys think `sys.getsizeof` is a fair estimate of the size of file-like objects?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/216969004",
            "html_url": "https://github.com/pallets/flask/issues/1782#issuecomment-216969004",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1782",
            "id": 216969004,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjk2OTAwNA==",
            "user": {
                "login": "RonnyPfannschmidt",
                "id": 156838,
                "node_id": "MDQ6VXNlcjE1NjgzOA==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/156838?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/RonnyPfannschmidt",
                "html_url": "https://github.com/RonnyPfannschmidt",
                "followers_url": "https://api.github.com/users/RonnyPfannschmidt/followers",
                "following_url": "https://api.github.com/users/RonnyPfannschmidt/following{/other_user}",
                "gists_url": "https://api.github.com/users/RonnyPfannschmidt/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/RonnyPfannschmidt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/RonnyPfannschmidt/subscriptions",
                "organizations_url": "https://api.github.com/users/RonnyPfannschmidt/orgs",
                "repos_url": "https://api.github.com/users/RonnyPfannschmidt/repos",
                "events_url": "https://api.github.com/users/RonnyPfannschmidt/events{/privacy}",
                "received_events_url": "https://api.github.com/users/RonnyPfannschmidt/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-05-04T19:06:41Z",
            "updated_at": "2016-05-04T19:06:41Z",
            "author_association": "CONTRIBUTOR",
            "body": "no - it would be pure accident\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/216969129",
            "html_url": "https://github.com/pallets/flask/issues/1782#issuecomment-216969129",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1782",
            "id": 216969129,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjk2OTEyOQ==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-05-04T19:07:07Z",
            "updated_at": "2016-05-04T19:07:07Z",
            "author_association": "MEMBER",
            "body": "No, that function is about memory, not about file sizes\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/216969713",
            "html_url": "https://github.com/pallets/flask/issues/1782#issuecomment-216969713",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1782",
            "id": 216969713,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjk2OTcxMw==",
            "user": {
                "login": "g3wanghc",
                "id": 7648872,
                "node_id": "MDQ6VXNlcjc2NDg4NzI=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7648872?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/g3wanghc",
                "html_url": "https://github.com/g3wanghc",
                "followers_url": "https://api.github.com/users/g3wanghc/followers",
                "following_url": "https://api.github.com/users/g3wanghc/following{/other_user}",
                "gists_url": "https://api.github.com/users/g3wanghc/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/g3wanghc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/g3wanghc/subscriptions",
                "organizations_url": "https://api.github.com/users/g3wanghc/orgs",
                "repos_url": "https://api.github.com/users/g3wanghc/repos",
                "events_url": "https://api.github.com/users/g3wanghc/events{/privacy}",
                "received_events_url": "https://api.github.com/users/g3wanghc/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-05-04T19:09:22Z",
            "updated_at": "2016-05-04T19:09:22Z",
            "author_association": "NONE",
            "body": "Alright. \ud83d\ude2d \n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/306064714",
            "html_url": "https://github.com/pallets/flask/issues/1782#issuecomment-306064714",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1782",
            "id": 306064714,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjA2NDcxNA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-04T20:27:08Z",
            "updated_at": "2017-06-04T20:27:08Z",
            "author_association": "MEMBER",
            "body": "Fixed in #1988."
        }
    ]
}