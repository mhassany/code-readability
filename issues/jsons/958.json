{
    "url": "https://api.github.com/repos/pallets/flask/issues/958",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/958/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/958/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/958/events",
    "html_url": "https://github.com/pallets/flask/pull/958",
    "id": 26089310,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTE3NTYxNzc=",
    "number": 958,
    "title": "Added helper method redirect_url_for",
    "user": {
        "login": "codeape2",
        "id": 97742,
        "node_id": "MDQ6VXNlcjk3NzQy",
        "avatar_url": "https://avatars0.githubusercontent.com/u/97742?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/codeape2",
        "html_url": "https://github.com/codeape2",
        "followers_url": "https://api.github.com/users/codeape2/followers",
        "following_url": "https://api.github.com/users/codeape2/following{/other_user}",
        "gists_url": "https://api.github.com/users/codeape2/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/codeape2/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/codeape2/subscriptions",
        "organizations_url": "https://api.github.com/users/codeape2/orgs",
        "repos_url": "https://api.github.com/users/codeape2/repos",
        "events_url": "https://api.github.com/users/codeape2/events{/privacy}",
        "received_events_url": "https://api.github.com/users/codeape2/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 15,
    "created_at": "2014-01-22T13:29:57Z",
    "updated_at": "2014-09-25T21:44:58Z",
    "closed_at": "2014-02-08T17:30:32Z",
    "author_association": "NONE",
    "pull_request": {
        "url": "https://api.github.com/repos/pallets/flask/pulls/958",
        "html_url": "https://github.com/pallets/flask/pull/958",
        "diff_url": "https://github.com/pallets/flask/pull/958.diff",
        "patch_url": "https://github.com/pallets/flask/pull/958.patch"
    },
    "body": "redirect_url_for(endpoint, *_values) == redirect(url_for(endpoint,\n*_values)\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/33030553",
            "html_url": "https://github.com/pallets/flask/pull/958#issuecomment-33030553",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/958",
            "id": 33030553,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDMwNTUz",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-01-22T15:02:20Z",
            "updated_at": "2014-01-22T15:02:20Z",
            "author_association": "MEMBER",
            "body": "I don't really like the function name (or the )... And adding a new function to save **one** character? Meh, let's not bloat Flask with stuff like that.\n\nYou can always create this function locally in your application anyway!\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/33046156",
            "html_url": "https://github.com/pallets/flask/pull/958#issuecomment-33046156",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/958",
            "id": 33046156,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDQ2MTU2",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-01-22T17:30:05Z",
            "updated_at": "2014-01-22T17:30:05Z",
            "author_association": "MEMBER",
            "body": "Yeah, neither do i think this will get included in Flask.\n\n> There should be one-- and preferably only one --obvious way to do it.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/33058787",
            "html_url": "https://github.com/pallets/flask/pull/958#issuecomment-33058787",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/958",
            "id": 33058787,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDU4Nzg3",
            "user": {
                "login": "codeape2",
                "id": 97742,
                "node_id": "MDQ6VXNlcjk3NzQy",
                "avatar_url": "https://avatars0.githubusercontent.com/u/97742?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/codeape2",
                "html_url": "https://github.com/codeape2",
                "followers_url": "https://api.github.com/users/codeape2/followers",
                "following_url": "https://api.github.com/users/codeape2/following{/other_user}",
                "gists_url": "https://api.github.com/users/codeape2/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/codeape2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/codeape2/subscriptions",
                "organizations_url": "https://api.github.com/users/codeape2/orgs",
                "repos_url": "https://api.github.com/users/codeape2/repos",
                "events_url": "https://api.github.com/users/codeape2/events{/privacy}",
                "received_events_url": "https://api.github.com/users/codeape2/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-01-22T19:36:14Z",
            "updated_at": "2014-01-22T19:36:14Z",
            "author_association": "NONE",
            "body": "> I don't really like the function name\n\nAgree.\n\n> You can always create this function locally in your application anyway\n\nSure. But at least for me, redirecting to an endpoint is what I do 9 out of 10 times. So I believe that there should be a built-in, easier way to do that.\n\nIMO it would be better if the signature of redirect was:\n\n```\nredirect(endpoint, **values)\n```\n\nRedirecting to an arbitrary location could be:\n\n```\nredirect(_location=\"http://...)\n```\n\nor similar.\n\nThis would obviously break backward compatibility.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/33059406",
            "html_url": "https://github.com/pallets/flask/pull/958#issuecomment-33059406",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/958",
            "id": 33059406,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDU5NDA2",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-01-22T19:42:15Z",
            "updated_at": "2014-01-22T19:42:15Z",
            "author_association": "MEMBER",
            "body": "Your new suggestion would, as you said, break backward compatibility, for IMO no gain other than a changed color of the bikeshed.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/33062631",
            "html_url": "https://github.com/pallets/flask/pull/958#issuecomment-33062631",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/958",
            "id": 33062631,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDYyNjMx",
            "user": {
                "login": "codeape2",
                "id": 97742,
                "node_id": "MDQ6VXNlcjk3NzQy",
                "avatar_url": "https://avatars0.githubusercontent.com/u/97742?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/codeape2",
                "html_url": "https://github.com/codeape2",
                "followers_url": "https://api.github.com/users/codeape2/followers",
                "following_url": "https://api.github.com/users/codeape2/following{/other_user}",
                "gists_url": "https://api.github.com/users/codeape2/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/codeape2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/codeape2/subscriptions",
                "organizations_url": "https://api.github.com/users/codeape2/orgs",
                "repos_url": "https://api.github.com/users/codeape2/repos",
                "events_url": "https://api.github.com/users/codeape2/events{/privacy}",
                "received_events_url": "https://api.github.com/users/codeape2/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-01-22T20:13:48Z",
            "updated_at": "2014-01-22T20:13:48Z",
            "author_association": "NONE",
            "body": "I believe that if the most frequent use case for redirect is redirect(url_for()), then it should be the default.\n\nGrepping through some flask apps' code bases this seems to be the case (see below).\n\nTo avoid most backward compatibility issues, redirect() could be implemented similar to Django. Django's redirect function checks if the passed argument is a view name (equivalent to endpoint name in Flask) or a URL and does the right thing (see https://docs.djangoproject.com/en/1.6/topics/http/shortcuts/#redirect).\n\nExamples of redirect usage in a few Flask apps:\n\n`flask/examples`\n\n```\n$ find -name '*.py' | xargs grep -h \"redirect(\"\n        return redirect(url_for('public_timeline'))\n    return redirect(url_for('user_timeline', username=username))\n    return redirect(url_for('user_timeline', username=username))\n    return redirect(url_for('timeline'))\n        return redirect(url_for('timeline'))\n            return redirect(url_for('timeline'))\n        return redirect(url_for('timeline'))\n            return redirect(url_for('login'))\n    return redirect(url_for('public_timeline'))\n    return redirect(url_for('show_entries'))\n            return redirect(url_for('show_entries'))\n    return redirect(url_for('show_entries'))\n```\n\nApplication from \"The Flask mega-tutorial\"\n\n```\n$ find -name '*.py' | xargs grep -h \"redirect(\"\n        return redirect(url_for('index'))\n        return redirect(url_for('index'))\n        return redirect(url_for('login'))\n    return redirect(request.args.get('next') or url_for('index'))\n    return redirect(url_for('index'))\n        return redirect(url_for('index'))\n        return redirect(url_for('edit'))\n        return redirect(url_for('index'))\n        return redirect(url_for('user', nickname = nickname))\n        return redirect(url_for('user', nickname = nickname))\n    return redirect(url_for('user', nickname = nickname))\n        return redirect(url_for('index'))\n        return redirect(url_for('user', nickname = nickname))\n        return redirect(url_for('user', nickname = nickname))\n    return redirect(url_for('user', nickname = nickname))\n        return redirect(url_for('index'))\n        return redirect(url_for('index'))\n    return redirect(url_for('index'))\n        return redirect(url_for('index'))\n    return redirect(url_for('search_results', query = g.search_form.search.data))\n```\n\nbf3-aggregator:\n\n```\n$ find -name '*.py' | xargs grep -h \"redirect(\"\n            return redirect(url_for('login', next=request.url))\n    return redirect(url_for('favorites', page=page, slug=g.user.slug))\ndef show_developers_redirect():\n    return redirect(url_for('show_developers'))\n        return redirect(oid.get_next_url())\n    return redirect(oid.get_next_url())\n        return redirect(url_for('index'))\n    return redirect(oid.get_next_url())\n        return redirect(request.base_url)\n```\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/33073725",
            "html_url": "https://github.com/pallets/flask/pull/958#issuecomment-33073725",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/958",
            "id": 33073725,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDczNzI1",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-01-22T22:03:05Z",
            "updated_at": "2014-01-22T22:03:05Z",
            "author_association": "MEMBER",
            "body": "You argue that using `url_for` in `redirect` is a common use-case, but fail to explain why a single function call would be more practical or less verbose than two nested ones. IMO the current way of doing things is extremely elegant as both functions serve a very generic purpose, while their combination is still not tedious to write and easy to read.\n\nYour suggestions seems to me like an unneccessary extension of the API exposed by Flask. Depending on which is your current one, they introduce either new, radically different behavior of a function when it gets passed different keyword arguments, or add a new function that does little more than nest two functions which could've been nested with the same amount of keystrokes by the user himself.\n\nYou mention Django's redirect function which [checks if the passed argument is either a model object, if there is a view named like it, or if it \"feels\" like an URL](https://github.com/django/django/blob/master/django/shortcuts.py#L132). If the redirect function would become like that, i am not so sure if the behavior of that function is as well-defined and easily understandable as it is now. For example, if the view that was passed would actually take an argument called `code`, should `redirect('my_view', code=302)` pass that argument on to the view, or use it for the status code of the redirect? If you think that `redirect` should always \"catch\" `code`, how about `redirect('activate_coupon', code='4956n36')`? I mean, a non-numeric value can't possibly be a status code, right? Should `redirect` try to use it as such anyway, just to throw up, or try to convert it to an integer first, then, if that fails, pass the `code` on to the view? Even if you think that we should just do it like in Django, and catch `code` at all times, or rename `code` to `_code`, i think this is going to be a pitfall for people in any case, and also a major break in backwards compatibility. Whereas having two separate functions gives the user a clear idea which arguments are used for which operation.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/33078029",
            "html_url": "https://github.com/pallets/flask/pull/958#issuecomment-33078029",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/958",
            "id": 33078029,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDc4MDI5",
            "user": {
                "login": "codeape2",
                "id": 97742,
                "node_id": "MDQ6VXNlcjk3NzQy",
                "avatar_url": "https://avatars0.githubusercontent.com/u/97742?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/codeape2",
                "html_url": "https://github.com/codeape2",
                "followers_url": "https://api.github.com/users/codeape2/followers",
                "following_url": "https://api.github.com/users/codeape2/following{/other_user}",
                "gists_url": "https://api.github.com/users/codeape2/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/codeape2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/codeape2/subscriptions",
                "organizations_url": "https://api.github.com/users/codeape2/orgs",
                "repos_url": "https://api.github.com/users/codeape2/repos",
                "events_url": "https://api.github.com/users/codeape2/events{/privacy}",
                "received_events_url": "https://api.github.com/users/codeape2/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-01-22T22:50:06Z",
            "updated_at": "2014-01-22T22:50:06Z",
            "author_association": "NONE",
            "body": "> You argue that using url_for in redirect is a common use-case, but fail to explain why a single function call would be more practical or less verbose than two nested ones.\n\nThat a single call is more practical and less verbose than two nested calls is rather self-explanatory.\n\nYour arguments regarding `code` are valid, there will be corner cases that are impossible to handle correctly.\n\nBut I still believe it would be worthwhile to simplify the most common redirect/url_for use case.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/33078202",
            "html_url": "https://github.com/pallets/flask/pull/958#issuecomment-33078202",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/958",
            "id": 33078202,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDc4MjAy",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-01-22T22:51:51Z",
            "updated_at": "2014-01-22T22:51:51Z",
            "author_association": "MEMBER",
            "body": "No, i don't think it's self-explanatory, especially since both forms are expressions and require roughly the same amount of characters.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/33078384",
            "html_url": "https://github.com/pallets/flask/pull/958#issuecomment-33078384",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/958",
            "id": 33078384,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDc4Mzg0",
            "user": {
                "login": "clintecker",
                "id": 26985,
                "node_id": "MDQ6VXNlcjI2OTg1",
                "avatar_url": "https://avatars1.githubusercontent.com/u/26985?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/clintecker",
                "html_url": "https://github.com/clintecker",
                "followers_url": "https://api.github.com/users/clintecker/followers",
                "following_url": "https://api.github.com/users/clintecker/following{/other_user}",
                "gists_url": "https://api.github.com/users/clintecker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/clintecker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clintecker/subscriptions",
                "organizations_url": "https://api.github.com/users/clintecker/orgs",
                "repos_url": "https://api.github.com/users/clintecker/repos",
                "events_url": "https://api.github.com/users/clintecker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/clintecker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-01-22T22:53:52Z",
            "updated_at": "2014-01-22T22:53:52Z",
            "author_association": "NONE",
            "body": "Seems unnecessary.  Its better to be verbose than add yet another method that's not really needed (it doesn't solve any actual problems) IMO.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/33079226",
            "html_url": "https://github.com/pallets/flask/pull/958#issuecomment-33079226",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/958",
            "id": 33079226,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDc5MjI2",
            "user": {
                "login": "codeape2",
                "id": 97742,
                "node_id": "MDQ6VXNlcjk3NzQy",
                "avatar_url": "https://avatars0.githubusercontent.com/u/97742?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/codeape2",
                "html_url": "https://github.com/codeape2",
                "followers_url": "https://api.github.com/users/codeape2/followers",
                "following_url": "https://api.github.com/users/codeape2/following{/other_user}",
                "gists_url": "https://api.github.com/users/codeape2/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/codeape2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/codeape2/subscriptions",
                "organizations_url": "https://api.github.com/users/codeape2/orgs",
                "repos_url": "https://api.github.com/users/codeape2/repos",
                "events_url": "https://api.github.com/users/codeape2/events{/privacy}",
                "received_events_url": "https://api.github.com/users/codeape2/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-01-22T23:03:57Z",
            "updated_at": "2014-01-22T23:03:57Z",
            "author_association": "NONE",
            "body": "We're discussing two different issues here:\n1. the `redirect_url_for` function\n2. if `redirect` should be changed to be `redirect(endpoint, **values)` where endpoint could possibly be an endpoint name or a URL\n\nI agree that redirect_url_for doesn't really add much. \n\nI'll make another pull request for issue 2.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/33098205",
            "html_url": "https://github.com/pallets/flask/pull/958#issuecomment-33098205",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/958",
            "id": 33098205,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDk4MjA1",
            "user": {
                "login": "nZac",
                "id": 276212,
                "node_id": "MDQ6VXNlcjI3NjIxMg==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/276212?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nZac",
                "html_url": "https://github.com/nZac",
                "followers_url": "https://api.github.com/users/nZac/followers",
                "following_url": "https://api.github.com/users/nZac/following{/other_user}",
                "gists_url": "https://api.github.com/users/nZac/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nZac/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nZac/subscriptions",
                "organizations_url": "https://api.github.com/users/nZac/orgs",
                "repos_url": "https://api.github.com/users/nZac/repos",
                "events_url": "https://api.github.com/users/nZac/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nZac/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-01-23T05:27:00Z",
            "updated_at": "2014-01-23T05:27:00Z",
            "author_association": "CONTRIBUTOR",
            "body": "@codeape2 Would you say then that this PR could be closed?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/33118152",
            "html_url": "https://github.com/pallets/flask/pull/958#issuecomment-33118152",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/958",
            "id": 33118152,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTE4MTUy",
            "user": {
                "login": "jaapz",
                "id": 513050,
                "node_id": "MDQ6VXNlcjUxMzA1MA==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/513050?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jaapz",
                "html_url": "https://github.com/jaapz",
                "followers_url": "https://api.github.com/users/jaapz/followers",
                "following_url": "https://api.github.com/users/jaapz/following{/other_user}",
                "gists_url": "https://api.github.com/users/jaapz/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jaapz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jaapz/subscriptions",
                "organizations_url": "https://api.github.com/users/jaapz/orgs",
                "repos_url": "https://api.github.com/users/jaapz/repos",
                "events_url": "https://api.github.com/users/jaapz/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jaapz/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-01-23T12:02:42Z",
            "updated_at": "2014-01-23T12:02:42Z",
            "author_association": "CONTRIBUTOR",
            "body": "I am +1 for the second proposal (redirect accepting both view names and URL's). In my apps i have actually never used redirect to redirect anywhere but some view in my app. So i guess it's a commen enough use case to change the api for this.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/33235343",
            "html_url": "https://github.com/pallets/flask/pull/958#issuecomment-33235343",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/958",
            "id": 33235343,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjM1MzQz",
            "user": {
                "login": "mattupstate",
                "id": 166176,
                "node_id": "MDQ6VXNlcjE2NjE3Ng==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/166176?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mattupstate",
                "html_url": "https://github.com/mattupstate",
                "followers_url": "https://api.github.com/users/mattupstate/followers",
                "following_url": "https://api.github.com/users/mattupstate/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattupstate/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mattupstate/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattupstate/subscriptions",
                "organizations_url": "https://api.github.com/users/mattupstate/orgs",
                "repos_url": "https://api.github.com/users/mattupstate/repos",
                "events_url": "https://api.github.com/users/mattupstate/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mattupstate/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-01-24T16:06:23Z",
            "updated_at": "2014-01-24T16:06:23Z",
            "author_association": "CONTRIBUTOR",
            "body": "`redirect` is just an import from werkzeug and it is ignorant to the URL map of the application. It would seem that you'd have to write a wrapper function which can be executed within an app context in order to achieve the desired API. FWIW, I don't see a need for this functionality myself. And perhaps `explicit is better than implicit` applies to this situation.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/34549921",
            "html_url": "https://github.com/pallets/flask/pull/958#issuecomment-34549921",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/958",
            "id": 34549921,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTQ5OTIx",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-02-08T17:30:32Z",
            "updated_at": "2014-02-08T17:30:32Z",
            "author_association": "MEMBER",
            "body": "Not going to land.  It's not solving any issues and just making the API more complex.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/56888946",
            "html_url": "https://github.com/pallets/flask/pull/958#issuecomment-56888946",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/958",
            "id": 56888946,
            "node_id": "MDEyOklzc3VlQ29tbWVudDU2ODg4OTQ2",
            "user": {
                "login": "za-creature",
                "id": 1210845,
                "node_id": "MDQ6VXNlcjEyMTA4NDU=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/1210845?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/za-creature",
                "html_url": "https://github.com/za-creature",
                "followers_url": "https://api.github.com/users/za-creature/followers",
                "following_url": "https://api.github.com/users/za-creature/following{/other_user}",
                "gists_url": "https://api.github.com/users/za-creature/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/za-creature/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/za-creature/subscriptions",
                "organizations_url": "https://api.github.com/users/za-creature/orgs",
                "repos_url": "https://api.github.com/users/za-creature/repos",
                "events_url": "https://api.github.com/users/za-creature/events{/privacy}",
                "received_events_url": "https://api.github.com/users/za-creature/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-09-25T21:44:58Z",
            "updated_at": "2014-09-25T21:44:58Z",
            "author_association": "NONE",
            "body": "Alternate suggestion:\n\nCall the composite method `redirect_to`, like webapp2 does:\n\nhttps://webapp-improved.appspot.com/api/webapp2.html#webapp2.redirect_to\n\nThis saves significantly more characters than the original proposal, so it's probably worth it in that regard.\nIt does not break compatibility with existing apps, while providing some value to new ones. While the name is not the most obvious and does indeed make the API a bit more complex, I could argue that it's the least surprising way of doing things for people coming from a webapp2 background (and while we're quoting _the Zen_, that's the approach Python took with regards to most system calls). Since webapp2 is the default framework for Google App Engine, and both webapp2 and GAE suck big time [citation needed], I for one am expecting a large surge of developers switching to `flask` in the near future :laughing: \n"
        }
    ]
}