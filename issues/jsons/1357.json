{
    "url": "https://api.github.com/repos/pallets/flask/issues/1357",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1357/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1357/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1357/events",
    "html_url": "https://github.com/pallets/flask/issues/1357",
    "id": 58348753,
    "node_id": "MDU6SXNzdWU1ODM0ODc1Mw==",
    "number": 1357,
    "title": "Support for @blueprint.cli.command",
    "user": {
        "login": "lnielsen",
        "id": 1698163,
        "node_id": "MDQ6VXNlcjE2OTgxNjM=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1698163?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lnielsen",
        "html_url": "https://github.com/lnielsen",
        "followers_url": "https://api.github.com/users/lnielsen/followers",
        "following_url": "https://api.github.com/users/lnielsen/following{/other_user}",
        "gists_url": "https://api.github.com/users/lnielsen/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lnielsen/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lnielsen/subscriptions",
        "organizations_url": "https://api.github.com/users/lnielsen/orgs",
        "repos_url": "https://api.github.com/users/lnielsen/repos",
        "events_url": "https://api.github.com/users/lnielsen/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lnielsen/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 357932495,
            "node_id": "MDU6TGFiZWwzNTc5MzI0OTU=",
            "url": "https://api.github.com/repos/pallets/flask/labels/blueprints",
            "name": "blueprints",
            "color": "1d76db",
            "default": false,
            "description": null
        },
        {
            "id": 380608249,
            "node_id": "MDU6TGFiZWwzODA2MDgyNDk=",
            "url": "https://api.github.com/repos/pallets/flask/labels/cli",
            "name": "cli",
            "color": "1d76db",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
        "url": "https://api.github.com/repos/pallets/flask/milestones/3",
        "html_url": "https://github.com/pallets/flask/milestone/3",
        "labels_url": "https://api.github.com/repos/pallets/flask/milestones/3/labels",
        "id": 3093266,
        "node_id": "MDk6TWlsZXN0b25lMzA5MzI2Ng==",
        "number": 3,
        "title": "1.1.0",
        "description": "",
        "creator": {
            "login": "davidism",
            "id": 1242887,
            "node_id": "MDQ6VXNlcjEyNDI4ODc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidism",
            "html_url": "https://github.com/davidism",
            "followers_url": "https://api.github.com/users/davidism/followers",
            "following_url": "https://api.github.com/users/davidism/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
            "organizations_url": "https://api.github.com/users/davidism/orgs",
            "repos_url": "https://api.github.com/users/davidism/repos",
            "events_url": "https://api.github.com/users/davidism/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidism/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 0,
        "closed_issues": 48,
        "state": "closed",
        "created_at": "2018-02-06T16:14:43Z",
        "updated_at": "2019-07-06T22:03:23Z",
        "due_on": null,
        "closed_at": "2019-07-06T22:03:23Z"
    },
    "comments": 3,
    "created_at": "2015-02-20T12:57:19Z",
    "updated_at": "2019-05-24T21:47:49Z",
    "closed_at": "2019-05-24T21:47:49Z",
    "author_association": "NONE",
    "body": "It would be great to have access to the functionality of `app.cli.command` via blueprints - i.e. something like:\n\n``` python\nblueprint = Blueprint('myblueprint', __name__,)\n\n@blueprint.cli.command()\ndef doblueprintstuff():\n    \"\"\"Initialize the database.\"\"\"\n    #....\n```\n\nIt would help a lot when building modular applications.\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/75234498",
            "html_url": "https://github.com/pallets/flask/issues/1357#issuecomment-75234498",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1357",
            "id": 75234498,
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1MjM0NDk4",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-02-20T13:02:43Z",
            "updated_at": "2015-02-20T13:02:43Z",
            "author_association": "MEMBER",
            "body": "Sounds like a useful feature. The question is.. would the command become a direct subcommand of `flask` such as `flask doblueprintstuff` or be somehow separated, e.g. `flask myblueprint doblueprintstuff`. I could imagine arguments for both cases depending on the applications.\n\nMaybe `blueprint.cli.command` and `blueprint.app_cli.command` similar to how blueprints can modify some things (e.g. error handlers) either globally for the whole app or just for the blueprint.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/75236104",
            "html_url": "https://github.com/pallets/flask/issues/1357#issuecomment-75236104",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1357",
            "id": 75236104,
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1MjM2MTA0",
            "user": {
                "login": "lnielsen",
                "id": 1698163,
                "node_id": "MDQ6VXNlcjE2OTgxNjM=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/1698163?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/lnielsen",
                "html_url": "https://github.com/lnielsen",
                "followers_url": "https://api.github.com/users/lnielsen/followers",
                "following_url": "https://api.github.com/users/lnielsen/following{/other_user}",
                "gists_url": "https://api.github.com/users/lnielsen/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/lnielsen/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lnielsen/subscriptions",
                "organizations_url": "https://api.github.com/users/lnielsen/orgs",
                "repos_url": "https://api.github.com/users/lnielsen/repos",
                "events_url": "https://api.github.com/users/lnielsen/events{/privacy}",
                "received_events_url": "https://api.github.com/users/lnielsen/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-02-20T13:16:14Z",
            "updated_at": "2015-02-20T13:16:14Z",
            "author_association": "NONE",
            "body": "> Maybe blueprint.cli.command and blueprint.app_cli.command similar to how blueprints can modify some things (e.g. error handlers) either globally for the whole app or just for the blueprint.\n\nYep, I can see valid uses cases for both as well, so I think `blueprint.cli.command` and `blueprint.app_cli.command` is a nice way to not force a particular scheme upon developers.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/103204200",
            "html_url": "https://github.com/pallets/flask/issues/1357#issuecomment-103204200",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1357",
            "id": 103204200,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzIwNDIwMA==",
            "user": {
                "login": "rsyring",
                "id": 109467,
                "node_id": "MDQ6VXNlcjEwOTQ2Nw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/109467?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rsyring",
                "html_url": "https://github.com/rsyring",
                "followers_url": "https://api.github.com/users/rsyring/followers",
                "following_url": "https://api.github.com/users/rsyring/following{/other_user}",
                "gists_url": "https://api.github.com/users/rsyring/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rsyring/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rsyring/subscriptions",
                "organizations_url": "https://api.github.com/users/rsyring/orgs",
                "repos_url": "https://api.github.com/users/rsyring/repos",
                "events_url": "https://api.github.com/users/rsyring/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rsyring/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-05-18T20:40:46Z",
            "updated_at": "2015-05-18T20:40:46Z",
            "author_association": "CONTRIBUTOR",
            "body": "Having both `blueprint.app_cli` and `blueprint.cli` seems not ideal to me.  Also, you should have a way to specific the subcommand group a command falls under.  Default that to the blueprint name, but allow an override.\n\nOther options:\n\n```\nblueprint = Blueprint('myblueprint', __name__, cli_group_name='blue')\n\n@blueprint.cli.command()\ndef doblueprintstuff():\n    \"\"\"Initialize the database.\"\"\"\n    #....\n```\n\nCommand would need to be run as `myapp blue doblueprintstuff`.\n\n```\nblueprint = Blueprint('myblueprint', __name__, cli_group_name='blue')\n\n@blueprint.cli.command(on_app=True)\ndef doblueprintstuff():\n    \"\"\"Initialize the database.\"\"\"\n    #....\n```\n\nCalled as: `myapp doblueprintstuff`.\n"
        }
    ]
}