{
    "url": "https://api.github.com/repos/pallets/flask/issues/832",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/832/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/832/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/832/events",
    "html_url": "https://github.com/pallets/flask/issues/832",
    "id": 17932320,
    "node_id": "MDU6SXNzdWUxNzkzMjMyMA==",
    "number": 832,
    "title": "URLSafeTimedSerializer may be vulnerable to a CRIME or BREACH style attack in some implemtations?",
    "user": {
        "login": "public",
        "id": 83000,
        "node_id": "MDQ6VXNlcjgzMDAw",
        "avatar_url": "https://avatars1.githubusercontent.com/u/83000?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/public",
        "html_url": "https://github.com/public",
        "followers_url": "https://api.github.com/users/public/followers",
        "following_url": "https://api.github.com/users/public/following{/other_user}",
        "gists_url": "https://api.github.com/users/public/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/public/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/public/subscriptions",
        "organizations_url": "https://api.github.com/users/public/orgs",
        "repos_url": "https://api.github.com/users/public/repos",
        "events_url": "https://api.github.com/users/public/events{/privacy}",
        "received_events_url": "https://api.github.com/users/public/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-08-12T09:53:34Z",
    "updated_at": "2013-08-12T16:20:44Z",
    "closed_at": "2013-08-12T10:37:10Z",
    "author_association": "NONE",
    "body": "URLSafeTimedSerializer is the default session backend and it seems to match the requirements (mostly it's use of zlib) for this class of attack to work even if protocol level mitigations have already been used. You'd need a user controllable value in the cookie but I suspect this is not entirely uncommon.\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/22484946",
            "html_url": "https://github.com/pallets/flask/issues/832#issuecomment-22484946",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/832",
            "id": 22484946,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDg0OTQ2",
            "user": {
                "login": "DasIch",
                "id": 182316,
                "node_id": "MDQ6VXNlcjE4MjMxNg==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/182316?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/DasIch",
                "html_url": "https://github.com/DasIch",
                "followers_url": "https://api.github.com/users/DasIch/followers",
                "following_url": "https://api.github.com/users/DasIch/following{/other_user}",
                "gists_url": "https://api.github.com/users/DasIch/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/DasIch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DasIch/subscriptions",
                "organizations_url": "https://api.github.com/users/DasIch/orgs",
                "repos_url": "https://api.github.com/users/DasIch/repos",
                "events_url": "https://api.github.com/users/DasIch/events{/privacy}",
                "received_events_url": "https://api.github.com/users/DasIch/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-08-12T10:37:10Z",
            "updated_at": "2013-08-12T10:37:10Z",
            "author_association": "CONTRIBUTOR",
            "body": "It probably definitely is. Then again why would anyone bother to perform compression oracle attacks on compressed serialized plaintext, when you can just compress and unserialize it?\n\nThe point of `URLSafeTimedSerializer` is to ensure authenticity of the serialized data, it does not prevent anyone from unserializing the data.\n\nAlso you should have reported it with [itsdangerous](https://github.com/mitsuhiko/itsdangerous).\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/22505294",
            "html_url": "https://github.com/pallets/flask/issues/832#issuecomment-22505294",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/832",
            "id": 22505294,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTA1Mjk0",
            "user": {
                "login": "public",
                "id": 83000,
                "node_id": "MDQ6VXNlcjgzMDAw",
                "avatar_url": "https://avatars1.githubusercontent.com/u/83000?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/public",
                "html_url": "https://github.com/public",
                "followers_url": "https://api.github.com/users/public/followers",
                "following_url": "https://api.github.com/users/public/following{/other_user}",
                "gists_url": "https://api.github.com/users/public/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/public/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/public/subscriptions",
                "organizations_url": "https://api.github.com/users/public/orgs",
                "repos_url": "https://api.github.com/users/public/repos",
                "events_url": "https://api.github.com/users/public/events{/privacy}",
                "received_events_url": "https://api.github.com/users/public/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-08-12T16:19:09Z",
            "updated_at": "2013-08-12T16:19:21Z",
            "author_association": "NONE",
            "body": "@DasIch An attacker is only capable of reading the raw session data of a TLS request if they can push the user to view a page with an XSS on the target domain. These attacks allow an attacker to recover plaintext from a TLS request without an XSS. They just need to be able to control requests issued the target users browser. Such as via MITM an insecure page to inject some JavaScript.\n\nI'll re-file this against itsdangerous.\n"
        }
    ]
}