{
    "url": "https://api.github.com/repos/pallets/flask/issues/3413",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/3413/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/3413/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/3413/events",
    "html_url": "https://github.com/pallets/flask/issues/3413",
    "id": 516398775,
    "node_id": "MDU6SXNzdWU1MTYzOTg3NzU=",
    "number": 3413,
    "title": "Path matching with URLs ending in //",
    "user": {
        "login": "h3kker",
        "id": 1489014,
        "node_id": "MDQ6VXNlcjE0ODkwMTQ=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1489014?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/h3kker",
        "html_url": "https://github.com/h3kker",
        "followers_url": "https://api.github.com/users/h3kker/followers",
        "following_url": "https://api.github.com/users/h3kker/following{/other_user}",
        "gists_url": "https://api.github.com/users/h3kker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/h3kker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/h3kker/subscriptions",
        "organizations_url": "https://api.github.com/users/h3kker/orgs",
        "repos_url": "https://api.github.com/users/h3kker/repos",
        "events_url": "https://api.github.com/users/h3kker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/h3kker/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-11-01T23:32:59Z",
    "updated_at": "2019-11-08T10:07:22Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "<!-- **This issue tracker is a tool to address bugs in Flask itself.\r\nPlease use the #pocoo IRC channel on freenode or Stack Overflow for general\r\nquestions about using Flask or issues not related to Flask.** -->\r\n\r\n<!-- If you'd like to report a bug in Flask, fill out the template below. Provide\r\nany extra information that may be useful / related to your problem.\r\nIdeally, create an [MCVE](https://stackoverflow.com/help/mcve), which helps us\r\nunderstand the problem and helps check that it is not caused by something in\r\nyour code. -->\r\n\r\nI can't seem to get flask to match URLs ending in double slashes. I have a client app (that I don't control) that under some circumstances sends requests like this: `/v1/collections//`\r\n \r\n### Expected Behavior\r\n\r\nOutput \"found double\"\r\n\r\n```python\r\nfrom flask import Flask\r\napp = Flask(__name__)\r\n\r\n@app.route('/test//')\r\ndef double(other):\r\n    return 'found double'\r\n```\r\n\r\n### Actual Behavior\r\n\r\n```\r\ncurl localhost:5000/test//\r\n# 404 not found\r\n```\r\n\r\nI have also tried with paths:\r\n\r\n```\r\n@app.route('/test/<path:other>')\r\ndef double(other):\r\n    return 'found double'\r\n```\r\n\r\nbut no luck either. Apologies if this not a bug and I'm just too stupid to read the documentation.\r\n\r\n### Environment\r\n\r\n```\r\n$ flask --version\r\nPython 3.7.4\r\nFlask 1.1.1\r\nWerkzeug 0.16.0\r\n```\r\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/549091272",
            "html_url": "https://github.com/pallets/flask/issues/3413#issuecomment-549091272",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3413",
            "id": 549091272,
            "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTA5MTI3Mg==",
            "user": {
                "login": "bolivierjr",
                "id": 7041126,
                "node_id": "MDQ6VXNlcjcwNDExMjY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7041126?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/bolivierjr",
                "html_url": "https://github.com/bolivierjr",
                "followers_url": "https://api.github.com/users/bolivierjr/followers",
                "following_url": "https://api.github.com/users/bolivierjr/following{/other_user}",
                "gists_url": "https://api.github.com/users/bolivierjr/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/bolivierjr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bolivierjr/subscriptions",
                "organizations_url": "https://api.github.com/users/bolivierjr/orgs",
                "repos_url": "https://api.github.com/users/bolivierjr/repos",
                "events_url": "https://api.github.com/users/bolivierjr/events{/privacy}",
                "received_events_url": "https://api.github.com/users/bolivierjr/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-11-02T23:48:21Z",
            "updated_at": "2019-11-02T23:48:21Z",
            "author_association": "NONE",
            "body": "I can't seem to find a way, even with a catch-all, to hit a double slashed ended uri. Seems like you typically need a rewrite rule to get rid of the trailing slashes. One solution would be to put an nginx reverse proxy in front of the flask app with a rewrite in the config. e.g. `rewrite ^/test/(.*)$ /$1 break;` or `^test(/.*)$`"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/551505393",
            "html_url": "https://github.com/pallets/flask/issues/3413#issuecomment-551505393",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3413",
            "id": 551505393,
            "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTUwNTM5Mw==",
            "user": {
                "login": "h3kker",
                "id": 1489014,
                "node_id": "MDQ6VXNlcjE0ODkwMTQ=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/1489014?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/h3kker",
                "html_url": "https://github.com/h3kker",
                "followers_url": "https://api.github.com/users/h3kker/followers",
                "following_url": "https://api.github.com/users/h3kker/following{/other_user}",
                "gists_url": "https://api.github.com/users/h3kker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/h3kker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/h3kker/subscriptions",
                "organizations_url": "https://api.github.com/users/h3kker/orgs",
                "repos_url": "https://api.github.com/users/h3kker/repos",
                "events_url": "https://api.github.com/users/h3kker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/h3kker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-11-08T10:07:22Z",
            "updated_at": "2019-11-08T10:07:22Z",
            "author_association": "NONE",
            "body": "Wouldn't you consider this a bug? After all I want my route to match a certain pattern and something is preventing that. At the least I think it is unexpected behaviour.\r\n\r\nEspecially since internal double slashes work (`@app.route('/test//hase')`)\r\n\r\nRewriting in an upstream proxy is some pain. Then my development environment behaves differently and I cannot unit-test those particular routes. \r\n\r\nIf there's really no way to match that, can I somehow rewrite the URL in flask before the path matching happens? \r\n\r\nThanks,\r\nHeinz"
        }
    ]
}