{
    "url": "https://api.github.com/repos/pallets/flask/issues/887",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/887/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/887/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/887/events",
    "html_url": "https://github.com/pallets/flask/issues/887",
    "id": 20968676,
    "node_id": "MDU6SXNzdWUyMDk2ODY3Ng==",
    "number": 887,
    "title": "cannot call methods decorated with setupmethod from before_first_request handlers",
    "user": {
        "login": "bmathieu33",
        "id": 886487,
        "node_id": "MDQ6VXNlcjg4NjQ4Nw==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/886487?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bmathieu33",
        "html_url": "https://github.com/bmathieu33",
        "followers_url": "https://api.github.com/users/bmathieu33/followers",
        "following_url": "https://api.github.com/users/bmathieu33/following{/other_user}",
        "gists_url": "https://api.github.com/users/bmathieu33/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bmathieu33/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bmathieu33/subscriptions",
        "organizations_url": "https://api.github.com/users/bmathieu33/orgs",
        "repos_url": "https://api.github.com/users/bmathieu33/repos",
        "events_url": "https://api.github.com/users/bmathieu33/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bmathieu33/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2013-10-14T16:58:45Z",
    "updated_at": "2014-02-09T13:18:57Z",
    "closed_at": "2014-02-09T13:18:57Z",
    "author_association": "NONE",
    "body": "Example use case: trying to register a blueprint as lately as possible.\n\n```\nbp = Blueprint(...)\n\n@app.before_first_request\ndef register_bp():\n    app.register_blueprint(bp)\n```\n\nIn debug mode we will get an AssertionError from `setupmethod` decorator, saying \"A setup function was called after the first request was handled.\".\nhttps://github.com/mitsuhiko/flask/blob/master/flask/app.py#L54\n\nThis is because `_got_first_request` flag is set to True before `before_first_request_funcs` are called.\nhttps://github.com/mitsuhiko/flask/blob/master/flask/app.py#L1493\n\nIs there a reason for not setting the flag after handlers have been called? or is it safe (and thus it should be allowed) to call such \"setupmethods\"?\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/26273712",
            "html_url": "https://github.com/pallets/flask/issues/887#issuecomment-26273712",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/887",
            "id": 26273712,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjczNzEy",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-10-14T17:37:02Z",
            "updated_at": "2013-10-14T17:37:02Z",
            "author_association": "MEMBER",
            "body": "The handlers might raise Exceptions which would lead to `_got_first_requests` to `True`. To be honest, i think your idea of lazily registering blueprints should be avoided. Registering a blueprint isn't that costly to just load on server startup, and even if it is costly, doing so when the user already wants a response is suboptimal.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/26276674",
            "html_url": "https://github.com/pallets/flask/issues/887#issuecomment-26276674",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/887",
            "id": 26276674,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2Mjc2Njc0",
            "user": {
                "login": "bmathieu33",
                "id": 886487,
                "node_id": "MDQ6VXNlcjg4NjQ4Nw==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/886487?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/bmathieu33",
                "html_url": "https://github.com/bmathieu33",
                "followers_url": "https://api.github.com/users/bmathieu33/followers",
                "following_url": "https://api.github.com/users/bmathieu33/following{/other_user}",
                "gists_url": "https://api.github.com/users/bmathieu33/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/bmathieu33/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bmathieu33/subscriptions",
                "organizations_url": "https://api.github.com/users/bmathieu33/orgs",
                "repos_url": "https://api.github.com/users/bmathieu33/repos",
                "events_url": "https://api.github.com/users/bmathieu33/events{/privacy}",
                "received_events_url": "https://api.github.com/users/bmathieu33/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-10-14T18:17:57Z",
            "updated_at": "2013-10-14T18:17:57Z",
            "author_association": "NONE",
            "body": "Well as I understand it `_got_first_request` is `True` whatever. Or did you mean it could be `False` in case of an exception?\n\nIf calling `setupmethod` decorated methods is a problem I think a bit of documentation that details which methods cannot be called in before first request handlers would be a good thing.\n\nMy point for this question with handlers is really: is it a bug, or does it need documentation?\n\nFor my custom problem (which is not in the scope of this issue, I think), my need has nothing to do with a supposed 'cost' of blueprint registration. Actually I needed to instantiate a blueprint, and plugins may register routes on it. The blueprint can be registered on application only after all routes have been set, and this blueprint is not hardcoded in app init. Whatever, custom signals was what I needed for my little problem.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/34573512",
            "html_url": "https://github.com/pallets/flask/issues/887#issuecomment-34573512",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/887",
            "id": 34573512,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTczNTEy",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-02-09T13:18:57Z",
            "updated_at": "2014-02-09T13:18:57Z",
            "author_association": "MEMBER",
            "body": "This does not work intentionally because that would not be concurrency safe.  You would need to plaster a whole bunch of locks everywhere for this to work.\n"
        }
    ]
}