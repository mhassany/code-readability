{
    "url": "https://api.github.com/repos/pallets/flask/issues/2894",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2894/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2894/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2894/events",
    "html_url": "https://github.com/pallets/flask/issues/2894",
    "id": 355339070,
    "node_id": "MDU6SXNzdWUzNTUzMzkwNzA=",
    "number": 2894,
    "title": "Chained exceptions should be logged properly",
    "user": {
        "login": "gabbard",
        "id": 7139661,
        "node_id": "MDQ6VXNlcjcxMzk2NjE=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/7139661?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gabbard",
        "html_url": "https://github.com/gabbard",
        "followers_url": "https://api.github.com/users/gabbard/followers",
        "following_url": "https://api.github.com/users/gabbard/following{/other_user}",
        "gists_url": "https://api.github.com/users/gabbard/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gabbard/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gabbard/subscriptions",
        "organizations_url": "https://api.github.com/users/gabbard/orgs",
        "repos_url": "https://api.github.com/users/gabbard/repos",
        "events_url": "https://api.github.com/users/gabbard/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gabbard/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 648340773,
            "node_id": "MDU6TGFiZWw2NDgzNDA3NzM=",
            "url": "https://api.github.com/repos/pallets/flask/labels/logging",
            "name": "logging",
            "color": "1d76db",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
        "url": "https://api.github.com/repos/pallets/flask/milestones/3",
        "html_url": "https://github.com/pallets/flask/milestone/3",
        "labels_url": "https://api.github.com/repos/pallets/flask/milestones/3/labels",
        "id": 3093266,
        "node_id": "MDk6TWlsZXN0b25lMzA5MzI2Ng==",
        "number": 3,
        "title": "1.1.0",
        "description": "",
        "creator": {
            "login": "davidism",
            "id": 1242887,
            "node_id": "MDQ6VXNlcjEyNDI4ODc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidism",
            "html_url": "https://github.com/davidism",
            "followers_url": "https://api.github.com/users/davidism/followers",
            "following_url": "https://api.github.com/users/davidism/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
            "organizations_url": "https://api.github.com/users/davidism/orgs",
            "repos_url": "https://api.github.com/users/davidism/repos",
            "events_url": "https://api.github.com/users/davidism/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidism/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 0,
        "closed_issues": 48,
        "state": "closed",
        "created_at": "2018-02-06T16:14:43Z",
        "updated_at": "2019-07-06T22:03:23Z",
        "due_on": null,
        "closed_at": "2019-07-06T22:03:23Z"
    },
    "comments": 12,
    "created_at": "2018-08-29T21:24:10Z",
    "updated_at": "2018-08-30T17:16:15Z",
    "closed_at": "2018-08-30T17:13:55Z",
    "author_association": "NONE",
    "body": "### Expected Behavior\r\n\r\nWhen a chained exception is thrown, the full exception chain should be logged.\r\n\r\n```python\r\nfrom flask import Flask\r\n\r\napp = Flask(__name__)\r\n\r\n\r\ndef do_something():\r\n  raise ValueError(\"Foo\")\r\n\r\n\r\n@app.route('/exception_test', methods=['GET', 'POST'])\r\ndef process():\r\n  try:\r\n    do_something()\r\n  except Exception as e:\r\n    raise ValueError(\"Wrapper\") from e\r\n\r\nif __name__ == '__main__':\r\n  app.debug = True\r\n  app.config['PROPAGATE_EXCEPTIONS'] = True\r\n  app.run(debug=True)\r\n```\r\n\r\nThen `wget  http://127.0.0.1:5000/exception_test`\r\n\r\n### Actual Behavior\r\n\r\nInstead only the exception at the \"end of the chain\" is logged:\r\n\r\n```pytb\r\n127.0.0.1 - - [29/Aug/2018 17:18:56] \"GET /exception_test HTTP/1.1\" 500 -\r\nTraceback (most recent call last):\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 2309, in __call__\r\n    return self.wsgi_app(environ, start_response)\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 2295, in wsgi_app\r\n    response = self.handle_exception(e)\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 1741, in handle_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/_compat.py\", line 35, in reraise\r\n    raise value\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 2292, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 1815, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 1718, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/_compat.py\", line 35, in reraise\r\n    raise value\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 1813, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 1799, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/Users/gabbard/projects/gaia/gaia-alternatives/repos/vista-nlp-jvm/vista_nlp_serialization/chained_exception_mcve.py\", line 22, in process\r\n    raise ValueError(\"Wrapper\") from e\r\nValueError: Wrapper\r\n```\r\n\r\nThe same problem appears in the HTML stack traces.\r\n\r\nThis problem was also mentioned by @mscheper  in [this comment](https://github.com/pallets/flask/issues/2023#issuecomment-301493159)\r\n\r\n### Environment\r\n\r\n* Python version: 3.6\r\n* Flask version: 1.0.2\r\n* Werkzeug version: 0.14.1\r\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/417112136",
            "html_url": "https://github.com/pallets/flask/issues/2894#issuecomment-417112136",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2894",
            "id": 417112136,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzExMjEzNg==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-08-29T21:28:52Z",
            "updated_at": "2018-08-29T21:28:52Z",
            "author_association": "MEMBER",
            "body": "If you have time, investigating why it's not logging them right now, and/or how we can fix that, would be helpful."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/417249466",
            "html_url": "https://github.com/pallets/flask/issues/2894#issuecomment-417249466",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2894",
            "id": 417249466,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzI0OTQ2Ng==",
            "user": {
                "login": "mozartilize",
                "id": 26346270,
                "node_id": "MDQ6VXNlcjI2MzQ2Mjcw",
                "avatar_url": "https://avatars1.githubusercontent.com/u/26346270?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mozartilize",
                "html_url": "https://github.com/mozartilize",
                "followers_url": "https://api.github.com/users/mozartilize/followers",
                "following_url": "https://api.github.com/users/mozartilize/following{/other_user}",
                "gists_url": "https://api.github.com/users/mozartilize/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mozartilize/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mozartilize/subscriptions",
                "organizations_url": "https://api.github.com/users/mozartilize/orgs",
                "repos_url": "https://api.github.com/users/mozartilize/repos",
                "events_url": "https://api.github.com/users/mozartilize/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mozartilize/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-08-30T09:15:30Z",
            "updated_at": "2018-08-30T09:16:02Z",
            "author_association": "NONE",
            "body": "After took a look, I think the reason is `werkzeug.debug.tbtools.Traceback` doesn't handle `__cause__` or `__context__` attribute of exception"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/417297618",
            "html_url": "https://github.com/pallets/flask/issues/2894#issuecomment-417297618",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2894",
            "id": 417297618,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzI5NzYxOA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-08-30T12:13:35Z",
            "updated_at": "2018-08-30T12:13:35Z",
            "author_association": "MEMBER",
            "body": "That's the debugger, I think this is about logging. Although it would be nice for the debugger to handle that too."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/417369774",
            "html_url": "https://github.com/pallets/flask/issues/2894#issuecomment-417369774",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2894",
            "id": 417369774,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzM2OTc3NA==",
            "user": {
                "login": "gabbard",
                "id": 7139661,
                "node_id": "MDQ6VXNlcjcxMzk2NjE=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/7139661?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gabbard",
                "html_url": "https://github.com/gabbard",
                "followers_url": "https://api.github.com/users/gabbard/followers",
                "following_url": "https://api.github.com/users/gabbard/following{/other_user}",
                "gists_url": "https://api.github.com/users/gabbard/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gabbard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gabbard/subscriptions",
                "organizations_url": "https://api.github.com/users/gabbard/orgs",
                "repos_url": "https://api.github.com/users/gabbard/repos",
                "events_url": "https://api.github.com/users/gabbard/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gabbard/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-08-30T15:52:52Z",
            "updated_at": "2018-08-30T15:53:16Z",
            "author_association": "NONE",
            "body": "The workaround @mscheper gave:\r\n\r\n```\r\n@app.errorhandler(Exception)\r\ndef better_exception_handler(error):\r\n    current_app.logger.exception('Whoopsie!')\r\n    return 'Internal server error', 500\r\n```\r\n\r\nworks well enough for my immediate needs, so it will be a while before I can dig into this very much.\r\n\r\nHowever, I do have a more minimal example:\r\n\r\n```python\r\nfrom flask import Flask\r\n\r\napp = Flask(__name__)\r\n\r\n\r\ndef do_something():\r\n  raise ValueError(\"Foo\")\r\n\r\n\r\n@app.route('/exception_test', methods=['GET', 'POST'])\r\ndef process():\r\n  try:\r\n    do_something()\r\n  except Exception as e:\r\n    raise ValueError(\"Wrapper\") from e\r\n\r\nif __name__ == '__main__':\r\n  app.config['PROPAGATE_EXCEPTIONS'] = True\r\n  app.run(debug=False)\r\n```\r\n\r\nDebug mode is not needed. However, `PROPAGATE_EXCEPTIONS` is - without it, the log message has the proper chaining."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/417374137",
            "html_url": "https://github.com/pallets/flask/issues/2894#issuecomment-417374137",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2894",
            "id": 417374137,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzM3NDEzNw==",
            "user": {
                "login": "gabbard",
                "id": 7139661,
                "node_id": "MDQ6VXNlcjcxMzk2NjE=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/7139661?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gabbard",
                "html_url": "https://github.com/gabbard",
                "followers_url": "https://api.github.com/users/gabbard/followers",
                "following_url": "https://api.github.com/users/gabbard/following{/other_user}",
                "gists_url": "https://api.github.com/users/gabbard/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gabbard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gabbard/subscriptions",
                "organizations_url": "https://api.github.com/users/gabbard/orgs",
                "repos_url": "https://api.github.com/users/gabbard/repos",
                "events_url": "https://api.github.com/users/gabbard/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gabbard/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-08-30T16:05:22Z",
            "updated_at": "2018-08-30T16:06:30Z",
            "author_association": "NONE",
            "body": "@davidism : This is probably not the right fix (I don't know what consequences this change would have elsewhere) but if I take the `Traceback` object from `tbtools.py`, save the `tb` constructor argument, and then replace\r\n\r\n```python\r\nbuf = traceback.format_exception_only(self.exc_type, self.exc_value)\r\n```\r\n\r\nin `exception()` with\r\n\r\n```python\r\nbuf = traceback.format_exception(self.exc_type, self.exc_value, self.tb,\r\n                                 chain=True)\r\n``` \r\n\r\nthen the desired output is logged."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/417374503",
            "html_url": "https://github.com/pallets/flask/issues/2894#issuecomment-417374503",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2894",
            "id": 417374503,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzM3NDUwMw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-08-30T16:06:33Z",
            "updated_at": "2018-08-30T16:06:33Z",
            "author_association": "MEMBER",
            "body": "Are we talking about exception logging, which comes from Flask, or the interactive traceback, which comes from the Werkzeug debugger middleware?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/417378241",
            "html_url": "https://github.com/pallets/flask/issues/2894#issuecomment-417378241",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2894",
            "id": 417378241,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzM3ODI0MQ==",
            "user": {
                "login": "gabbard",
                "id": 7139661,
                "node_id": "MDQ6VXNlcjcxMzk2NjE=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/7139661?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gabbard",
                "html_url": "https://github.com/gabbard",
                "followers_url": "https://api.github.com/users/gabbard/followers",
                "following_url": "https://api.github.com/users/gabbard/following{/other_user}",
                "gists_url": "https://api.github.com/users/gabbard/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gabbard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gabbard/subscriptions",
                "organizations_url": "https://api.github.com/users/gabbard/orgs",
                "repos_url": "https://api.github.com/users/gabbard/repos",
                "events_url": "https://api.github.com/users/gabbard/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gabbard/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-08-30T16:17:54Z",
            "updated_at": "2018-08-30T16:20:47Z",
            "author_association": "NONE",
            "body": "I'm afraid I am not familiar enough with Flask to be sure.  From my point of view as a user, when I run the example above, an exception is logged to stderr which lacks the chaining information, which sounds like what I assume Flask \"exception logging\" is (perhaps mistakenly).  On the other hand, the code which actually requests logging of the exception is in `werkzeug.serving` (line 287 in 0.14.1 but [here](https://github.com/pallets/werkzeug/blob/master/werkzeug/serving.py#L294) on `master`), so maybe I should shift the issue to that project?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/417385406",
            "html_url": "https://github.com/pallets/flask/issues/2894#issuecomment-417385406",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2894",
            "id": 417385406,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzM4NTQwNg==",
            "user": {
                "login": "gabbard",
                "id": 7139661,
                "node_id": "MDQ6VXNlcjcxMzk2NjE=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/7139661?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gabbard",
                "html_url": "https://github.com/gabbard",
                "followers_url": "https://api.github.com/users/gabbard/followers",
                "following_url": "https://api.github.com/users/gabbard/following{/other_user}",
                "gists_url": "https://api.github.com/users/gabbard/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gabbard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gabbard/subscriptions",
                "organizations_url": "https://api.github.com/users/gabbard/orgs",
                "repos_url": "https://api.github.com/users/gabbard/repos",
                "events_url": "https://api.github.com/users/gabbard/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gabbard/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-08-30T16:39:21Z",
            "updated_at": "2018-08-30T16:39:21Z",
            "author_association": "NONE",
            "body": "Ah, but this is using the development server:\r\n\r\n```\r\n* Serving Flask app \"chained_exception_mcve\" (lazy loading)\r\n * Environment: production\r\n   WARNING: Do not use the development server in a production environment.\r\n   Use a production WSGI server instead.\r\n```\r\n\r\nso I suspect it is specific to that (which I guess is part of the werkzeug layer) and not to Flask proper."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/417389997",
            "html_url": "https://github.com/pallets/flask/issues/2894#issuecomment-417389997",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2894",
            "id": 417389997,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzM4OTk5Nw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-08-30T16:53:21Z",
            "updated_at": "2018-08-30T16:53:21Z",
            "author_association": "MEMBER",
            "body": "You're getting confused by the other user who dug into Werkzeug. We're talking about Flask logging, nothing in Werkzeug is relevant.\r\n\r\nSince we've gotten off track, I'll reiterate that investigating why it's not logging them right now, and/or how we can fix that, would be helpful, but I mean Flask's logging, not Werkzeug."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/417394607",
            "html_url": "https://github.com/pallets/flask/issues/2894#issuecomment-417394607",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2894",
            "id": 417394607,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzM5NDYwNw==",
            "user": {
                "login": "gabbard",
                "id": 7139661,
                "node_id": "MDQ6VXNlcjcxMzk2NjE=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/7139661?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gabbard",
                "html_url": "https://github.com/gabbard",
                "followers_url": "https://api.github.com/users/gabbard/followers",
                "following_url": "https://api.github.com/users/gabbard/following{/other_user}",
                "gists_url": "https://api.github.com/users/gabbard/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gabbard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gabbard/subscriptions",
                "organizations_url": "https://api.github.com/users/gabbard/orgs",
                "repos_url": "https://api.github.com/users/gabbard/repos",
                "events_url": "https://api.github.com/users/gabbard/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gabbard/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-08-30T17:07:13Z",
            "updated_at": "2018-08-30T17:07:13Z",
            "author_association": "NONE",
            "body": "@davidism : I'm not sure I understand.  Currently if I run this Python script:\r\n\r\n```\r\nfrom flask import Flask\r\n\r\napp = Flask(__name__)\r\n\r\n\r\ndef do_something():\r\n  raise ValueError(\"Foo\")\r\n\r\n\r\n@app.route('/exception_test', methods=['GET', 'POST'])\r\ndef process():\r\n  try:\r\n    do_something()\r\n  except Exception as e:\r\n    raise ValueError(\"Wrapper\") from e\r\n\r\nif __name__ == '__main__':\r\n  app.config['PROPAGATE_EXCEPTIONS'] = True\r\n  app.run(debug=False)\r\n```\r\n\r\nand then do `wget  http://127.0.0.1:5000/exception_test`, I get\r\n\r\n```\r\n * Serving Flask app \"chained_exception_mcve\" (lazy loading)\r\n * Environment: production\r\n   WARNING: Do not use the development server in a production environment.\r\n   Use a production WSGI server instead.\r\n * Debug mode: off\r\n * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\r\n127.0.0.1 - - [30/Aug/2018 13:02:18] \"GET /exception_test HTTP/1.1\" 500 -\r\nError on request:\r\nTraceback (most recent call last):\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/werkzeug/serving.py\", line 270, in run_wsgi\r\n    execute(self.server.app)\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/werkzeug/serving.py\", line 258, in execute\r\n    application_iter = app(environ, start_response)\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 2309, in __call__\r\n    return self.wsgi_app(environ, start_response)\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 2295, in wsgi_app\r\n    response = self.handle_exception(e)\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 1741, in handle_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/_compat.py\", line 35, in reraise\r\n    raise value\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 2292, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 1815, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 1718, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/_compat.py\", line 35, in reraise\r\n    raise value\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 1813, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 1799, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/Users/gabbard/projects/gaia/gaia-alternatives/repos/vista-nlp-jvm/vista_nlp_serialization/chained_exception_mcve.py\", line 20, in process\r\n    raise ValueError(\"Wrapper\") from e\r\nValueError: Wrapper\r\n```\r\n\r\nbut if I edit `tbools.py` from `werkzeug.debug` as described above, I get the desired output of:\r\n\r\n```\r\n * Serving Flask app \"chained_exception_mcve\" (lazy loading)\r\n * Environment: production\r\n   WARNING: Do not use the development server in a production environment.\r\n   Use a production WSGI server instead.\r\n * Debug mode: off\r\n * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\r\n127.0.0.1 - - [30/Aug/2018 13:03:58] \"GET /exception_test HTTP/1.1\" 500 -\r\nError on request:\r\nTraceback (most recent call last):\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/werkzeug/serving.py\", line 270, in run_wsgi\r\n    execute(self.server.app)\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/werkzeug/serving.py\", line 258, in execute\r\n    application_iter = app(environ, start_response)\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 2309, in __call__\r\n    return self.wsgi_app(environ, start_response)\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 2295, in wsgi_app\r\n    response = self.handle_exception(e)\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 1741, in handle_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/_compat.py\", line 35, in reraise\r\n    raise value\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 2292, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 1815, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 1718, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/_compat.py\", line 35, in reraise\r\n    raise value\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 1813, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 1799, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/Users/gabbard/projects/gaia/gaia-alternatives/repos/vista-nlp-jvm/vista_nlp_serialization/chained_exception_mcve.py\", line 20, in process\r\n    raise ValueError(\"Wrapper\") from e\r\nTraceback (most recent call last):\r\n  File \"/Users/gabbard/projects/gaia/gaia-alternatives/repos/vista-nlp-jvm/vista_nlp_serialization/chained_exception_mcve.py\", line 18, in process\r\n    do_something()\r\n  File \"/Users/gabbard/projects/gaia/gaia-alternatives/repos/vista-nlp-jvm/vista_nlp_serialization/chained_exception_mcve.py\", line 8, in do_something\r\n    raise ValueError(\"Foo\")\r\nValueError: Foo\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/werkzeug/serving.py\", line 270, in run_wsgi\r\n    execute(self.server.app)\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/werkzeug/serving.py\", line 258, in execute\r\n    application_iter = app(environ, start_response)\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 2309, in __call__\r\n    return self.wsgi_app(environ, start_response)\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 2295, in wsgi_app\r\n    response = self.handle_exception(e)\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 1741, in handle_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/_compat.py\", line 35, in reraise\r\n    raise value\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 2292, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 1815, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 1718, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/_compat.py\", line 35, in reraise\r\n    raise value\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 1813, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/Users/gabbard/anaconda3/envs/gaia-alternatives/lib/python3.6/site-packages/flask/app.py\", line 1799, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/Users/gabbard/projects/gaia/gaia-alternatives/repos/vista-nlp-jvm/vista_nlp_serialization/chained_exception_mcve.py\", line 20, in process\r\n    raise ValueError(\"Wrapper\") from e\r\nValueError: Wrapper\r\n```\r\n\r\nIf I drop a breakpoint on where the logging of the exception occurs, there's actually no Flask code anywhere in the stack, only `werkzeug` code.  So it seems to me I was wrong to link this with issue #2023 and that the (to me undesirable) behavior I am seeing is due to `werkzeug` and not Flask itself.\r\n\r\nBut I am very much a Flask newbie, so there may be something I am missing."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/417396297",
            "html_url": "https://github.com/pallets/flask/issues/2894#issuecomment-417396297",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2894",
            "id": 417396297,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzM5NjI5Nw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-08-30T17:12:34Z",
            "updated_at": "2018-08-30T17:16:15Z",
            "author_association": "MEMBER",
            "body": "`PROPAGATE_EXCEPTIONS` tells Flask to ignore the exception and pass it up the chain, to Werkzeug's dev server in this case. If this is a Werkzeug issue, it needs to be reported to Werkzeug.\r\n\r\nIf you turn off `PROPAGATE_EXCEPTIONS`, does *Flask's* logging handle the traceback correctly? It looks like earlier you indicated that it does show up with Flask, so this is a Werkzeug issue. Please reopen this against Werkzeug."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/417397064",
            "html_url": "https://github.com/pallets/flask/issues/2894#issuecomment-417397064",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2894",
            "id": 417397064,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzM5NzA2NA==",
            "user": {
                "login": "gabbard",
                "id": 7139661,
                "node_id": "MDQ6VXNlcjcxMzk2NjE=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/7139661?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gabbard",
                "html_url": "https://github.com/gabbard",
                "followers_url": "https://api.github.com/users/gabbard/followers",
                "following_url": "https://api.github.com/users/gabbard/following{/other_user}",
                "gists_url": "https://api.github.com/users/gabbard/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gabbard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gabbard/subscriptions",
                "organizations_url": "https://api.github.com/users/gabbard/orgs",
                "repos_url": "https://api.github.com/users/gabbard/repos",
                "events_url": "https://api.github.com/users/gabbard/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gabbard/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-08-30T17:15:06Z",
            "updated_at": "2018-08-30T17:15:06Z",
            "author_association": "NONE",
            "body": "@davidism : Yes, Flask handles it correctly - I will shift the issue to Werkzeug."
        }
    ]
}