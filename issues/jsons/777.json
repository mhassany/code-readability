{
    "url": "https://api.github.com/repos/pallets/flask/issues/777",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/777/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/777/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/777/events",
    "html_url": "https://github.com/pallets/flask/issues/777",
    "id": 15955875,
    "node_id": "MDU6SXNzdWUxNTk1NTg3NQ==",
    "number": 777,
    "title": "infinite processes with multiprocessing and app.run(debug=True)",
    "user": {
        "login": "dpinney",
        "id": 2131438,
        "node_id": "MDQ6VXNlcjIxMzE0Mzg=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/2131438?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dpinney",
        "html_url": "https://github.com/dpinney",
        "followers_url": "https://api.github.com/users/dpinney/followers",
        "following_url": "https://api.github.com/users/dpinney/following{/other_user}",
        "gists_url": "https://api.github.com/users/dpinney/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dpinney/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dpinney/subscriptions",
        "organizations_url": "https://api.github.com/users/dpinney/orgs",
        "repos_url": "https://api.github.com/users/dpinney/repos",
        "events_url": "https://api.github.com/users/dpinney/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dpinney/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2013-06-25T00:35:49Z",
    "updated_at": "2014-09-08T22:16:03Z",
    "closed_at": "2014-09-08T22:16:03Z",
    "author_association": "NONE",
    "body": "I'm building a flask app that would benefit from being able to spawn some subprocesses via python's standard multiprocessing module.\n\nHowever, spawning just one leads to an endless loop where an infinite number of processes are spawned. Yikes! It only happens when debug=True is passed to app.run. So it's not a problem in production, but it makes debugging hard.\n\nThis problem doesn't happen with the threading module, interestingly enough.\n\nCode to reproduce (Python version 2.7.3 on Windows 7 x64) follows:\n\n``` python\nimport time\nfrom multiprocessing import Process\nfrom flask import Flask\n\napp = Flask(__name__)\n\ndef testFun():\n    print 'Starting'\n    time.sleep(3)\n    print '3 Seconds Later'\nbackProc = Process(target=testFun, args=())\nbackProc.start()\n\n@app.route('/')\ndef root():\n    return 'Root'\n\nif __name__ == '__main__':\n    app.run(debug=True)\n```\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/20145506",
            "html_url": "https://github.com/pallets/flask/issues/777#issuecomment-20145506",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/777",
            "id": 20145506,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIwMTQ1NTA2",
            "user": {
                "login": "malicustommade",
                "id": 3865581,
                "node_id": "MDQ6VXNlcjM4NjU1ODE=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/3865581?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/malicustommade",
                "html_url": "https://github.com/malicustommade",
                "followers_url": "https://api.github.com/users/malicustommade/followers",
                "following_url": "https://api.github.com/users/malicustommade/following{/other_user}",
                "gists_url": "https://api.github.com/users/malicustommade/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/malicustommade/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/malicustommade/subscriptions",
                "organizations_url": "https://api.github.com/users/malicustommade/orgs",
                "repos_url": "https://api.github.com/users/malicustommade/repos",
                "events_url": "https://api.github.com/users/malicustommade/events{/privacy}",
                "received_events_url": "https://api.github.com/users/malicustommade/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-06-27T18:32:58Z",
            "updated_at": "2013-06-27T18:32:58Z",
            "author_association": "NONE",
            "body": "Can't reproduce on OSX:\n\ncake:zephyr mali$ uname -a\nDarwin cake 12.2.1 Darwin Kernel Version 12.2.1: Thu Oct 18 12:13:47 PDT 2012; root:xnu-2050.20.9~1/RELEASE_X86_64 x86_64\n\nOutput:\n\n(zephyrenv)cake:zephyr mali$ python infinite.py\nStarting\n- Running on http://127.0.0.1:5000/\n- Restarting with reloader\n  Starting\n  3 Seconds Later\n  3 Seconds Later\n\nI think the initial duplication is just due to the restarter, but other than that it's fine. Without knowing much, could it be a windows only bug with multiprocessing maybe?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/20146227",
            "html_url": "https://github.com/pallets/flask/issues/777#issuecomment-20146227",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/777",
            "id": 20146227,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIwMTQ2MjI3",
            "user": {
                "login": "doobeh",
                "id": 470417,
                "node_id": "MDQ6VXNlcjQ3MDQxNw==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/470417?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/doobeh",
                "html_url": "https://github.com/doobeh",
                "followers_url": "https://api.github.com/users/doobeh/followers",
                "following_url": "https://api.github.com/users/doobeh/following{/other_user}",
                "gists_url": "https://api.github.com/users/doobeh/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/doobeh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/doobeh/subscriptions",
                "organizations_url": "https://api.github.com/users/doobeh/orgs",
                "repos_url": "https://api.github.com/users/doobeh/repos",
                "events_url": "https://api.github.com/users/doobeh/events{/privacy}",
                "received_events_url": "https://api.github.com/users/doobeh/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-06-27T18:43:28Z",
            "updated_at": "2013-06-27T18:43:28Z",
            "author_association": "CONTRIBUTOR",
            "body": "I can still get to '/' but I do get a couple of RuntimeError exceptions when starting up, Windows 7 64bit, Python 2.7.4 32 bit.\n\n``` python\n * Running on http://127.0.0.1:5000/\n * Restarting with reloader\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Python27\\lib\\multiprocessing\\forking.py\", line 380, in main\n    prepare(preparation_data)\n  File \"C:\\Python27\\lib\\multiprocessing\\forking.py\", line 495, in prepare\n    '__parents_main__', file, path_name, etc\n  File \"C:\\Users\\a.plunkett\\Development\\_777\\777.py\", line 12, in <module>\n    backProc.start()\n  File \"C:\\Python27\\lib\\multiprocessing\\process.py\", line 130, in start\n    self._popen = Popen(self)\n  File \"C:\\Python27\\lib\\multiprocessing\\forking.py\", line 258, in __init__\n    cmd = get_command_line() + [rhandle]\n  File \"C:\\Python27\\lib\\multiprocessing\\forking.py\", line 358, in get_command_line\n    is not going to be frozen to produce a Windows executable.''')\nRuntimeError: \n            Attempt to start a new process before the current process\n            has finished its bootstrapping phase.\n\n            This probably means that you are on Windows and you have\n            forgotten to use the proper idiom in the main module:\n\n                if __name__ == '__main__':\n                    freeze_support()\n                    ...\n\n            The \"freeze_support()\" line can be omitted if the program\n            is not going to be frozen to produce a Windows executable.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Python27\\lib\\multiprocessing\\forking.py\", line 380, in main\n    prepare(preparation_data)\n  File \"C:\\Python27\\lib\\multiprocessing\\forking.py\", line 495, in prepare\n    '__parents_main__', file, path_name, etc\n  File \"C:\\Users\\a.plunkett\\Development\\_777\\777.py\", line 12, in <module>\n    backProc.start()\n  File \"C:\\Python27\\lib\\multiprocessing\\process.py\", line 130, in start\n    self._popen = Popen(self)\n  File \"C:\\Python27\\lib\\multiprocessing\\forking.py\", line 258, in __init__\n    cmd = get_command_line() + [rhandle]\n  File \"C:\\Python27\\lib\\multiprocessing\\forking.py\", line 358, in get_command_line\n    is not going to be frozen to produce a Windows executable.''')\nRuntimeError: \n            Attempt to start a new process before the current process\n            has finished its bootstrapping phase.\n\n            This probably means that you are on Windows and you have\n            forgotten to use the proper idiom in the main module:\n\n                if __name__ == '__main__':\n                    freeze_support()\n                    ...\n\n            The \"freeze_support()\" line can be omitted if the program\n            is not going to be frozen to produce a Windows executable.\n127.0.0.1 - - [27/Jun/2013 14:37:40] \"GET / HTTP/1.1\" 200 -\n127.0.0.1 - - [27/Jun/2013 14:37:41] \"GET /favicon.ico HTTP/1.1\" 404 -\n```\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/20196053",
            "html_url": "https://github.com/pallets/flask/issues/777#issuecomment-20196053",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/777",
            "id": 20196053,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIwMTk2MDUz",
            "user": {
                "login": "dpinney",
                "id": 2131438,
                "node_id": "MDQ6VXNlcjIxMzE0Mzg=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/2131438?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/dpinney",
                "html_url": "https://github.com/dpinney",
                "followers_url": "https://api.github.com/users/dpinney/followers",
                "following_url": "https://api.github.com/users/dpinney/following{/other_user}",
                "gists_url": "https://api.github.com/users/dpinney/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/dpinney/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dpinney/subscriptions",
                "organizations_url": "https://api.github.com/users/dpinney/orgs",
                "repos_url": "https://api.github.com/users/dpinney/repos",
                "events_url": "https://api.github.com/users/dpinney/events{/privacy}",
                "received_events_url": "https://api.github.com/users/dpinney/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-06-28T15:42:27Z",
            "updated_at": "2013-06-28T15:42:27Z",
            "author_association": "NONE",
            "body": "Not reproducible on Linux (Debian 7, AMD64, Python 2.7.3).\n\nSounds like something fishy is going on with multiprocessing and Windows. I originally suspected that multiprocessing was pickling the entire flask app, that was triggering the reloader, and that would spawn the additional processes. I'm flummoxed as to why this isn't happening on Linux.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/54867527",
            "html_url": "https://github.com/pallets/flask/issues/777#issuecomment-54867527",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/777",
            "id": 54867527,
            "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODY3NTI3",
            "user": {
                "login": "remram44",
                "id": 426784,
                "node_id": "MDQ6VXNlcjQyNjc4NA==",
                "avatar_url": "https://avatars3.githubusercontent.com/u/426784?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/remram44",
                "html_url": "https://github.com/remram44",
                "followers_url": "https://api.github.com/users/remram44/followers",
                "following_url": "https://api.github.com/users/remram44/following{/other_user}",
                "gists_url": "https://api.github.com/users/remram44/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/remram44/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/remram44/subscriptions",
                "organizations_url": "https://api.github.com/users/remram44/orgs",
                "repos_url": "https://api.github.com/users/remram44/repos",
                "events_url": "https://api.github.com/users/remram44/events{/privacy}",
                "received_events_url": "https://api.github.com/users/remram44/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-09-08T18:44:12Z",
            "updated_at": "2014-09-08T18:44:12Z",
            "author_association": "NONE",
            "body": "This is well known, multiprocessing will fork on systems which support it (i.e. not Windows) and re-execute the file otherwise (on Windows).\n\nOf course, re-executing the file re-starts a process, since you didn't put that in the `if __name__ == '__main__':` section (which exists for precisely this reason).\n\nThis is not a Flask issue.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/54870065",
            "html_url": "https://github.com/pallets/flask/issues/777#issuecomment-54870065",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/777",
            "id": 54870065,
            "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODcwMDY1",
            "user": {
                "login": "dpinney",
                "id": 2131438,
                "node_id": "MDQ6VXNlcjIxMzE0Mzg=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/2131438?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/dpinney",
                "html_url": "https://github.com/dpinney",
                "followers_url": "https://api.github.com/users/dpinney/followers",
                "following_url": "https://api.github.com/users/dpinney/following{/other_user}",
                "gists_url": "https://api.github.com/users/dpinney/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/dpinney/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dpinney/subscriptions",
                "organizations_url": "https://api.github.com/users/dpinney/orgs",
                "repos_url": "https://api.github.com/users/dpinney/repos",
                "events_url": "https://api.github.com/users/dpinney/events{/privacy}",
                "received_events_url": "https://api.github.com/users/dpinney/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-09-08T19:01:22Z",
            "updated_at": "2014-09-08T19:01:22Z",
            "author_association": "NONE",
            "body": "@remram44 thanks for that insight. I'll rewrite my test/example.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/54895780",
            "html_url": "https://github.com/pallets/flask/issues/777#issuecomment-54895780",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/777",
            "id": 54895780,
            "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODk1Nzgw",
            "user": {
                "login": "dpinney",
                "id": 2131438,
                "node_id": "MDQ6VXNlcjIxMzE0Mzg=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/2131438?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/dpinney",
                "html_url": "https://github.com/dpinney",
                "followers_url": "https://api.github.com/users/dpinney/followers",
                "following_url": "https://api.github.com/users/dpinney/following{/other_user}",
                "gists_url": "https://api.github.com/users/dpinney/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/dpinney/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dpinney/subscriptions",
                "organizations_url": "https://api.github.com/users/dpinney/orgs",
                "repos_url": "https://api.github.com/users/dpinney/repos",
                "events_url": "https://api.github.com/users/dpinney/events{/privacy}",
                "received_events_url": "https://api.github.com/users/dpinney/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-09-08T22:16:03Z",
            "updated_at": "2014-09-08T22:16:03Z",
            "author_association": "NONE",
            "body": "Okay, here's the corrected code:\n\n```\nimport time\nfrom multiprocessing import Process\nfrom flask import Flask\n\napp = Flask(__name__)\n\ndef testFun():\n    print 'Starting'\n    time.sleep(3)\n    print '3 Seconds Later'\n\n@app.route('/')\ndef root():\n    return 'Started a background process with PID ' + str(backProc.pid)\n\nif __name__ == '__main__':\n    backProc = Process(target=testFun, args=())\n    backProc.start()\n    app.run(debug=True)\n```\n\nI tested, and no infinite number of processes on Windows once multiprocessing calls are not directly in the module.\n\nI agree that this isn't Flask-specific, so I'm closing it.\n\nThanks all for the debugging help!\n"
        }
    ]
}