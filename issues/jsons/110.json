{
    "url": "https://api.github.com/repos/pallets/flask/issues/110",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/110/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/110/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/110/events",
    "html_url": "https://github.com/pallets/flask/issues/110",
    "id": 289109,
    "node_id": "MDU6SXNzdWUyODkxMDk=",
    "number": 110,
    "title": "getting raw POST data for whatever mimetype",
    "user": {
        "login": "sebest",
        "id": 115339,
        "node_id": "MDQ6VXNlcjExNTMzOQ==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/115339?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebest",
        "html_url": "https://github.com/sebest",
        "followers_url": "https://api.github.com/users/sebest/followers",
        "following_url": "https://api.github.com/users/sebest/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebest/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebest/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebest/subscriptions",
        "organizations_url": "https://api.github.com/users/sebest/orgs",
        "repos_url": "https://api.github.com/users/sebest/repos",
        "events_url": "https://api.github.com/users/sebest/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebest/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2010-08-25T01:08:42Z",
    "updated_at": "2010-09-08T22:24:37Z",
    "closed_at": "2010-08-25T16:46:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hello,\n\nit seems that request.data only has content if the mime type is unknown\n\nI think it would be handy to be able to access the raw POST data even if the mime type is know:\nfor example i m POSTing a JSON string, but i don t want flask to unserialize it because i'll do it later.\n\nThe same with curl -d that add a mime type of application/x-www-form-urlencoded so, request.data is empty\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/370626",
            "html_url": "https://github.com/pallets/flask/issues/110#issuecomment-370626",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/110",
            "id": 370626,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDYyNg==",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2010-08-25T09:46:32Z",
            "updated_at": "2010-08-25T09:46:32Z",
            "author_association": "MEMBER",
            "body": "First of all, if you are sending raw JSON strings you will have to set a correct mimetype. application/json for example. Than you can directly access it from request.json or you can do it later from decoding request.data yourself. Flask decodes on first access to request.json.\n\nIf you really do want to consume the raw input stream yourself independent on the mimetype, you can do that, but you will have to carry all the consequences:\n\n```\ndata = request.input_stream.read(request.headers.get('content-type', type=int) or 0)\n```\n\nThis will give you the incoming data. For this you will have to ensure that:\n1. at no point before anything accessed request.form, request.files, request.stream or request.data\n2. at no point later will anyone access any of the attributes mentioned earlier\n\nThis can be enforced by setting the `shallow` flag on the request object (request.shallow = True).\n\nMay I ask for the usecase of this?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/396345",
            "html_url": "https://github.com/pallets/flask/issues/110#issuecomment-396345",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/110",
            "id": 396345,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjM0NQ==",
            "user": {
                "login": "sebest",
                "id": 115339,
                "node_id": "MDQ6VXNlcjExNTMzOQ==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/115339?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/sebest",
                "html_url": "https://github.com/sebest",
                "followers_url": "https://api.github.com/users/sebest/followers",
                "following_url": "https://api.github.com/users/sebest/following{/other_user}",
                "gists_url": "https://api.github.com/users/sebest/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/sebest/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sebest/subscriptions",
                "organizations_url": "https://api.github.com/users/sebest/orgs",
                "repos_url": "https://api.github.com/users/sebest/repos",
                "events_url": "https://api.github.com/users/sebest/events{/privacy}",
                "received_events_url": "https://api.github.com/users/sebest/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2010-09-08T22:24:37Z",
            "updated_at": "2010-09-08T22:24:37Z",
            "author_association": "CONTRIBUTOR",
            "body": "I think that you are right, i should send the correct mimetype.\nI was converting some code using django, and it seems that with django request.raw_data returns the data unmodified for any mimetype. And using curl, i didn't understand why it was working with django and not with flask until i noticed that request.data is empty with flask when the mimetype is application/x-www-form-urlencoded. I should have read the documentation more closely.\n"
        }
    ]
}