{
    "url": "https://api.github.com/repos/pallets/flask/issues/3032",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/3032/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/3032/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/3032/events",
    "html_url": "https://github.com/pallets/flask/issues/3032",
    "id": 391411394,
    "node_id": "MDU6SXNzdWUzOTE0MTEzOTQ=",
    "number": 3032,
    "title": "request.path doesn't include request.script_root when running under a subdirectory",
    "user": {
        "login": "ColdHeat",
        "id": 166333,
        "node_id": "MDQ6VXNlcjE2NjMzMw==",
        "avatar_url": "https://avatars3.githubusercontent.com/u/166333?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ColdHeat",
        "html_url": "https://github.com/ColdHeat",
        "followers_url": "https://api.github.com/users/ColdHeat/followers",
        "following_url": "https://api.github.com/users/ColdHeat/following{/other_user}",
        "gists_url": "https://api.github.com/users/ColdHeat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ColdHeat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ColdHeat/subscriptions",
        "organizations_url": "https://api.github.com/users/ColdHeat/orgs",
        "repos_url": "https://api.github.com/users/ColdHeat/repos",
        "events_url": "https://api.github.com/users/ColdHeat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ColdHeat/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-12-15T21:01:34Z",
    "updated_at": "2018-12-16T01:26:42Z",
    "closed_at": "2018-12-16T00:58:37Z",
    "author_association": "NONE",
    "body": "I have an application which can be configured to run under a subdomain/domain or a subdirectory. This is controlled by setting `APPLICATION_ROOT` to a value other than `/`. \r\n\r\nSome of my decorators use `request.path` to determine where to redirect the user after logging in. However, when running under a subdirectory, `request.path` does not include `request.script_root` and the user could get redirected somewhere they shouldn't. Using `request.url` creates full URLs when we should only need relative ones. \r\n\r\nBased on [docs](http://flask.pocoo.org/docs/1.0/api/?highlight=script_root#flask.Request.url_root) it is intentional that `request.path` doesn't include `request.script_root`.\r\n\r\nUltimately because my application has a plugin interface and I don't want to deviate too much from Flask documentation, what is the optimal way to get this behavior to be consistent between deployment strategies? \r\n\r\n * Using `url_for()` doesn't seem optimal because certain target endpoints could require arguments to be passed in which might not work without parsing `request.path` anyway. \r\n * Combining `request.script_root` and `request.path` in every usage seems like an easy way to introduce bugs\r\n * Creating a `BaseRequest` subclass seems like the smartest solution but should there be a new request property (e.g. `request.script_path`)? Or should I replace the existing `path` and `full_path`? \r\n\r\nThe PR I have in preparation to fix this issue uses a BaseRequest subclass but I don't feel great about it: \r\nhttps://github.com/CTFd/CTFd/pull/802/files#diff-1dec134679d6639679743763954061d5R28",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/447599690",
            "html_url": "https://github.com/pallets/flask/issues/3032#issuecomment-447599690",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3032",
            "id": 447599690,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzU5OTY5MA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-12-15T21:39:53Z",
            "updated_at": "2018-12-15T21:43:45Z",
            "author_association": "MEMBER",
            "body": "I don't understand the bug you're reporting. Please provide a concrete, minimal example of the issue."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/447606208",
            "html_url": "https://github.com/pallets/flask/issues/3032#issuecomment-447606208",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3032",
            "id": 447606208,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzYwNjIwOA==",
            "user": {
                "login": "ColdHeat",
                "id": 166333,
                "node_id": "MDQ6VXNlcjE2NjMzMw==",
                "avatar_url": "https://avatars3.githubusercontent.com/u/166333?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ColdHeat",
                "html_url": "https://github.com/ColdHeat",
                "followers_url": "https://api.github.com/users/ColdHeat/followers",
                "following_url": "https://api.github.com/users/ColdHeat/following{/other_user}",
                "gists_url": "https://api.github.com/users/ColdHeat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ColdHeat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ColdHeat/subscriptions",
                "organizations_url": "https://api.github.com/users/ColdHeat/orgs",
                "repos_url": "https://api.github.com/users/ColdHeat/repos",
                "events_url": "https://api.github.com/users/ColdHeat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ColdHeat/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-12-15T23:46:59Z",
            "updated_at": "2018-12-15T23:46:59Z",
            "author_association": "NONE",
            "body": "```python\r\nfrom flask import Flask, request\r\nfrom werkzeug.serving import run_simple\r\nfrom werkzeug.wsgi import DispatcherMiddleware\r\n\r\napp = Flask(__name__)\r\n\r\n@app.route('/hi')\r\ndef hello_world():\r\n    return 'Hello, World!'\r\n\r\n@app.before_request\r\ndef show_path():\r\n    print request.script_root, request.path\r\n\r\napp.config['APPLICATION_ROOT'] = '/test'\r\n\r\nif __name__ == '__main__':\r\n    application = DispatcherMiddleware(Flask('dummy_app'), {\r\n        app.config['APPLICATION_ROOT']: app,\r\n    })\r\n    run_simple('localhost', 4000, application, use_reloader=True)\r\n```\r\n\r\nHere's a diluted test case based off of the Flask quickstart and here is the output. \r\n\r\n```\r\n\u276f python example.py\r\n * Running on http://localhost:4000/ (Press CTRL+C to quit)\r\n * Restarting with stat\r\n/test /hi\r\n127.0.0.1 - - [15/Dec/2018 18:41:55] \"GET /test/hi HTTP/1.1\" 200 -\r\n```\r\n\r\nUsing APPLICATION_ROOT this server is running in a subdirectory but request.path is pointing to `/hi` when the true full path is `/test/hi`. \r\n\r\nI understand that [the docs](http://flask.pocoo.org/docs/1.0/api/?highlight=script_root#flask.Request.url_root) are clear in saying that `request.path` doesn't return the full URL path but what is the best way to grab it that doesn't involve doing `request.script_root + request.path` everywhere? Would it just be to subclass the Request object and reprepand `request.path` with `request.script_root`? \r\n\r\nFor example: \r\n```\r\nclass CorrectSubDirectoryRequest(Request):\r\n    @cached_property\r\n    def script_path(self):\r\n        return self.script_root + self.path\r\n```"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/447608483",
            "html_url": "https://github.com/pallets/flask/issues/3032#issuecomment-447608483",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3032",
            "id": 447608483,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzYwODQ4Mw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-12-16T00:35:37Z",
            "updated_at": "2018-12-16T00:35:37Z",
            "author_association": "MEMBER",
            "body": "I don't understand why you need to look at the script root. The path is the path within your application, which routing is performed on. The script root is outside your application, but is handled by url_for."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/447609162",
            "html_url": "https://github.com/pallets/flask/issues/3032#issuecomment-447609162",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3032",
            "id": 447609162,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzYwOTE2Mg==",
            "user": {
                "login": "ColdHeat",
                "id": 166333,
                "node_id": "MDQ6VXNlcjE2NjMzMw==",
                "avatar_url": "https://avatars3.githubusercontent.com/u/166333?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ColdHeat",
                "html_url": "https://github.com/ColdHeat",
                "followers_url": "https://api.github.com/users/ColdHeat/followers",
                "following_url": "https://api.github.com/users/ColdHeat/following{/other_user}",
                "gists_url": "https://api.github.com/users/ColdHeat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ColdHeat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ColdHeat/subscriptions",
                "organizations_url": "https://api.github.com/users/ColdHeat/orgs",
                "repos_url": "https://api.github.com/users/ColdHeat/repos",
                "events_url": "https://api.github.com/users/ColdHeat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ColdHeat/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-12-16T00:51:35Z",
            "updated_at": "2018-12-16T00:51:35Z",
            "author_association": "NONE",
            "body": "How would you restructure this decorator?\n\nhttps://github.com/CTFd/CTFd/blob/master/CTFd/utils/decorators/__init__.py#L70\n\nIf I redirect purely based off request.path a user could end up redirected\nto a different application.\n\nIf I use url_for I would need to reconstruct the necessary arguments to\neach endpoint right? Is there a better way to do this than just appending\nscript root and path? At that point I might as well overload path with a\nsubclass.\n\nOn Sat, Dec 15, 2018 at 7:36 PM David Lord <notifications@github.com> wrote:\n\n> I don't understand why you need to look at the script root. The path is\n> the path within your application, which routing is performed on. The script\n> root is outside your application, but is handled by url_for.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_pallets_flask_issues_3032-23issuecomment-2D447608483&d=DwMCaQ&c=slrrB7dE8n7gBJbeO0g-IQ&r=GrSEXVo9nswNldgE1q1G0g&m=i7Z6JAW7nC3cm1rAh3M1ShAsoSaNmvgCoIRzuuAM51Y&s=TX-7_GKdIvLxkIOVnwyhq9pzF-iGx1bxcOMo8vISI74&e=>,\n> or mute the thread\n> <https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_AAKJvZEtON1aW643noml5cIDXwdySNCXks5u5ZWAgaJpZM4ZU5fv&d=DwMCaQ&c=slrrB7dE8n7gBJbeO0g-IQ&r=GrSEXVo9nswNldgE1q1G0g&m=i7Z6JAW7nC3cm1rAh3M1ShAsoSaNmvgCoIRzuuAM51Y&s=QmqR7K2HdQWKr3rEa0AnzVKKLFCcjyqJt_2JBVzAGt4&e=>\n> .\n>\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/447609416",
            "html_url": "https://github.com/pallets/flask/issues/3032#issuecomment-447609416",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3032",
            "id": 447609416,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzYwOTQxNg==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-12-16T00:58:37Z",
            "updated_at": "2018-12-16T00:58:37Z",
            "author_association": "MEMBER",
            "body": "`request.url` instead of `request.path`"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/447610468",
            "html_url": "https://github.com/pallets/flask/issues/3032#issuecomment-447610468",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3032",
            "id": 447610468,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzYxMDQ2OA==",
            "user": {
                "login": "ColdHeat",
                "id": 166333,
                "node_id": "MDQ6VXNlcjE2NjMzMw==",
                "avatar_url": "https://avatars3.githubusercontent.com/u/166333?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ColdHeat",
                "html_url": "https://github.com/ColdHeat",
                "followers_url": "https://api.github.com/users/ColdHeat/followers",
                "following_url": "https://api.github.com/users/ColdHeat/following{/other_user}",
                "gists_url": "https://api.github.com/users/ColdHeat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ColdHeat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ColdHeat/subscriptions",
                "organizations_url": "https://api.github.com/users/ColdHeat/orgs",
                "repos_url": "https://api.github.com/users/ColdHeat/repos",
                "events_url": "https://api.github.com/users/ColdHeat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ColdHeat/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-12-16T01:26:42Z",
            "updated_at": "2018-12-16T01:26:42Z",
            "author_association": "NONE",
            "body": "`request.url` will provide an absolute URL, nothing to generate something relative? It seems like it'd be something that's worth implementing at the Request object level? "
        }
    ]
}