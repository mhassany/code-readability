{
    "url": "https://api.github.com/repos/pallets/flask/issues/2702",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2702/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2702/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2702/events",
    "html_url": "https://github.com/pallets/flask/issues/2702",
    "id": 314449404,
    "node_id": "MDU6SXNzdWUzMTQ0NDk0MDQ=",
    "number": 2702,
    "title": "Ability to check if client connection is still open",
    "user": {
        "login": "MaxNoe",
        "id": 5488440,
        "node_id": "MDQ6VXNlcjU0ODg0NDA=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/5488440?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MaxNoe",
        "html_url": "https://github.com/MaxNoe",
        "followers_url": "https://api.github.com/users/MaxNoe/followers",
        "following_url": "https://api.github.com/users/MaxNoe/following{/other_user}",
        "gists_url": "https://api.github.com/users/MaxNoe/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/MaxNoe/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/MaxNoe/subscriptions",
        "organizations_url": "https://api.github.com/users/MaxNoe/orgs",
        "repos_url": "https://api.github.com/users/MaxNoe/repos",
        "events_url": "https://api.github.com/users/MaxNoe/events{/privacy}",
        "received_events_url": "https://api.github.com/users/MaxNoe/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2018-04-15T20:33:54Z",
    "updated_at": "2018-04-16T04:44:02Z",
    "closed_at": "2018-04-16T04:43:50Z",
    "author_association": "NONE",
    "body": "For things like server sent events, it would be really great to have an easy option to check if the client connection of a streamed request is still open.\r\n\r\nSomething like this:\r\n\r\n```python\r\nfrom flask import Flask, Response, client, stream_with_context\r\n\r\napp = Flask('sse')\r\n\r\n@app.route('/stream')\r\ndef sse():\r\n    def gen_sse():\r\n        with open('log.txt') as f:\r\n            while client.is_connected(): \r\n                lines = f.read()\r\n                if lines:\r\n                    yield build_sse(lines)\r\n                time.sleep(1)\r\n\r\n    return Response(\r\n        stream_with_context(gen_sse()),\r\n        mimetype='text/event-stream',\r\n    )\r\n\r\ndef build_sse(message, id_=None):\r\n    sse = ''\r\n    if id_ is not None:\r\n        sse += f'id: {id_}\\n'\r\n    sse += 'data: ' + '\\ndata:'.join(message.splitlines())\r\n    sse += '\\n\\n'\r\n    return sse\r\n```",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/381435986",
            "html_url": "https://github.com/pallets/flask/issues/2702#issuecomment-381435986",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2702",
            "id": 381435986,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTQzNTk4Ng==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-04-15T20:35:31Z",
            "updated_at": "2018-04-15T20:35:31Z",
            "author_association": "MEMBER",
            "body": "Does the WSGI protocol even expose this information?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/381436217",
            "html_url": "https://github.com/pallets/flask/issues/2702#issuecomment-381436217",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2702",
            "id": 381436217,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTQzNjIxNw==",
            "user": {
                "login": "MaxNoe",
                "id": 5488440,
                "node_id": "MDQ6VXNlcjU0ODg0NDA=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/5488440?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/MaxNoe",
                "html_url": "https://github.com/MaxNoe",
                "followers_url": "https://api.github.com/users/MaxNoe/followers",
                "following_url": "https://api.github.com/users/MaxNoe/following{/other_user}",
                "gists_url": "https://api.github.com/users/MaxNoe/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/MaxNoe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MaxNoe/subscriptions",
                "organizations_url": "https://api.github.com/users/MaxNoe/orgs",
                "repos_url": "https://api.github.com/users/MaxNoe/repos",
                "events_url": "https://api.github.com/users/MaxNoe/events{/privacy}",
                "received_events_url": "https://api.github.com/users/MaxNoe/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-04-15T20:38:58Z",
            "updated_at": "2018-04-15T20:38:58Z",
            "author_association": "NONE",
            "body": "Maybe this helps? https://github.com/bottlepy/bottle/issues/414"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/381436957",
            "html_url": "https://github.com/pallets/flask/issues/2702#issuecomment-381436957",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2702",
            "id": 381436957,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTQzNjk1Nw==",
            "user": {
                "login": "MaxNoe",
                "id": 5488440,
                "node_id": "MDQ6VXNlcjU0ODg0NDA=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/5488440?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/MaxNoe",
                "html_url": "https://github.com/MaxNoe",
                "followers_url": "https://api.github.com/users/MaxNoe/followers",
                "following_url": "https://api.github.com/users/MaxNoe/following{/other_user}",
                "gists_url": "https://api.github.com/users/MaxNoe/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/MaxNoe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MaxNoe/subscriptions",
                "organizations_url": "https://api.github.com/users/MaxNoe/orgs",
                "repos_url": "https://api.github.com/users/MaxNoe/repos",
                "events_url": "https://api.github.com/users/MaxNoe/events{/privacy}",
                "received_events_url": "https://api.github.com/users/MaxNoe/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-04-15T20:49:48Z",
            "updated_at": "2018-04-15T20:49:48Z",
            "author_association": "NONE",
            "body": "I tried using\r\n\r\n```python\r\nclass SSEGenerator:\r\n    def __init__(self):\r\n        self.closed = False\r\n\r\n    def close(self):\r\n        print('closed')\r\n        self.closed = True\r\n\r\n    def __iter__(self):\r\n        with open('log.txt') as f:\r\n            i = 0\r\n            while not self.closed:\r\n                lines = f.read()\r\n                if lines:\r\n                    yield build_sse(lines, id_=i)\r\n                time.sleep(1)\r\n\r\n\r\n@app.route('/stream')\r\ndef sse():\r\n    return Response(\r\n        SSEGenerator(),\r\n        mimetype='text/event-stream',\r\n        headers={'Cache-Control': 'no-cache'}\r\n    )\r\n\r\n```\r\n\r\nBut the `close` method of the generator is not called on client disconnect."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/381450889",
            "html_url": "https://github.com/pallets/flask/issues/2702#issuecomment-381450889",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2702",
            "id": 381450889,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTQ1MDg4OQ==",
            "user": {
                "login": "miguelgrinberg",
                "id": 2715854,
                "node_id": "MDQ6VXNlcjI3MTU4NTQ=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/miguelgrinberg",
                "html_url": "https://github.com/miguelgrinberg",
                "followers_url": "https://api.github.com/users/miguelgrinberg/followers",
                "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions",
                "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs",
                "repos_url": "https://api.github.com/users/miguelgrinberg/repos",
                "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}",
                "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-04-16T00:34:31Z",
            "updated_at": "2018-04-16T00:34:31Z",
            "author_association": "MEMBER",
            "body": "@MaxNoe My technique for detecting gone clients in streaming handlers is to watch the I/O operations that you do in your handler for errors. If you write to a socket that has been closed from the other side, the operation will raise an `OSError`, typically with an `errno` value of `EPIPE`, or sometimes `EBADF`. \r\n\r\nIsn't that sufficient for your needs? I don't think there is a way to detect a closed socket without writing or reading on it."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/381455763",
            "html_url": "https://github.com/pallets/flask/issues/2702#issuecomment-381455763",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2702",
            "id": 381455763,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTQ1NTc2Mw==",
            "user": {
                "login": "MaxNoe",
                "id": 5488440,
                "node_id": "MDQ6VXNlcjU0ODg0NDA=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/5488440?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/MaxNoe",
                "html_url": "https://github.com/MaxNoe",
                "followers_url": "https://api.github.com/users/MaxNoe/followers",
                "following_url": "https://api.github.com/users/MaxNoe/following{/other_user}",
                "gists_url": "https://api.github.com/users/MaxNoe/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/MaxNoe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MaxNoe/subscriptions",
                "organizations_url": "https://api.github.com/users/MaxNoe/orgs",
                "repos_url": "https://api.github.com/users/MaxNoe/repos",
                "events_url": "https://api.github.com/users/MaxNoe/events{/privacy}",
                "received_events_url": "https://api.github.com/users/MaxNoe/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-04-16T01:30:39Z",
            "updated_at": "2018-04-16T01:30:39Z",
            "author_association": "NONE",
            "body": "In the example i've given, I don't get any kind of exception"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/381457479",
            "html_url": "https://github.com/pallets/flask/issues/2702#issuecomment-381457479",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2702",
            "id": 381457479,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTQ1NzQ3OQ==",
            "user": {
                "login": "miguelgrinberg",
                "id": 2715854,
                "node_id": "MDQ6VXNlcjI3MTU4NTQ=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/miguelgrinberg",
                "html_url": "https://github.com/miguelgrinberg",
                "followers_url": "https://api.github.com/users/miguelgrinberg/followers",
                "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions",
                "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs",
                "repos_url": "https://api.github.com/users/miguelgrinberg/repos",
                "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}",
                "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-04-16T01:45:47Z",
            "updated_at": "2018-04-16T01:45:47Z",
            "author_association": "MEMBER",
            "body": "Well, that is not what I see here. I adapted your example code to a standalone app as follows:\r\n\r\n```python\r\nimport time\r\nfrom flask import Flask, Response, stream_with_context\r\n\r\napp = Flask(__name__)\r\n\r\n@app.route('/stream')\r\ndef stream():\r\n    def gen():\r\n        i = 0\r\n        while True:\r\n            data = 'this is line {}'.format(i)\r\n            print(data)\r\n            yield data + '<br>'\r\n            i += 1\r\n            time.sleep(1)\r\n\r\n    return Response(stream_with_context(gen()))\r\n```\r\n\r\nI connect to `http://localhost:5000/stream` and the lines start coming, both on the browser and on the console. If I close the browser, a second or two later the lines stop printing in the console, which means that Flask caught the `OSError` exception and cancelled the generator.\r\n\r\nAs I said above, the closed socket is detected when a write is done on the socket. Flask is writing the lines that you yield, and as far as I can see it is handling the closing of the socket in the correct way."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/381458889",
            "html_url": "https://github.com/pallets/flask/issues/2702#issuecomment-381458889",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2702",
            "id": 381458889,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTQ1ODg4OQ==",
            "user": {
                "login": "miguelgrinberg",
                "id": 2715854,
                "node_id": "MDQ6VXNlcjI3MTU4NTQ=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/miguelgrinberg",
                "html_url": "https://github.com/miguelgrinberg",
                "followers_url": "https://api.github.com/users/miguelgrinberg/followers",
                "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions",
                "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs",
                "repos_url": "https://api.github.com/users/miguelgrinberg/repos",
                "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}",
                "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-04-16T01:58:11Z",
            "updated_at": "2018-04-16T01:58:11Z",
            "author_association": "MEMBER",
            "body": "One more thing. If what you are asking is to have a way to be notified when the generator is stopped, then you can catch `GeneratorExit` in your function. Here is my above example modified to be notified when the client went away:\r\n\r\n```python\r\nimport time\r\nfrom flask import Flask, Response, stream_with_context\r\n\r\napp = Flask(__name__)\r\n\r\n@app.route('/stream')\r\ndef stream():\r\n    def gen():\r\n        try:\r\n            i = 0\r\n            while True:\r\n                data = 'this is line {}'.format(i)\r\n                print(data)\r\n                yield data + '<br>'\r\n                i += 1\r\n                time.sleep(1)\r\n        except GeneratorExit:\r\n            print('closed')\r\n\r\n    return Response(stream_with_context(gen()))\r\n```"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/381462237",
            "html_url": "https://github.com/pallets/flask/issues/2702#issuecomment-381462237",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2702",
            "id": 381462237,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTQ2MjIzNw==",
            "user": {
                "login": "MaxNoe",
                "id": 5488440,
                "node_id": "MDQ6VXNlcjU0ODg0NDA=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/5488440?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/MaxNoe",
                "html_url": "https://github.com/MaxNoe",
                "followers_url": "https://api.github.com/users/MaxNoe/followers",
                "following_url": "https://api.github.com/users/MaxNoe/following{/other_user}",
                "gists_url": "https://api.github.com/users/MaxNoe/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/MaxNoe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MaxNoe/subscriptions",
                "organizations_url": "https://api.github.com/users/MaxNoe/orgs",
                "repos_url": "https://api.github.com/users/MaxNoe/repos",
                "events_url": "https://api.github.com/users/MaxNoe/events{/privacy}",
                "received_events_url": "https://api.github.com/users/MaxNoe/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-04-16T02:24:54Z",
            "updated_at": "2018-04-16T02:24:54Z",
            "author_association": "NONE",
            "body": "I think I understand now. I try streaming a log file. So as long as not a new line from the logfile comes in, my generator does not try to stream a new result."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/381463399",
            "html_url": "https://github.com/pallets/flask/issues/2702#issuecomment-381463399",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2702",
            "id": 381463399,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTQ2MzM5OQ==",
            "user": {
                "login": "miguelgrinberg",
                "id": 2715854,
                "node_id": "MDQ6VXNlcjI3MTU4NTQ=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/miguelgrinberg",
                "html_url": "https://github.com/miguelgrinberg",
                "followers_url": "https://api.github.com/users/miguelgrinberg/followers",
                "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions",
                "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs",
                "repos_url": "https://api.github.com/users/miguelgrinberg/repos",
                "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}",
                "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-04-16T02:33:46Z",
            "updated_at": "2018-04-16T02:33:46Z",
            "author_association": "MEMBER",
            "body": "I see. So your generator must be blocking on the `f.read()` line for a while. Unfortunately there is nothing you can do to escape that blocking call when the client goes away. I would ensure your log file gets updated often, maybe a heartbeat log line that prevents your generator from ever blocking for too long on that read call."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/381467066",
            "html_url": "https://github.com/pallets/flask/issues/2702#issuecomment-381467066",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2702",
            "id": 381467066,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTQ2NzA2Ng==",
            "user": {
                "login": "MaxNoe",
                "id": 5488440,
                "node_id": "MDQ6VXNlcjU0ODg0NDA=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/5488440?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/MaxNoe",
                "html_url": "https://github.com/MaxNoe",
                "followers_url": "https://api.github.com/users/MaxNoe/followers",
                "following_url": "https://api.github.com/users/MaxNoe/following{/other_user}",
                "gists_url": "https://api.github.com/users/MaxNoe/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/MaxNoe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MaxNoe/subscriptions",
                "organizations_url": "https://api.github.com/users/MaxNoe/orgs",
                "repos_url": "https://api.github.com/users/MaxNoe/repos",
                "events_url": "https://api.github.com/users/MaxNoe/events{/privacy}",
                "received_events_url": "https://api.github.com/users/MaxNoe/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-04-16T03:02:10Z",
            "updated_at": "2018-04-16T03:02:10Z",
            "author_association": "NONE",
            "body": "The f.read does not block, it immediately returns an empty string. I could send an empty sse."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/381467734",
            "html_url": "https://github.com/pallets/flask/issues/2702#issuecomment-381467734",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2702",
            "id": 381467734,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTQ2NzczNA==",
            "user": {
                "login": "MaxNoe",
                "id": 5488440,
                "node_id": "MDQ6VXNlcjU0ODg0NDA=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/5488440?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/MaxNoe",
                "html_url": "https://github.com/MaxNoe",
                "followers_url": "https://api.github.com/users/MaxNoe/followers",
                "following_url": "https://api.github.com/users/MaxNoe/following{/other_user}",
                "gists_url": "https://api.github.com/users/MaxNoe/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/MaxNoe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MaxNoe/subscriptions",
                "organizations_url": "https://api.github.com/users/MaxNoe/orgs",
                "repos_url": "https://api.github.com/users/MaxNoe/repos",
                "events_url": "https://api.github.com/users/MaxNoe/events{/privacy}",
                "received_events_url": "https://api.github.com/users/MaxNoe/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-04-16T03:07:52Z",
            "updated_at": "2018-04-16T03:07:52Z",
            "author_association": "NONE",
            "body": "Ok, i moved the check for the emptiness from the server to the client (basically sending an empty sse every second) and it works nicely now.\r\n\r\nHowever, if there is a way comparable to `connection_status` in php, that would be really helpful."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/381468316",
            "html_url": "https://github.com/pallets/flask/issues/2702#issuecomment-381468316",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2702",
            "id": 381468316,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTQ2ODMxNg==",
            "user": {
                "login": "miguelgrinberg",
                "id": 2715854,
                "node_id": "MDQ6VXNlcjI3MTU4NTQ=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/miguelgrinberg",
                "html_url": "https://github.com/miguelgrinberg",
                "followers_url": "https://api.github.com/users/miguelgrinberg/followers",
                "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions",
                "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs",
                "repos_url": "https://api.github.com/users/miguelgrinberg/repos",
                "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}",
                "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-04-16T03:12:26Z",
            "updated_at": "2018-04-16T03:12:26Z",
            "author_association": "MEMBER",
            "body": "@MaxNoe read the first user note in the [connection_status documentation](http://php.net/manual/en/function.connection-status.php). That matches what I told you above, without writing on the connection php is also unable to detect a closed socket. The difference is that php appears to record the closed state in this `connection_status` variable so that the application can check it, while Flask closes the generator. Add a try/except for `GeneratorExit` as I showed you and you will have a notification on socket closed."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/381478437",
            "html_url": "https://github.com/pallets/flask/issues/2702#issuecomment-381478437",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2702",
            "id": 381478437,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTQ3ODQzNw==",
            "user": {
                "login": "MaxNoe",
                "id": 5488440,
                "node_id": "MDQ6VXNlcjU0ODg0NDA=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/5488440?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/MaxNoe",
                "html_url": "https://github.com/MaxNoe",
                "followers_url": "https://api.github.com/users/MaxNoe/followers",
                "following_url": "https://api.github.com/users/MaxNoe/following{/other_user}",
                "gists_url": "https://api.github.com/users/MaxNoe/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/MaxNoe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MaxNoe/subscriptions",
                "organizations_url": "https://api.github.com/users/MaxNoe/orgs",
                "repos_url": "https://api.github.com/users/MaxNoe/repos",
                "events_url": "https://api.github.com/users/MaxNoe/events{/privacy}",
                "received_events_url": "https://api.github.com/users/MaxNoe/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-04-16T04:43:50Z",
            "updated_at": "2018-04-16T04:44:02Z",
            "author_association": "NONE",
            "body": "Thanks for the help and  explanations!"
        }
    ]
}