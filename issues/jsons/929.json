{
    "url": "https://api.github.com/repos/pallets/flask/issues/929",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/929/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/929/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/929/events",
    "html_url": "https://github.com/pallets/flask/pull/929",
    "id": 24283881,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTA4Mjc2Mjc=",
    "number": 929,
    "title": "Added SESSION_COOKIE_PERMANENT configuration to control permanent session",
    "user": {
        "login": "davislx",
        "id": 1285642,
        "node_id": "MDQ6VXNlcjEyODU2NDI=",
        "avatar_url": "https://avatars2.githubusercontent.com/u/1285642?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davislx",
        "html_url": "https://github.com/davislx",
        "followers_url": "https://api.github.com/users/davislx/followers",
        "following_url": "https://api.github.com/users/davislx/following{/other_user}",
        "gists_url": "https://api.github.com/users/davislx/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/davislx/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/davislx/subscriptions",
        "organizations_url": "https://api.github.com/users/davislx/orgs",
        "repos_url": "https://api.github.com/users/davislx/repos",
        "events_url": "https://api.github.com/users/davislx/events{/privacy}",
        "received_events_url": "https://api.github.com/users/davislx/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-12-14T02:08:07Z",
    "updated_at": "2014-06-16T07:58:46Z",
    "closed_at": "2014-02-08T22:13:23Z",
    "author_association": "NONE",
    "pull_request": {
        "url": "https://api.github.com/repos/pallets/flask/pulls/929",
        "html_url": "https://github.com/pallets/flask/pull/929",
        "diff_url": "https://github.com/pallets/flask/pull/929.diff",
        "patch_url": "https://github.com/pallets/flask/pull/929.patch"
    },
    "body": "## Pull request summary\n\nAdded `SESSION_COOKIE_PERMANENT` configuration to control whether the signed cookie based flask session will be initialized to permanent or not.\nCorresponding documentation and tests\n## Testing done\n\nNew unit test for positive and negative cases, as well as making sure the old tests didn't break\n\n```\n$ python run-tests.py \n........................................................................................................................................................................................................................................\n----------------------------------------------------------------------\nRan 232 tests in 1.738s\n\nOK\n```\n## Use case\n\nAs a flask application developer (user of the framework), I wanted to be able to set the browser session timeout.\n## Steps to reproduce\n\n```\nfrom flask import Flask\nfrom datetime import timedelta\napp = Flask(__name__)\napp.config['PERMANENT_SESSION_LIFETIME'] = timedelta(days=1)\n```\n## Expectation\n\nThe signed cookie based session times out after a day\n## Reality\n\nSession is transient unless `session.permanent` was set to `True`.\nThe documentation on the configuration option `PERMANENT_SESSION_LIFETIME` doesn't mention it only works after `session.permanent` was set.\nOnce figured out this, the natural thing I did was\n\n```\nfrom flask import Flask, session\nfrom datetime import timedelta\napp = Flask(__name__)\napp.config['PERMANENT_SESSION_LIFETIME'] = timedelta(days=1)\nsession.permanent = True\n```\n\nIt is a little bit frustrating to find out that we need a request context to access session, so that we either need to put it into a view_func, or a @before_request\n## Alternatives\n1. We can assume _having `PERMANENT_SESSION_LIFETIME` configured_ indicates that a permanent session is expected\n2. Add another configuration key to control how the session object should be initialized.\n## Evaluation and Fix\n\nFor alternative 1: In python, explicit is always better than implicit. Plus, since we already have `PERMANENT_SESSION_LIFETIME` default to 30 days, that means if we go this route, the default session behavior will change from transient to permanent. This breaks backward compatibility\nAlternative 2 is the way to go\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/30564657",
            "html_url": "https://github.com/pallets/flask/pull/929#issuecomment-30564657",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/929",
            "id": 30564657,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTY0NjU3",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-12-14T10:45:43Z",
            "updated_at": "2013-12-14T10:45:43Z",
            "author_association": "MEMBER",
            "body": "+1 for the new config option\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/34558044",
            "html_url": "https://github.com/pallets/flask/pull/929#issuecomment-34558044",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/929",
            "id": 34558044,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTU4MDQ0",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-02-08T22:13:22Z",
            "updated_at": "2014-02-08T22:13:22Z",
            "author_association": "MEMBER",
            "body": "I think I don't quite understand what this is supposed to do.  The correct way to do this is to set `session.permanent = True` in your login function (or wherever you start the session proper).  Closing this for the time being since I don't understand the intention.\n"
        }
    ]
}