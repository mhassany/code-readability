{
    "url": "https://api.github.com/repos/pallets/flask/issues/3050",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/3050/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/3050/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/3050/events",
    "html_url": "https://github.com/pallets/flask/pull/3050",
    "id": 394347629,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjQxMTE1NjM3",
    "number": 3050,
    "title": "Exposed the reloader interval as a flask command line argument",
    "user": {
        "login": "RohanTalip",
        "id": 7445140,
        "node_id": "MDQ6VXNlcjc0NDUxNDA=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/7445140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RohanTalip",
        "html_url": "https://github.com/RohanTalip",
        "followers_url": "https://api.github.com/users/RohanTalip/followers",
        "following_url": "https://api.github.com/users/RohanTalip/following{/other_user}",
        "gists_url": "https://api.github.com/users/RohanTalip/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/RohanTalip/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/RohanTalip/subscriptions",
        "organizations_url": "https://api.github.com/users/RohanTalip/orgs",
        "repos_url": "https://api.github.com/users/RohanTalip/repos",
        "events_url": "https://api.github.com/users/RohanTalip/events{/privacy}",
        "received_events_url": "https://api.github.com/users/RohanTalip/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-12-27T09:47:28Z",
    "updated_at": "2019-01-07T08:25:29Z",
    "closed_at": "2019-01-07T00:29:02Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
        "url": "https://api.github.com/repos/pallets/flask/pulls/3050",
        "html_url": "https://github.com/pallets/flask/pull/3050",
        "diff_url": "https://github.com/pallets/flask/pull/3050.diff",
        "patch_url": "https://github.com/pallets/flask/pull/3050.patch"
    },
    "body": "Exposed the reloader interval as a flask command line argument (with the value defaulting to 1) and passed the value to werkzeug.serving.run_simple() .\r\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/451790137",
            "html_url": "https://github.com/pallets/flask/pull/3050#issuecomment-451790137",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3050",
            "id": 451790137,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTc5MDEzNw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-01-07T00:29:02Z",
            "updated_at": "2019-01-07T00:29:02Z",
            "author_association": "MEMBER",
            "body": "Thanks for working on this. I'm not really clear why this needs to be exposed, but I have bigger changes in mind for `flask run` and so I'll deal with this then."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/451856519",
            "html_url": "https://github.com/pallets/flask/pull/3050#issuecomment-451856519",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3050",
            "id": 451856519,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTg1NjUxOQ==",
            "user": {
                "login": "RohanTalip",
                "id": 7445140,
                "node_id": "MDQ6VXNlcjc0NDUxNDA=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/7445140?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/RohanTalip",
                "html_url": "https://github.com/RohanTalip",
                "followers_url": "https://api.github.com/users/RohanTalip/followers",
                "following_url": "https://api.github.com/users/RohanTalip/following{/other_user}",
                "gists_url": "https://api.github.com/users/RohanTalip/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/RohanTalip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/RohanTalip/subscriptions",
                "organizations_url": "https://api.github.com/users/RohanTalip/orgs",
                "repos_url": "https://api.github.com/users/RohanTalip/repos",
                "events_url": "https://api.github.com/users/RohanTalip/events{/privacy}",
                "received_events_url": "https://api.github.com/users/RohanTalip/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-01-07T08:25:29Z",
            "updated_at": "2019-01-07T08:25:29Z",
            "author_association": "CONTRIBUTOR",
            "body": "Sorry, I didn't think anyone would be interested in the whole back story for why I made this change.\r\n\r\nThe reason why this is useful is because I'm using both Flask and webpack (with hot module replacement) in a guest virtual machine.  I'm making edits to files on the host machine (a MacBook Pro) and want the changes detected by Flask in the guest virtual machine.   At the moment I have to use the Flask / Werkzeug stat reloader; the inotify reloader (via watchdog) doesn't work in a virtual machine for files that are modified on the host machine.\r\n\r\nThere is [notify-forwarder](https://github.com/mhallin/notify-forwarder) but it works by watching files on the host machine (via inotify), forwarding the paths of the files that have been modified to a process in the virtual machine and then `touch`ing the files in the guest machine, and hence changing the modification time of the files (which also propagate back to the host machine).  This last part causes issues, at least in Emacs (my editor on the host machine) because Emacs thinks that a file it just saved has been modified by a different process and complains.\r\n\r\nUsing Flask / Werkzeug with the default reloader interval of 1 second results in a high CPU usage on my MacBook Pro (leading to a hotter laptop and faster battery drain).  At least I can configure the poll period for the hot module replacement in webpack (also using stat rather than inotify) to something like 3 to 5 seconds.  With the reloader interval for Flask / werkzeug specified at 5 to 10 seconds (I modify the Python code less frequently), this is workable, i.e. the CPU usage is acceptable and the lag in changes is not too bad.\r\n\r\nI have thought of creating a werkzeug reloader (i.e. in addition to the stat reloader and the watchdog reloader) that uses something like notify-forwarder to watch for file changes in the host machine and notify the new reloader in the guest machine, but that requires more time than I have available right now.  (I'm also aware of various flavours of live reload software, but they don't seem to meet my immediate needs.)\r\n\r\nSo, this pull request was the simplest solution that just works, for me.\r\n\r\n@davidism, do you have any suggestions for other ways to achieve what I want to do?  Also, roughly when do you think you would work on `flask run` and would those changes address my issues above?\r\n\r\nIs there any chance you or one of the other Flask developers would reconsider accepting this change (possibly in a new pull request, if this one can't be reopened) ?  I'm currently using a patched local version of Flask, so I can manage with this pull request not being merged, but it would be convenient to be able to tell other developers on my team that they can just install Flask without patching anything themselves.  My change might also be useful to other developers in similar situations ..."
        }
    ]
}