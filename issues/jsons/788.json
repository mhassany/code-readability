{
    "url": "https://api.github.com/repos/pallets/flask/issues/788",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/788/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/788/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/788/events",
    "html_url": "https://github.com/pallets/flask/issues/788",
    "id": 16286652,
    "node_id": "MDU6SXNzdWUxNjI4NjY1Mg==",
    "number": 788,
    "title": "json.py use bson.json_util",
    "user": {
        "login": "chmoder",
        "id": 82629,
        "node_id": "MDQ6VXNlcjgyNjI5",
        "avatar_url": "https://avatars3.githubusercontent.com/u/82629?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chmoder",
        "html_url": "https://github.com/chmoder",
        "followers_url": "https://api.github.com/users/chmoder/followers",
        "following_url": "https://api.github.com/users/chmoder/following{/other_user}",
        "gists_url": "https://api.github.com/users/chmoder/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/chmoder/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/chmoder/subscriptions",
        "organizations_url": "https://api.github.com/users/chmoder/orgs",
        "repos_url": "https://api.github.com/users/chmoder/repos",
        "events_url": "https://api.github.com/users/chmoder/events{/privacy}",
        "received_events_url": "https://api.github.com/users/chmoder/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-07-02T20:46:10Z",
    "updated_at": "2013-07-02T21:36:40Z",
    "closed_at": "2013-07-02T21:36:40Z",
    "author_association": "NONE",
    "body": "Hi,\n\nI was testing out flask today and noticed that the default object type returned from PyMongo specifically (flask.ext.pymongo) could not parse objects with ObjectID and some date types.\n\nThere is a library in bson called json_util that can serialize eveything dumps can and everything from a mongodb document.  \n\nSo I was wondering if you would consider using that, i am testing it in my code locally now.  I may even try return an array or object depending on the size of the mongo result.\n\n```\nfrom __future__ import absolute_import\nfrom flask import make_response, current_app\n<<<from bson import json_util>>>\nfrom json import dumps\n\n# This dictionary contains any kwargs that are to be passed to the json.dumps\n# function, used below.\nsettings = {}\n\n\ndef output_json(data, code, headers=None):\n    \"\"\"Makes a Flask response with a JSON encoded body\"\"\"\n\n    # If we're in debug mode, and the indent is not set, we set it to a\n    # reasonable value here.  Note that this won't override any existing value\n    # that was set.  We also set the \"sort_keys\" value.\n    local_settings = settings.copy()\n    if current_app.debug:\n        local_settings.setdefault('indent', 4)\n        local_settings.setdefault('sort_keys', True)\n\n    # We also add a trailing newline to the dumped JSON if the indent value is\n    # set - this makes using `curl` on the command line much nicer.\n    dumped = dumps(data, <<<default=json_util.default,>>> **local_settings)\n    if 'indent' in local_settings:\n        dumped += '\\n'\n\n    resp = make_response(dumped, code)\n    resp.headers.extend(headers or {})\n    return resp\n```\n"
}