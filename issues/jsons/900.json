{
    "url": "https://api.github.com/repos/pallets/flask/issues/900",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/900/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/900/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/900/events",
    "html_url": "https://github.com/pallets/flask/issues/900",
    "id": 21812704,
    "node_id": "MDU6SXNzdWUyMTgxMjcwNA==",
    "number": 900,
    "title": "If an URL path element contains %2F (an escaped \"/\")  Flask.route considers it as an unescaped slash.",
    "user": {
        "login": "exhuma",
        "id": 65717,
        "node_id": "MDQ6VXNlcjY1NzE3",
        "avatar_url": "https://avatars3.githubusercontent.com/u/65717?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/exhuma",
        "html_url": "https://github.com/exhuma",
        "followers_url": "https://api.github.com/users/exhuma/followers",
        "following_url": "https://api.github.com/users/exhuma/following{/other_user}",
        "gists_url": "https://api.github.com/users/exhuma/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/exhuma/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/exhuma/subscriptions",
        "organizations_url": "https://api.github.com/users/exhuma/orgs",
        "repos_url": "https://api.github.com/users/exhuma/repos",
        "events_url": "https://api.github.com/users/exhuma/events{/privacy}",
        "received_events_url": "https://api.github.com/users/exhuma/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2013-10-30T09:17:50Z",
    "updated_at": "2015-08-01T09:58:02Z",
    "closed_at": "2014-02-08T22:27:01Z",
    "author_association": "NONE",
    "body": "Here's an example:\n\n```\nfrom flask import Flask\napp = Flask(__name__)\n\n@app.route('/<urlvar>')\ndef hello_world(urlvar):\n    return 'Hello World! ' + repr(urlvar)\n\nif __name__ == '__main__':\n    app.run(debug=True)\n```\n\nWhen running:\n\n```\ncurl http://localhost:5000/aaa%2Fbbb\n```\n\nI would expect to see:\n\n```\nHello World! u'aaa/bbb'\n```\n\nInstead I get:\n\n```\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n<title>404 Not Found</title>\n<h1>Not Found</h1>\n<p>The requested URL was not found on the server.  If you entered the URL manually please check your spelling and try again.</p>\n```\n\nI tested this against Flask 0.9 and Flask 0.10.1. Both had the same error.\n\nWhile searching for existing bug reports, I came across this: https://github.com/mitsuhiko/werkzeug/issues/21\n\nIs this related? If yes, what's the status?\n\nIn any case, being a WSGI spec problem or not, this is behaviour is incorrect!\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/27374924",
            "html_url": "https://github.com/pallets/flask/issues/900#issuecomment-27374924",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/900",
            "id": 27374924,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3Mzc0OTI0",
            "user": {
                "login": "exhuma",
                "id": 65717,
                "node_id": "MDQ6VXNlcjY1NzE3",
                "avatar_url": "https://avatars3.githubusercontent.com/u/65717?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/exhuma",
                "html_url": "https://github.com/exhuma",
                "followers_url": "https://api.github.com/users/exhuma/followers",
                "following_url": "https://api.github.com/users/exhuma/following{/other_user}",
                "gists_url": "https://api.github.com/users/exhuma/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/exhuma/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/exhuma/subscriptions",
                "organizations_url": "https://api.github.com/users/exhuma/orgs",
                "repos_url": "https://api.github.com/users/exhuma/repos",
                "events_url": "https://api.github.com/users/exhuma/events{/privacy}",
                "received_events_url": "https://api.github.com/users/exhuma/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-10-30T09:27:25Z",
            "updated_at": "2013-10-30T09:27:25Z",
            "author_association": "NONE",
            "body": "Ehm. I just realised that using the `path` type annotation, would solve this. I still believe that a `%2F` should not be considered a path separator. The question still stands though: Is there any chance that this will be improved on in the future? Or is it an issue with the WSGI spec?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/27375696",
            "html_url": "https://github.com/pallets/flask/issues/900#issuecomment-27375696",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/900",
            "id": 27375696,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3Mzc1Njk2",
            "user": {
                "login": "fengsp",
                "id": 2986070,
                "node_id": "MDQ6VXNlcjI5ODYwNzA=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/2986070?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/fengsp",
                "html_url": "https://github.com/fengsp",
                "followers_url": "https://api.github.com/users/fengsp/followers",
                "following_url": "https://api.github.com/users/fengsp/following{/other_user}",
                "gists_url": "https://api.github.com/users/fengsp/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/fengsp/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fengsp/subscriptions",
                "organizations_url": "https://api.github.com/users/fengsp/orgs",
                "repos_url": "https://api.github.com/users/fengsp/repos",
                "events_url": "https://api.github.com/users/fengsp/events{/privacy}",
                "received_events_url": "https://api.github.com/users/fengsp/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-10-30T09:41:39Z",
            "updated_at": "2013-10-30T09:41:39Z",
            "author_association": "CONTRIBUTOR",
            "body": "You can try:\npprint.pprint(request.environ),\nwhere you can see that 'PATH_INFO': '/aa/a',\nI think WSGI does this.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/27376562",
            "html_url": "https://github.com/pallets/flask/issues/900#issuecomment-27376562",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/900",
            "id": 27376562,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3Mzc2NTYy",
            "user": {
                "login": "exhuma",
                "id": 65717,
                "node_id": "MDQ6VXNlcjY1NzE3",
                "avatar_url": "https://avatars3.githubusercontent.com/u/65717?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/exhuma",
                "html_url": "https://github.com/exhuma",
                "followers_url": "https://api.github.com/users/exhuma/followers",
                "following_url": "https://api.github.com/users/exhuma/following{/other_user}",
                "gists_url": "https://api.github.com/users/exhuma/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/exhuma/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/exhuma/subscriptions",
                "organizations_url": "https://api.github.com/users/exhuma/orgs",
                "repos_url": "https://api.github.com/users/exhuma/repos",
                "events_url": "https://api.github.com/users/exhuma/events{/privacy}",
                "received_events_url": "https://api.github.com/users/exhuma/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-10-30T09:57:48Z",
            "updated_at": "2013-10-30T09:57:48Z",
            "author_association": "NONE",
            "body": "I have just come across another weird thing: When I use `@app.route('/<path:urlvar>')` it works when running the builtin server. When deploying behind mod_wsgi it stops working. But in an unexpected way. Behind mod_wsgi this works now:\n\n```\ncurl -i \"http://routing-manager/route/1.2.3.4/22\"\n```\n\nBut this does not:\n\n```\ncurl -i \"http://routing-manager/route/1.2.3.4%2F22\"\n```\n\nNote, it's a simple REST service, retrieving information about IP routes. They are written in CIDR notation, which contains a slash. The client sends requests which are properly encoded (with `%2F`), so I should get this working. Worst case, I could investigate URL rewriting in Apache? But that would be an extremely ugly hack for something the server side should do properly :(\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/27378055",
            "html_url": "https://github.com/pallets/flask/issues/900#issuecomment-27378055",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/900",
            "id": 27378055,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3Mzc4MDU1",
            "user": {
                "login": "exhuma",
                "id": 65717,
                "node_id": "MDQ6VXNlcjY1NzE3",
                "avatar_url": "https://avatars3.githubusercontent.com/u/65717?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/exhuma",
                "html_url": "https://github.com/exhuma",
                "followers_url": "https://api.github.com/users/exhuma/followers",
                "following_url": "https://api.github.com/users/exhuma/following{/other_user}",
                "gists_url": "https://api.github.com/users/exhuma/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/exhuma/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/exhuma/subscriptions",
                "organizations_url": "https://api.github.com/users/exhuma/orgs",
                "repos_url": "https://api.github.com/users/exhuma/repos",
                "events_url": "https://api.github.com/users/exhuma/events{/privacy}",
                "received_events_url": "https://api.github.com/users/exhuma/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-10-30T10:23:11Z",
            "updated_at": "2013-10-30T10:23:11Z",
            "author_association": "NONE",
            "body": "I tracked this down to the apache directive [AllowEncodedSlashes](http://httpd.apache.org/docs/2.2/mod/core.html#allowencodedslashes). Setting it to `On` worked. Setting it to `NoDecode` leves the decoding to the application developer.\n\nSo, in the end, this problem seems to be twofold... On the one hand, Flask/Wekzeug handles `%2f` exactly like it does `/`. You can work around this by using the `path` converter. Maybe it can be solved by writing a [custom converter](http://werkzeug.pocoo.org/docs/routing/#custom-converters) (which I just found). I have not tested that yet though. Using `path` might lead to ambiguities if you have two elements in the path which contain slashes. I don't expect this to happen often though.\n\nOn the other hand, apache httpd _refuses_ encoded slashes by default returning a `404` error. This is very misleading and hard to track down.\n\nFor now, I have solved my problem with the `path` workaround. But I will leave this open for now, as I am curious to hear what the stance of the Flask devs is on the fact that Flask treats a `%2f` as a `/`. ;)\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/27618974",
            "html_url": "https://github.com/pallets/flask/issues/900#issuecomment-27618974",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/900",
            "id": 27618974,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjE4OTc0",
            "user": {
                "login": "ghost",
                "id": 10137,
                "node_id": "MDQ6VXNlcjEwMTM3",
                "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ghost",
                "html_url": "https://github.com/ghost",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-11-02T10:01:05Z",
            "updated_at": "2013-11-02T10:01:05Z",
            "author_association": "NONE",
            "body": "@exhuma The WSGI layer is on the Apache side, so the problem is caused by Apache.\nI'd really like to know if it works on Nginx/uWSGI.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/27624310",
            "html_url": "https://github.com/pallets/flask/issues/900#issuecomment-27624310",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/900",
            "id": 27624310,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjI0MzEw",
            "user": {
                "login": "pengfei-xue",
                "id": 1533151,
                "node_id": "MDQ6VXNlcjE1MzMxNTE=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/1533151?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/pengfei-xue",
                "html_url": "https://github.com/pengfei-xue",
                "followers_url": "https://api.github.com/users/pengfei-xue/followers",
                "following_url": "https://api.github.com/users/pengfei-xue/following{/other_user}",
                "gists_url": "https://api.github.com/users/pengfei-xue/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/pengfei-xue/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pengfei-xue/subscriptions",
                "organizations_url": "https://api.github.com/users/pengfei-xue/orgs",
                "repos_url": "https://api.github.com/users/pengfei-xue/repos",
                "events_url": "https://api.github.com/users/pengfei-xue/events{/privacy}",
                "received_events_url": "https://api.github.com/users/pengfei-xue/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-11-02T15:33:56Z",
            "updated_at": "2013-11-02T15:33:56Z",
            "author_association": "CONTRIBUTOR",
            "body": "@giio, i just tried uwsgi + nginx, from uwsgi's log i can see the path passed from nginx to uwsgi is is `GET /aaa%2Fffff`, but when it passed to flask, the path_info in environ is `'PATH_INFO': '/aaa/ffff'`, but the request_uri is correct as `'REQUEST_URI': '/aaa%2Fffff'`. So i think this path decode is done in wsgi layer.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/31272027",
            "html_url": "https://github.com/pallets/flask/issues/900#issuecomment-31272027",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/900",
            "id": 31272027,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjcyMDI3",
            "user": {
                "login": "Mattias-",
                "id": 1002805,
                "node_id": "MDQ6VXNlcjEwMDI4MDU=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1002805?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Mattias-",
                "html_url": "https://github.com/Mattias-",
                "followers_url": "https://api.github.com/users/Mattias-/followers",
                "following_url": "https://api.github.com/users/Mattias-/following{/other_user}",
                "gists_url": "https://api.github.com/users/Mattias-/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Mattias-/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Mattias-/subscriptions",
                "organizations_url": "https://api.github.com/users/Mattias-/orgs",
                "repos_url": "https://api.github.com/users/Mattias-/repos",
                "events_url": "https://api.github.com/users/Mattias-/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Mattias-/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-12-27T17:38:12Z",
            "updated_at": "2013-12-27T17:38:12Z",
            "author_association": "NONE",
            "body": "I opened a pull request to werkzeug that addresses this issue.\nRegardless if it's getting merged or not you can check it out to see what you need to patch at:\nhttps://github.com/mitsuhiko/werkzeug/pull/478\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/34558427",
            "html_url": "https://github.com/pallets/flask/issues/900#issuecomment-34558427",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/900",
            "id": 34558427,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTU4NDI3",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-02-08T22:27:01Z",
            "updated_at": "2014-02-08T22:27:01Z",
            "author_association": "MEMBER",
            "body": "This is a limitation in WSGI and there is nothing I can do about that.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/43716320",
            "html_url": "https://github.com/pallets/flask/issues/900#issuecomment-43716320",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/900",
            "id": 43716320,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzE2MzIw",
            "user": {
                "login": "pawl",
                "id": 992533,
                "node_id": "MDQ6VXNlcjk5MjUzMw==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/992533?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/pawl",
                "html_url": "https://github.com/pawl",
                "followers_url": "https://api.github.com/users/pawl/followers",
                "following_url": "https://api.github.com/users/pawl/following{/other_user}",
                "gists_url": "https://api.github.com/users/pawl/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/pawl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pawl/subscriptions",
                "organizations_url": "https://api.github.com/users/pawl/orgs",
                "repos_url": "https://api.github.com/users/pawl/repos",
                "events_url": "https://api.github.com/users/pawl/events{/privacy}",
                "received_events_url": "https://api.github.com/users/pawl/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-05-21T06:26:15Z",
            "updated_at": "2014-05-21T06:26:38Z",
            "author_association": "CONTRIBUTOR",
            "body": "To get past this for now, I double URL encoded the URL.\n\nThere's a guide with a few hacks here: http://www.leakon.com/archives/865\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/126894528",
            "html_url": "https://github.com/pallets/flask/issues/900#issuecomment-126894528",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/900",
            "id": 126894528,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjg5NDUyOA==",
            "user": {
                "login": "fluffy-critter",
                "id": 347162,
                "node_id": "MDQ6VXNlcjM0NzE2Mg==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/347162?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/fluffy-critter",
                "html_url": "https://github.com/fluffy-critter",
                "followers_url": "https://api.github.com/users/fluffy-critter/followers",
                "following_url": "https://api.github.com/users/fluffy-critter/following{/other_user}",
                "gists_url": "https://api.github.com/users/fluffy-critter/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/fluffy-critter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fluffy-critter/subscriptions",
                "organizations_url": "https://api.github.com/users/fluffy-critter/orgs",
                "repos_url": "https://api.github.com/users/fluffy-critter/repos",
                "events_url": "https://api.github.com/users/fluffy-critter/events{/privacy}",
                "received_events_url": "https://api.github.com/users/fluffy-critter/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-08-01T09:58:02Z",
            "updated_at": "2015-08-01T09:58:02Z",
            "author_association": "NONE",
            "body": "Not to add more to a long-closed issue, but for what it's worth, Passenger's WSGI implementation does not unescape URL-encoded characters before forwarding it along in `PATH_INFO`. This would seem to be a bug in Passenger (assuming that WSGI says that PATH_INFO should be pre-urldecoded), but I wrote up a workaround [on StackOverflow](http://stackoverflow.com/questions/31760135/passenger-adding-extra-url-escaping/31760344#31760344) to make it behave the same in that context as in Flask's local server.\n"
        }
    ]
}