{
    "url": "https://api.github.com/repos/pallets/flask/issues/2257",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2257/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2257/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2257/events",
    "html_url": "https://github.com/pallets/flask/issues/2257",
    "id": 224204897,
    "node_id": "MDU6SXNzdWUyMjQyMDQ4OTc=",
    "number": 2257,
    "title": "QueueHandler logging does not work behind uwsgi",
    "user": {
        "login": "vimalloc",
        "id": 238933,
        "node_id": "MDQ6VXNlcjIzODkzMw==",
        "avatar_url": "https://avatars3.githubusercontent.com/u/238933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vimalloc",
        "html_url": "https://github.com/vimalloc",
        "followers_url": "https://api.github.com/users/vimalloc/followers",
        "following_url": "https://api.github.com/users/vimalloc/following{/other_user}",
        "gists_url": "https://api.github.com/users/vimalloc/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/vimalloc/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vimalloc/subscriptions",
        "organizations_url": "https://api.github.com/users/vimalloc/orgs",
        "repos_url": "https://api.github.com/users/vimalloc/repos",
        "events_url": "https://api.github.com/users/vimalloc/events{/privacy}",
        "received_events_url": "https://api.github.com/users/vimalloc/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-04-25T16:54:56Z",
    "updated_at": "2017-04-25T18:58:05Z",
    "closed_at": "2017-04-25T18:01:59Z",
    "author_association": "NONE",
    "body": "(I'm not sure if I should open this here or at uwsgi, feel free to close if this is not appropriate).\r\n\r\nUsing a QueueHandler with flask works fine when using the built in flask server, but it fails to log to any of the handlers specified in the QueueHandler when run behind uwsgi (Flask==0.12.1, uWSGI==2.0.15, python==3.5.2). \r\n\r\nHere is an example app to demonstrate this:\r\n\r\n```python\r\nimport logging\r\nfrom logging.handlers import SMTPHandler, QueueHandler, QueueListener\r\nfrom queue import Queue\r\nfrom flask import jsonify, Flask\r\n\r\napp = Flask(__name__)\r\napp.debug = False\r\napp.logger.setLevel(logging.INFO)\r\n\r\n# Setup logging formatting\r\nlog_fmt = logging.Formatter(\r\n    fmt='%(levelname)s: %(asctime)s - %(name)s - %(message)s',\r\n    datefmt='%m/%d/%Y %H:%M:%S'\r\n)\r\n\r\n# Setup file log handler\r\nfile_handler = logging.FileHandler('/tmp/test_logger.log')\r\nfile_handler.setLevel(logging.INFO)\r\nfile_handler.setFormatter(log_fmt)\r\n\r\n# Setup email log handler\r\nmail_handler = SMTPHandler(\r\n    'localhost',\r\n    'flask_app_error@domain.tld',\r\n    ['email@domain.tld'],\r\n    'Error in flask app'\r\n)\r\nmail_handler.setLevel(logging.ERROR)\r\nmail_handler.setFormatter(log_fmt)\r\n\r\n# Setup a queue handler which will handle logs on a separate thread\r\nlog_queue = Queue(-1)\r\nqueue_handler = QueueHandler(log_queue)\r\nqueue_listener = QueueListener(log_queue, mail_handler, file_handler,\r\n                               respect_handler_level=True)\r\napp.logger.addHandler(queue_handler)\r\nqueue_listener.start()\r\n\r\nlog = logging.getLogger(__name__)\r\n\r\n@app.route('/error')\r\ndef error_test():\r\n    log.error(\"Test logging\")\r\n    return jsonify({'foo': 'bar})\r\n\r\nif __name__ == '__main__':\r\n    app.run()\r\n```\r\n\r\nAnd I run it with:\r\n```bash\r\nuwsgi --http :5000 --mount /=test_logger:app --manage-script-name\r\n```\r\n\r\nIf instead of using a QueueHandler/QueueListener, I pass the log handlers to the app.logger directly, things work as expected.\r\n```python\r\napp.logger.addHandler(file_handler)\r\napp.logger.addHandler(mail_handler)\r\n```\r\n However, I would like to be able to utilize QueueHandler and QueueListener to do logging on a separate thread if possible.",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/297114954",
            "html_url": "https://github.com/pallets/flask/issues/2257#issuecomment-297114954",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2257",
            "id": 297114954,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzExNDk1NA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-25T18:01:59Z",
            "updated_at": "2017-04-25T18:01:59Z",
            "author_association": "MEMBER",
            "body": "Need to use `multiprocessing.Queue`, since uWSGI spawns processes for workers not (necessarily) threads. This doesn't appear to be a Flask issue (or a uWSGI issue)."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/297119333",
            "html_url": "https://github.com/pallets/flask/issues/2257#issuecomment-297119333",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2257",
            "id": 297119333,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzExOTMzMw==",
            "user": {
                "login": "vimalloc",
                "id": 238933,
                "node_id": "MDQ6VXNlcjIzODkzMw==",
                "avatar_url": "https://avatars3.githubusercontent.com/u/238933?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/vimalloc",
                "html_url": "https://github.com/vimalloc",
                "followers_url": "https://api.github.com/users/vimalloc/followers",
                "following_url": "https://api.github.com/users/vimalloc/following{/other_user}",
                "gists_url": "https://api.github.com/users/vimalloc/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/vimalloc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vimalloc/subscriptions",
                "organizations_url": "https://api.github.com/users/vimalloc/orgs",
                "repos_url": "https://api.github.com/users/vimalloc/repos",
                "events_url": "https://api.github.com/users/vimalloc/events{/privacy}",
                "received_events_url": "https://api.github.com/users/vimalloc/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-25T18:16:02Z",
            "updated_at": "2017-04-25T18:16:02Z",
            "author_association": "NONE",
            "body": "Hrm. I tried dropping a ```multiprocessing.Queue``` in place of the normal queue, and running uwsgi with only 1 thread and 1 process, and I'm getting the same results.\r\n\r\nI'll dig into it more. Thanks!"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/297123879",
            "html_url": "https://github.com/pallets/flask/issues/2257#issuecomment-297123879",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2257",
            "id": 297123879,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzEyMzg3OQ==",
            "user": {
                "login": "vimalloc",
                "id": 238933,
                "node_id": "MDQ6VXNlcjIzODkzMw==",
                "avatar_url": "https://avatars3.githubusercontent.com/u/238933?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/vimalloc",
                "html_url": "https://github.com/vimalloc",
                "followers_url": "https://api.github.com/users/vimalloc/followers",
                "following_url": "https://api.github.com/users/vimalloc/following{/other_user}",
                "gists_url": "https://api.github.com/users/vimalloc/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/vimalloc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vimalloc/subscriptions",
                "organizations_url": "https://api.github.com/users/vimalloc/orgs",
                "repos_url": "https://api.github.com/users/vimalloc/repos",
                "events_url": "https://api.github.com/users/vimalloc/events{/privacy}",
                "received_events_url": "https://api.github.com/users/vimalloc/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-25T18:32:12Z",
            "updated_at": "2017-04-25T18:58:05Z",
            "author_association": "NONE",
            "body": "Sorry for the noise, was totally user error :(\r\n\r\nIn case anyone else looks at this I had to pass ```--enable-threads``` to uwsgi. I ended up using a normal ```Queue``` instead of ```multiprocessing.Queue``` as well by using the  ```--lazy-apps``` option. Relevant docs:\r\n\r\n\r\n> By default the Python plugin does not initialize the GIL. This means your app-generated threads will not run. If you need threads, remember to enable them with enable-threads. Running uWSGI in multithreading mode (with the threads options) will automatically enable threading support. This \u201cstrange\u201d default behaviour is for performance reasons, no shame in that.\r\n\r\nand\r\n\r\n> uWSGI tries to (ab)use the Copy On Write semantics of the fork() call whenever possible. By default it will fork after having loaded your applications to share as much of their memory as possible. If this behavior is undesirable for some reason, use the lazy-apps option. This will instruct uWSGI to load the applications after each worker\u2019s fork(). Beware as there is an older options named lazy that is way more invasive and highly discouraged (it is still here only for backward compatibility)\r\n"
        }
    ]
}