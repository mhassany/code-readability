{
    "url": "https://api.github.com/repos/pallets/flask/issues/162",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/162/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/162/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/162/events",
    "html_url": "https://github.com/pallets/flask/pull/162",
    "id": 558196,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjI2MTk=",
    "number": 162,
    "title": "overriding JSONEncoder",
    "user": {
        "login": "smalls",
        "id": 562883,
        "node_id": "MDQ6VXNlcjU2Mjg4Mw==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/562883?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/smalls",
        "html_url": "https://github.com/smalls",
        "followers_url": "https://api.github.com/users/smalls/followers",
        "following_url": "https://api.github.com/users/smalls/following{/other_user}",
        "gists_url": "https://api.github.com/users/smalls/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/smalls/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/smalls/subscriptions",
        "organizations_url": "https://api.github.com/users/smalls/orgs",
        "repos_url": "https://api.github.com/users/smalls/repos",
        "events_url": "https://api.github.com/users/smalls/events{/privacy}",
        "received_events_url": "https://api.github.com/users/smalls/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2011-01-28T06:07:26Z",
    "updated_at": "2014-06-12T10:22:38Z",
    "closed_at": "2011-02-05T17:01:56Z",
    "author_association": "NONE",
    "pull_request": {
        "url": "https://api.github.com/repos/pallets/flask/pulls/162",
        "html_url": "https://github.com/pallets/flask/pull/162",
        "diff_url": "https://github.com/pallets/flask/pull/162.diff",
        "patch_url": "https://github.com/pallets/flask/pull/162.patch"
    },
    "body": "Hey, I don't know if this is the right flask-ish way to do this, but it would great to have a way to set the JSONEncoder to allow for non-dict object types.  This seemed like the easiest way, but I didn't see a good way to fit this into the existing config.\n\n-matt\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/741915",
            "html_url": "https://github.com/pallets/flask/pull/162#issuecomment-741915",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/162",
            "id": 741915,
            "node_id": "MDEyOklzc3VlQ29tbWVudDc0MTkxNQ==",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2011-02-05T17:01:56Z",
            "updated_at": "2011-02-05T17:01:56Z",
            "author_association": "MEMBER",
            "body": "This solution is not thread safe unfortunately. If you really need a custom json encoder I recommend writing your own jsonify function instead. It does not take many lines of code and its easier to customize then. I was briefly thinking about adding a setting to the application object that would control that, but the downside is that it then would only affect jsonify and not the json.loads etc. functions.\n\nI raelly think this should be solved individually for the applications. At least unless someone has a clever and nice solution for that :)\n"
        }
    ]
}