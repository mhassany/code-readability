{
    "url": "https://api.github.com/repos/pallets/flask/issues/941",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/941/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/941/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/941/events",
    "html_url": "https://github.com/pallets/flask/issues/941",
    "id": 25029556,
    "node_id": "MDU6SXNzdWUyNTAyOTU1Ng==",
    "number": 941,
    "title": "Registering a handler for HTTPException has no effect",
    "user": {
        "login": "mdeous",
        "id": 393165,
        "node_id": "MDQ6VXNlcjM5MzE2NQ==",
        "avatar_url": "https://avatars1.githubusercontent.com/u/393165?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mdeous",
        "html_url": "https://github.com/mdeous",
        "followers_url": "https://api.github.com/users/mdeous/followers",
        "following_url": "https://api.github.com/users/mdeous/following{/other_user}",
        "gists_url": "https://api.github.com/users/mdeous/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mdeous/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mdeous/subscriptions",
        "organizations_url": "https://api.github.com/users/mdeous/orgs",
        "repos_url": "https://api.github.com/users/mdeous/repos",
        "events_url": "https://api.github.com/users/mdeous/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mdeous/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 130597497,
            "node_id": "MDU6TGFiZWwxMzA1OTc0OTc=",
            "url": "https://api.github.com/repos/pallets/flask/labels/blocker",
            "name": "blocker",
            "color": "b60205",
            "default": false,
            "description": null
        },
        {
            "id": 135583063,
            "node_id": "MDU6TGFiZWwxMzU1ODMwNjM=",
            "url": "https://api.github.com/repos/pallets/flask/labels/bug",
            "name": "bug",
            "color": "d93f0b",
            "default": true,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 19,
    "created_at": "2014-01-03T18:58:20Z",
    "updated_at": "2019-11-12T09:20:28Z",
    "closed_at": "2017-05-23T19:55:33Z",
    "author_association": "NONE",
    "body": "When registering a handler for `werkzeug.exceptions.HTTPException`, it has no effect when an HTTP error is raised.\n\nAssume the following handler:\n\n``` python\n@app.errorhandler(HTTPException)\ndef http_err_handler(error):\n    response = jsonify({\n        \"success\": False, \n        \"message\": error.name\n    })\n    response.status_code = error.code\n    return response\n```\n\nWhen requesting a page for which no route exists, a JSON response should be returned by the error handler, but instead, the usual `Flask`-generated HTTP error page is returned.\n\nOn the other hand, if the error handler is defined to handle a specific error code (by passing the error code to the `app.errorhandler` decorator), the exception is trapped and the JSON message returned.\n\nAs `wekzeug.exceptions.HTTPException` is the class raised internally by the `abort()` function, why isn't it possible to create a \"catch-all\" handler like this? Am I missing something?\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/31686642",
            "html_url": "https://github.com/pallets/flask/issues/941#issuecomment-31686642",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/941",
            "id": 31686642,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjg2NjQy",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-01-06T21:02:28Z",
            "updated_at": "2014-01-06T21:02:36Z",
            "author_association": "MEMBER",
            "body": "Long story short: It is a bug, it's a flaw in the design, it's easy to work around as a user, so it's rather low priority to fix. :S\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/31704722",
            "html_url": "https://github.com/pallets/flask/issues/941#issuecomment-31704722",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/941",
            "id": 31704722,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzA0NzIy",
            "user": {
                "login": "mdeous",
                "id": 393165,
                "node_id": "MDQ6VXNlcjM5MzE2NQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/393165?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mdeous",
                "html_url": "https://github.com/mdeous",
                "followers_url": "https://api.github.com/users/mdeous/followers",
                "following_url": "https://api.github.com/users/mdeous/following{/other_user}",
                "gists_url": "https://api.github.com/users/mdeous/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mdeous/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mdeous/subscriptions",
                "organizations_url": "https://api.github.com/users/mdeous/orgs",
                "repos_url": "https://api.github.com/users/mdeous/repos",
                "events_url": "https://api.github.com/users/mdeous/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mdeous/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-01-07T01:10:19Z",
            "updated_at": "2014-01-07T01:10:19Z",
            "author_association": "NONE",
            "body": "Do you know where the bug exactly lies? If this is an already known bug, with some informations about it maybe I could help by trying to fix it by myself and then submit a pull-request.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/31821842",
            "html_url": "https://github.com/pallets/flask/issues/941#issuecomment-31821842",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/941",
            "id": 31821842,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxODIxODQy",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-01-08T10:53:09Z",
            "updated_at": "2014-01-08T10:53:09Z",
            "author_association": "MEMBER",
            "body": "I think it would require rewriting most of the error handling system for Flask, the code for this is in `flask/app.py`\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/32305190",
            "html_url": "https://github.com/pallets/flask/issues/941#issuecomment-32305190",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/941",
            "id": 32305190,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzA1MTkw",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-01-14T20:42:23Z",
            "updated_at": "2014-01-14T20:42:23Z",
            "author_association": "MEMBER",
            "body": "#952 is a possible solution to this.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/59658892",
            "html_url": "https://github.com/pallets/flask/issues/941#issuecomment-59658892",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/941",
            "id": 59658892,
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjU4ODky",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-10-19T18:14:58Z",
            "updated_at": "2014-10-19T18:14:58Z",
            "author_association": "MEMBER",
            "body": "Fixed by #839\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/118644535",
            "html_url": "https://github.com/pallets/flask/issues/941#issuecomment-118644535",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/941",
            "id": 118644535,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExODY0NDUzNQ==",
            "user": {
                "login": "Bekt",
                "id": 1221480,
                "node_id": "MDQ6VXNlcjEyMjE0ODA=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/1221480?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Bekt",
                "html_url": "https://github.com/Bekt",
                "followers_url": "https://api.github.com/users/Bekt/followers",
                "following_url": "https://api.github.com/users/Bekt/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bekt/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Bekt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bekt/subscriptions",
                "organizations_url": "https://api.github.com/users/Bekt/orgs",
                "repos_url": "https://api.github.com/users/Bekt/repos",
                "events_url": "https://api.github.com/users/Bekt/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Bekt/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-07-05T18:04:36Z",
            "updated_at": "2015-07-05T18:04:50Z",
            "author_association": "NONE",
            "body": "#839 doesn't fix the issue OP posted -- it only handles subclasses of `HTTPException`.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/118644777",
            "html_url": "https://github.com/pallets/flask/issues/941#issuecomment-118644777",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/941",
            "id": 118644777,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExODY0NDc3Nw==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-07-05T18:08:07Z",
            "updated_at": "2015-07-05T18:08:07Z",
            "author_association": "MEMBER",
            "body": "Could you provide a testcase that fails?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/118649712",
            "html_url": "https://github.com/pallets/flask/issues/941#issuecomment-118649712",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/941",
            "id": 118649712,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExODY0OTcxMg==",
            "user": {
                "login": "Bekt",
                "id": 1221480,
                "node_id": "MDQ6VXNlcjEyMjE0ODA=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/1221480?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Bekt",
                "html_url": "https://github.com/Bekt",
                "followers_url": "https://api.github.com/users/Bekt/followers",
                "following_url": "https://api.github.com/users/Bekt/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bekt/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Bekt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bekt/subscriptions",
                "organizations_url": "https://api.github.com/users/Bekt/orgs",
                "repos_url": "https://api.github.com/users/Bekt/repos",
                "events_url": "https://api.github.com/users/Bekt/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Bekt/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-07-05T18:45:16Z",
            "updated_at": "2015-07-05T18:45:16Z",
            "author_association": "NONE",
            "body": "``` py\nimport unittest\n\nfrom werkzeug.exceptions import HTTPException, NotFound\n\nimport flask\n\n\nclass ErrorHandlerTest(unittest.TestCase):\n\n    def setUp(self):\n        app = flask.Flask(__name__)\n\n        @app.errorhandler(HTTPException)\n        def http_exception(e):\n            return 'generic', 500\n\n        @app.errorhandler(NotFound)\n        def notfound_exception(e):\n            return 'not found', 404\n\n        @app.route('/error')\n        def error():\n            flask.abort(500)\n\n        self.app = app\n\n    def test_notfound_handler(self):\n        rv = self.app.test_client().get('/')\n        self.assertEqual(rv.status_code, 404)\n        self.assertEqual(rv.data, 'not found')\n\n    def test_http_handler(self):\n        rv = self.app.test_client().get('/error')\n        self.assertEqual(rv.status_code, 500)\n        self.assertEqual(rv.data, 'generic')\n\n\nif __name__ == '__main__':\n    unittest.main()\n```\n\n``` bash\n$ venv/bin/python app.py\nF.\n======================================================================\nFAIL: test_http_handler (__main__.ErrorHandlerTest)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"app.py\", line 35, in test_http_handler\n    self.assertEqual(rv.data, 'generic')\nAssertionError: '<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\\n<title>500 ...' != 'generic'\n\n----------------------------------------------------------------------\nRan 2 tests in 0.021s\n\nFAILED (failures=1)\n```\n\nCode `500` is an `InternalServerError` (subclass of `HTTPException`). Since there is no specific handler for it (unlike `NotFound`), one would hope it would be handled by `@app.errorhandler(HTTPException)`\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/118660404",
            "html_url": "https://github.com/pallets/flask/issues/941#issuecomment-118660404",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/941",
            "id": 118660404,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExODY2MDQwNA==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-07-05T19:38:14Z",
            "updated_at": "2015-07-05T19:38:14Z",
            "author_association": "MEMBER",
            "body": "Ahh, I think this is because HTTPException doesn't have a HTTP code, but the error handling logic tries to find an errorhandler _with the HTTP code_.\n\ncc @flying-sheep \n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/118661348",
            "html_url": "https://github.com/pallets/flask/issues/941#issuecomment-118661348",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/941",
            "id": 118661348,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExODY2MTM0OA==",
            "user": {
                "login": "Bekt",
                "id": 1221480,
                "node_id": "MDQ6VXNlcjEyMjE0ODA=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/1221480?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Bekt",
                "html_url": "https://github.com/Bekt",
                "followers_url": "https://api.github.com/users/Bekt/followers",
                "following_url": "https://api.github.com/users/Bekt/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bekt/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Bekt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bekt/subscriptions",
                "organizations_url": "https://api.github.com/users/Bekt/orgs",
                "repos_url": "https://api.github.com/users/Bekt/repos",
                "events_url": "https://api.github.com/users/Bekt/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Bekt/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-07-05T19:47:51Z",
            "updated_at": "2015-07-05T19:47:51Z",
            "author_association": "NONE",
            "body": "Has anybody reviewed/tested #1383? I was not very sure by looking at the changes.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/118661516",
            "html_url": "https://github.com/pallets/flask/issues/941#issuecomment-118661516",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/941",
            "id": 118661516,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExODY2MTUxNg==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-07-05T19:52:29Z",
            "updated_at": "2015-07-05T19:52:29Z",
            "author_association": "MEMBER",
            "body": "Yeah this slipped through the cracks!\n\nI wonder whether we shouldn't remove the code/no-code distinction because of this bug though.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/118780516",
            "html_url": "https://github.com/pallets/flask/issues/941#issuecomment-118780516",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/941",
            "id": 118780516,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExODc4MDUxNg==",
            "user": {
                "login": "flying-sheep",
                "id": 291575,
                "node_id": "MDQ6VXNlcjI5MTU3NQ==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/291575?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/flying-sheep",
                "html_url": "https://github.com/flying-sheep",
                "followers_url": "https://api.github.com/users/flying-sheep/followers",
                "following_url": "https://api.github.com/users/flying-sheep/following{/other_user}",
                "gists_url": "https://api.github.com/users/flying-sheep/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/flying-sheep/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/flying-sheep/subscriptions",
                "organizations_url": "https://api.github.com/users/flying-sheep/orgs",
                "repos_url": "https://api.github.com/users/flying-sheep/repos",
                "events_url": "https://api.github.com/users/flying-sheep/events{/privacy}",
                "received_events_url": "https://api.github.com/users/flying-sheep/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-07-06T09:09:10Z",
            "updated_at": "2015-07-06T09:12:41Z",
            "author_association": "CONTRIBUTOR",
            "body": "right, i didn\u2019t think of this, sorry!\n\nso the legal classes to register handlers for: `HTTPException`, the finite set of all subclasses of it (synonymous with error codes), and subclasses of subclasses (e.g. `class ForbiddenBecauseNotRegistered(Forbidden): ...`\n\nand the legal instances of exceptions to raise are instances of subclasses of `HTTPException` but not direct instances of `HTTPException`.\n\n---\n\nthis means the following assumptions hold:\n\n``` python\nif isinstance(e_instance, HTTPException):\n    assert e_instance.code is not None\nif issubclass(e_class, HTTPException):\n    assert e_class is HTTPException or e_class.code is not None\n```\n\nwe should add a way to add a handler for `HTTPException`s without allowing users to raise an instance of `HTTPException`. \n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/118781002",
            "html_url": "https://github.com/pallets/flask/issues/941#issuecomment-118781002",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/941",
            "id": 118781002,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExODc4MTAwMg==",
            "user": {
                "login": "flying-sheep",
                "id": 291575,
                "node_id": "MDQ6VXNlcjI5MTU3NQ==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/291575?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/flying-sheep",
                "html_url": "https://github.com/flying-sheep",
                "followers_url": "https://api.github.com/users/flying-sheep/followers",
                "following_url": "https://api.github.com/users/flying-sheep/following{/other_user}",
                "gists_url": "https://api.github.com/users/flying-sheep/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/flying-sheep/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/flying-sheep/subscriptions",
                "organizations_url": "https://api.github.com/users/flying-sheep/orgs",
                "repos_url": "https://api.github.com/users/flying-sheep/repos",
                "events_url": "https://api.github.com/users/flying-sheep/events{/privacy}",
                "received_events_url": "https://api.github.com/users/flying-sheep/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-07-06T09:10:39Z",
            "updated_at": "2015-07-06T09:10:39Z",
            "author_association": "CONTRIBUTOR",
            "body": "@Bekt that PR should be closed, it was written against the old broken behavior that I replaced.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/118975275",
            "html_url": "https://github.com/pallets/flask/issues/941#issuecomment-118975275",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/941",
            "id": 118975275,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExODk3NTI3NQ==",
            "user": {
                "login": "Bekt",
                "id": 1221480,
                "node_id": "MDQ6VXNlcjEyMjE0ODA=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/1221480?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Bekt",
                "html_url": "https://github.com/Bekt",
                "followers_url": "https://api.github.com/users/Bekt/followers",
                "following_url": "https://api.github.com/users/Bekt/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bekt/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Bekt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bekt/subscriptions",
                "organizations_url": "https://api.github.com/users/Bekt/orgs",
                "repos_url": "https://api.github.com/users/Bekt/repos",
                "events_url": "https://api.github.com/users/Bekt/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Bekt/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-07-06T19:41:53Z",
            "updated_at": "2015-07-06T20:04:39Z",
            "author_association": "NONE",
            "body": "For those who simply want to override the default behavior of the _default_ `HTTPException` subclasses, you can do something like this:\n\n``` py\nimport flask\nfrom werkzeug.exceptions import default_exceptions\n\ndef create_app():\n    app = flask.Flask(__name__)\n    ....\n    for code, ex in default_exceptions:\n        app.errorhandler(code)(_handle_http_exception)\n\ndef _handle_http_exception(error):\n    if flask.request.is_json:\n        return jsonify({\n            'status_code': error.code,\n            'message': str(error),\n            'description': error.description\n        }), error.code\n    raise error.get_response()\n```\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/303185386",
            "html_url": "https://github.com/pallets/flask/issues/941#issuecomment-303185386",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/941",
            "id": 303185386,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzE4NTM4Ng==",
            "user": {
                "login": "cerickson",
                "id": 739530,
                "node_id": "MDQ6VXNlcjczOTUzMA==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/739530?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/cerickson",
                "html_url": "https://github.com/cerickson",
                "followers_url": "https://api.github.com/users/cerickson/followers",
                "following_url": "https://api.github.com/users/cerickson/following{/other_user}",
                "gists_url": "https://api.github.com/users/cerickson/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/cerickson/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cerickson/subscriptions",
                "organizations_url": "https://api.github.com/users/cerickson/orgs",
                "repos_url": "https://api.github.com/users/cerickson/repos",
                "events_url": "https://api.github.com/users/cerickson/events{/privacy}",
                "received_events_url": "https://api.github.com/users/cerickson/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-05-22T18:41:16Z",
            "updated_at": "2017-05-22T18:41:16Z",
            "author_association": "CONTRIBUTOR",
            "body": "#2144 seems to solve this issue"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/303513567",
            "html_url": "https://github.com/pallets/flask/issues/941#issuecomment-303513567",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/941",
            "id": 303513567,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzUxMzU2Nw==",
            "user": {
                "login": "jeffwidman",
                "id": 483314,
                "node_id": "MDQ6VXNlcjQ4MzMxNA==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/483314?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jeffwidman",
                "html_url": "https://github.com/jeffwidman",
                "followers_url": "https://api.github.com/users/jeffwidman/followers",
                "following_url": "https://api.github.com/users/jeffwidman/following{/other_user}",
                "gists_url": "https://api.github.com/users/jeffwidman/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jeffwidman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jeffwidman/subscriptions",
                "organizations_url": "https://api.github.com/users/jeffwidman/orgs",
                "repos_url": "https://api.github.com/users/jeffwidman/repos",
                "events_url": "https://api.github.com/users/jeffwidman/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jeffwidman/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-05-23T19:55:33Z",
            "updated_at": "2017-05-23T19:55:33Z",
            "author_association": "MEMBER",
            "body": "Resolved by https://github.com/pallets/flask/pull/2314"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/552089002",
            "html_url": "https://github.com/pallets/flask/issues/941#issuecomment-552089002",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/941",
            "id": 552089002,
            "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjA4OTAwMg==",
            "user": {
                "login": "antgel",
                "id": 295571,
                "node_id": "MDQ6VXNlcjI5NTU3MQ==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/295571?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/antgel",
                "html_url": "https://github.com/antgel",
                "followers_url": "https://api.github.com/users/antgel/followers",
                "following_url": "https://api.github.com/users/antgel/following{/other_user}",
                "gists_url": "https://api.github.com/users/antgel/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/antgel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/antgel/subscriptions",
                "organizations_url": "https://api.github.com/users/antgel/orgs",
                "repos_url": "https://api.github.com/users/antgel/repos",
                "events_url": "https://api.github.com/users/antgel/events{/privacy}",
                "received_events_url": "https://api.github.com/users/antgel/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-11-09T10:57:45Z",
            "updated_at": "2019-11-09T10:57:45Z",
            "author_association": "NONE",
            "body": "@Bekt I'm a bit late to the party, hope you're around... I'm trying to get flask to return JSON errors when there are exceptions. Your code works great except for `raise error.get_response()`. According to [werkzeug docs](https://werkzeug.palletsprojects.com/en/0.15.x/wrappers/):\r\n\r\n> If you call get_response() on an exception you will get back a regular BaseResponse object, even if you are using a custom subclass.\r\n\r\nThis results in `raise error.get_response()` returning `TypeError: exceptions must derive from BaseException`. Did I miss something? Is there a better way of doing this in 2019 as opposed to 2015."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/552718113",
            "html_url": "https://github.com/pallets/flask/issues/941#issuecomment-552718113",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/941",
            "id": 552718113,
            "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjcxODExMw==",
            "user": {
                "login": "Bekt",
                "id": 1221480,
                "node_id": "MDQ6VXNlcjEyMjE0ODA=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/1221480?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Bekt",
                "html_url": "https://github.com/Bekt",
                "followers_url": "https://api.github.com/users/Bekt/followers",
                "following_url": "https://api.github.com/users/Bekt/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bekt/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Bekt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bekt/subscriptions",
                "organizations_url": "https://api.github.com/users/Bekt/orgs",
                "repos_url": "https://api.github.com/users/Bekt/repos",
                "events_url": "https://api.github.com/users/Bekt/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Bekt/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-11-12T03:28:38Z",
            "updated_at": "2019-11-12T03:28:38Z",
            "author_association": "NONE",
            "body": "@antgel i would be lying if i said i remember even remotely what this thread is about... i miss my flask days."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/552804670",
            "html_url": "https://github.com/pallets/flask/issues/941#issuecomment-552804670",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/941",
            "id": 552804670,
            "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjgwNDY3MA==",
            "user": {
                "login": "flying-sheep",
                "id": 291575,
                "node_id": "MDQ6VXNlcjI5MTU3NQ==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/291575?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/flying-sheep",
                "html_url": "https://github.com/flying-sheep",
                "followers_url": "https://api.github.com/users/flying-sheep/followers",
                "following_url": "https://api.github.com/users/flying-sheep/following{/other_user}",
                "gists_url": "https://api.github.com/users/flying-sheep/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/flying-sheep/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/flying-sheep/subscriptions",
                "organizations_url": "https://api.github.com/users/flying-sheep/orgs",
                "repos_url": "https://api.github.com/users/flying-sheep/repos",
                "events_url": "https://api.github.com/users/flying-sheep/events{/privacy}",
                "received_events_url": "https://api.github.com/users/flying-sheep/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-11-12T09:16:28Z",
            "updated_at": "2019-11-12T09:20:28Z",
            "author_association": "CONTRIBUTOR",
            "body": "I mean, the error message is pretty clear: `error.get_response` returns a Response, not an Exception, so you probably just have to replace `raise` with `return`"
        }
    ]
}