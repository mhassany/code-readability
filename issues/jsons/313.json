{
    "url": "https://api.github.com/repos/pallets/flask/issues/313",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/313/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/313/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/313/events",
    "html_url": "https://github.com/pallets/flask/issues/313",
    "id": 1570078,
    "node_id": "MDU6SXNzdWUxNTcwMDc4",
    "number": 313,
    "title": "Example @login_required decorator confusing",
    "user": {
        "login": "dag",
        "id": 319,
        "node_id": "MDQ6VXNlcjMxOQ==",
        "avatar_url": "https://avatars1.githubusercontent.com/u/319?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dag",
        "html_url": "https://github.com/dag",
        "followers_url": "https://api.github.com/users/dag/followers",
        "following_url": "https://api.github.com/users/dag/following{/other_user}",
        "gists_url": "https://api.github.com/users/dag/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dag/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dag/subscriptions",
        "organizations_url": "https://api.github.com/users/dag/orgs",
        "repos_url": "https://api.github.com/users/dag/repos",
        "events_url": "https://api.github.com/users/dag/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dag/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 32876,
            "node_id": "MDU6TGFiZWwzMjg3Ng==",
            "url": "https://api.github.com/repos/pallets/flask/labels/docs",
            "name": "docs",
            "color": "0e8a16",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2011-09-05T15:42:13Z",
    "updated_at": "2016-06-05T21:23:25Z",
    "closed_at": "2016-06-05T21:23:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Several people on IRC have failed to use this decorator correctly. The problem is they forget to pass the \"next\" value along in their POST of the login form. The situation could be improved with a note in the docs for view decorators.\n\nThe confusion typically is that they think they have a \"next\" value in request.args, because they do in the GET request to their login view, and then suddenly for no apparent reason it's not there - because it's a new request, the POST request of the login credentials. The solution is to add a hidden input with the value of the next URL:\n\n``` html+jinja\n<input type=hidden name=next value=\"{{ request.values.next }}\">\n```\n\nand then use either `request.values` or `request.form` instead of `request.args` in the login view where the POST request is handled.\n\n``` irc\n17:05 <flipmoe> Is there something to pay attention to if you try to access request args using blueprints and an app factory? I get 'None' although there is a next parameter in the url. Thx\n17:07 <donri> flipmoe: from where are you doing this?\n17:07 <flipmoe> donri: from my login view\n17:08 <donri> paste code paste.pocoo.org\n17:13 <flipmoe> donri: http://paste.pocoo.org/show/470727/ \n17:14 <donri> and the code that redirects to login?\n17:15 <DasIch> donri: line 32\n17:15 <donri> nope\n17:16 <flipmoe> donri: you mean the login_required decorator?\n17:16 <donri> probably\n17:16 <flipmoe> donri: ok\n17:17 <flipmoe> donri: http://paste.pocoo.org/show/470731/ \n17:26 <donri> flipmoe: ah i see it\n17:26 <donri> flipmoe: your redirect results in the GET which renders the template, where i assume you have a form that POST to login\n17:26 <donri> flipmoe: but you're probably not passing along the 'next' from the GET\n17:27 <donri> flipmoe: add an input hidden to the form and use request.values\n17:28 <donri> remember that your login view handles two different forms of requests (get and post)\n17:28 <donri> and validate_on_submit checks that the request method is POST\n17:29 <flipmoe> donri: ok thx, do you have an example for that hidden input?\n17:29 <donri> <input type=hidden name=next value=\"{{ request.values.next }}\">\n17:29 <donri> request.values is just a combined dict of the request.form and request.args\n17:30 <flipmoe> donri: ok thank you!\n17:30 <donri> then make sure to use request.values in the login view too\n17:30 <flipmoe> donri: jep\n17:31 <donri> may need to do something more to make the form valid against LoginForm with \"next\" in the form dict\n17:32 <donri> (you could just pass it in form action=login?next=... but mitsuhiko seems to think that's bad for some reason i forgot)\n17:33 <flipmoe> ok\n```\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/223364270",
            "html_url": "https://github.com/pallets/flask/issues/313#issuecomment-223364270",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/313",
            "id": 223364270,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzM2NDI3MA==",
            "user": {
                "login": "pingihu",
                "id": 4327190,
                "node_id": "MDQ6VXNlcjQzMjcxOTA=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/4327190?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/pingihu",
                "html_url": "https://github.com/pingihu",
                "followers_url": "https://api.github.com/users/pingihu/followers",
                "following_url": "https://api.github.com/users/pingihu/following{/other_user}",
                "gists_url": "https://api.github.com/users/pingihu/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/pingihu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pingihu/subscriptions",
                "organizations_url": "https://api.github.com/users/pingihu/orgs",
                "repos_url": "https://api.github.com/users/pingihu/repos",
                "events_url": "https://api.github.com/users/pingihu/events{/privacy}",
                "received_events_url": "https://api.github.com/users/pingihu/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-06-02T17:33:43Z",
            "updated_at": "2016-06-02T17:33:43Z",
            "author_association": "CONTRIBUTOR",
            "body": "looking at this for a PyCon 2016 sprint\n"
        }
    ]
}