{
    "url": "https://api.github.com/repos/pallets/flask/issues/1443",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1443/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1443/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1443/events",
    "html_url": "https://github.com/pallets/flask/issues/1443",
    "id": 69866741,
    "node_id": "MDU6SXNzdWU2OTg2Njc0MQ==",
    "number": 1443,
    "title": "json_encoder not invoked from flask.jsonify",
    "user": {
        "login": "andybarilla",
        "id": 5983808,
        "node_id": "MDQ6VXNlcjU5ODM4MDg=",
        "avatar_url": "https://avatars2.githubusercontent.com/u/5983808?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andybarilla",
        "html_url": "https://github.com/andybarilla",
        "followers_url": "https://api.github.com/users/andybarilla/followers",
        "following_url": "https://api.github.com/users/andybarilla/following{/other_user}",
        "gists_url": "https://api.github.com/users/andybarilla/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/andybarilla/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/andybarilla/subscriptions",
        "organizations_url": "https://api.github.com/users/andybarilla/orgs",
        "repos_url": "https://api.github.com/users/andybarilla/repos",
        "events_url": "https://api.github.com/users/andybarilla/events{/privacy}",
        "received_events_url": "https://api.github.com/users/andybarilla/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
        "url": "https://api.github.com/repos/pallets/flask/milestones/2",
        "html_url": "https://github.com/pallets/flask/milestone/2",
        "labels_url": "https://api.github.com/repos/pallets/flask/milestones/2/labels",
        "id": 795954,
        "node_id": "MDk6TWlsZXN0b25lNzk1OTU0",
        "number": 2,
        "title": "1.0",
        "description": "",
        "creator": {
            "login": "untitaker",
            "id": 837573,
            "node_id": "MDQ6VXNlcjgzNzU3Mw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/untitaker",
            "html_url": "https://github.com/untitaker",
            "followers_url": "https://api.github.com/users/untitaker/followers",
            "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
            "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
            "organizations_url": "https://api.github.com/users/untitaker/orgs",
            "repos_url": "https://api.github.com/users/untitaker/repos",
            "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
            "received_events_url": "https://api.github.com/users/untitaker/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 0,
        "closed_issues": 159,
        "state": "closed",
        "created_at": "2014-09-19T15:47:20Z",
        "updated_at": "2018-04-26T21:07:44Z",
        "due_on": "2018-04-26T07:00:00Z",
        "closed_at": "2018-04-26T21:07:44Z"
    },
    "comments": 14,
    "created_at": "2015-04-21T14:47:11Z",
    "updated_at": "2016-06-03T04:57:19Z",
    "closed_at": "2016-06-02T21:35:26Z",
    "author_association": "NONE",
    "body": "I created a custom JSON encoder class extended from flask.json.JSONEncoder but it is not called when calling flask.jsonify. Additionally, I removed my custom JSON encoder and confirmed that  flask.json.JSONEncoder isn't called either via a break statement in Pycharm.\n\n```\nfrom flask import Flask\nfrom flask import jsonify\nfrom flask.json import JSONEncoder\n\nclass MyEncoder(JSONEncoder):\n    def default(self, obj):\n        if hasattr(obj, '__json__'):\n            return obj.__json__()\n        else:\n            try:\n                iterable = iter(obj)\n            except TypeError:\n                pass\n            else:\n                return list(iterable)\n\n        return JSONEncoder.default(self, obj)\n\n\nclass MyClass(object):\n    key = 'a'\n    value = 'b'\n\n    def __json__(self):\n        return {'key': self.key, 'value': self.value}\n\napp = Flask(__name__)\napp.json_encoder = MyEncoder\n\n@app.route('/')\ndef hello_world():\n    return jsonify(MyClass())\n\n\nif __name__ == '__main__':\n    app.run(debug=True)\n```\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/95043862",
            "html_url": "https://github.com/pallets/flask/issues/1443#issuecomment-95043862",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1443",
            "id": 95043862,
            "node_id": "MDEyOklzc3VlQ29tbWVudDk1MDQzODYy",
            "user": {
                "login": "mreinhardt",
                "id": 582461,
                "node_id": "MDQ6VXNlcjU4MjQ2MQ==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/582461?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mreinhardt",
                "html_url": "https://github.com/mreinhardt",
                "followers_url": "https://api.github.com/users/mreinhardt/followers",
                "following_url": "https://api.github.com/users/mreinhardt/following{/other_user}",
                "gists_url": "https://api.github.com/users/mreinhardt/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mreinhardt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mreinhardt/subscriptions",
                "organizations_url": "https://api.github.com/users/mreinhardt/orgs",
                "repos_url": "https://api.github.com/users/mreinhardt/repos",
                "events_url": "https://api.github.com/users/mreinhardt/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mreinhardt/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-04-22T06:17:58Z",
            "updated_at": "2015-04-22T06:24:15Z",
            "author_association": "NONE",
            "body": "The reason you never see either the default or your custom json encoder execute is that the class instance `MyClass()` is not iterable. [This line of jsonify](https://github.com/mitsuhiko/flask/blob/495704e1add905ab81c934487b04aad8d0abc1c0/flask/json.py#L248) runs `dict(MyClass())` which results in a `TypeError: 'MyClass' object is not iterable`.\n\nYou could probably figure out a way to do what you want with a custom JSON encoder, but I don't think you need to. Instead you can make a base class that implements a custom iterator and have all of the classes that need to be jsonified inherit it as a mixin. Then the class instance can be passed to jsonify as `*args` like this:\n\n``` python\nfrom flask import Flask\nfrom flask import jsonify\n\n\nclass JSONIterator(object):\n    def __iter__(self):\n        exclude_prefixes = ('__', '_{}__'.format(self.__class__.__name__))\n        return iter([[\n            (k, v) for k, v in self.__class__.__dict__.iteritems()\n            if not (k.startswith(exclude_prefixes) or hasattr(v, '__call__'))\n        ]])\n\n\nclass MyClass(JSONIterator):\n    key = 'a'\n    value = 'b'\n\n\napp = Flask(__name__)\n\n\n@app.route('/')\ndef hello_world():\n    return jsonify(*MyClass())\n\n\nif __name__ == '__main__':\n    app.run(debug=True)\n```\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/95067550",
            "html_url": "https://github.com/pallets/flask/issues/1443#issuecomment-95067550",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1443",
            "id": 95067550,
            "node_id": "MDEyOklzc3VlQ29tbWVudDk1MDY3NTUw",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-04-22T07:59:27Z",
            "updated_at": "2015-04-22T07:59:27Z",
            "author_association": "MEMBER",
            "body": "I think this should be fixed together with/by https://github.com/mitsuhiko/flask/issues/248.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/95315814",
            "html_url": "https://github.com/pallets/flask/issues/1443#issuecomment-95315814",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1443",
            "id": 95315814,
            "node_id": "MDEyOklzc3VlQ29tbWVudDk1MzE1ODE0",
            "user": {
                "login": "andybarilla",
                "id": 5983808,
                "node_id": "MDQ6VXNlcjU5ODM4MDg=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/5983808?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/andybarilla",
                "html_url": "https://github.com/andybarilla",
                "followers_url": "https://api.github.com/users/andybarilla/followers",
                "following_url": "https://api.github.com/users/andybarilla/following{/other_user}",
                "gists_url": "https://api.github.com/users/andybarilla/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/andybarilla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/andybarilla/subscriptions",
                "organizations_url": "https://api.github.com/users/andybarilla/orgs",
                "repos_url": "https://api.github.com/users/andybarilla/repos",
                "events_url": "https://api.github.com/users/andybarilla/events{/privacy}",
                "received_events_url": "https://api.github.com/users/andybarilla/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-04-22T19:52:01Z",
            "updated_at": "2015-04-22T19:52:01Z",
            "author_association": "NONE",
            "body": "That would solve the issue with converting a single object to JSON but if you try and do an array of MyClasses a custom json encoder would be required again.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/95350617",
            "html_url": "https://github.com/pallets/flask/issues/1443#issuecomment-95350617",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1443",
            "id": 95350617,
            "node_id": "MDEyOklzc3VlQ29tbWVudDk1MzUwNjE3",
            "user": {
                "login": "mreinhardt",
                "id": 582461,
                "node_id": "MDQ6VXNlcjU4MjQ2MQ==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/582461?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mreinhardt",
                "html_url": "https://github.com/mreinhardt",
                "followers_url": "https://api.github.com/users/mreinhardt/followers",
                "following_url": "https://api.github.com/users/mreinhardt/following{/other_user}",
                "gists_url": "https://api.github.com/users/mreinhardt/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mreinhardt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mreinhardt/subscriptions",
                "organizations_url": "https://api.github.com/users/mreinhardt/orgs",
                "repos_url": "https://api.github.com/users/mreinhardt/repos",
                "events_url": "https://api.github.com/users/mreinhardt/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mreinhardt/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-04-22T21:54:56Z",
            "updated_at": "2015-04-22T21:54:56Z",
            "author_association": "NONE",
            "body": "Good point. I wasn't sure of your use case.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/95985373",
            "html_url": "https://github.com/pallets/flask/issues/1443#issuecomment-95985373",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1443",
            "id": 95985373,
            "node_id": "MDEyOklzc3VlQ29tbWVudDk1OTg1Mzcz",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-04-24T16:27:22Z",
            "updated_at": "2015-04-24T16:27:34Z",
            "author_association": "MEMBER",
            "body": "Flask _does_ use your custom encoder: https://github.com/mitsuhiko/flask/blob/0.10-maintenance/flask/json.py#L97.\n\n``` python\nclass Custom(object):\n    pass\n\nclass CustomEncoder(flask.JSONEncoder):\n    def default(self, o):\n        if isinstance(o, Custom):\n            return 'cabbage'\n\n        return flask.JSONEncoder.default(self, o)\n\njsonify(values=[Custom(), Custom()])  # response is {'values': ['cabbage', 'cabbage']}\n```\n\nNote that Python's json library will only call `default` if it does not know how to serialize the object.  For example, a `str` subclass will not go through `default`, it will be treated as a `str`.  What is the actual custom object you are trying to dump?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/104752263",
            "html_url": "https://github.com/pallets/flask/issues/1443#issuecomment-104752263",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1443",
            "id": 104752263,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDc1MjI2Mw==",
            "user": {
                "login": "andybarilla",
                "id": 5983808,
                "node_id": "MDQ6VXNlcjU5ODM4MDg=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/5983808?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/andybarilla",
                "html_url": "https://github.com/andybarilla",
                "followers_url": "https://api.github.com/users/andybarilla/followers",
                "following_url": "https://api.github.com/users/andybarilla/following{/other_user}",
                "gists_url": "https://api.github.com/users/andybarilla/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/andybarilla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/andybarilla/subscriptions",
                "organizations_url": "https://api.github.com/users/andybarilla/orgs",
                "repos_url": "https://api.github.com/users/andybarilla/repos",
                "events_url": "https://api.github.com/users/andybarilla/events{/privacy}",
                "received_events_url": "https://api.github.com/users/andybarilla/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-05-22T19:47:12Z",
            "updated_at": "2015-05-22T20:28:51Z",
            "author_association": "NONE",
            "body": "The main reason for this is so I can have a custom JSON encoder which handle streaming of objects coming from a generator function. I don't want to load all the results into memory before returning them.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/111372307",
            "html_url": "https://github.com/pallets/flask/issues/1443#issuecomment-111372307",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1443",
            "id": 111372307,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMTM3MjMwNw==",
            "user": {
                "login": "wswuai",
                "id": 6711671,
                "node_id": "MDQ6VXNlcjY3MTE2NzE=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/6711671?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/wswuai",
                "html_url": "https://github.com/wswuai",
                "followers_url": "https://api.github.com/users/wswuai/followers",
                "following_url": "https://api.github.com/users/wswuai/following{/other_user}",
                "gists_url": "https://api.github.com/users/wswuai/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/wswuai/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wswuai/subscriptions",
                "organizations_url": "https://api.github.com/users/wswuai/orgs",
                "repos_url": "https://api.github.com/users/wswuai/repos",
                "events_url": "https://api.github.com/users/wswuai/events{/privacy}",
                "received_events_url": "https://api.github.com/users/wswuai/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-06-12T06:10:20Z",
            "updated_at": "2015-06-12T06:10:20Z",
            "author_association": "NONE",
            "body": "I think the problem of this is python do not support to transform any object to JSON.\n\nMay be we can implement a interface just like @mreinhardt said. to support jsonify any object but not only basic object to JSON.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/111556126",
            "html_url": "https://github.com/pallets/flask/issues/1443#issuecomment-111556126",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1443",
            "id": 111556126,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMTU1NjEyNg==",
            "user": {
                "login": "justanr",
                "id": 4221605,
                "node_id": "MDQ6VXNlcjQyMjE2MDU=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/4221605?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/justanr",
                "html_url": "https://github.com/justanr",
                "followers_url": "https://api.github.com/users/justanr/followers",
                "following_url": "https://api.github.com/users/justanr/following{/other_user}",
                "gists_url": "https://api.github.com/users/justanr/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/justanr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justanr/subscriptions",
                "organizations_url": "https://api.github.com/users/justanr/orgs",
                "repos_url": "https://api.github.com/users/justanr/repos",
                "events_url": "https://api.github.com/users/justanr/events{/privacy}",
                "received_events_url": "https://api.github.com/users/justanr/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-06-12T16:56:03Z",
            "updated_at": "2015-06-12T16:56:03Z",
            "author_association": "NONE",
            "body": "@wswuai @mreinhardt The easiest way I've found to do this is with Marshmallow. It works out of the box with Flask but there's a compatibility layer for creating URLs. I'm not sure how it'd handle streaming requests though.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/153379792",
            "html_url": "https://github.com/pallets/flask/issues/1443#issuecomment-153379792",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1443",
            "id": 153379792,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzM3OTc5Mg==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-11-03T14:58:14Z",
            "updated_at": "2015-11-03T14:58:14Z",
            "author_association": "MEMBER",
            "body": "This is something that should be solved by a serialization library such as Marshmallow (there are plenty of others too).  Flask is not in a position to change how basic JSON serialization works.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/153817818",
            "html_url": "https://github.com/pallets/flask/issues/1443#issuecomment-153817818",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1443",
            "id": 153817818,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzgxNzgxOA==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-11-04T18:21:03Z",
            "updated_at": "2015-11-04T18:21:03Z",
            "author_association": "MEMBER",
            "body": "@davidism \n\n> This line of jsonify runs dict(MyClass()) which results in a TypeError: 'MyClass' object is not iterable.\n\nThis is what I wanted to fix for 1.0. It's almost a duplicate of #248, but I want to ensure custom classes like that work in jsonify after we fix that issue, which is why I left this one open.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/153845897",
            "html_url": "https://github.com/pallets/flask/issues/1443#issuecomment-153845897",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1443",
            "id": 153845897,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE1Mzg0NTg5Nw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-11-04T19:57:19Z",
            "updated_at": "2015-11-04T19:57:19Z",
            "author_association": "MEMBER",
            "body": "@untitaker oops, that got burried in the comments, I see what the issue is now.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/153856645",
            "html_url": "https://github.com/pallets/flask/issues/1443#issuecomment-153856645",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1443",
            "id": 153856645,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE1Mzg1NjY0NQ==",
            "user": {
                "login": "jab",
                "id": 64992,
                "node_id": "MDQ6VXNlcjY0OTky",
                "avatar_url": "https://avatars1.githubusercontent.com/u/64992?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jab",
                "html_url": "https://github.com/jab",
                "followers_url": "https://api.github.com/users/jab/followers",
                "following_url": "https://api.github.com/users/jab/following{/other_user}",
                "gists_url": "https://api.github.com/users/jab/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jab/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jab/subscriptions",
                "organizations_url": "https://api.github.com/users/jab/orgs",
                "repos_url": "https://api.github.com/users/jab/repos",
                "events_url": "https://api.github.com/users/jab/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jab/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-11-04T20:42:10Z",
            "updated_at": "2015-11-04T20:42:10Z",
            "author_association": "MEMBER",
            "body": "Hi @untitaker et al., I opened #1602 a few days ago and think it might fit in with this / the desired work on flask.json for 1.0. Would it be helpful if I worked up a PR?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/223428095",
            "html_url": "https://github.com/pallets/flask/issues/1443#issuecomment-223428095",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1443",
            "id": 223428095,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzQyODA5NQ==",
            "user": {
                "login": "wldtyp",
                "id": 8902795,
                "node_id": "MDQ6VXNlcjg5MDI3OTU=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/8902795?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/wldtyp",
                "html_url": "https://github.com/wldtyp",
                "followers_url": "https://api.github.com/users/wldtyp/followers",
                "following_url": "https://api.github.com/users/wldtyp/following{/other_user}",
                "gists_url": "https://api.github.com/users/wldtyp/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/wldtyp/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wldtyp/subscriptions",
                "organizations_url": "https://api.github.com/users/wldtyp/orgs",
                "repos_url": "https://api.github.com/users/wldtyp/repos",
                "events_url": "https://api.github.com/users/wldtyp/events{/privacy}",
                "received_events_url": "https://api.github.com/users/wldtyp/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-06-02T21:28:00Z",
            "updated_at": "2016-06-02T21:28:00Z",
            "author_association": "CONTRIBUTOR",
            "body": "Running the app posted in the original issue now outputs\n\n```\n{\n  \"key\": \"a\", \n  \"value\": \"b\"\n}\n```\n\nLooks like you can safely close this issue.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/223490726",
            "html_url": "https://github.com/pallets/flask/issues/1443#issuecomment-223490726",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1443",
            "id": 223490726,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzQ5MDcyNg==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-06-03T04:57:19Z",
            "updated_at": "2016-06-03T04:57:19Z",
            "author_association": "MEMBER",
            "body": "Excellent!\n"
        }
    ]
}