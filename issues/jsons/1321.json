{
    "url": "https://api.github.com/repos/pallets/flask/issues/1321",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1321/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1321/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1321/events",
    "html_url": "https://github.com/pallets/flask/issues/1321",
    "id": 54672145,
    "node_id": "MDU6SXNzdWU1NDY3MjE0NQ==",
    "number": 1321,
    "title": "Make it easier to serve 304 (Not Modified) using a database file.",
    "user": {
        "login": "flying-sheep",
        "id": 291575,
        "node_id": "MDQ6VXNlcjI5MTU3NQ==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/291575?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flying-sheep",
        "html_url": "https://github.com/flying-sheep",
        "followers_url": "https://api.github.com/users/flying-sheep/followers",
        "following_url": "https://api.github.com/users/flying-sheep/following{/other_user}",
        "gists_url": "https://api.github.com/users/flying-sheep/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/flying-sheep/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/flying-sheep/subscriptions",
        "organizations_url": "https://api.github.com/users/flying-sheep/orgs",
        "repos_url": "https://api.github.com/users/flying-sheep/repos",
        "events_url": "https://api.github.com/users/flying-sheep/events{/privacy}",
        "received_events_url": "https://api.github.com/users/flying-sheep/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2015-01-17T19:27:17Z",
    "updated_at": "2016-06-05T19:43:26Z",
    "closed_at": "2016-06-05T19:43:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Currently, i have to do this if i want to simply reply 304.\n\ngiven an object `f` with the fields `mime`, `modified` and `data`:\n\n``` python\nrv = send_file(BytesIO(f.data), mimetype=f.mime)\nrv.last_modified = f.modified.timestamp()\nreturn rv.make_conditional(request)\n```\n\nusing python 2, this would be worse, as it is most times:\n\n``` python\nrv.last_modified = (f.modified - datetime(1970, 1, 1)).total_seconds()\n```\n\ni\u2019d like to have a way to make use of a `datetime` object or POSIX timestamp in combination with the existing `conditional` argument to `send_file`. a way that one can use without having to discover `last_modified` and `make_conditional` both, e.g. (`last_modified` can be a `datetime` or timestamp):\n\n``` python\nreturn send_file(BytesIO(f.data), mimetype=f.mime,\n                 conditional=True, last_modified=f.modified)\n```\n## Docs\n\nthe documentation to the `conditional` parameter would be extended to mention that `last_timestamp` has to be supplied if the first argument is a file handle instead of a name.\n## Implementation\n\nwe could create a helper function:\n\n``` python\ndef to_timestamp(da_ti):\n    if PY2:\n        epoch = datetime(1970, 1, 1, tzinfo=da_ti.tzinfo)  # use tzinfo to ensure subtractability\n        return (da_ti - epoch).total_seconds()\n    else:  # we do require python 3 >= 3.3, right?\n        return da_ti.timestamp()\n```\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/71393497",
            "html_url": "https://github.com/pallets/flask/issues/1321#issuecomment-71393497",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1321",
            "id": 71393497,
            "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzkzNDk3",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-01-25T21:05:23Z",
            "updated_at": "2015-01-25T21:05:23Z",
            "author_association": "MEMBER",
            "body": "Instead of your Python 2 variant, there's also this:\n\n```\nint(dt.strftime(\"%s\"))\n```\n\nHonestly this seems too trivial for me to warrant the complication of the API.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/71819944",
            "html_url": "https://github.com/pallets/flask/issues/1321#issuecomment-71819944",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1321",
            "id": 71819944,
            "node_id": "MDEyOklzc3VlQ29tbWVudDcxODE5OTQ0",
            "user": {
                "login": "flying-sheep",
                "id": 291575,
                "node_id": "MDQ6VXNlcjI5MTU3NQ==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/291575?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/flying-sheep",
                "html_url": "https://github.com/flying-sheep",
                "followers_url": "https://api.github.com/users/flying-sheep/followers",
                "following_url": "https://api.github.com/users/flying-sheep/following{/other_user}",
                "gists_url": "https://api.github.com/users/flying-sheep/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/flying-sheep/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/flying-sheep/subscriptions",
                "organizations_url": "https://api.github.com/users/flying-sheep/orgs",
                "repos_url": "https://api.github.com/users/flying-sheep/repos",
                "events_url": "https://api.github.com/users/flying-sheep/events{/privacy}",
                "received_events_url": "https://api.github.com/users/flying-sheep/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-01-28T11:35:27Z",
            "updated_at": "2015-01-28T11:35:27Z",
            "author_association": "CONTRIBUTOR",
            "body": "true, but damn,  time \u2192 str \u2192 int is ugly!\n\ni\u2019d rather have a convoluted hack than a straightforward-looking one that goes via serializing ad unserializing\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/71826429",
            "html_url": "https://github.com/pallets/flask/issues/1321#issuecomment-71826429",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1321",
            "id": 71826429,
            "node_id": "MDEyOklzc3VlQ29tbWVudDcxODI2NDI5",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-01-28T12:19:09Z",
            "updated_at": "2015-01-28T12:19:09Z",
            "author_association": "MEMBER",
            "body": "Maybe the last_modified property could simply accept datetime objects?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/71929757",
            "html_url": "https://github.com/pallets/flask/issues/1321#issuecomment-71929757",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1321",
            "id": 71929757,
            "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTI5NzU3",
            "user": {
                "login": "flying-sheep",
                "id": 291575,
                "node_id": "MDQ6VXNlcjI5MTU3NQ==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/291575?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/flying-sheep",
                "html_url": "https://github.com/flying-sheep",
                "followers_url": "https://api.github.com/users/flying-sheep/followers",
                "following_url": "https://api.github.com/users/flying-sheep/following{/other_user}",
                "gists_url": "https://api.github.com/users/flying-sheep/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/flying-sheep/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/flying-sheep/subscriptions",
                "organizations_url": "https://api.github.com/users/flying-sheep/orgs",
                "repos_url": "https://api.github.com/users/flying-sheep/repos",
                "events_url": "https://api.github.com/users/flying-sheep/events{/privacy}",
                "received_events_url": "https://api.github.com/users/flying-sheep/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-01-28T22:24:54Z",
            "updated_at": "2015-01-28T22:26:33Z",
            "author_association": "CONTRIBUTOR",
            "body": "that was my idea, sorry if this was unclear. the \u201chelper function\u201d i mentioned was for internal use.\n\n`f.modified`, and therefore `last_modified` are datetime objects.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/71977077",
            "html_url": "https://github.com/pallets/flask/issues/1321#issuecomment-71977077",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1321",
            "id": 71977077,
            "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTc3MDc3",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-01-29T06:36:37Z",
            "updated_at": "2015-01-29T06:36:37Z",
            "author_association": "MEMBER",
            "body": "That seems totally fine then, and I'd like to see a PR! However, please make sure that retrieving the value of `last_modified` always returns the same type.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/223442890",
            "html_url": "https://github.com/pallets/flask/issues/1321#issuecomment-223442890",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1321",
            "id": 223442890,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzQ0Mjg5MA==",
            "user": {
                "login": "prachikhadke",
                "id": 1641236,
                "node_id": "MDQ6VXNlcjE2NDEyMzY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1641236?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/prachikhadke",
                "html_url": "https://github.com/prachikhadke",
                "followers_url": "https://api.github.com/users/prachikhadke/followers",
                "following_url": "https://api.github.com/users/prachikhadke/following{/other_user}",
                "gists_url": "https://api.github.com/users/prachikhadke/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/prachikhadke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/prachikhadke/subscriptions",
                "organizations_url": "https://api.github.com/users/prachikhadke/orgs",
                "repos_url": "https://api.github.com/users/prachikhadke/repos",
                "events_url": "https://api.github.com/users/prachikhadke/events{/privacy}",
                "received_events_url": "https://api.github.com/users/prachikhadke/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-06-02T22:35:07Z",
            "updated_at": "2016-06-03T07:46:01Z",
            "author_association": "CONTRIBUTOR",
            "body": "As per https://github.com/pallets/werkzeug/blob/master/werkzeug/wrappers.py#L1740, `last_modified` is a `Datetime`. My current tests are failing locally as the int value I set gets typecast to `Datetime`. \n\nMost probably, @flying-sheep, you'll have to do the if-else block to get `last_modified` in number of seconds on your side. \n\nAnother solution is, we could return a tuple with `(rv, last_modified_in_seconds)`.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/223444061",
            "html_url": "https://github.com/pallets/flask/issues/1321#issuecomment-223444061",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1321",
            "id": 223444061,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzQ0NDA2MQ==",
            "user": {
                "login": "jeffwidman",
                "id": 483314,
                "node_id": "MDQ6VXNlcjQ4MzMxNA==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/483314?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jeffwidman",
                "html_url": "https://github.com/jeffwidman",
                "followers_url": "https://api.github.com/users/jeffwidman/followers",
                "following_url": "https://api.github.com/users/jeffwidman/following{/other_user}",
                "gists_url": "https://api.github.com/users/jeffwidman/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jeffwidman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jeffwidman/subscriptions",
                "organizations_url": "https://api.github.com/users/jeffwidman/orgs",
                "repos_url": "https://api.github.com/users/jeffwidman/repos",
                "events_url": "https://api.github.com/users/jeffwidman/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jeffwidman/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-06-02T22:40:54Z",
            "updated_at": "2016-06-02T22:40:54Z",
            "author_association": "MEMBER",
            "body": "@untitaker should this issue be closed or should Werkzeug be modified?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/223492085",
            "html_url": "https://github.com/pallets/flask/issues/1321#issuecomment-223492085",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1321",
            "id": 223492085,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzQ5MjA4NQ==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-06-03T05:11:06Z",
            "updated_at": "2016-06-03T05:11:06Z",
            "author_association": "MEMBER",
            "body": "As far as I understand this issue was only about _passing_ a datetime to last-modified, not _reading_.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/223492128",
            "html_url": "https://github.com/pallets/flask/issues/1321#issuecomment-223492128",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1321",
            "id": 223492128,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzQ5MjEyOA==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-06-03T05:11:32Z",
            "updated_at": "2016-06-03T05:11:32Z",
            "author_association": "MEMBER",
            "body": "In other words, if we can set `last_modified` to a datetime already, then the goal of this issue is already fullfilled!\n\n@flying-sheep ?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/223511066",
            "html_url": "https://github.com/pallets/flask/issues/1321#issuecomment-223511066",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1321",
            "id": 223511066,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzUxMTA2Ng==",
            "user": {
                "login": "flying-sheep",
                "id": 291575,
                "node_id": "MDQ6VXNlcjI5MTU3NQ==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/291575?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/flying-sheep",
                "html_url": "https://github.com/flying-sheep",
                "followers_url": "https://api.github.com/users/flying-sheep/followers",
                "following_url": "https://api.github.com/users/flying-sheep/following{/other_user}",
                "gists_url": "https://api.github.com/users/flying-sheep/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/flying-sheep/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/flying-sheep/subscriptions",
                "organizations_url": "https://api.github.com/users/flying-sheep/orgs",
                "repos_url": "https://api.github.com/users/flying-sheep/repos",
                "events_url": "https://api.github.com/users/flying-sheep/events{/privacy}",
                "received_events_url": "https://api.github.com/users/flying-sheep/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-06-03T07:33:52Z",
            "updated_at": "2016-06-04T08:11:47Z",
            "author_association": "CONTRIBUTOR",
            "body": "if this works for an \u201cf\u201d with a `modified: DateTime` field, then yes:\n\n``` py\nrv = send_file(BytesIO(f.data), mimetype=f.mime)\nrv.last_modified = f.modified\nreturn rv.make_conditional(request)\n```\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/223740840",
            "html_url": "https://github.com/pallets/flask/issues/1321#issuecomment-223740840",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1321",
            "id": 223740840,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzc0MDg0MA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-06-04T07:01:33Z",
            "updated_at": "2016-06-04T07:01:33Z",
            "author_association": "MEMBER",
            "body": "``` python\nrv = send_file(BytesIO(b'hello'), mimetype='text/plain')\nrv.last_modified = datetime.utcnow()\nreturn rv.make_conditional(request)\n```\n\nThis works.  Are we ok with not having a `last_modified` argument for `send_file`?  Seems like it would be useful.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/223743385",
            "html_url": "https://github.com/pallets/flask/issues/1321#issuecomment-223743385",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1321",
            "id": 223743385,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzc0MzM4NQ==",
            "user": {
                "login": "flying-sheep",
                "id": 291575,
                "node_id": "MDQ6VXNlcjI5MTU3NQ==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/291575?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/flying-sheep",
                "html_url": "https://github.com/flying-sheep",
                "followers_url": "https://api.github.com/users/flying-sheep/followers",
                "following_url": "https://api.github.com/users/flying-sheep/following{/other_user}",
                "gists_url": "https://api.github.com/users/flying-sheep/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/flying-sheep/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/flying-sheep/subscriptions",
                "organizations_url": "https://api.github.com/users/flying-sheep/orgs",
                "repos_url": "https://api.github.com/users/flying-sheep/repos",
                "events_url": "https://api.github.com/users/flying-sheep/events{/privacy}",
                "received_events_url": "https://api.github.com/users/flying-sheep/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-06-04T08:11:34Z",
            "updated_at": "2016-06-04T08:11:34Z",
            "author_association": "CONTRIBUTOR",
            "body": "it would yes. i\u2019d prefer it to setting an attribute.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/223772673",
            "html_url": "https://github.com/pallets/flask/issues/1321#issuecomment-223772673",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1321",
            "id": 223772673,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzc3MjY3Mw==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-06-04T19:09:26Z",
            "updated_at": "2016-06-04T19:09:26Z",
            "author_association": "MEMBER",
            "body": "Seems sensible, but we should have some sort of idea or a ruleset for what should be an argument and what an attribute.\n"
        }
    ]
}