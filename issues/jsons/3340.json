{
    "url": "https://api.github.com/repos/pallets/flask/issues/3340",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/3340/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/3340/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/3340/events",
    "html_url": "https://github.com/pallets/flask/issues/3340",
    "id": 483287283,
    "node_id": "MDU6SXNzdWU0ODMyODcyODM=",
    "number": 3340,
    "title": "json.dumps throws TypeError ",
    "user": {
        "login": "apocrypth",
        "id": 2016797,
        "node_id": "MDQ6VXNlcjIwMTY3OTc=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/2016797?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apocrypth",
        "html_url": "https://github.com/apocrypth",
        "followers_url": "https://api.github.com/users/apocrypth/followers",
        "following_url": "https://api.github.com/users/apocrypth/following{/other_user}",
        "gists_url": "https://api.github.com/users/apocrypth/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/apocrypth/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/apocrypth/subscriptions",
        "organizations_url": "https://api.github.com/users/apocrypth/orgs",
        "repos_url": "https://api.github.com/users/apocrypth/repos",
        "events_url": "https://api.github.com/users/apocrypth/events{/privacy}",
        "received_events_url": "https://api.github.com/users/apocrypth/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-08-21T08:53:46Z",
    "updated_at": "2019-08-21T12:24:26Z",
    "closed_at": "2019-08-21T12:24:25Z",
    "author_association": "NONE",
    "body": "<!-- **This issue tracker is a tool to address bugs in Flask itself.\r\nPlease use the #pocoo IRC channel on freenode or Stack Overflow for general\r\nquestions about using Flask or issues not related to Flask.** -->\r\n\r\n<!-- If you'd like to report a bug in Flask, fill out the template below. Provide\r\nany extra information that may be useful / related to your problem.\r\nIdeally, create an [MCVE](https://stackoverflow.com/help/mcve), which helps us\r\nunderstand the problem and helps check that it is not caused by something in\r\nyour code. -->\r\n\r\nI have stumbled upon this, at least for me, unexpected behaviour. For specific reasons, I have dictionary, which has str type key and None type key. When I try to use flask's json.dumps, it throws me TypeError, which I think should not happen, as is also described here: [https://docs.python.org/3/library/json.html#json.dump](https://docs.python.org/3/library/json.html#json.dump)\r\n\r\n> If skipkeys is true (default: False), then dict keys that are not of a basic type (str, int, float, bool, None) will be skipped instead of raising a TypeError.\r\n\r\nSo I understand this as that if skipkeys is False (and it is False by default and I am not setting it otherwise) and I have a dictionary with key types str or None, I should not receive TypeError. \r\n\r\nWhich is the case, when I try the same with regular python json library like this:\r\n```\r\n>>> import json\r\n>>> print(json.dumps(test))\r\n{\"aa\": 0, \"null\": {}}\r\n>>> \r\n\r\n```\r\n\r\n### Expected Behavior\r\n<!-- Tell us what should happen. -->\r\nSo my expectation is, that I should have the same behaviour also with flask's json implementation for the same dictionary keys:\r\n```python\r\n>>> from flask import json as fjson\r\n>>> test = {'aa': 0, None: {}}\r\n>>> print(fjson.dumps(test))\r\n{\"aa\": 0, \"null\": {}}\r\n```\r\nshould print: `{\"aa\": 0, \"null\": {}}`\r\n\r\n### Actual Behavior\r\n<!-- Tell us what happens instead. -->\r\n\r\nBut instead of that, I receive TypeError.\r\n```\r\n>>> from flask import json as fjson\r\n>>> test = {'aa': 0, None: {}}\r\n>>> print(fjson.dumps(test))\r\n```\r\nends up with: `TypeError: '<' not supported between instances of 'NoneType' and 'str'`\r\n```pytb\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/user/path/project/venv/lib/python3.7/site-packages/flask/json/__init__.py\", line 211, in dumps\r\n    rv = _json.dumps(obj, **kwargs)\r\n  File \"/usr/lib/python3.7/json/__init__.py\", line 238, in dumps\r\n    **kw).encode(obj)\r\n  File \"/usr/lib/python3.7/json/encoder.py\", line 199, in encode\r\n    chunks = self.iterencode(o, _one_shot=True)\r\n  File \"/usr/lib/python3.7/json/encoder.py\", line 257, in iterencode\r\n    return _iterencode(o, 0)\r\nTypeError: '<' not supported between instances of 'NoneType' and 'str'\r\n>>> \r\n\r\n```\r\n\r\n### Environment\r\n\r\n* Python version: 3.7\r\n* Flask version: 1.1.1\r\n* Werkzeug version: 0.15.2\r\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/523369256",
            "html_url": "https://github.com/pallets/flask/issues/3340#issuecomment-523369256",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3340",
            "id": 523369256,
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzM2OTI1Ng==",
            "user": {
                "login": "apocrypth",
                "id": 2016797,
                "node_id": "MDQ6VXNlcjIwMTY3OTc=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/2016797?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/apocrypth",
                "html_url": "https://github.com/apocrypth",
                "followers_url": "https://api.github.com/users/apocrypth/followers",
                "following_url": "https://api.github.com/users/apocrypth/following{/other_user}",
                "gists_url": "https://api.github.com/users/apocrypth/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/apocrypth/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/apocrypth/subscriptions",
                "organizations_url": "https://api.github.com/users/apocrypth/orgs",
                "repos_url": "https://api.github.com/users/apocrypth/repos",
                "events_url": "https://api.github.com/users/apocrypth/events{/privacy}",
                "received_events_url": "https://api.github.com/users/apocrypth/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-08-21T09:08:05Z",
            "updated_at": "2019-08-21T09:21:52Z",
            "author_association": "NONE",
            "body": "I suspect, it is caused by sort_keys param, which by default is False, but flask sorts by default. So I am not sure, that this is expected behaviour, or not, as [https://flask.palletsprojects.com/en/1.1.x/api/#flask.json.dumps](https://flask.palletsprojects.com/en/1.1.x/api/#flask.json.dumps) here it is not mentioned, that it does sorting of keys too by default."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/523433000",
            "html_url": "https://github.com/pallets/flask/issues/3340#issuecomment-523433000",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3340",
            "id": 523433000,
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzQzMzAwMA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-08-21T12:24:25Z",
            "updated_at": "2019-08-21T12:24:25Z",
            "author_association": "MEMBER",
            "body": "You've misinterpreted the behavior. If skip keys is false then keys aren't skipped. You've passed an invalid key, it raises an error."
        }
    ]
}