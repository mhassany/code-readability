{
    "url": "https://api.github.com/repos/pallets/flask/issues/1312",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1312/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1312/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1312/events",
    "html_url": "https://github.com/pallets/flask/issues/1312",
    "id": 54087828,
    "node_id": "MDU6SXNzdWU1NDA4NzgyOA==",
    "number": 1312,
    "title": "pylint errors on all example & template project",
    "user": {
        "login": "DavidHwu",
        "id": 5856387,
        "node_id": "MDQ6VXNlcjU4NTYzODc=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/5856387?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DavidHwu",
        "html_url": "https://github.com/DavidHwu",
        "followers_url": "https://api.github.com/users/DavidHwu/followers",
        "following_url": "https://api.github.com/users/DavidHwu/following{/other_user}",
        "gists_url": "https://api.github.com/users/DavidHwu/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DavidHwu/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DavidHwu/subscriptions",
        "organizations_url": "https://api.github.com/users/DavidHwu/orgs",
        "repos_url": "https://api.github.com/users/DavidHwu/repos",
        "events_url": "https://api.github.com/users/DavidHwu/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DavidHwu/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2015-01-12T18:20:50Z",
    "updated_at": "2015-01-28T15:01:42Z",
    "closed_at": "2015-01-28T13:56:18Z",
    "author_association": "NONE",
    "body": "Like to see flask examples follow good Python standards and pass pylint validation, especially with their examples people use for setup and reference.\n\nIs there a reason why these don't follow the standard python package and and setups found in Pypi?\nHere is an example:\nhttps://pypi.python.org/pypi/python_boilerplate_template\n\nHaving looked at several other micro frameworks (ie. Pyramid, CherryPy, Pecan, etc)... they all seem to adopt these template patterns and work with pylint.\n\nHere is a sample ...\n\n---\n\n(sandbox)Davids-MacBook-Pro-2:sandbox dhwu$ pylint --version\nNo config file found, using default configuration\npylint 1.4.0, \nastroid 1.3.2, common 0.63.2\nPython 3.4.2 (default, Dec 18 2014, 08:45:34) \n[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.56)](sandbox)Davids-MacBook-Pro-2:sandbox dhwu$ \n\n(sandbox)Davids-MacBook-Pro-2:sandbox dhwu$ pylint /Users/dhwu/eng/Flask-0.10.1/examples/blueprintexample \nNo config file found, using default configuration\n\n---\n\nF:  1, 0: error while code parsing: Unable to load file '/Users/dhwu/eng/Flask-0.10.1/examples/blueprintexample/**init**.py' ([Errno 2] No such file or directory: '/Users/dhwu/eng/Flask-0.10.1/examples/blueprintexample/**init**.py') (parse-error)\n(sandbox)Davids-MacBook-Pro-2:sandbox dhwu$ \n\nF:  1, 0: error while code parsing: Unable to load file '/Users/dhwu/eng/Flask-0.10.1/examples/flaskr/**init**.py' ([Errno 2] No such file or directory: '/Users/dhwu/eng/Flask-0.10.1/examples/flaskr/**init**.py') (parse-error)\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/69617947",
            "html_url": "https://github.com/pallets/flask/issues/1312#issuecomment-69617947",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1312",
            "id": 69617947,
            "node_id": "MDEyOklzc3VlQ29tbWVudDY5NjE3OTQ3",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-01-12T18:22:20Z",
            "updated_at": "2015-01-12T18:22:20Z",
            "author_association": "MEMBER",
            "body": "Those are just very simple examples, not large applications. And for very small projects the single-python-file approach is quite common.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/70011959",
            "html_url": "https://github.com/pallets/flask/issues/1312#issuecomment-70011959",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1312",
            "id": 70011959,
            "node_id": "MDEyOklzc3VlQ29tbWVudDcwMDExOTU5",
            "user": {
                "login": "DavidHwu",
                "id": 5856387,
                "node_id": "MDQ6VXNlcjU4NTYzODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/5856387?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/DavidHwu",
                "html_url": "https://github.com/DavidHwu",
                "followers_url": "https://api.github.com/users/DavidHwu/followers",
                "following_url": "https://api.github.com/users/DavidHwu/following{/other_user}",
                "gists_url": "https://api.github.com/users/DavidHwu/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/DavidHwu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DavidHwu/subscriptions",
                "organizations_url": "https://api.github.com/users/DavidHwu/orgs",
                "repos_url": "https://api.github.com/users/DavidHwu/repos",
                "events_url": "https://api.github.com/users/DavidHwu/events{/privacy}",
                "received_events_url": "https://api.github.com/users/DavidHwu/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-01-14T23:13:21Z",
            "updated_at": "2015-01-14T23:16:11Z",
            "author_association": "NONE",
            "body": "Thanks... fwiw I love the nimble micro nature of flask!  \nEven the template created by Flask doesn't pass pylint, and have very low scores.\n\nAs a python engineer who came from other web frameworks (large to micro).  They all pass pylint and have higher scores.  Just think this is something Flask can do more in the future.\n\nI follow Jeff Knupp, and this blog details how he uses Flask and pylint together.  Presumably resolved some of these issues along the way.\nRef: http://www.jeffknupp.com/blog/2013/11/15/supercharge-your-python-developers/\n\nLastly:  I already fixed these issues in my local project, just weighing in here and trying to make flask a bit better.  \n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/71393555",
            "html_url": "https://github.com/pallets/flask/issues/1312#issuecomment-71393555",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1312",
            "id": 71393555,
            "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzkzNTU1",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-01-25T21:06:37Z",
            "updated_at": "2015-01-25T21:06:37Z",
            "author_association": "MEMBER",
            "body": "I agree that Werkzeug and Flask should adopt both a linter and a stylechecker. I am unsure if pure pylint is a good option... I had very good with flake8 myself.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/71834181",
            "html_url": "https://github.com/pallets/flask/issues/1312#issuecomment-71834181",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1312",
            "id": 71834181,
            "node_id": "MDEyOklzc3VlQ29tbWVudDcxODM0MTgx",
            "user": {
                "login": "jelmerdejong",
                "id": 142041,
                "node_id": "MDQ6VXNlcjE0MjA0MQ==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/142041?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jelmerdejong",
                "html_url": "https://github.com/jelmerdejong",
                "followers_url": "https://api.github.com/users/jelmerdejong/followers",
                "following_url": "https://api.github.com/users/jelmerdejong/following{/other_user}",
                "gists_url": "https://api.github.com/users/jelmerdejong/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jelmerdejong/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jelmerdejong/subscriptions",
                "organizations_url": "https://api.github.com/users/jelmerdejong/orgs",
                "repos_url": "https://api.github.com/users/jelmerdejong/repos",
                "events_url": "https://api.github.com/users/jelmerdejong/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jelmerdejong/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-01-28T13:27:36Z",
            "updated_at": "2015-01-28T13:27:36Z",
            "author_association": "NONE",
            "body": "Would love to see this adopted. I'm learning Python and Flask and got recommended pylint to check my code and stay in the Python standards. However, all documentation and tutorial code fails, making it not easy :)\n\nE.g.:\n\nE:  4, 0: No name 'sqlalchemy' in module 'flask.ext' (no-name-in-module)\nF:  4, 0: Unable to import 'flask.ext.sqlalchemy' (import-error)\nC:  9, 0: Invalid constant name \"app\" (invalid-name)\nC: 16, 0: Invalid constant name \"db\" (invalid-name)\n\nJ.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/71837968",
            "html_url": "https://github.com/pallets/flask/issues/1312#issuecomment-71837968",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1312",
            "id": 71837968,
            "node_id": "MDEyOklzc3VlQ29tbWVudDcxODM3OTY4",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-01-28T13:56:18Z",
            "updated_at": "2015-01-28T13:56:28Z",
            "author_association": "MEMBER",
            "body": "**PyLint support is not going to happen.**\n\nThe things it tries to check are not possible with static analysis in Python, yet pylint, instead of restricting itself to the things that _are_ possible, simply does the wrong thing, complaining about broken imports just because it is unable to detect the magic behind Flask's extension import system. Supporting pylint effectively means restricting oneself to a limited subset of Python that is almost statically typed. Don't tell me these things are easily turned off: I might as well use a tool with defaults that are not completely surrealistic. Therefore:\n\n**I agree that Flask and Werkzeug should adhere to a styleguide, including most of PEP8**. As said, I strongly like Flake 8, and I'd like to adopt it. I opened https://github.com/mitsuhiko/flask/issues/1329 for this.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/71848331",
            "html_url": "https://github.com/pallets/flask/issues/1312#issuecomment-71848331",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1312",
            "id": 71848331,
            "node_id": "MDEyOklzc3VlQ29tbWVudDcxODQ4MzMx",
            "user": {
                "login": "DavidHwu",
                "id": 5856387,
                "node_id": "MDQ6VXNlcjU4NTYzODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/5856387?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/DavidHwu",
                "html_url": "https://github.com/DavidHwu",
                "followers_url": "https://api.github.com/users/DavidHwu/followers",
                "following_url": "https://api.github.com/users/DavidHwu/following{/other_user}",
                "gists_url": "https://api.github.com/users/DavidHwu/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/DavidHwu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DavidHwu/subscriptions",
                "organizations_url": "https://api.github.com/users/DavidHwu/orgs",
                "repos_url": "https://api.github.com/users/DavidHwu/repos",
                "events_url": "https://api.github.com/users/DavidHwu/events{/privacy}",
                "received_events_url": "https://api.github.com/users/DavidHwu/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-01-28T15:01:42Z",
            "updated_at": "2015-01-28T15:01:42Z",
            "author_association": "NONE",
            "body": "Understand pylint static issues mentioned earlier.  But I follow Google best practice and idiomatic Python author of using pylint.\n\nIt's found many bugs in team code prior, believe it's a good tool regardless of its shortcomings. Getting a good template or footing for new comers also sets IMHO right steps forward.\n\nSent from my iPhone\n\n> On Jan 28, 2015, at 5:56 AM, Markus Unterwaditzer notifications@github.com wrote:\n> \n> Closed #1312.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n"
        }
    ]
}