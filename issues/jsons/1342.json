{
    "url": "https://api.github.com/repos/pallets/flask/issues/1342",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1342/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1342/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1342/events",
    "html_url": "https://github.com/pallets/flask/pull/1342",
    "id": 56858278,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg4MzYwNTQ=",
    "number": 1342,
    "title": "flask.ext Import Migration Tool #1135",
    "user": {
        "login": "keyan",
        "id": 6401746,
        "node_id": "MDQ6VXNlcjY0MDE3NDY=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/6401746?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/keyan",
        "html_url": "https://github.com/keyan",
        "followers_url": "https://api.github.com/users/keyan/followers",
        "following_url": "https://api.github.com/users/keyan/following{/other_user}",
        "gists_url": "https://api.github.com/users/keyan/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/keyan/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/keyan/subscriptions",
        "organizations_url": "https://api.github.com/users/keyan/orgs",
        "repos_url": "https://api.github.com/users/keyan/repos",
        "events_url": "https://api.github.com/users/keyan/events{/privacy}",
        "received_events_url": "https://api.github.com/users/keyan/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 19,
    "created_at": "2015-02-06T19:44:15Z",
    "updated_at": "2018-10-23T17:43:31Z",
    "closed_at": "2015-02-18T17:16:28Z",
    "author_association": "MEMBER",
    "pull_request": {
        "url": "https://api.github.com/repos/pallets/flask/pulls/1342",
        "html_url": "https://github.com/pallets/flask/pull/1342",
        "diff_url": "https://github.com/pallets/flask/pull/1342.diff",
        "patch_url": "https://github.com/pallets/flask/pull/1342.patch"
    },
    "body": "This is an early commit to get some feedback. This script supports single imports in two formats. I am concerned that the naive approach is not what you guys are looking for. I would obvious add support for multiple imports and the third case `import flask.ext.foo` => `import flask_foo`. But the solution is definitely super hacky.\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/73333682",
            "html_url": "https://github.com/pallets/flask/pull/1342#issuecomment-73333682",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1342",
            "id": 73333682,
            "node_id": "MDEyOklzc3VlQ29tbWVudDczMzMzNjgy",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-02-06T23:40:39Z",
            "updated_at": "2015-02-06T23:40:39Z",
            "author_association": "MEMBER",
            "body": "> This script supports single imports in two formats. I am concerned that the naive approach is not what you guys are looking for.\n\nYeah... There are some forms with which this script would break:\n\n```\nfrom flask.ext.foo import \\\n    a, \\\n    b\n\nfrom flask.ext.foo import (\n    a,\n    b\n)\n```\n\nParsing definetly should be delegated to some third-party library. As said in #1135, https://github.com/python-modernize/python-modernize looks great, but I am not sure if one can easily extend it with own fixers.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/73348937",
            "html_url": "https://github.com/pallets/flask/pull/1342#issuecomment-73348937",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1342",
            "id": 73348937,
            "node_id": "MDEyOklzc3VlQ29tbWVudDczMzQ4OTM3",
            "user": {
                "login": "keyan",
                "id": 6401746,
                "node_id": "MDQ6VXNlcjY0MDE3NDY=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/6401746?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/keyan",
                "html_url": "https://github.com/keyan",
                "followers_url": "https://api.github.com/users/keyan/followers",
                "following_url": "https://api.github.com/users/keyan/following{/other_user}",
                "gists_url": "https://api.github.com/users/keyan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/keyan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/keyan/subscriptions",
                "organizations_url": "https://api.github.com/users/keyan/orgs",
                "repos_url": "https://api.github.com/users/keyan/repos",
                "events_url": "https://api.github.com/users/keyan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/keyan/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-02-07T04:12:46Z",
            "updated_at": "2015-02-07T04:12:46Z",
            "author_association": "MEMBER",
            "body": "I looked into using lib2to3 initially but I didn't look at python-modernize. Upon inspection I think writing a custom fixer wouldn't be too bad. I'll work on this over the weekend. Thanks for the feedback.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/73692184",
            "html_url": "https://github.com/pallets/flask/pull/1342#issuecomment-73692184",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1342",
            "id": 73692184,
            "node_id": "MDEyOklzc3VlQ29tbWVudDczNjkyMTg0",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-02-10T12:34:37Z",
            "updated_at": "2015-02-10T12:35:07Z",
            "author_association": "MEMBER",
            "body": "@keyanp Just found https://github.com/Psycojoker/baron and https://github.com/Psycojoker/redbaron, maybe you'll find it useful.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/73724213",
            "html_url": "https://github.com/pallets/flask/pull/1342#issuecomment-73724213",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1342",
            "id": 73724213,
            "node_id": "MDEyOklzc3VlQ29tbWVudDczNzI0MjEz",
            "user": {
                "login": "keyan",
                "id": 6401746,
                "node_id": "MDQ6VXNlcjY0MDE3NDY=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/6401746?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/keyan",
                "html_url": "https://github.com/keyan",
                "followers_url": "https://api.github.com/users/keyan/followers",
                "following_url": "https://api.github.com/users/keyan/following{/other_user}",
                "gists_url": "https://api.github.com/users/keyan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/keyan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/keyan/subscriptions",
                "organizations_url": "https://api.github.com/users/keyan/orgs",
                "repos_url": "https://api.github.com/users/keyan/repos",
                "events_url": "https://api.github.com/users/keyan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/keyan/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-02-10T15:56:02Z",
            "updated_at": "2015-02-10T15:56:02Z",
            "author_association": "MEMBER",
            "body": "@untitaker Thanks! That looks promising, I've been fiddling with writing a fixer for lib2to3, but it's pretty confusing. Hopefully this will be easier.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/73955130",
            "html_url": "https://github.com/pallets/flask/pull/1342#issuecomment-73955130",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1342",
            "id": 73955130,
            "node_id": "MDEyOklzc3VlQ29tbWVudDczOTU1MTMw",
            "user": {
                "login": "keyan",
                "id": 6401746,
                "node_id": "MDQ6VXNlcjY0MDE3NDY=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/6401746?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/keyan",
                "html_url": "https://github.com/keyan",
                "followers_url": "https://api.github.com/users/keyan/followers",
                "following_url": "https://api.github.com/users/keyan/following{/other_user}",
                "gists_url": "https://api.github.com/users/keyan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/keyan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/keyan/subscriptions",
                "organizations_url": "https://api.github.com/users/keyan/orgs",
                "repos_url": "https://api.github.com/users/keyan/repos",
                "events_url": "https://api.github.com/users/keyan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/keyan/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-02-11T20:10:59Z",
            "updated_at": "2015-02-11T20:14:38Z",
            "author_association": "MEMBER",
            "body": "@untitaker So RedBaron ended up being perfect for the job, the new module supports everything mentioned in issue #1135 except it doesn't change imports in the format:\n\n`import flask.ext.foo.[more stuff]` because I was not sure what this is supposed to turn into, maybe `import flask_foo.[more stuff]`?\n\nit only handles:\n\n`import flask.ext.foo` --> `import flask_foo`\n\nAnd even it that case, it doesn't fix all the function calls in the source. As you mentioned before, that would be quite tricky, maybe a warning is sufficient? I also added a few tests, but RedBaron needs to be installed on Travis in order to pass. Please comment on whether the tests are structured as expected for the project.\n\nLet me know how you want me to handle the above issue.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/73962816",
            "html_url": "https://github.com/pallets/flask/pull/1342#issuecomment-73962816",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1342",
            "id": 73962816,
            "node_id": "MDEyOklzc3VlQ29tbWVudDczOTYyODE2",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-02-11T20:55:14Z",
            "updated_at": "2015-02-11T20:55:14Z",
            "author_association": "MEMBER",
            "body": "Regarding renaming functions, I think finding all `NameNode` instances and replacing them will succeed for most cases (although it might refactor code that doesn't need it, but I don't think we should care about that). That would probably also make it easier to handle the other import type properly.\n\nThere's an edge case that your tests don't cover yet, although I don't know if your code does:\n\n```\nfrom flask.ext.foo import bar as baz\n```\n\nThat said, this looks _really_ nice! Apart from the inline code comments I gave, please also add a simple usage message if the user hasn't provided `sys.argv[1]`.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/74112084",
            "html_url": "https://github.com/pallets/flask/pull/1342#issuecomment-74112084",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1342",
            "id": 74112084,
            "node_id": "MDEyOklzc3VlQ29tbWVudDc0MTEyMDg0",
            "user": {
                "login": "keyan",
                "id": 6401746,
                "node_id": "MDQ6VXNlcjY0MDE3NDY=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/6401746?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/keyan",
                "html_url": "https://github.com/keyan",
                "followers_url": "https://api.github.com/users/keyan/followers",
                "following_url": "https://api.github.com/users/keyan/following{/other_user}",
                "gists_url": "https://api.github.com/users/keyan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/keyan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/keyan/subscriptions",
                "organizations_url": "https://api.github.com/users/keyan/orgs",
                "repos_url": "https://api.github.com/users/keyan/repos",
                "events_url": "https://api.github.com/users/keyan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/keyan/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-02-12T17:19:41Z",
            "updated_at": "2015-02-12T17:20:01Z",
            "author_association": "MEMBER",
            "body": "@untitaker So I added a test for that case and fixed the logic to cover it. Also added a message if no argument is provided. I still need to fix another edge case, I will push that soon. Just a couple things I have questions about:\n1. How do I pip install RedBaron on the Travis build so I can pass the build?\n2. What is the correct way to import the script into my tester file? I'm just using: `sys.path.append('scripts')` right now, which works locally, but I don't think it will work when building on Travis.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/74112602",
            "html_url": "https://github.com/pallets/flask/pull/1342#issuecomment-74112602",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1342",
            "id": 74112602,
            "node_id": "MDEyOklzc3VlQ29tbWVudDc0MTEyNjAy",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-02-12T17:22:42Z",
            "updated_at": "2015-02-12T17:22:42Z",
            "author_association": "MEMBER",
            "body": "> 1. How do I pip install RedBaron on the Travis build so I can pass the build?\n\nEnter it as dependency directly after `greenlet` under `deps= ...`\n\n> What is the correct way to import the script into my tester file?\n\nI was about to suggest that you move the tests for this script to the same directory as the script itself. py.test should pick it up automatically.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/74112855",
            "html_url": "https://github.com/pallets/flask/pull/1342#issuecomment-74112855",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1342",
            "id": 74112855,
            "node_id": "MDEyOklzc3VlQ29tbWVudDc0MTEyODU1",
            "user": {
                "login": "keyan",
                "id": 6401746,
                "node_id": "MDQ6VXNlcjY0MDE3NDY=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/6401746?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/keyan",
                "html_url": "https://github.com/keyan",
                "followers_url": "https://api.github.com/users/keyan/followers",
                "following_url": "https://api.github.com/users/keyan/following{/other_user}",
                "gists_url": "https://api.github.com/users/keyan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/keyan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/keyan/subscriptions",
                "organizations_url": "https://api.github.com/users/keyan/orgs",
                "repos_url": "https://api.github.com/users/keyan/repos",
                "events_url": "https://api.github.com/users/keyan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/keyan/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-02-12T17:24:08Z",
            "updated_at": "2015-02-12T17:24:08Z",
            "author_association": "MEMBER",
            "body": "Great! Thanks!\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/74159549",
            "html_url": "https://github.com/pallets/flask/pull/1342#issuecomment-74159549",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1342",
            "id": 74159549,
            "node_id": "MDEyOklzc3VlQ29tbWVudDc0MTU5NTQ5",
            "user": {
                "login": "keyan",
                "id": 6401746,
                "node_id": "MDQ6VXNlcjY0MDE3NDY=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/6401746?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/keyan",
                "html_url": "https://github.com/keyan",
                "followers_url": "https://api.github.com/users/keyan/followers",
                "following_url": "https://api.github.com/users/keyan/following{/other_user}",
                "gists_url": "https://api.github.com/users/keyan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/keyan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/keyan/subscriptions",
                "organizations_url": "https://api.github.com/users/keyan/orgs",
                "repos_url": "https://api.github.com/users/keyan/repos",
                "events_url": "https://api.github.com/users/keyan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/keyan/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-02-12T21:45:20Z",
            "updated_at": "2015-02-12T21:47:21Z",
            "author_association": "MEMBER",
            "body": "So I moved the test file, added RedBaron to the dependencies, and also added an extra test for this case (which is now covered):\n\n```\nfrom flask.ext.foo import (\n    a,\n    b\n)\n```\n\nLet me know if there is anything I missed, thanks for your help @untitaker\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/74266644",
            "html_url": "https://github.com/pallets/flask/pull/1342#issuecomment-74266644",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1342",
            "id": 74266644,
            "node_id": "MDEyOklzc3VlQ29tbWVudDc0MjY2NjQ0",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-02-13T15:04:04Z",
            "updated_at": "2015-02-13T15:04:04Z",
            "author_association": "MEMBER",
            "body": "Yeah, we still have to fix imports like these:\n\n```\nimport flask.ext.foo\n```\n\nJust warning about it is unfortunately not an option. :(\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/74268687",
            "html_url": "https://github.com/pallets/flask/pull/1342#issuecomment-74268687",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1342",
            "id": 74268687,
            "node_id": "MDEyOklzc3VlQ29tbWVudDc0MjY4Njg3",
            "user": {
                "login": "keyan",
                "id": 6401746,
                "node_id": "MDQ6VXNlcjY0MDE3NDY=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/6401746?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/keyan",
                "html_url": "https://github.com/keyan",
                "followers_url": "https://api.github.com/users/keyan/followers",
                "following_url": "https://api.github.com/users/keyan/following{/other_user}",
                "gists_url": "https://api.github.com/users/keyan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/keyan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/keyan/subscriptions",
                "organizations_url": "https://api.github.com/users/keyan/orgs",
                "repos_url": "https://api.github.com/users/keyan/repos",
                "events_url": "https://api.github.com/users/keyan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/keyan/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-02-13T15:16:31Z",
            "updated_at": "2015-02-13T15:16:31Z",
            "author_association": "MEMBER",
            "body": "Yeah no problem, could you refer to the specific case you are talking about? The case you wrote in the last comment already works: import flask.ext.foo --> import flask_foo\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/74269142",
            "html_url": "https://github.com/pallets/flask/pull/1342#issuecomment-74269142",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1342",
            "id": 74269142,
            "node_id": "MDEyOklzc3VlQ29tbWVudDc0MjY5MTQy",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-02-13T15:19:14Z",
            "updated_at": "2015-02-13T15:19:14Z",
            "author_association": "MEMBER",
            "body": "I meant rewriting the usages of `flask.ext.foo` to the new form inside the code itself. See my comment above about NameNode.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/74322153",
            "html_url": "https://github.com/pallets/flask/pull/1342#issuecomment-74322153",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1342",
            "id": 74322153,
            "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzIyMTUz",
            "user": {
                "login": "keyan",
                "id": 6401746,
                "node_id": "MDQ6VXNlcjY0MDE3NDY=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/6401746?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/keyan",
                "html_url": "https://github.com/keyan",
                "followers_url": "https://api.github.com/users/keyan/followers",
                "following_url": "https://api.github.com/users/keyan/following{/other_user}",
                "gists_url": "https://api.github.com/users/keyan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/keyan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/keyan/subscriptions",
                "organizations_url": "https://api.github.com/users/keyan/orgs",
                "repos_url": "https://api.github.com/users/keyan/repos",
                "events_url": "https://api.github.com/users/keyan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/keyan/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-02-13T20:33:37Z",
            "updated_at": "2015-02-13T20:34:00Z",
            "author_association": "MEMBER",
            "body": "@untitaker So I couldn't figure out a good way to do it using the NameNodes, but the function calls are represented by Atomtrailers and replacing those worked for the test files I ran it against. I added a simple test to cover that case as well. Otherwise I refactored the code a bit.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/74350529",
            "html_url": "https://github.com/pallets/flask/pull/1342#issuecomment-74350529",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1342",
            "id": 74350529,
            "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzUwNTI5",
            "user": {
                "login": "keyan",
                "id": 6401746,
                "node_id": "MDQ6VXNlcjY0MDE3NDY=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/6401746?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/keyan",
                "html_url": "https://github.com/keyan",
                "followers_url": "https://api.github.com/users/keyan/followers",
                "following_url": "https://api.github.com/users/keyan/following{/other_user}",
                "gists_url": "https://api.github.com/users/keyan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/keyan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/keyan/subscriptions",
                "organizations_url": "https://api.github.com/users/keyan/orgs",
                "repos_url": "https://api.github.com/users/keyan/repos",
                "events_url": "https://api.github.com/users/keyan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/keyan/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-02-14T00:22:17Z",
            "updated_at": "2015-02-14T00:22:17Z",
            "author_association": "MEMBER",
            "body": "@untitaker Refactored to clean it up a bit, added the test you mentioned, and added a function to cover it. Thanks again for your help.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/74884830",
            "html_url": "https://github.com/pallets/flask/pull/1342#issuecomment-74884830",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1342",
            "id": 74884830,
            "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODg0ODMw",
            "user": {
                "login": "DasIch",
                "id": 182316,
                "node_id": "MDQ6VXNlcjE4MjMxNg==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/182316?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/DasIch",
                "html_url": "https://github.com/DasIch",
                "followers_url": "https://api.github.com/users/DasIch/followers",
                "following_url": "https://api.github.com/users/DasIch/following{/other_user}",
                "gists_url": "https://api.github.com/users/DasIch/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/DasIch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DasIch/subscriptions",
                "organizations_url": "https://api.github.com/users/DasIch/orgs",
                "repos_url": "https://api.github.com/users/DasIch/repos",
                "events_url": "https://api.github.com/users/DasIch/events{/privacy}",
                "received_events_url": "https://api.github.com/users/DasIch/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-02-18T15:37:49Z",
            "updated_at": "2015-02-18T15:37:49Z",
            "author_association": "CONTRIBUTOR",
            "body": "Looks good to me.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/74885019",
            "html_url": "https://github.com/pallets/flask/pull/1342#issuecomment-74885019",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1342",
            "id": 74885019,
            "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODg1MDE5",
            "user": {
                "login": "DasIch",
                "id": 182316,
                "node_id": "MDQ6VXNlcjE4MjMxNg==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/182316?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/DasIch",
                "html_url": "https://github.com/DasIch",
                "followers_url": "https://api.github.com/users/DasIch/followers",
                "following_url": "https://api.github.com/users/DasIch/following{/other_user}",
                "gists_url": "https://api.github.com/users/DasIch/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/DasIch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DasIch/subscriptions",
                "organizations_url": "https://api.github.com/users/DasIch/orgs",
                "repos_url": "https://api.github.com/users/DasIch/repos",
                "events_url": "https://api.github.com/users/DasIch/events{/privacy}",
                "received_events_url": "https://api.github.com/users/DasIch/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-02-18T15:38:40Z",
            "updated_at": "2015-02-18T15:38:40Z",
            "author_association": "CONTRIBUTOR",
            "body": "@untitaker What's your opinion?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/74904993",
            "html_url": "https://github.com/pallets/flask/pull/1342#issuecomment-74904993",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1342",
            "id": 74904993,
            "node_id": "MDEyOklzc3VlQ29tbWVudDc0OTA0OTkz",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-02-18T17:16:26Z",
            "updated_at": "2015-02-18T17:16:26Z",
            "author_association": "MEMBER",
            "body": "In IRC I expressed the concern that this tool might rewrite things that it is not supposed to rewrite, because it doesn't do a lot of \"checks\" on the AST.\n\nBut since this is just a feeling I have, this is actually pretty great. Thanks @keyanp!\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/205892434",
            "html_url": "https://github.com/pallets/flask/pull/1342#issuecomment-205892434",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1342",
            "id": 205892434,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTg5MjQzNA==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-04-05T16:54:30Z",
            "updated_at": "2016-04-05T16:54:30Z",
            "author_association": "MEMBER",
            "body": "For future reference, followup on https://github.com/pallets/flask/issues/1765\n"
        }
    ]
}