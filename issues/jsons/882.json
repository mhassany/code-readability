{
    "url": "https://api.github.com/repos/pallets/flask/issues/882",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/882/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/882/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/882/events",
    "html_url": "https://github.com/pallets/flask/issues/882",
    "id": 20685566,
    "node_id": "MDU6SXNzdWUyMDY4NTU2Ng==",
    "number": 882,
    "title": "app.test_request_context() is affected by except blocks that happen before it",
    "user": {
        "login": "satiani",
        "id": 174212,
        "node_id": "MDQ6VXNlcjE3NDIxMg==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/174212?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/satiani",
        "html_url": "https://github.com/satiani",
        "followers_url": "https://api.github.com/users/satiani/followers",
        "following_url": "https://api.github.com/users/satiani/following{/other_user}",
        "gists_url": "https://api.github.com/users/satiani/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/satiani/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/satiani/subscriptions",
        "organizations_url": "https://api.github.com/users/satiani/orgs",
        "repos_url": "https://api.github.com/users/satiani/repos",
        "events_url": "https://api.github.com/users/satiani/events{/privacy}",
        "received_events_url": "https://api.github.com/users/satiani/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2013-10-08T15:15:26Z",
    "updated_at": "2013-10-18T13:51:07Z",
    "closed_at": "2013-10-16T18:13:32Z",
    "author_association": "NONE",
    "body": "To illustrate the issue, see this code snippet:\n\n``` python\nfrom flask import Flask\n\napp = Flask(__name__)\n\n@app.teardown_request\ndef teardown(exc = None):\n    if exc is not None:\n        print \"An exception has occured!\"\n\ntry:\n    raise Exception('dummy')\nexcept:\n    pass\n\n# uncomment this to remove the issue\n# import sys; sys.exc_clear()\n\nwith app.test_request_context():\n    print \"Nothing happening here\"\n\n# Output:\n# Nothing happening here\n# An exception has occured! <== this is unexpected!\n```\n\nThis happens because flask relies on sys.exc_info() to figure out if some exception happened in the request. However, sys.exc_info() gets populated whenever an except block has been executed. This could lead to weird behavior in unit tests, perhaps the **enter** method on RequestContext should contain a sys.exc_clear()?\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/26443112",
            "html_url": "https://github.com/pallets/flask/issues/882#issuecomment-26443112",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/882",
            "id": 26443112,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDQzMTEy",
            "user": {
                "login": "DasIch",
                "id": 182316,
                "node_id": "MDQ6VXNlcjE4MjMxNg==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/182316?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/DasIch",
                "html_url": "https://github.com/DasIch",
                "followers_url": "https://api.github.com/users/DasIch/followers",
                "following_url": "https://api.github.com/users/DasIch/following{/other_user}",
                "gists_url": "https://api.github.com/users/DasIch/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/DasIch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DasIch/subscriptions",
                "organizations_url": "https://api.github.com/users/DasIch/orgs",
                "repos_url": "https://api.github.com/users/DasIch/repos",
                "events_url": "https://api.github.com/users/DasIch/events{/privacy}",
                "received_events_url": "https://api.github.com/users/DasIch/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-10-16T18:13:58Z",
            "updated_at": "2013-10-16T18:13:58Z",
            "author_association": "CONTRIBUTOR",
            "body": "Thanks :)\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/26443349",
            "html_url": "https://github.com/pallets/flask/issues/882#issuecomment-26443349",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/882",
            "id": 26443349,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDQzMzQ5",
            "user": {
                "login": "satiani",
                "id": 174212,
                "node_id": "MDQ6VXNlcjE3NDIxMg==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/174212?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/satiani",
                "html_url": "https://github.com/satiani",
                "followers_url": "https://api.github.com/users/satiani/followers",
                "following_url": "https://api.github.com/users/satiani/following{/other_user}",
                "gists_url": "https://api.github.com/users/satiani/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/satiani/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/satiani/subscriptions",
                "organizations_url": "https://api.github.com/users/satiani/orgs",
                "repos_url": "https://api.github.com/users/satiani/repos",
                "events_url": "https://api.github.com/users/satiani/events{/privacy}",
                "received_events_url": "https://api.github.com/users/satiani/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-10-16T18:16:28Z",
            "updated_at": "2013-10-16T18:16:28Z",
            "author_association": "NONE",
            "body": "Thank you!\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/26504466",
            "html_url": "https://github.com/pallets/flask/issues/882#issuecomment-26504466",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/882",
            "id": 26504466,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTA0NDY2",
            "user": {
                "login": "ghost",
                "id": 10137,
                "node_id": "MDQ6VXNlcjEwMTM3",
                "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ghost",
                "html_url": "https://github.com/ghost",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-10-17T13:36:22Z",
            "updated_at": "2013-10-17T13:36:22Z",
            "author_association": "NONE",
            "body": "Unfortunately, the issue is partially not fixed. Try with this code:\n\n```\nfrom flask import Flask\n\napp = Flask(__name__)\n\n@app.teardown_request\ndef teardown(exc=None):\n    if exc is not None:\n        print \"An exception has occured!\", repr(exc)\n\nwith app.test_request_context():\n    try:\n        raise Exception\n    except Exception:\n        pass\n```\n\nA complete solution would require falling back to `except` blocks... If possible.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/26505310",
            "html_url": "https://github.com/pallets/flask/issues/882#issuecomment-26505310",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/882",
            "id": 26505310,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTA1MzEw",
            "user": {
                "login": "DasIch",
                "id": 182316,
                "node_id": "MDQ6VXNlcjE4MjMxNg==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/182316?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/DasIch",
                "html_url": "https://github.com/DasIch",
                "followers_url": "https://api.github.com/users/DasIch/followers",
                "following_url": "https://api.github.com/users/DasIch/following{/other_user}",
                "gists_url": "https://api.github.com/users/DasIch/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/DasIch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DasIch/subscriptions",
                "organizations_url": "https://api.github.com/users/DasIch/orgs",
                "repos_url": "https://api.github.com/users/DasIch/repos",
                "events_url": "https://api.github.com/users/DasIch/events{/privacy}",
                "received_events_url": "https://api.github.com/users/DasIch/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-10-17T13:45:49Z",
            "updated_at": "2013-10-17T13:47:24Z",
            "author_association": "CONTRIBUTOR",
            "body": "Unfortunately that case cannot be fixed without breaking the API and as the issue only exists on Python 2, I don't think it's worth changing the API to fix this. Maybe @mitsuhiko has a different opinion on this though.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/26509782",
            "html_url": "https://github.com/pallets/flask/issues/882#issuecomment-26509782",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/882",
            "id": 26509782,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTA5Nzgy",
            "user": {
                "login": "satiani",
                "id": 174212,
                "node_id": "MDQ6VXNlcjE3NDIxMg==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/174212?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/satiani",
                "html_url": "https://github.com/satiani",
                "followers_url": "https://api.github.com/users/satiani/followers",
                "following_url": "https://api.github.com/users/satiani/following{/other_user}",
                "gists_url": "https://api.github.com/users/satiani/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/satiani/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/satiani/subscriptions",
                "organizations_url": "https://api.github.com/users/satiani/orgs",
                "repos_url": "https://api.github.com/users/satiani/repos",
                "events_url": "https://api.github.com/users/satiani/events{/privacy}",
                "received_events_url": "https://api.github.com/users/satiani/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-10-17T14:21:58Z",
            "updated_at": "2013-10-17T14:21:58Z",
            "author_association": "NONE",
            "body": "Hmm, how come the case @gioi pointed out doesn't happen in a regular request? Consider this snippet:\n\n``` python\nfrom flask import Flask\n\napp = Flask(__name__)\n\n@app.teardown_request\ndef teardown(exc=None):\n    if exc is not None:\n        print \"An exception has occured!\", repr(exc)\n    else:\n        print \"No exception!\"\n\n@app.route('/')\ndef test_exception():\n    try:\n        raise Exception('dummy')\n    except:\n        pass\n    return 'OK'\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000)\n```\n\nIf you run this and go to http://localhost:5000, you'll see OK in the browser and in the server log it looks like:\n\n```\n * Running on http://0.0.0.0:5000/\nNo exception!\n10.0.2.2 - - [17/Oct/2013 10:20:30] \"GET / HTTP/1.1\" 200 -\n```\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/26510430",
            "html_url": "https://github.com/pallets/flask/issues/882#issuecomment-26510430",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/882",
            "id": 26510430,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTEwNDMw",
            "user": {
                "login": "satiani",
                "id": 174212,
                "node_id": "MDQ6VXNlcjE3NDIxMg==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/174212?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/satiani",
                "html_url": "https://github.com/satiani",
                "followers_url": "https://api.github.com/users/satiani/followers",
                "following_url": "https://api.github.com/users/satiani/following{/other_user}",
                "gists_url": "https://api.github.com/users/satiani/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/satiani/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/satiani/subscriptions",
                "organizations_url": "https://api.github.com/users/satiani/orgs",
                "repos_url": "https://api.github.com/users/satiani/repos",
                "events_url": "https://api.github.com/users/satiani/events{/privacy}",
                "received_events_url": "https://api.github.com/users/satiani/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-10-17T14:26:45Z",
            "updated_at": "2013-10-17T14:26:45Z",
            "author_association": "NONE",
            "body": "To clarify things more, I added two print sys.exc_info() statements\n\n``` python\nrom flask import Flask\nimport sys\n\napp = Flask(__name__)\n\n@app.teardown_request\ndef teardown(exc=None):\n    print \"In teardown\", sys.exc_info()\n    if exc is not None:\n        print \"An exception has occured!\", repr(exc)\n    else:\n        print \"No exception!\"\n\n@app.route('/')\ndef test_exception():\n    try:\n        raise Exception('dummy')\n    except:\n        pass\n    print \"In request handler\", sys.exc_info()\n    return 'OK'\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000)\n```\n\nOutput:\n\n```\n* Running on http://0.0.0.0:5000/\nIn request handler (<type 'exceptions.Exception'>, Exception('dummy',), <traceback object at 0x26befc8>)\nIn teardown (None, None, None)\nNo exception!\n10.0.2.2 - - [17/Oct/2013 10:25:54] \"GET / HTTP/1.1\" 200 -\n```\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/26596916",
            "html_url": "https://github.com/pallets/flask/issues/882#issuecomment-26596916",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/882",
            "id": 26596916,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTk2OTE2",
            "user": {
                "login": "ghost",
                "id": 10137,
                "node_id": "MDQ6VXNlcjEwMTM3",
                "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ghost",
                "html_url": "https://github.com/ghost",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-10-18T13:51:07Z",
            "updated_at": "2013-10-18T13:51:07Z",
            "author_association": "NONE",
            "body": "Just wanted to point out another unexpected consequence, which won't happen in production but maybe - who knows? - in tests. And another reason to change our behavior. @DasIch which parts of the API would be incompatible?\n"
        }
    ]
}