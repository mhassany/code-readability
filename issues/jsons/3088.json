{
    "url": "https://api.github.com/repos/pallets/flask/issues/3088",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/3088/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/3088/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/3088/events",
    "html_url": "https://github.com/pallets/flask/issues/3088",
    "id": 405041270,
    "node_id": "MDU6SXNzdWU0MDUwNDEyNzA=",
    "number": 3088,
    "title": "URL Converters should have access to app context",
    "user": {
        "login": "tedivm",
        "id": 121709,
        "node_id": "MDQ6VXNlcjEyMTcwOQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/121709?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tedivm",
        "html_url": "https://github.com/tedivm",
        "followers_url": "https://api.github.com/users/tedivm/followers",
        "following_url": "https://api.github.com/users/tedivm/following{/other_user}",
        "gists_url": "https://api.github.com/users/tedivm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tedivm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tedivm/subscriptions",
        "organizations_url": "https://api.github.com/users/tedivm/orgs",
        "repos_url": "https://api.github.com/users/tedivm/repos",
        "events_url": "https://api.github.com/users/tedivm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tedivm/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
        "url": "https://api.github.com/repos/pallets/flask/milestones/3",
        "html_url": "https://github.com/pallets/flask/milestone/3",
        "labels_url": "https://api.github.com/repos/pallets/flask/milestones/3/labels",
        "id": 3093266,
        "node_id": "MDk6TWlsZXN0b25lMzA5MzI2Ng==",
        "number": 3,
        "title": "1.1.0",
        "description": "",
        "creator": {
            "login": "davidism",
            "id": 1242887,
            "node_id": "MDQ6VXNlcjEyNDI4ODc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidism",
            "html_url": "https://github.com/davidism",
            "followers_url": "https://api.github.com/users/davidism/followers",
            "following_url": "https://api.github.com/users/davidism/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
            "organizations_url": "https://api.github.com/users/davidism/orgs",
            "repos_url": "https://api.github.com/users/davidism/repos",
            "events_url": "https://api.github.com/users/davidism/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidism/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 0,
        "closed_issues": 48,
        "state": "closed",
        "created_at": "2018-02-06T16:14:43Z",
        "updated_at": "2019-07-06T22:03:23Z",
        "due_on": null,
        "closed_at": "2019-07-06T22:03:23Z"
    },
    "comments": 9,
    "created_at": "2019-01-31T01:33:08Z",
    "updated_at": "2019-09-12T22:12:36Z",
    "closed_at": "2019-06-13T19:46:54Z",
    "author_association": "NONE",
    "body": "### Expected Behavior\r\n\r\nThe following code should create a new URL converter that converts a specific field to a model (or `None`).\r\n\r\n```python\r\nclass ModelConverter(BaseConverter):\r\n\r\n    def to_python(self, value):\r\n        return models.Example.query.filter(models.Example.name == value).first()\r\n\r\n    def to_url(self, value):\r\n        if isinstance(value, str):\r\n            return value\r\n        return value.name\r\n```\r\n\r\n### Actual Behavior\r\n\r\nThe converters don't have access to the app context so an error is thrown.\r\n\r\n\r\n### Bad Solution\r\n\r\n```python\r\nclass OrganizationConverter(BaseConverter):\r\n    app = None\r\n    def to_python(self, value):\r\n        with self.app.app_context():\r\n            return repositories.Organization.query.filter(repositories.Organization.name == value).first()\r\n\r\n    def to_url(self, value):\r\n        if isinstance(value, str):\r\n            return value\r\n        return value.name\r\n```\r\n\r\nThis solution tries to get around it by creating a new app context. The problem is that the context disappears, killing the database session at the same time. This prevents SQLAlchemy features (such as lazy loading).\r\n\r\n\r\n### Environment\r\n\r\n* Python version: 3.6 and 3.7\r\n* Flask version: 1.0.2\r\n* SQLAlchemy version: 1.2.17\r\n* Flask-SQLAlchemy version: 2.3.2\r\n* Werkzeug version: 0.14.1\r\n\r\n### Additional Resources\r\n\r\nThis issue has also come up on [stack overflow](https://stackoverflow.com/questions/33856007/passing-application-context-to-custom-converter-using-the-application-factory-pa)\r\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/459206085",
            "html_url": "https://github.com/pallets/flask/issues/3088#issuecomment-459206085",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3088",
            "id": 459206085,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTIwNjA4NQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-01-31T03:57:53Z",
            "updated_at": "2019-01-31T03:57:53Z",
            "author_association": "MEMBER",
            "body": "I've also ran into this issue with converters, but it's might not be straightforward to change at this point.\r\n\r\nURL matching is done as part of creating the request context, not *pushing* the context:\r\n\r\nhttps://github.com/pallets/flask/blob/0b5b4a66ef99c8b91569dd9b9b34911834689d3f/flask/ctx.py#L313\r\n\r\nSo we'd need to move it into `RequestContext.push`, after it's actually pushed so that `request` is populated:\r\n\r\nhttps://github.com/pallets/flask/blob/0b5b4a66ef99c8b91569dd9b9b34911834689d3f/flask/ctx.py#L379\r\n\r\nIt's a more internal part of Flask, and I haven't really seen any discussion about overriding or using these parts, but I'd have to understand that more before making the change."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/459224477",
            "html_url": "https://github.com/pallets/flask/issues/3088#issuecomment-459224477",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3088",
            "id": 459224477,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTIyNDQ3Nw==",
            "user": {
                "login": "tedivm",
                "id": 121709,
                "node_id": "MDQ6VXNlcjEyMTcwOQ==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/121709?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/tedivm",
                "html_url": "https://github.com/tedivm",
                "followers_url": "https://api.github.com/users/tedivm/followers",
                "following_url": "https://api.github.com/users/tedivm/following{/other_user}",
                "gists_url": "https://api.github.com/users/tedivm/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/tedivm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tedivm/subscriptions",
                "organizations_url": "https://api.github.com/users/tedivm/orgs",
                "repos_url": "https://api.github.com/users/tedivm/repos",
                "events_url": "https://api.github.com/users/tedivm/events{/privacy}",
                "received_events_url": "https://api.github.com/users/tedivm/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-01-31T05:49:52Z",
            "updated_at": "2019-01-31T05:49:52Z",
            "author_association": "NONE",
            "body": "I managed to accomplish essentially the same thing with decorator functions (and added it on stack overflow), but it would definitely be powerful to be able to swap url parameters with their models."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/460089677",
            "html_url": "https://github.com/pallets/flask/issues/3088#issuecomment-460089677",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3088",
            "id": 460089677,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDA4OTY3Nw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-02-03T21:21:43Z",
            "updated_at": "2019-02-03T21:21:43Z",
            "author_association": "MEMBER",
            "body": "Let's start with a PR that makes the change I described, and see if it affects any existing tests. I'm happy to review a PR if someone wants to contribute."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/466793634",
            "html_url": "https://github.com/pallets/flask/issues/3088#issuecomment-466793634",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3088",
            "id": 466793634,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Njc5MzYzNA==",
            "user": {
                "login": "eladm26",
                "id": 3997292,
                "node_id": "MDQ6VXNlcjM5OTcyOTI=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/3997292?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eladm26",
                "html_url": "https://github.com/eladm26",
                "followers_url": "https://api.github.com/users/eladm26/followers",
                "following_url": "https://api.github.com/users/eladm26/following{/other_user}",
                "gists_url": "https://api.github.com/users/eladm26/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eladm26/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eladm26/subscriptions",
                "organizations_url": "https://api.github.com/users/eladm26/orgs",
                "repos_url": "https://api.github.com/users/eladm26/repos",
                "events_url": "https://api.github.com/users/eladm26/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eladm26/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-02-24T16:50:39Z",
            "updated_at": "2019-02-24T17:15:41Z",
            "author_association": "CONTRIBUTOR",
            "body": "@davidism Hi!\r\nI created a PR for this issue and tested it, should I add you as a reviewer?\r\nsorry, it's my PR here"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/466796256",
            "html_url": "https://github.com/pallets/flask/issues/3088#issuecomment-466796256",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3088",
            "id": 466796256,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Njc5NjI1Ng==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-02-24T17:19:56Z",
            "updated_at": "2019-02-24T17:19:56Z",
            "author_association": "MEMBER",
            "body": "It doesn't look like you've submitted a PR."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/466799323",
            "html_url": "https://github.com/pallets/flask/issues/3088#issuecomment-466799323",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3088",
            "id": 466799323,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Njc5OTMyMw==",
            "user": {
                "login": "eladm26",
                "id": 3997292,
                "node_id": "MDQ6VXNlcjM5OTcyOTI=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/3997292?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eladm26",
                "html_url": "https://github.com/eladm26",
                "followers_url": "https://api.github.com/users/eladm26/followers",
                "following_url": "https://api.github.com/users/eladm26/following{/other_user}",
                "gists_url": "https://api.github.com/users/eladm26/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eladm26/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eladm26/subscriptions",
                "organizations_url": "https://api.github.com/users/eladm26/orgs",
                "repos_url": "https://api.github.com/users/eladm26/repos",
                "events_url": "https://api.github.com/users/eladm26/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eladm26/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-02-24T17:52:47Z",
            "updated_at": "2019-02-24T17:52:47Z",
            "author_association": "CONTRIBUTOR",
            "body": "ok sorry, a question before I add the PR.\r\nI added the following test and did **not** change the code yet:\r\n```python\r\ndef test_model_converters(app, client):\r\n    from werkzeug.routing import BaseConverter\r\n\r\n    app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False\r\n    app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:////tmp/test.db'\r\n    db = SQLAlchemy(app)\r\n\r\n    class User(db.Model):\r\n        id = db.Column(db.Integer, primary_key=True)\r\n        username = db.Column(db.String(80), unique=True, nullable=False)\r\n        email = db.Column(db.String(120), unique=True, nullable=False)\r\n\r\n    db.create_all()\r\n    admin = User(username='admin', email='admin@example.com')\r\n    db.session.add(admin)\r\n\r\n    class ModelConverter(BaseConverter):\r\n        def to_python(self, value):\r\n            return User.query.filter(User.username == value).first()\r\n\r\n        def to_url(self, value):\r\n            if isinstance(value, str):\r\n                return value\r\n            return value.username\r\n\r\n    app.url_map.converters['model'] = ModelConverter\r\n\r\n    @app.route('/<model:user_name>')\r\n    def index(user_name):\r\n        return user_name.email\r\n\r\n    assert client.get('/admin').data == b'admin@example.com'\r\n```\r\nHowever, I did not get the out of context exception, what am I missing here?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/466800244",
            "html_url": "https://github.com/pallets/flask/issues/3088#issuecomment-466800244",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3088",
            "id": 466800244,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjgwMDI0NA==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-02-24T18:02:48Z",
            "updated_at": "2019-02-24T18:02:48Z",
            "author_association": "MEMBER",
            "body": "When using `db = SQLAlchemy(app)` the object is bound to the app and thus works without a context. Use this instead to avoid it:\r\n\r\n```python\r\ndb = SQLAlchemy()\r\ndb.init_app(app)\r\n```"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/466822325",
            "html_url": "https://github.com/pallets/flask/issues/3088#issuecomment-466822325",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3088",
            "id": 466822325,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjgyMjMyNQ==",
            "user": {
                "login": "eladm26",
                "id": 3997292,
                "node_id": "MDQ6VXNlcjM5OTcyOTI=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/3997292?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eladm26",
                "html_url": "https://github.com/eladm26",
                "followers_url": "https://api.github.com/users/eladm26/followers",
                "following_url": "https://api.github.com/users/eladm26/following{/other_user}",
                "gists_url": "https://api.github.com/users/eladm26/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eladm26/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eladm26/subscriptions",
                "organizations_url": "https://api.github.com/users/eladm26/orgs",
                "repos_url": "https://api.github.com/users/eladm26/repos",
                "events_url": "https://api.github.com/users/eladm26/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eladm26/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-02-24T22:06:27Z",
            "updated_at": "2019-02-24T22:06:27Z",
            "author_association": "CONTRIBUTOR",
            "body": "@davidism this is the PR #3104 "
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/531026060",
            "html_url": "https://github.com/pallets/flask/issues/3088#issuecomment-531026060",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3088",
            "id": 531026060,
            "node_id": "MDEyOklzc3VlQ29tbWVudDUzMTAyNjA2MA==",
            "user": {
                "login": "michaeltoohig",
                "id": 34083701,
                "node_id": "MDQ6VXNlcjM0MDgzNzAx",
                "avatar_url": "https://avatars3.githubusercontent.com/u/34083701?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/michaeltoohig",
                "html_url": "https://github.com/michaeltoohig",
                "followers_url": "https://api.github.com/users/michaeltoohig/followers",
                "following_url": "https://api.github.com/users/michaeltoohig/following{/other_user}",
                "gists_url": "https://api.github.com/users/michaeltoohig/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/michaeltoohig/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/michaeltoohig/subscriptions",
                "organizations_url": "https://api.github.com/users/michaeltoohig/orgs",
                "repos_url": "https://api.github.com/users/michaeltoohig/repos",
                "events_url": "https://api.github.com/users/michaeltoohig/events{/privacy}",
                "received_events_url": "https://api.github.com/users/michaeltoohig/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-09-12T22:08:02Z",
            "updated_at": "2019-09-12T22:12:36Z",
            "author_association": "NONE",
            "body": "Is this well documented yet? I'm here since I read the 1.1.1 release notes and was looking for some examples of how this feature could be used. The test above by @eladm26 clears things up but it took awhile for me to find it here.\r\n\r\nHere's the part from the release notes:\r\n\r\n> URL routing is performed after the request context is pushed. This allows custom URL converters to access current_app and request. This makes it possible to implement converters such as one that queries the database for a model based on the ID in the URL.\r\n\r\nThanks."
        }
    ]
}