{
    "url": "https://api.github.com/repos/pallets/flask/issues/3325",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/3325/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/3325/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/3325/events",
    "html_url": "https://github.com/pallets/flask/issues/3325",
    "id": 478302576,
    "node_id": "MDU6SXNzdWU0NzgzMDI1NzY=",
    "number": 3325,
    "title": "Upload Image with Flask backend and SwaggerUI for API",
    "user": {
        "login": "deji-bacct04",
        "id": 53857471,
        "node_id": "MDQ6VXNlcjUzODU3NDcx",
        "avatar_url": "https://avatars0.githubusercontent.com/u/53857471?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deji-bacct04",
        "html_url": "https://github.com/deji-bacct04",
        "followers_url": "https://api.github.com/users/deji-bacct04/followers",
        "following_url": "https://api.github.com/users/deji-bacct04/following{/other_user}",
        "gists_url": "https://api.github.com/users/deji-bacct04/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/deji-bacct04/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/deji-bacct04/subscriptions",
        "organizations_url": "https://api.github.com/users/deji-bacct04/orgs",
        "repos_url": "https://api.github.com/users/deji-bacct04/repos",
        "events_url": "https://api.github.com/users/deji-bacct04/events{/privacy}",
        "received_events_url": "https://api.github.com/users/deji-bacct04/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-08-08T07:38:26Z",
    "updated_at": "2019-08-21T16:48:13Z",
    "closed_at": "2019-08-21T16:47:57Z",
    "author_association": "NONE",
    "body": "### Description\r\nUploaded image is not saved and when redirected to my template.html, broken image is shown for my html.\r\n\r\nI am uploading image in flask. If Flask is used individually, upload is okay. But when integrating with Connexion[Swagger-UI], I did not have the expected results. The flow of my upload is in 1 python file. And I have 2 html files for the upload and display of image. I am sure that my configurations in swagger.yml is incorrect that is why I am not getting the results I'm expecting.\r\n\r\n\r\n### Expected behaviour\r\nExpectation: when /api/read is accessed, upload.html will be shown. select image to upload. after pressing 'Upload' button, will be redirected to template.html where will I see the image I uploaded.\r\n\r\n\r\n### Actual behaviour\r\nActual: when accessing /api/read, redirected to upload.html and after pressing Upload button, I'll be redirected to template.html but the image is broken and image is not saved to my UPLOAD_FOLDER. This is shown in flask console:\r\n```\r\n172.28.59.117 - - [07/Aug/2019 16:51:08] \"GET /api/read HTTP/1.1\" 200 -\r\n172.28.59.117 - - [07/Aug/2019 16:51:13] \"POST /api/read HTTP/1.1\" 200 -\r\n172.28.59.117 - - [07/Aug/2019 16:51:13] \"GET /api/read?filename= HTTP/1.1\" 200 -\r\n172.28.59.117 - - [07/Aug/2019 16:51:17] \"GET /api/read?filename= HTTP/1.1\" 200 -\r\n```\r\n\r\nSometimes, error is like this:\r\n```\r\nTypeError: uploaded_file() missing 1 required positional argument: 'filename'\r\n```\r\n\r\n### Additional info:\r\nupload.py\r\n```\r\nimport os\r\nfrom flask import Flask, request, redirect, url_for, send_from_directory, render_template\r\nfrom werkzeug.utils import secure_filename\r\nfrom app import application\r\nimport connexion\r\nimport logging\r\n\r\nUPLOAD_FOLDER = '/root/trial/server/uploads/'\r\nALLOWED_EXTENSIONS = set(['txt', 'pdf', 'png', 'jpg', 'jpeg', 'gif'])\r\n\r\ndef allowed_file(filename):\r\n    return '.' in filename and \\\r\n       filename.rsplit('.', 1)[1] in ALLOWED_EXTENSIONS\r\n\r\n#@application.route('/', methods=['GET', 'POST'])\r\n\r\ndef landing_page():\r\n  return render_template('upload.html')\r\n\r\ndef upload_file():\r\n    if request.method == 'POST':\r\n        global filename\r\n        global file\r\n        file = request.files['file']\r\n        if file and allowed_file(file.filename):\r\n            filename = secure_filename(file.filename)\r\n            file.save(os.path.join(application.config['UPLOAD_FOLDER'], filename))\r\n            return redirect(url_for('uploaded_file', filename=filename))\r\n    return render_template('upload.html')\r\n\r\n#@application.route('/show/<filename>')\r\ndef uploaded_file():\r\n    #filename = 'http://127.0.0.1:5000/uploads/' + filename\r\n    return render_template('template.html')\r\n\r\n#@application.route('/uploads/<filename>')\r\ndef send_file(filename):\r\n    return send_from_directory(UPLOAD_FOLDER, filename)\r\n\r\n#@application.route('/')\r\ndef api_root():\r\n    return 'Welcome'\r\n\r\nif __name__ == '__main__':\r\n    app.run()\r\n```\r\n\r\nswagger.yml\r\n```\r\ninfo:\r\n  description: This is the swagger file that goes with our server code\r\n  version: \"1.0.0\"\r\n  title: Swagger REST Article\r\nconsumes:\r\n  - \"application/json\"\r\nproduces:\r\n  - \"application/json\"\r\n\r\nbasePath: \"/api\"\r\n\r\n# Paths supported by the server application\r\npaths:\r\n  /read:\r\n     get:\r\n       operationId: \"views.upload.upload_file\"\r\n       consumes: [\"multipart/form-data\"]\r\n       produces: [\"text/html\"]\r\n       tags:\r\n         - \"Upload\"\r\n       summary: \"Uploads a file\"\r\n       parameters: [{\r\n            name: file,\r\n            required: false,\r\n            in: formData,\r\n            type: file\r\n        }]\r\n       description: \"Uploads a file\"\r\n       responses:\r\n         200:\r\n           description: \"Info Success!\"\r\n     post:\r\n       operationId: \"views.upload.uploaded_file\"\r\n       consumes: [\"application/octet-stream\"]\r\n       produces: [\"text/html\"]\r\n       tags:\r\n         - \"Upload\"\r\n       summary: \"Uploads a file\"\r\n       description: \"Uploads a file\"\r\n       responses:\r\n         201:\r\n           description: \"OK\"\r\n           schema:\r\n             type: string\r\n             format: binary\r\n     put:\r\n       operationId: \"views.upload.send_file\"\r\n       consumes: [\"application/octet-stream\"]\r\n       produces: [\"text/html\"]\r\n       tags:\r\n         - \"Upload\"\r\n       summary: \"Save file\"\r\n       description: \"Save file\"\r\n       responses:\r\n         202:\r\n           description: \"Success upload\"\r\n           schema:\r\n             type: string\r\n             format: binary\r\n```\r\n\r\ntemplate.html (snippet)\r\n```\r\n<img class=\"annotatable\" id=\"ptolemy\" src=\"{{url_for('/api.views_upload_send_file',filename=filename)}}\" class=\"annotatable\">\r\n```",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/523546521",
            "html_url": "https://github.com/pallets/flask/issues/3325#issuecomment-523546521",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3325",
            "id": 523546521,
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzU0NjUyMQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-08-21T16:48:13Z",
            "updated_at": "2019-08-21T16:48:13Z",
            "author_association": "MEMBER",
            "body": "Please use Stack Overflow for questions about your own code. This tracker is for issues related to the project itself. Be sure to include a [minimal, complete, and verifiable example](https://stackoverflow.com/help/mcve)."
        }
    ]
}