{
    "url": "https://api.github.com/repos/pallets/flask/issues/2520",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2520/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2520/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2520/events",
    "html_url": "https://github.com/pallets/flask/issues/2520",
    "id": 273817282,
    "node_id": "MDU6SXNzdWUyNzM4MTcyODI=",
    "number": 2520,
    "title": "Don't create View instances for each request",
    "user": {
        "login": "davidism",
        "id": 1242887,
        "node_id": "MDQ6VXNlcjEyNDI4ODc=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidism",
        "html_url": "https://github.com/davidism",
        "followers_url": "https://api.github.com/users/davidism/followers",
        "following_url": "https://api.github.com/users/davidism/following{/other_user}",
        "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
        "organizations_url": "https://api.github.com/users/davidism/orgs",
        "repos_url": "https://api.github.com/users/davidism/repos",
        "events_url": "https://api.github.com/users/davidism/events{/privacy}",
        "received_events_url": "https://api.github.com/users/davidism/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 19,
    "created_at": "2017-11-14T14:45:10Z",
    "updated_at": "2019-01-13T20:10:33Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "`View.as_view` creates a function that instantiates the class every request. This seems inefficient for no real gain.\r\n\r\n```python\r\nclass DeleteView(View):\r\n    methods = ['DELETE']\r\n\r\n    # this only needs to happen once\r\n    def __init__(self, model):\r\n        self.model = model\r\n        # imagine if we did something expensive here\r\n        # like generating a form based on the model\r\n```\r\n\r\nThe only argument I could think of for instantiating every request is if the constructor does something different based on the request. That seems like bad design, but any use that I can think of for that could be accomplished with properties instead.\r\n\r\nYes, there are ways to make it less expensive, like generating more ahead of time and passing more arguments, but that is not intuitive, and makes the class just a more complicated view factory.",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/344281613",
            "html_url": "https://github.com/pallets/flask/issues/2520#issuecomment-344281613",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2520",
            "id": 344281613,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDI4MTYxMw==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-11-14T14:48:34Z",
            "updated_at": "2017-11-14T14:48:34Z",
            "author_association": "MEMBER",
            "body": "I don't see how this can safely be changed without risking to break people's code if they store stuff on `self` e.g. because they call other methods in the same class and pass some thing via attributes instead of arguments.\r\n\r\nBesides that, instantiating a class is quite cheap..."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/344282067",
            "html_url": "https://github.com/pallets/flask/issues/2520#issuecomment-344282067",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2520",
            "id": 344282067,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDI4MjA2Nw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-11-14T14:49:58Z",
            "updated_at": "2017-11-14T14:49:58Z",
            "author_association": "MEMBER",
            "body": "It's not cheap if you do something expensive in the constructor, which until I dug into the implementation was my intuition of how to use them."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/344282434",
            "html_url": "https://github.com/pallets/flask/issues/2520#issuecomment-344282434",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2520",
            "id": 344282434,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDI4MjQzNA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-11-14T14:51:03Z",
            "updated_at": "2017-11-14T14:51:28Z",
            "author_association": "MEMBER",
            "body": "Storing things on `self` from other methods is equivalent to storing globals, which would break for the usual reasons."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/344282839",
            "html_url": "https://github.com/pallets/flask/issues/2520#issuecomment-344282839",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2520",
            "id": 344282839,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDI4MjgzOQ==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-11-14T14:52:14Z",
            "updated_at": "2017-11-14T14:52:14Z",
            "author_association": "MEMBER",
            "body": "only if an instance is reused for more than one request. as long as the instance is request-scoped, storing stuff on self is like setting a local variable in a normal view function"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/344284021",
            "html_url": "https://github.com/pallets/flask/issues/2520#issuecomment-344284021",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2520",
            "id": 344284021,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDI4NDAyMQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-11-14T14:55:52Z",
            "updated_at": "2017-11-14T14:56:57Z",
            "author_association": "MEMBER",
            "body": "Ah, I see. I wonder how common that is? Or at least how many are written in such a way that they would break with a single instance.\r\n\r\nI'd rather change the behavior and put a big warning in the changelog / docs that they should store data on `g`."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/344285041",
            "html_url": "https://github.com/pallets/flask/issues/2520#issuecomment-344285041",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2520",
            "id": 344285041,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDI4NTA0MQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-11-14T14:58:51Z",
            "updated_at": "2017-11-14T14:58:59Z",
            "author_association": "MEMBER",
            "body": "Maybe add a `every_request=True` arg to `as_view`, and issue a deprecation warning that it will change to `False` in the future."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/344286412",
            "html_url": "https://github.com/pallets/flask/issues/2520#issuecomment-344286412",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2520",
            "id": 344286412,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDI4NjQxMg==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-11-14T15:03:03Z",
            "updated_at": "2017-11-14T15:03:03Z",
            "author_association": "MEMBER",
            "body": "If we add this I would rather go for this thing to always be configurable or even better add a `SingletonView` base class that is instantiated once. Like this you can pick what suits you more instead of having "
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/344287421",
            "html_url": "https://github.com/pallets/flask/issues/2520#issuecomment-344287421",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2520",
            "id": 344287421,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDI4NzQyMQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-11-14T15:06:17Z",
            "updated_at": "2017-11-14T15:06:17Z",
            "author_association": "MEMBER",
            "body": "I'll have to think on how we could do `SingletonView` without copying the `View.as_view` code, which would be harder to maintain. But I'm ok with it in principal, assuming we change the docs to push it as the normal choice and `View` as a more advanced choice."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/344377616",
            "html_url": "https://github.com/pallets/flask/issues/2520#issuecomment-344377616",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2520",
            "id": 344377616,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDM3NzYxNg==",
            "user": {
                "login": "jeffwidman",
                "id": 483314,
                "node_id": "MDQ6VXNlcjQ4MzMxNA==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/483314?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jeffwidman",
                "html_url": "https://github.com/jeffwidman",
                "followers_url": "https://api.github.com/users/jeffwidman/followers",
                "following_url": "https://api.github.com/users/jeffwidman/following{/other_user}",
                "gists_url": "https://api.github.com/users/jeffwidman/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jeffwidman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jeffwidman/subscriptions",
                "organizations_url": "https://api.github.com/users/jeffwidman/orgs",
                "repos_url": "https://api.github.com/users/jeffwidman/repos",
                "events_url": "https://api.github.com/users/jeffwidman/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jeffwidman/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-11-14T19:52:49Z",
            "updated_at": "2017-11-14T19:52:49Z",
            "author_association": "MEMBER",
            "body": "Isn't storing stuff on `self` already discouraged in favor  of storing stuff on `g`?\r\n\r\nPersonally, I'd rather move people towards a best practice and worry less about breaking their code, as long as we do it in a major version bump (and the upcoming 1.0 feels like an ideal time).\r\n\r\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/344377919",
            "html_url": "https://github.com/pallets/flask/issues/2520#issuecomment-344377919",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2520",
            "id": 344377919,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDM3NzkxOQ==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-11-14T19:53:50Z",
            "updated_at": "2017-11-14T19:53:50Z",
            "author_association": "MEMBER",
            "body": "`g` is something to use across the code (e.g. for stuff like the current user). Putting application data into `g` that is used within a single class seems pretty ugly to me."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/344462978",
            "html_url": "https://github.com/pallets/flask/issues/2520#issuecomment-344462978",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2520",
            "id": 344462978,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDQ2Mjk3OA==",
            "user": {
                "login": "justanr",
                "id": 4221605,
                "node_id": "MDQ6VXNlcjQyMjE2MDU=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/4221605?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/justanr",
                "html_url": "https://github.com/justanr",
                "followers_url": "https://api.github.com/users/justanr/followers",
                "following_url": "https://api.github.com/users/justanr/following{/other_user}",
                "gists_url": "https://api.github.com/users/justanr/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/justanr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justanr/subscriptions",
                "organizations_url": "https://api.github.com/users/justanr/orgs",
                "repos_url": "https://api.github.com/users/justanr/repos",
                "events_url": "https://api.github.com/users/justanr/events{/privacy}",
                "received_events_url": "https://api.github.com/users/justanr/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-11-15T02:07:11Z",
            "updated_at": "2017-11-15T02:07:51Z",
            "author_association": "NONE",
            "body": "@davidism \r\n\r\n> I'll have to think on how we could do SingletonView without copying the View.as_view code, which would be harder to maintain. But I'm ok with it in principal, assuming we change the docs to push it as the normal choice and View as a more advanced choice.\r\n\r\nI'd be okay with this, as View allows you to do stuff like request based DI into a view (e.g. make this instance if X otherwise make that one), plus self is cheap storage if the view class has multiple methods.\r\n\r\nThis [call here](https://github.com/pallets/flask/blob/3a2f396265aa052892a0f432b058b65588d331b8/flask/views.py#L86) can be modified in the SingletonView to create the instance and store the reference onto the class, something like:\r\n\r\n```python\r\nclass SingletonView(View):\r\n    instances = {}\r\n\r\n    @classmethod\r\n    def as_view(cls, name, *class_args, **cls_kwargs):\r\n        view = super().as_view(cls, name, *class_args, **kwargs)\r\n        \r\n        def singleton_view(*cls_args, **cls_kwargs):\r\n            view_inst = cls.instances.get(name)\r\n             if not view_inst:\r\n                 view_inst = cls.instances[name] = cls(*cls_args, **cls_kwargs)\r\n             return view_inst\r\n\r\n        view.view_cls = singleton_view\r\n        return view\r\n```\r\n\r\nThat's just a rough draft idea, but something along those lines would not create a new instance for each request and allow the view class to be created for multiple end points."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/344522130",
            "html_url": "https://github.com/pallets/flask/issues/2520#issuecomment-344522130",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2520",
            "id": 344522130,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDUyMjEzMA==",
            "user": {
                "login": "fcracker79",
                "id": 7695156,
                "node_id": "MDQ6VXNlcjc2OTUxNTY=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/7695156?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/fcracker79",
                "html_url": "https://github.com/fcracker79",
                "followers_url": "https://api.github.com/users/fcracker79/followers",
                "following_url": "https://api.github.com/users/fcracker79/following{/other_user}",
                "gists_url": "https://api.github.com/users/fcracker79/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/fcracker79/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fcracker79/subscriptions",
                "organizations_url": "https://api.github.com/users/fcracker79/orgs",
                "repos_url": "https://api.github.com/users/fcracker79/repos",
                "events_url": "https://api.github.com/users/fcracker79/events{/privacy}",
                "received_events_url": "https://api.github.com/users/fcracker79/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-11-15T08:35:54Z",
            "updated_at": "2017-11-15T08:35:54Z",
            "author_association": "NONE",
            "body": "What about object pooling?\r\nThis way no such code change will be required to benefit from such an improvement."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/344589498",
            "html_url": "https://github.com/pallets/flask/issues/2520#issuecomment-344589498",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2520",
            "id": 344589498,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDU4OTQ5OA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-11-15T13:18:10Z",
            "updated_at": "2017-11-15T13:18:10Z",
            "author_association": "MEMBER",
            "body": "You'll need to explain what you mean."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/354574441",
            "html_url": "https://github.com/pallets/flask/issues/2520#issuecomment-354574441",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2520",
            "id": 354574441,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDU3NDQ0MQ==",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-12-30T23:26:21Z",
            "updated_at": "2017-12-30T23:26:21Z",
            "author_association": "MEMBER",
            "body": "This was done intentionally because people can stuff state on self between functions. It matches the behavior in Django."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/354582299",
            "html_url": "https://github.com/pallets/flask/issues/2520#issuecomment-354582299",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2520",
            "id": 354582299,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDU4MjI5OQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-12-31T03:02:50Z",
            "updated_at": "2017-12-31T03:02:50Z",
            "author_association": "MEMBER",
            "body": "We could probably do something with `__setattr__`, similar to how the Flask object prevents setup methods after handling requests. From my experience on Stack Overflow, the users who would use globals will find a way and insist it's ok anyway."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/354591973",
            "html_url": "https://github.com/pallets/flask/issues/2520#issuecomment-354591973",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2520",
            "id": 354591973,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDU5MTk3Mw==",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-12-31T08:33:43Z",
            "updated_at": "2017-12-31T08:33:43Z",
            "author_association": "MEMBER",
            "body": "@davidism thing is that I have used the fact that self is fresh from request to request myself plenty of times. The allocation of the class instance is insignificant compared to what else happens on request dispatching."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/354592009",
            "html_url": "https://github.com/pallets/flask/issues/2520#issuecomment-354592009",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2520",
            "id": 354592009,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDU5MjAwOQ==",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-12-31T08:34:38Z",
            "updated_at": "2017-12-31T08:34:59Z",
            "author_association": "MEMBER",
            "body": "Changing this now will break a lot of code since this is also explicitly documented behavior:\r\n\r\n> The way this works is that whenever the request is dispatched a new instance of the class is created and the dispatch_request() method is called with the parameters from the URL rule. The class itself is instantiated with the parameters passed to the as_view() function."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/354623879",
            "html_url": "https://github.com/pallets/flask/issues/2520#issuecomment-354623879",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2520",
            "id": 354623879,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDYyMzg3OQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-12-31T21:08:12Z",
            "updated_at": "2017-12-31T21:08:12Z",
            "author_association": "MEMBER",
            "body": "@mitsuhiko would you be ok with a new SingletonView subclass?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/354624046",
            "html_url": "https://github.com/pallets/flask/issues/2520#issuecomment-354624046",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2520",
            "id": 354624046,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDYyNDA0Ng==",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-12-31T21:13:38Z",
            "updated_at": "2017-12-31T21:13:38Z",
            "author_association": "MEMBER",
            "body": "@davidism i could imagine a `lifetime` attribute on the view that the generic `as_view` function internally references. It could be `'request'` which means it lives for the single request only, `'application'` which binds it to the application instance or `'global'` which makes it an actual singleton that then cannot have state.\r\n\r\nGenerally the only values I think make sense are `'request'` and `'application'` though."
        }
    ]
}