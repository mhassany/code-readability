{
    "url": "https://api.github.com/repos/pallets/flask/issues/661",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/661/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/661/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/661/events",
    "html_url": "https://github.com/pallets/flask/issues/661",
    "id": 9710192,
    "node_id": "MDU6SXNzdWU5NzEwMTky",
    "number": 661,
    "title": "@app.teardown_request function doesn't called in debug mode [NOT-A-BUG]",
    "user": {
        "login": "seriyps",
        "id": 422014,
        "node_id": "MDQ6VXNlcjQyMjAxNA==",
        "avatar_url": "https://avatars3.githubusercontent.com/u/422014?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/seriyps",
        "html_url": "https://github.com/seriyps",
        "followers_url": "https://api.github.com/users/seriyps/followers",
        "following_url": "https://api.github.com/users/seriyps/following{/other_user}",
        "gists_url": "https://api.github.com/users/seriyps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/seriyps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/seriyps/subscriptions",
        "organizations_url": "https://api.github.com/users/seriyps/orgs",
        "repos_url": "https://api.github.com/users/seriyps/repos",
        "events_url": "https://api.github.com/users/seriyps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/seriyps/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2013-01-05T21:57:19Z",
    "updated_at": "2015-02-27T03:14:13Z",
    "closed_at": "2013-01-27T00:56:07Z",
    "author_association": "NONE",
    "body": "UPD: not a bug, see https://github.com/mitsuhiko/flask/issues/661#issuecomment-11975645\n\n```\nfrom flask import Flask\n\napp = Flask('teardown')\n\n@app.teardown_request\ndef shutdown_session(err):\n    print repr(err)\n\n@app.route('/')\ndef index():\n    raise ValueError('test exc')\n\nif __name__ == '__main__':\n    app.run()\n```\n\nSo, when I open index page and see 500 error page, console output is `ValueError('test exc')`. But when I start app in debug mode, eg\n\n```\nif __name__ == '__main__':\n    app.run(debug=True)\n```\n\nOutput is `None`, when expected `ValueError('test exc')`.\n\nThis is important for me, because I use `teardown_request` for sqlalchemy transaction management like\n\n```\n@app.teardown_request\ndef shutdown_session(exception):\n    if exception:\n        db.session.rollback()\n    else:\n        db.session.commit()\n```\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/11926381",
            "html_url": "https://github.com/pallets/flask/issues/661#issuecomment-11926381",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/661",
            "id": 11926381,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExOTI2Mzgx",
            "user": {
                "login": "mgax",
                "id": 27617,
                "node_id": "MDQ6VXNlcjI3NjE3",
                "avatar_url": "https://avatars2.githubusercontent.com/u/27617?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mgax",
                "html_url": "https://github.com/mgax",
                "followers_url": "https://api.github.com/users/mgax/followers",
                "following_url": "https://api.github.com/users/mgax/following{/other_user}",
                "gists_url": "https://api.github.com/users/mgax/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mgax/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mgax/subscriptions",
                "organizations_url": "https://api.github.com/users/mgax/orgs",
                "repos_url": "https://api.github.com/users/mgax/repos",
                "events_url": "https://api.github.com/users/mgax/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mgax/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-01-06T09:52:51Z",
            "updated_at": "2013-01-06T09:52:51Z",
            "author_association": "CONTRIBUTOR",
            "body": "What Flask version are you using? I just ran your example, and with `debug=True`, it printed a traceback to the console, and did not enter `shutdown_session` at all. If you open the page in a browser expect multiple requests to the app (the favicon plus several calls by the werkzeug debugger), maybe that's where you see `err==None`.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/11926431",
            "html_url": "https://github.com/pallets/flask/issues/661#issuecomment-11926431",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/661",
            "id": 11926431,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExOTI2NDMx",
            "user": {
                "login": "mgax",
                "id": 27617,
                "node_id": "MDQ6VXNlcjI3NjE3",
                "avatar_url": "https://avatars2.githubusercontent.com/u/27617?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mgax",
                "html_url": "https://github.com/mgax",
                "followers_url": "https://api.github.com/users/mgax/followers",
                "following_url": "https://api.github.com/users/mgax/following{/other_user}",
                "gists_url": "https://api.github.com/users/mgax/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mgax/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mgax/subscriptions",
                "organizations_url": "https://api.github.com/users/mgax/orgs",
                "repos_url": "https://api.github.com/users/mgax/repos",
                "events_url": "https://api.github.com/users/mgax/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mgax/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-01-06T09:56:17Z",
            "updated_at": "2013-01-06T09:56:17Z",
            "author_association": "CONTRIBUTOR",
            "body": "There's a [pull request](https://github.com/mitsuhiko/flask-sqlalchemy/pull/115) for flask-sqlalchemy that implements commit on app teardown, would you consider testing and helping improve it?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/11927955",
            "html_url": "https://github.com/pallets/flask/issues/661#issuecomment-11927955",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/661",
            "id": 11927955,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExOTI3OTU1",
            "user": {
                "login": "seriyps",
                "id": 422014,
                "node_id": "MDQ6VXNlcjQyMjAxNA==",
                "avatar_url": "https://avatars3.githubusercontent.com/u/422014?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/seriyps",
                "html_url": "https://github.com/seriyps",
                "followers_url": "https://api.github.com/users/seriyps/followers",
                "following_url": "https://api.github.com/users/seriyps/following{/other_user}",
                "gists_url": "https://api.github.com/users/seriyps/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/seriyps/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seriyps/subscriptions",
                "organizations_url": "https://api.github.com/users/seriyps/orgs",
                "repos_url": "https://api.github.com/users/seriyps/repos",
                "events_url": "https://api.github.com/users/seriyps/events{/privacy}",
                "received_events_url": "https://api.github.com/users/seriyps/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-01-06T12:53:56Z",
            "updated_at": "2013-01-06T12:53:56Z",
            "author_association": "NONE",
            "body": "Thanks for review!\nI use Flask 0.9\nSorry, my case code was broken, I didn't check enough before reporting. This is correct code:\n\n```\nfrom flask import Flask  # , Blueprint\n\napp = Flask('teardown')\n\n# user = Blueprint('user', __name__)\n# @user.route('/')\n@app.route('/')\ndef index():\n    # do some DB work\n    raise ValueError('test exc')\n\n# app.register_blueprint(user, url_prefix='/user')\n\n@app.teardown_request\ndef shutdown_session(err):\n    from flask import request\n    print 'shutdown_session:', repr(err), request.base_url, request.method\n\nif __name__ == '__main__':\n    app.run(debug=True)\n```\n\n(FYI: if you uncomment commented lines and comment \"@app.route('/')\" /How I actually do in my app/ issue reproduced too)\nThis will output\n\n```\n127.0.0.1 - - [06/Jan/2013 16:41:16] \"GET / HTTP/1.1\" 500 -\nTraceback (most recent call last):\n  File \"/home/seriy/workspace/wannatop/env/lib/python2.7/site-packages/flask/app.py\", line 1701, in __call__\n    return self.wsgi_app(environ, start_response)\n  File \"/home/seriy/workspace/wannatop/env/lib/python2.7/site-packages/flask/app.py\", line 1689, in wsgi_app\n    response = self.make_response(self.handle_exception(e))\n  File \"/home/seriy/workspace/wannatop/env/lib/python2.7/site-packages/flask/app.py\", line 1687, in wsgi_app\n    response = self.full_dispatch_request()\n  File \"/home/seriy/workspace/wannatop/env/lib/python2.7/site-packages/flask/app.py\", line 1360, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File \"/home/seriy/workspace/wannatop/env/lib/python2.7/site-packages/flask/app.py\", line 1358, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"/home/seriy/workspace/wannatop/env/lib/python2.7/site-packages/flask/app.py\", line 1344, in dispatch_request\n    return self.view_functions[rule.endpoint](**req.view_args)\n  File \"/home/seriy/workspace/wannatop/pb.py\", line 11, in index\n    raise ValueError('test exc')\nValueError: test exc\n127.0.0.1 - - [06/Jan/2013 16:41:16] \"GET /?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1\" 200 -\n127.0.0.1 - - [06/Jan/2013 16:41:16] \"GET /?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1\" 200 -\n127.0.0.1 - - [06/Jan/2013 16:41:16] \"GET /?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1\" 200 -\n127.0.0.1 - - [06/Jan/2013 16:41:16] \"GET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1\" 200 -\n127.0.0.1 - - [06/Jan/2013 16:41:16] \"GET /?__debugger__=yes&cmd=resource&f=source.png HTTP/1.1\" 200 -\nshutdown_session: None http://127.0.0.1:5000/ GET  <<--------- problem there!!!!!!!\nshutdown_session: None http://127.0.0.1:5000/favicon.ico GET\n127.0.0.1 - - [06/Jan/2013 16:41:16] \"GET /favicon.ico HTTP/1.1\" 404 -\n\n```\n\nMy current workaround is\n\n```\nfrom flask import got_request_exception\n\n@got_request_exception.connect_via(app)\ndef _rollback_transaction(sender, exception):\n    db.session.rollback()\n```\n\nYour flask-sqlalchemy pull-request looks awesome! I will try it soon and comment on it.\n\nPS: flask also doesn't trigger @app.errorhandler(500) in debug mode, but I think that fact should be documented.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/11928709",
            "html_url": "https://github.com/pallets/flask/issues/661#issuecomment-11928709",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/661",
            "id": 11928709,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExOTI4NzA5",
            "user": {
                "login": "mgax",
                "id": 27617,
                "node_id": "MDQ6VXNlcjI3NjE3",
                "avatar_url": "https://avatars2.githubusercontent.com/u/27617?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mgax",
                "html_url": "https://github.com/mgax",
                "followers_url": "https://api.github.com/users/mgax/followers",
                "following_url": "https://api.github.com/users/mgax/following{/other_user}",
                "gists_url": "https://api.github.com/users/mgax/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mgax/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mgax/subscriptions",
                "organizations_url": "https://api.github.com/users/mgax/orgs",
                "repos_url": "https://api.github.com/users/mgax/repos",
                "events_url": "https://api.github.com/users/mgax/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mgax/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-01-06T13:57:33Z",
            "updated_at": "2013-01-06T13:57:33Z",
            "author_association": "CONTRIBUTOR",
            "body": "Same as the first example, `shutdown_session` is not called at all when `DEBUG=True`. Use _curl_ instead of a browser to make sure you only make one HTTP request. But do you need to explicitly do `rollback`? I think the session is automatically discarded with a rollback if you don't call `commit`.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/11929078",
            "html_url": "https://github.com/pallets/flask/issues/661#issuecomment-11929078",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/661",
            "id": 11929078,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExOTI5MDc4",
            "user": {
                "login": "seriyps",
                "id": 422014,
                "node_id": "MDQ6VXNlcjQyMjAxNA==",
                "avatar_url": "https://avatars3.githubusercontent.com/u/422014?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/seriyps",
                "html_url": "https://github.com/seriyps",
                "followers_url": "https://api.github.com/users/seriyps/followers",
                "following_url": "https://api.github.com/users/seriyps/following{/other_user}",
                "gists_url": "https://api.github.com/users/seriyps/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/seriyps/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seriyps/subscriptions",
                "organizations_url": "https://api.github.com/users/seriyps/orgs",
                "repos_url": "https://api.github.com/users/seriyps/repos",
                "events_url": "https://api.github.com/users/seriyps/events{/privacy}",
                "received_events_url": "https://api.github.com/users/seriyps/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-01-06T14:33:16Z",
            "updated_at": "2013-01-06T14:37:36Z",
            "author_association": "NONE",
            "body": "Just discower that this issue is reproduced if I run `python pb.py` in first console, then call `curl http://127.0.0.1/` in other console **MORE then 1** times...\n\n```\n$ python pb.py                                                                                                       [17:42:20]\n * Running on http://127.0.0.1:5000/\n * Restarting with reloader\n127.0.0.1 - - [06/Jan/2013 18:22:38] \"GET / HTTP/1.1\" 500 -\nTraceback (most recent call last):\n  File \"/home/seriy/workspace/wannatop/env/lib/python2.7/site-packages/flask/app.py\", line 1701, in __call__\n    return self.wsgi_app(environ, start_response)\n  File \"/home/seriy/workspace/wannatop/env/lib/python2.7/site-packages/flask/app.py\", line 1689, in wsgi_app\n    response = self.make_response(self.handle_exception(e))\n  File \"/home/seriy/workspace/wannatop/env/lib/python2.7/site-packages/flask/app.py\", line 1687, in wsgi_app\n    response = self.full_dispatch_request()\n  File \"/home/seriy/workspace/wannatop/env/lib/python2.7/site-packages/flask/app.py\", line 1360, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File \"/home/seriy/workspace/wannatop/env/lib/python2.7/site-packages/flask/app.py\", line 1358, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"/home/seriy/workspace/wannatop/env/lib/python2.7/site-packages/flask/app.py\", line 1344, in dispatch_request\n    return self.view_functions[rule.endpoint](**req.view_args)\n  File \"/home/seriy/workspace/wannatop/pb.py\", line 11, in index\n    raise ValueError('test exc')\nValueError: test exc\n('shutdown_session:', 'None', 'http://127.0.0.1:5000/', 'GET', datetime.datetime(2013, 1, 6, 18, 22, 46, 368193))\n127.0.0.1 - - [06/Jan/2013 18:22:46] \"GET / HTTP/1.1\" 500 -\nTraceback (most recent call last):\n  File \"/home/seriy/workspace/wannatop/env/lib/python2.7/site-packages/flask/app.py\", line 1701, in __call__\n    return self.wsgi_app(environ, start_response)\n...................\n  File \"/home/seriy/workspace/wannatop/pb.py\", line 11, in index\n    raise ValueError('test exc')\nValueError: test exc\n('shutdown_session:', 'None', 'http://127.0.0.1:5000/', 'GET', datetime.datetime(2013, 1, 6, 18, 22, 57, 355056))\n127.0.0.1 - - [06/Jan/2013 18:22:57] \"GET / HTTP/1.1\" 500 -\nTraceback (most recent call last):\n  File \"/home/seriy/workspace/wannatop/env/lib/python2.7/site-packages/flask/app.py\", line 1701, in __call__\n    return self.wsgi_app(environ, start_response)\n...............\n  File \"/home/seriy/workspace/wannatop/pb.py\", line 11, in index\n    raise ValueError('test exc')\nValueError: test exc\n\n```\n\n```\n$ curl http://127.0.0.1:5000/\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n  \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n  <head>\n    <title>ValueError: test exc // Werkzeug Debugger</title>\n......\n$ curl http://127.0.0.1:5000/\n......\n$ curl http://127.0.0.1:5000/\n......\n```\n\nI also add datetime.datetime.now() to print statement. Looks like `@teardown_request` called not after request finishes, but before the next one started!!!\n\nThis is very strange behaviour. Anyway, if id doesn't called at all - this is not what I expect.\n\n---\n\nI realised that I doesn't need to call rollback explicitly, because `db.session.remove()` will call it anyway http://docs.sqlalchemy.org/en/rel_0_8/orm/session.html#sqlalchemy.orm.scoping.scoped_session.remove . My full transaction control  code looked like this before `@got_request_exception` workaround\n\n```\n@app.teardown_request\ndef _manage_transaction(exception):\n    if exception:\n        db.session.rollback()\n    else:\n        db.session.commit()\n    db.session.remove()\n```\n\nSo it can be replaced by\n\n```\n@app.teardown_request\ndef _manage_transaction(exception):\n    if not exception:\n        db.session.commit()\n    db.session.remove()\n```\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/11975645",
            "html_url": "https://github.com/pallets/flask/issues/661#issuecomment-11975645",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/661",
            "id": 11975645,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExOTc1NjQ1",
            "user": {
                "login": "seriyps",
                "id": 422014,
                "node_id": "MDQ6VXNlcjQyMjAxNA==",
                "avatar_url": "https://avatars3.githubusercontent.com/u/422014?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/seriyps",
                "html_url": "https://github.com/seriyps",
                "followers_url": "https://api.github.com/users/seriyps/followers",
                "following_url": "https://api.github.com/users/seriyps/following{/other_user}",
                "gists_url": "https://api.github.com/users/seriyps/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/seriyps/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seriyps/subscriptions",
                "organizations_url": "https://api.github.com/users/seriyps/orgs",
                "repos_url": "https://api.github.com/users/seriyps/repos",
                "events_url": "https://api.github.com/users/seriyps/events{/privacy}",
                "received_events_url": "https://api.github.com/users/seriyps/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-01-07T22:38:59Z",
            "updated_at": "2013-01-07T22:38:59Z",
            "author_association": "NONE",
            "body": "I discover, that this behaviour is little documented there http://flask.pocoo.org/docs/config/#builtin-configuration-values `PRESERVE_CONTEXT_ON_EXCEPTION` description.\n\nSo, the following piece of code fixes my issue\n\n```\napp.config['PRESERVE_CONTEXT_ON_EXCEPTION'] = False\n```\n\nBut I think this should be documented there http://flask.pocoo.org/docs/api/#flask.Flask.teardown_request too!\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/76323859",
            "html_url": "https://github.com/pallets/flask/issues/661#issuecomment-76323859",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/661",
            "id": 76323859,
            "node_id": "MDEyOklzc3VlQ29tbWVudDc2MzIzODU5",
            "user": {
                "login": "demichej",
                "id": 422315,
                "node_id": "MDQ6VXNlcjQyMjMxNQ==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/422315?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/demichej",
                "html_url": "https://github.com/demichej",
                "followers_url": "https://api.github.com/users/demichej/followers",
                "following_url": "https://api.github.com/users/demichej/following{/other_user}",
                "gists_url": "https://api.github.com/users/demichej/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/demichej/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/demichej/subscriptions",
                "organizations_url": "https://api.github.com/users/demichej/orgs",
                "repos_url": "https://api.github.com/users/demichej/repos",
                "events_url": "https://api.github.com/users/demichej/events{/privacy}",
                "received_events_url": "https://api.github.com/users/demichej/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-02-27T03:14:13Z",
            "updated_at": "2015-02-27T03:14:13Z",
            "author_association": "NONE",
            "body": "FYI, this also affects the teardown_appcontext. This is also the method that is mentioned in the SQLAlchemy setup doc page: http://flask.pocoo.org/docs/0.10/patterns/sqlalchemy/\n\nSo might want to add a note there too:\nhttp://flask.pocoo.org/docs/0.10/api/#flask.Flask.teardown_appcontext\n"
        }
    ]
}