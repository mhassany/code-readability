{
    "url": "https://api.github.com/repos/pallets/flask/issues/2006",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2006/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2006/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2006/events",
    "html_url": "https://github.com/pallets/flask/pull/2006",
    "id": 175232780,
    "node_id": "MDExOlB1bGxSZXF1ZXN0ODQxMTE3ODc=",
    "number": 2006,
    "title": "Don't passthrough_errors unless instructed.",
    "user": {
        "login": "untitaker",
        "id": 837573,
        "node_id": "MDQ6VXNlcjgzNzU3Mw==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/untitaker",
        "html_url": "https://github.com/untitaker",
        "followers_url": "https://api.github.com/users/untitaker/followers",
        "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
        "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
        "organizations_url": "https://api.github.com/users/untitaker/orgs",
        "repos_url": "https://api.github.com/users/untitaker/repos",
        "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/untitaker/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 14,
    "created_at": "2016-09-06T12:19:53Z",
    "updated_at": "2017-03-20T18:05:03Z",
    "closed_at": "2016-09-06T20:32:34Z",
    "author_association": "MEMBER",
    "pull_request": {
        "url": "https://api.github.com/repos/pallets/flask/pulls/2006",
        "html_url": "https://github.com/pallets/flask/pull/2006",
        "diff_url": "https://github.com/pallets/flask/pull/2006.diff",
        "patch_url": "https://github.com/pallets/flask/pull/2006.patch"
    },
    "body": "Fix #2005\n\nRevert #1679 and #1996\n\n<!-- Reviewable:start -->\n\n---\n\nThis change is [<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/pallets/flask/2006)\n\n<!-- Reviewable:end -->\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/244932935",
            "html_url": "https://github.com/pallets/flask/pull/2006#issuecomment-244932935",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2006",
            "id": 244932935,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDkzMjkzNQ==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-06T12:20:07Z",
            "updated_at": "2016-09-06T12:20:07Z",
            "author_association": "MEMBER",
            "body": "cc @miguelgrinberg @davidism\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/245003657",
            "html_url": "https://github.com/pallets/flask/pull/2006#issuecomment-245003657",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2006",
            "id": 245003657,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTAwMzY1Nw==",
            "user": {
                "login": "miguelgrinberg",
                "id": 2715854,
                "node_id": "MDQ6VXNlcjI3MTU4NTQ=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/miguelgrinberg",
                "html_url": "https://github.com/miguelgrinberg",
                "followers_url": "https://api.github.com/users/miguelgrinberg/followers",
                "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions",
                "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs",
                "repos_url": "https://api.github.com/users/miguelgrinberg/repos",
                "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}",
                "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-06T16:14:18Z",
            "updated_at": "2016-09-06T16:14:18Z",
            "author_association": "MEMBER",
            "body": "If you merge this, we are back at square one, the passthrough errors option for flask will be broken again. Flask will passthrough errors all right, but then werkzeug will block them.\n\nI see now how the change in cli.py is a problem, but the change in app.py is perfectly fine and can/should stay. Why is there a need to undo that one as well?\n\nAs for the cli.py change, would it make sense to adapt that change to only set passthrough errors when the app is loaded eagerly? That seems doable and will only leave passthrough errors incorrectly set when the reloader is used, and that to me is fine, since the reloader and a debugger are normally not used together.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/245014471",
            "html_url": "https://github.com/pallets/flask/pull/2006#issuecomment-245014471",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2006",
            "id": 245014471,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTAxNDQ3MQ==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-06T16:50:44Z",
            "updated_at": "2016-09-06T16:50:44Z",
            "author_association": "MEMBER",
            "body": "IMO it's problematic to have two different behaviors for the Flask command and app.run. They should behave the same as far as possible.\n\nOn 6 September 2016 18:14:30 CEST, Miguel Grinberg notifications@github.com wrote:\n\n> If you merge this, we are back at square one, the passthrough errors\n> option for flask will be broken again. Flask will passthrough errors\n> all right, but then werkzeug will block them.\n> \n> I see now how the change in cli.py is a problem, but the change in\n> app.py is perfectly fine and can/should stay. Why is there a need to\n> undo that one as well?\n> \n> As for the cli.py change, would it make sense to adapt that change to\n> only set passthrough errors when the app is loaded eagerly? That seems\n> doable and will only leave passthrough errors incorrectly set when the\n> reloader is used, and that to me is fine, since the reloader and a\n> debugger are normally not used together.\n> \n> ## \n> \n> You are receiving this because you authored the thread.\n> Reply to this email directly or view it on GitHub:\n> https://github.com/pallets/flask/pull/2006#issuecomment-245003657\n\n## \n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/245022825",
            "html_url": "https://github.com/pallets/flask/pull/2006#issuecomment-245022825",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2006",
            "id": 245022825,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTAyMjgyNQ==",
            "user": {
                "login": "miguelgrinberg",
                "id": 2715854,
                "node_id": "MDQ6VXNlcjI3MTU4NTQ=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/miguelgrinberg",
                "html_url": "https://github.com/miguelgrinberg",
                "followers_url": "https://api.github.com/users/miguelgrinberg/followers",
                "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions",
                "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs",
                "repos_url": "https://api.github.com/users/miguelgrinberg/repos",
                "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}",
                "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-06T17:18:39Z",
            "updated_at": "2016-09-06T17:18:39Z",
            "author_association": "MEMBER",
            "body": "Uniform behavior is good, but in this case you are uniformly applying the wrong behavior, so it isn't a great solution IMHO.\n\nFor starters, let's agree that the use of `flask run` with a debugger isn't that friendly. It's not even documented how to do it at this point, the only debugger example in the documentation is still based on `app.run`.\n\nI do not agree that it is a good idea to break passthrough errors for `app.run` just for the sake of uniformity. If we agree that the end goal is to have passthrough errors working in the correct way across the board, then I think what makes sense is to fix the cases that are easy to fix, and to leave bugs open for the cases that need more careful thinking.\n\nI think we can leave `app.run` out of this discussion, since it is working 100% right at this time. For the `flask run` case, we can fix the eager loading case fairly easily, as I indicated above (I can write that fix if you want, and I'm happy to also throw updated docs for debugging with `flask run` to sweeten the deal ;-). This addresses the cases in which debug mode and/or the reloader is off. These are the cases in which it makes more sense to use a debugger, and thus to also use passthrough errors.\n\nWhat's left are the lazy loading cases, which in general are the cases where debug mode is enabled, or at least when the reloader is on. The usefulness of passthrough errors in these cases is debatable. I have never used passthrough errors in conjunction with Flask's debug mode myself. I think addressing passthrough errors in this case is much lower priority than the other cases, so I would leave an issue open for that. I'm happy to think about addressing this case as well.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/245040624",
            "html_url": "https://github.com/pallets/flask/pull/2006#issuecomment-245040624",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2006",
            "id": 245040624,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTA0MDYyNA==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-06T18:16:55Z",
            "updated_at": "2016-09-06T18:16:55Z",
            "author_association": "MEMBER",
            "body": "On Tue, Sep 06, 2016 at 09:14:30AM -0700, Miguel Grinberg wrote:\n\n> If you merge this, we are back at square one, the passthrough errors option for flask will be broken again. Flask will passthrough errors all right, but then werkzeug will block them.\n> \n> I see now how the change in cli.py is a problem, but the change in app.py is perfectly fine and can/should stay. Why is there a need to undo that one as well?\n> \n> As for the cli.py change, would it make sense to adapt that change to only set passthrough errors when the app is loaded eagerly? That seems doable and will only leave passthrough errors incorrectly set when the reloader is used, and that to me is fine, since the reloader and a debugger are normally not used together.\n\nCurrently we already have a very complex net of dependencies for the default\nvalues of PROPAGATE_EXCEPTIONS (true if app.debug or app.testing), use_reloader\n(true if app.debug), use_debugger (true if app.debug), a few Jinja settings,\nand a few others I already forgot. Having those dependencies differ for `flask\ncli` and `app.run` respectively is IMO out of the question for the simple\nreason that the current interdependencies are hard enough to understand. At\nleast having them differ would require a better reason than \"it's implementable\non one side and not on the other\".\n\nThe upside for those is that in the end this chain reaction of setting\n`app.debug` makes sense from a user's perspective, as the usual explanation is\n\"Turn on app.debug and everything will fall into place\".  To make\npassthrough_errors dependent on eager_loading, however, makes no sense from a\nuser perspective. There is no reason for this behavior other than \"this is\nimplementable\".\n\nI know that this PR breaks the usecase of attaching a debugger, but I consider\nreverting all PRs the only agreeable behavior at the moment that doesn't break\nusecases that have existed before your PR got merged. We will have to think\nabout how to enable that usecase again for `flask cli`, but I can't think of a\ngood solution right now.\n\n> ## \n> \n> You are receiving this because you authored the thread.\n> Reply to this email directly or view it on GitHub:\n> https://github.com/pallets/flask/pull/2006#issuecomment-245003657\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/245058175",
            "html_url": "https://github.com/pallets/flask/pull/2006#issuecomment-245058175",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2006",
            "id": 245058175,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTA1ODE3NQ==",
            "user": {
                "login": "miguelgrinberg",
                "id": 2715854,
                "node_id": "MDQ6VXNlcjI3MTU4NTQ=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/miguelgrinberg",
                "html_url": "https://github.com/miguelgrinberg",
                "followers_url": "https://api.github.com/users/miguelgrinberg/followers",
                "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions",
                "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs",
                "repos_url": "https://api.github.com/users/miguelgrinberg/repos",
                "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}",
                "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-06T19:13:19Z",
            "updated_at": "2016-09-06T19:13:19Z",
            "author_association": "MEMBER",
            "body": "> that doesn't break usecases that have existed before your PR got merged\n\n@untitaker do you have a list of these? I'm not aware of any broken use cases outside of this whack-a-mole situation we are in now, where we fix an issue, and a new one pops out. As far as I'm aware, the only problem with current master code is #2005.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/245060279",
            "html_url": "https://github.com/pallets/flask/pull/2006#issuecomment-245060279",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2006",
            "id": 245060279,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTA2MDI3OQ==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-06T19:21:15Z",
            "updated_at": "2016-09-06T19:21:15Z",
            "author_association": "MEMBER",
            "body": "The whack-a-mole situation is exactly what I'm referring to.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/245063638",
            "html_url": "https://github.com/pallets/flask/pull/2006#issuecomment-245063638",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2006",
            "id": 245063638,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTA2MzYzOA==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-06T19:33:35Z",
            "updated_at": "2016-09-06T19:33:35Z",
            "author_association": "MEMBER",
            "body": "If you don't mind I'll merge this PR for now. If a solution for #1679 comes up I'll be happy to merge, but I don't want to leave master in a broken state.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/245064641",
            "html_url": "https://github.com/pallets/flask/pull/2006#issuecomment-245064641",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2006",
            "id": 245064641,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTA2NDY0MQ==",
            "user": {
                "login": "miguelgrinberg",
                "id": 2715854,
                "node_id": "MDQ6VXNlcjI3MTU4NTQ=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/miguelgrinberg",
                "html_url": "https://github.com/miguelgrinberg",
                "followers_url": "https://api.github.com/users/miguelgrinberg/followers",
                "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions",
                "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs",
                "repos_url": "https://api.github.com/users/miguelgrinberg/repos",
                "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}",
                "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-06T19:36:46Z",
            "updated_at": "2016-09-06T19:36:46Z",
            "author_association": "MEMBER",
            "body": "I would have preferred to leave the `app.run` side alone, since that works, but sure, if you think it is better to undo the whole thing instead of just that, then go for it.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/246146377",
            "html_url": "https://github.com/pallets/flask/pull/2006#issuecomment-246146377",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2006",
            "id": 246146377,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjE0NjM3Nw==",
            "user": {
                "login": "jeffwidman",
                "id": 483314,
                "node_id": "MDQ6VXNlcjQ4MzMxNA==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/483314?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jeffwidman",
                "html_url": "https://github.com/jeffwidman",
                "followers_url": "https://api.github.com/users/jeffwidman/followers",
                "following_url": "https://api.github.com/users/jeffwidman/following{/other_user}",
                "gists_url": "https://api.github.com/users/jeffwidman/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jeffwidman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jeffwidman/subscriptions",
                "organizations_url": "https://api.github.com/users/jeffwidman/orgs",
                "repos_url": "https://api.github.com/users/jeffwidman/repos",
                "events_url": "https://api.github.com/users/jeffwidman/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jeffwidman/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-10T22:11:18Z",
            "updated_at": "2016-09-10T22:11:18Z",
            "author_association": "MEMBER",
            "body": "@untitaker @miguelgrinberg A thought--this issue contains a lot of thoughtful back and forth between two folks who deeply understand the underlying issue... but the discussion/disagreement/decision all happened in a single day.\n\nIn general I'm in favor of being decisive and keeping moving--we've got plenty of issues in the tracker where I wish a decision had just been made and moved forward. However, this particular issue strikes me as one that might have been better to sit on for 2-3 days before making a final decision. You're both responsive and not going to abandon the issue, and you're clearly disagreeing w/o getting upset. That's fine, healthy even for the community.\n\nHistorically when I've disagreed about a solution with another engineer who was knowledgable about the problem space, a night or two of sleep gives everyone's brains a little more time to ponder. Sometimes we're still at the same place and have to just decide, but other times we realize the problem constraints are slightly different than we'd originally thought which makes the better solution obvious. Not a big deal, a thought for the future.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/246147975",
            "html_url": "https://github.com/pallets/flask/pull/2006#issuecomment-246147975",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2006",
            "id": 246147975,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjE0Nzk3NQ==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-10T22:35:12Z",
            "updated_at": "2016-09-10T22:35:12Z",
            "author_association": "MEMBER",
            "body": "This is just reverting a PR that caused issues, not a final decision.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/246147979",
            "html_url": "https://github.com/pallets/flask/pull/2006#issuecomment-246147979",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2006",
            "id": 246147979,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjE0Nzk3OQ==",
            "user": {
                "login": "miguelgrinberg",
                "id": 2715854,
                "node_id": "MDQ6VXNlcjI3MTU4NTQ=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/miguelgrinberg",
                "html_url": "https://github.com/miguelgrinberg",
                "followers_url": "https://api.github.com/users/miguelgrinberg/followers",
                "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions",
                "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs",
                "repos_url": "https://api.github.com/users/miguelgrinberg/repos",
                "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}",
                "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-10T22:35:18Z",
            "updated_at": "2016-09-10T22:35:18Z",
            "author_association": "MEMBER",
            "body": "@jeffwidman Thanks for writing this. @untitaker can correct me if I'm wrong, but I believe the action that he took to address this issue was not a final decision. I see it more as an interim solution. His choice was to leave a known bug in the code, instead of keep trying to fix it and risk causing other problems, which we all agree is a possibility, given how tricky this issue demonstrated to be. I would not have done what he did, but I can understand the choice and as you say, I'm not upset. I think both agree there is a problem that needs a fix. I am thinking about how to solve it in a safe way and will bring it here for review once I have it.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/246148035",
            "html_url": "https://github.com/pallets/flask/pull/2006#issuecomment-246148035",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2006",
            "id": 246148035,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjE0ODAzNQ==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-10T22:36:32Z",
            "updated_at": "2016-09-10T22:36:32Z",
            "author_association": "MEMBER",
            "body": "Yeah I think what @miguelgrinberg said is the consensus.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/287847112",
            "html_url": "https://github.com/pallets/flask/pull/2006#issuecomment-287847112",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2006",
            "id": 287847112,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4Nzg0NzExMg==",
            "user": {
                "login": "arotman",
                "id": 1573773,
                "node_id": "MDQ6VXNlcjE1NzM3NzM=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/1573773?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/arotman",
                "html_url": "https://github.com/arotman",
                "followers_url": "https://api.github.com/users/arotman/followers",
                "following_url": "https://api.github.com/users/arotman/following{/other_user}",
                "gists_url": "https://api.github.com/users/arotman/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/arotman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/arotman/subscriptions",
                "organizations_url": "https://api.github.com/users/arotman/orgs",
                "repos_url": "https://api.github.com/users/arotman/repos",
                "events_url": "https://api.github.com/users/arotman/events{/privacy}",
                "received_events_url": "https://api.github.com/users/arotman/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-03-20T18:05:03Z",
            "updated_at": "2017-03-20T18:05:03Z",
            "author_association": "NONE",
            "body": "THANKS for fixing this issue. My Flask server had been crashing due to **error: [Errno 32] Broken pipe**, and now there is just an exception and the server keeps running. Others also suffered from this issue too. I appreciate very much this fix."
        }
    ]
}