{
    "url": "https://api.github.com/repos/pallets/flask/issues/1238",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1238/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1238/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1238/events",
    "html_url": "https://github.com/pallets/flask/issues/1238",
    "id": 47766648,
    "node_id": "MDU6SXNzdWU0Nzc2NjY0OA==",
    "number": 1238,
    "title": "url_for extension for REST Apis",
    "user": {
        "login": "b14ckkn19ht",
        "id": 4543445,
        "node_id": "MDQ6VXNlcjQ1NDM0NDU=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/4543445?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/b14ckkn19ht",
        "html_url": "https://github.com/b14ckkn19ht",
        "followers_url": "https://api.github.com/users/b14ckkn19ht/followers",
        "following_url": "https://api.github.com/users/b14ckkn19ht/following{/other_user}",
        "gists_url": "https://api.github.com/users/b14ckkn19ht/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/b14ckkn19ht/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/b14ckkn19ht/subscriptions",
        "organizations_url": "https://api.github.com/users/b14ckkn19ht/orgs",
        "repos_url": "https://api.github.com/users/b14ckkn19ht/repos",
        "events_url": "https://api.github.com/users/b14ckkn19ht/events{/privacy}",
        "received_events_url": "https://api.github.com/users/b14ckkn19ht/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2014-11-04T21:20:00Z",
    "updated_at": "2014-11-09T18:09:51Z",
    "closed_at": "2014-11-08T23:11:48Z",
    "author_association": "NONE",
    "body": "Hi,\n\nit would be extremely nice to have an extended or second url_for which only provides an url to the view function without the need of parameters. At the moment I have to workaround the standard url_for by making all parameters optional, which i think is not the right way around this, in order to make it usable in dynamical delivered javascript rest clients.\n\nbest regards\n\nblackknight\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/61716569",
            "html_url": "https://github.com/pallets/flask/issues/1238#issuecomment-61716569",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1238",
            "id": 61716569,
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzE2NTY5",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-11-04T21:20:49Z",
            "updated_at": "2014-11-04T21:21:12Z",
            "author_association": "MEMBER",
            "body": "How would you do that? If the rule needs parameters, you obviously need to include them (what else would you put in place of the placeholders otherwise?). If it doesn't, you don't have to pass any...\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/61717340",
            "html_url": "https://github.com/pallets/flask/issues/1238#issuecomment-61717340",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1238",
            "id": 61717340,
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzE3MzQw",
            "user": {
                "login": "b14ckkn19ht",
                "id": 4543445,
                "node_id": "MDQ6VXNlcjQ1NDM0NDU=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/4543445?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/b14ckkn19ht",
                "html_url": "https://github.com/b14ckkn19ht",
                "followers_url": "https://api.github.com/users/b14ckkn19ht/followers",
                "following_url": "https://api.github.com/users/b14ckkn19ht/following{/other_user}",
                "gists_url": "https://api.github.com/users/b14ckkn19ht/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/b14ckkn19ht/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/b14ckkn19ht/subscriptions",
                "organizations_url": "https://api.github.com/users/b14ckkn19ht/orgs",
                "repos_url": "https://api.github.com/users/b14ckkn19ht/repos",
                "events_url": "https://api.github.com/users/b14ckkn19ht/events{/privacy}",
                "received_events_url": "https://api.github.com/users/b14ckkn19ht/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-11-04T21:25:55Z",
            "updated_at": "2014-11-04T21:32:54Z",
            "author_association": "NONE",
            "body": "Let's say i have an API like this:\n\n```\n    class ExApi(MethodView):\n        def get(self, id, name, age):\n            return....\n```\n\nWhat's in my mind on the client side looks like:\n\n```\n    function requestData(id, name, age) {\n    $.ajax({\n        url: \"{{ rest_url_for(blueprint.ex_view) }}\",\n        type: 'GET',\n        data: {\n            id: id,\n            name: name,\n            age: age\n        },\n```\n\nWhich at the moment is not possible because  i have to add the parameters to the url_for, which is not possible because the need to be set by the javascript.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/61717550",
            "html_url": "https://github.com/pallets/flask/issues/1238#issuecomment-61717550",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1238",
            "id": 61717550,
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzE3NTUw",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-11-04T21:27:14Z",
            "updated_at": "2014-11-04T21:27:14Z",
            "author_association": "MEMBER",
            "body": "Could you please format code as code? :) It's easy, just put ``` fences in the line before/after or indent everything by an extra 4 spaces!\n\nAnyway, the problem with your example is that **you are not supposed to create your URLs like that**. Instead, expose the actual URL template to your JavaScript code and use a function which builds the URL based on that template and the data.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/61717838",
            "html_url": "https://github.com/pallets/flask/issues/1238#issuecomment-61717838",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1238",
            "id": 61717838,
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzE3ODM4",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-11-04T21:29:17Z",
            "updated_at": "2014-11-04T21:29:17Z",
            "author_association": "MEMBER",
            "body": "`+ id` would only append the id to the URL, which might or might not be the right thing to do. You could use something like this:\n\n```\nurl: \"{{ url_for(\"blueprint.ex_view\", id=\"PLACEHOLDER\" }}\".replace(\"PLACEHOLDER\", id)\"\n```\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/61717845",
            "html_url": "https://github.com/pallets/flask/issues/1238#issuecomment-61717845",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1238",
            "id": 61717845,
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzE3ODQ1",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-11-04T21:29:18Z",
            "updated_at": "2014-11-04T21:34:27Z",
            "author_association": "MEMBER",
            "body": "There is some code to achieve what I described in my previous comment in [`werkzeug.contrib.jsrouting`](https://github.com/mitsuhiko/werkzeug/blob/master/werkzeug/contrib/jsrouting.py). However, it has one drawback (besides being deprecated): It exposes **all** rules to JavaScript which might be way more than you need/want in your code (maybe you have lots of URLs you only need to build on the server). In any case, it is a great starting point to build something that fits your exact needs.\n\nA custom implementation (based on the one from Werkzeug but not re-using its code) which I've written some time ago can be [found](https://github.com/indico/indico/blob/master/indico/htdocs/js/utils/routing.js) [here](https://github.com/indico/indico/blob/master/indico/web/flask/util.py#L238).\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/61718939",
            "html_url": "https://github.com/pallets/flask/issues/1238#issuecomment-61718939",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1238",
            "id": 61718939,
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzE4OTM5",
            "user": {
                "login": "b14ckkn19ht",
                "id": 4543445,
                "node_id": "MDQ6VXNlcjQ1NDM0NDU=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/4543445?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/b14ckkn19ht",
                "html_url": "https://github.com/b14ckkn19ht",
                "followers_url": "https://api.github.com/users/b14ckkn19ht/followers",
                "following_url": "https://api.github.com/users/b14ckkn19ht/following{/other_user}",
                "gists_url": "https://api.github.com/users/b14ckkn19ht/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/b14ckkn19ht/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/b14ckkn19ht/subscriptions",
                "organizations_url": "https://api.github.com/users/b14ckkn19ht/orgs",
                "repos_url": "https://api.github.com/users/b14ckkn19ht/repos",
                "events_url": "https://api.github.com/users/b14ckkn19ht/events{/privacy}",
                "received_events_url": "https://api.github.com/users/b14ckkn19ht/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-11-04T21:36:11Z",
            "updated_at": "2014-11-04T21:36:11Z",
            "author_association": "NONE",
            "body": "I thought of something like this before ;)\n\n```\nurl: \"{{ url_for(\"blueprint.ex_view\", id=\"PLACEHOLDER\" }}\".replace(\"PLACEHOLDER\", id)\"\n```\n\nBut in fact, the url_for part is evaluated server side and replace is evaluated client side. So in my opinion it would not work.\nI will have a look on the jsrouting. \n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/61719131",
            "html_url": "https://github.com/pallets/flask/issues/1238#issuecomment-61719131",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1238",
            "id": 61719131,
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzE5MTMx",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-11-04T21:37:20Z",
            "updated_at": "2014-11-04T21:37:20Z",
            "author_association": "MEMBER",
            "body": "The placeholder solution would work - you build an url with the placeholder string and then on the client you replace that string with the actual value. Not very pretty of course. ;)\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/61719229",
            "html_url": "https://github.com/pallets/flask/issues/1238#issuecomment-61719229",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1238",
            "id": 61719229,
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzE5MjI5",
            "user": {
                "login": "b14ckkn19ht",
                "id": 4543445,
                "node_id": "MDQ6VXNlcjQ1NDM0NDU=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/4543445?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/b14ckkn19ht",
                "html_url": "https://github.com/b14ckkn19ht",
                "followers_url": "https://api.github.com/users/b14ckkn19ht/followers",
                "following_url": "https://api.github.com/users/b14ckkn19ht/following{/other_user}",
                "gists_url": "https://api.github.com/users/b14ckkn19ht/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/b14ckkn19ht/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/b14ckkn19ht/subscriptions",
                "organizations_url": "https://api.github.com/users/b14ckkn19ht/orgs",
                "repos_url": "https://api.github.com/users/b14ckkn19ht/repos",
                "events_url": "https://api.github.com/users/b14ckkn19ht/events{/privacy}",
                "received_events_url": "https://api.github.com/users/b14ckkn19ht/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-11-04T21:37:58Z",
            "updated_at": "2014-11-04T21:38:13Z",
            "author_association": "NONE",
            "body": "Ah i see my fault ... ok ugly...\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/61766108",
            "html_url": "https://github.com/pallets/flask/issues/1238#issuecomment-61766108",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1238",
            "id": 61766108,
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzY2MTA4",
            "user": {
                "login": "DasIch",
                "id": 182316,
                "node_id": "MDQ6VXNlcjE4MjMxNg==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/182316?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/DasIch",
                "html_url": "https://github.com/DasIch",
                "followers_url": "https://api.github.com/users/DasIch/followers",
                "following_url": "https://api.github.com/users/DasIch/following{/other_user}",
                "gists_url": "https://api.github.com/users/DasIch/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/DasIch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DasIch/subscriptions",
                "organizations_url": "https://api.github.com/users/DasIch/orgs",
                "repos_url": "https://api.github.com/users/DasIch/repos",
                "events_url": "https://api.github.com/users/DasIch/events{/privacy}",
                "received_events_url": "https://api.github.com/users/DasIch/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-11-05T06:40:33Z",
            "updated_at": "2014-11-05T06:40:33Z",
            "author_association": "CONTRIBUTOR",
            "body": "The url_for placeholder approach only works for arguments that are strings afaik. =\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/62280064",
            "html_url": "https://github.com/pallets/flask/issues/1238#issuecomment-62280064",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1238",
            "id": 62280064,
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjgwMDY0",
            "user": {
                "login": "grahamlyons",
                "id": 284688,
                "node_id": "MDQ6VXNlcjI4NDY4OA==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/284688?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/grahamlyons",
                "html_url": "https://github.com/grahamlyons",
                "followers_url": "https://api.github.com/users/grahamlyons/followers",
                "following_url": "https://api.github.com/users/grahamlyons/following{/other_user}",
                "gists_url": "https://api.github.com/users/grahamlyons/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/grahamlyons/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/grahamlyons/subscriptions",
                "organizations_url": "https://api.github.com/users/grahamlyons/orgs",
                "repos_url": "https://api.github.com/users/grahamlyons/repos",
                "events_url": "https://api.github.com/users/grahamlyons/events{/privacy}",
                "received_events_url": "https://api.github.com/users/grahamlyons/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-11-08T21:45:00Z",
            "updated_at": "2014-11-08T21:45:00Z",
            "author_association": "NONE",
            "body": "I'm not sure what the proposal is expected to yield. If the parameters aren't provided and are only available in the JavaScript then the Python app can't generate the URL, beyond something with placeholders to be replaced. \n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/62282691",
            "html_url": "https://github.com/pallets/flask/issues/1238#issuecomment-62282691",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1238",
            "id": 62282691,
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjgyNjkx",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-11-08T23:11:41Z",
            "updated_at": "2014-11-08T23:11:41Z",
            "author_association": "MEMBER",
            "body": "Alright, closing this then.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/62302667",
            "html_url": "https://github.com/pallets/flask/issues/1238#issuecomment-62302667",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1238",
            "id": 62302667,
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzAyNjY3",
            "user": {
                "login": "b14ckkn19ht",
                "id": 4543445,
                "node_id": "MDQ6VXNlcjQ1NDM0NDU=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/4543445?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/b14ckkn19ht",
                "html_url": "https://github.com/b14ckkn19ht",
                "followers_url": "https://api.github.com/users/b14ckkn19ht/followers",
                "following_url": "https://api.github.com/users/b14ckkn19ht/following{/other_user}",
                "gists_url": "https://api.github.com/users/b14ckkn19ht/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/b14ckkn19ht/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/b14ckkn19ht/subscriptions",
                "organizations_url": "https://api.github.com/users/b14ckkn19ht/orgs",
                "repos_url": "https://api.github.com/users/b14ckkn19ht/repos",
                "events_url": "https://api.github.com/users/b14ckkn19ht/events{/privacy}",
                "received_events_url": "https://api.github.com/users/b14ckkn19ht/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-11-09T13:02:03Z",
            "updated_at": "2014-11-09T13:02:03Z",
            "author_association": "NONE",
            "body": "The yield of an approach like this would a simple way to help building REST-Clients, without having to define default parameters within the function and register a default route to the function. \n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/62312869",
            "html_url": "https://github.com/pallets/flask/issues/1238#issuecomment-62312869",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1238",
            "id": 62312869,
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzEyODY5",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-11-09T18:09:51Z",
            "updated_at": "2014-11-09T18:09:51Z",
            "author_association": "MEMBER",
            "body": "I closed this because semantics and implementation are unclear and because you're the first one to request such a feature, i don't think it would land in Flask even if the former point was resolved.\n\nIf you think this is a worthy idea, you can always implement a proof of concept as an extension, or in one of the countless REST helper extensions available for Flask. \n"
        }
    ]
}