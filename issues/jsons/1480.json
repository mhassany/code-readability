{
    "url": "https://api.github.com/repos/pallets/flask/issues/1480",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1480/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1480/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1480/events",
    "html_url": "https://github.com/pallets/flask/pull/1480",
    "id": 84192649,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzY3NjkzNzc=",
    "number": 1480,
    "title": "Handle empty deque on errorhandler lookup.",
    "user": {
        "login": "jmcarp",
        "id": 1633460,
        "node_id": "MDQ6VXNlcjE2MzM0NjA=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/1633460?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jmcarp",
        "html_url": "https://github.com/jmcarp",
        "followers_url": "https://api.github.com/users/jmcarp/followers",
        "following_url": "https://api.github.com/users/jmcarp/following{/other_user}",
        "gists_url": "https://api.github.com/users/jmcarp/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jmcarp/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jmcarp/subscriptions",
        "organizations_url": "https://api.github.com/users/jmcarp/orgs",
        "repos_url": "https://api.github.com/users/jmcarp/repos",
        "events_url": "https://api.github.com/users/jmcarp/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jmcarp/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-06-02T20:17:12Z",
    "updated_at": "2015-06-03T15:46:15Z",
    "closed_at": "2015-06-03T15:46:11Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
        "url": "https://api.github.com/repos/pallets/flask/pulls/1480",
        "html_url": "https://github.com/pallets/flask/pull/1480",
        "diff_url": "https://github.com/pallets/flask/pull/1480.diff",
        "patch_url": "https://github.com/pallets/flask/pull/1480.patch"
    },
    "body": "After registering a custom errorhandler by exception class, raising any\nunhandled exception in a view function swallows the error and instead\nthrows an `IndexError` on trying to look up the appropriate handler.\nThis patch avoids the uninformative `IndexError` and preserves the\noriginal exception by looping until the deque of classes is empty, not\nforever.\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/108086535",
            "html_url": "https://github.com/pallets/flask/pull/1480#issuecomment-108086535",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1480",
            "id": 108086535,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwODA4NjUzNQ==",
            "user": {
                "login": "jmcarp",
                "id": 1633460,
                "node_id": "MDQ6VXNlcjE2MzM0NjA=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/1633460?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jmcarp",
                "html_url": "https://github.com/jmcarp",
                "followers_url": "https://api.github.com/users/jmcarp/followers",
                "following_url": "https://api.github.com/users/jmcarp/following{/other_user}",
                "gists_url": "https://api.github.com/users/jmcarp/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jmcarp/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jmcarp/subscriptions",
                "organizations_url": "https://api.github.com/users/jmcarp/orgs",
                "repos_url": "https://api.github.com/users/jmcarp/repos",
                "events_url": "https://api.github.com/users/jmcarp/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jmcarp/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-06-02T20:20:42Z",
            "updated_at": "2015-06-02T20:20:42Z",
            "author_association": "CONTRIBUTOR",
            "body": "Code example:\n\n``` python\n\nfrom flask import Flask\n\napp = Flask(__name__)\n\n@app.errorhandler(TypeError)\ndef handle_typeerror(e):\n    return 'got a typeerror!'\n\n@app.route('/keyerror')\ndef keyerror():\n    raise KeyError()\n\nc = app.test_client()\nc.get('/keyerror')\n```\n\nSince we've registered a handler for `TypeError` and not for `KeyError`, I would expect the `KeyError` to be thrown here. But instead we get an `IndexError` with no hint of the original error:\n\n```\n  File \"/Users/jmcarp/code/flask/flask/app.py\", line 1951, in wsgi_app\n    response = self.full_dispatch_request()\n  File \"/Users/jmcarp/code/flask/flask/app.py\", line 1605, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File \"/Users/jmcarp/code/flask/flask/app.py\", line 1505, in handle_user_exception\n    handler = self._find_error_handler(e)\n  File \"/Users/jmcarp/code/flask/flask/app.py\", line 1440, in _find_error_handler\n    .get(code))\n  File \"/Users/jmcarp/code/flask/flask/app.py\", line 1425, in find_handler\n    cls = queue.popleft()\nIndexError: pop from an empty deque\n```\n\nWith the proposed patch, the expected `KeyError` is thrown instead.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/108492225",
            "html_url": "https://github.com/pallets/flask/pull/1480#issuecomment-108492225",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1480",
            "id": 108492225,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwODQ5MjIyNQ==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-06-03T15:46:15Z",
            "updated_at": "2015-06-03T15:46:15Z",
            "author_association": "MEMBER",
            "body": "Excellent, thanks!\n"
        }
    ]
}