{
    "url": "https://api.github.com/repos/pallets/flask/issues/1507",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1507/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1507/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1507/events",
    "html_url": "https://github.com/pallets/flask/issues/1507",
    "id": 89430314,
    "node_id": "MDU6SXNzdWU4OTQzMDMxNA==",
    "number": 1507,
    "title": "Blueprint url_prefix isn't additive with register_blueprint url_prefix",
    "user": {
        "login": "tonymillion",
        "id": 316954,
        "node_id": "MDQ6VXNlcjMxNjk1NA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/316954?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tonymillion",
        "html_url": "https://github.com/tonymillion",
        "followers_url": "https://api.github.com/users/tonymillion/followers",
        "following_url": "https://api.github.com/users/tonymillion/following{/other_user}",
        "gists_url": "https://api.github.com/users/tonymillion/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tonymillion/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tonymillion/subscriptions",
        "organizations_url": "https://api.github.com/users/tonymillion/orgs",
        "repos_url": "https://api.github.com/users/tonymillion/repos",
        "events_url": "https://api.github.com/users/tonymillion/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tonymillion/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 12,
    "created_at": "2015-06-19T00:18:23Z",
    "updated_at": "2019-07-03T07:57:29Z",
    "closed_at": "2016-01-26T18:07:47Z",
    "author_association": "NONE",
    "body": "So imagine I'm building an API from a set of blueprints like\n\n```\n<snip from the signup.py file>\nsignupbp = Blueprint('signupbp', __name__, url_prefix=\"/signup\")\n\n@signupbp.route(\"/\")\ndef signup_start():\n    return \"signup_start\"\n\n@signupbp.route(\"/complete\")\ndef signup_complete():\n    return \"signup_complete\"\n```\n\nthen in my main.py code I do something like:\n\n```\napp.register_blueprint(signupbp, url_prefix='/api')\n```\n\nI expect to see the following routes:\n\n```\n/api/signup/                    signupbp.signup_start   \n/api/signup/complete            signupbp.signup_complete\n/static/<path:filename>         static                  \n```\n\nWhat I actually see is:\n\n```\n/api/                    signupbp.signup_start   \n/api/complete            signupbp.signup_complete\n/static/<path:filename>  static                  \n```\n\nI imagine the url_prefixes should be additive not replacement (in the worse possible way). I've tried all combinations of `/` before and after the url_prefix params.\n\nThis is actually a very simplified example - in my API I'm using module names to implement versioning so I can't build the URL into any part of the code before thats suggested as a solution.\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/113333105",
            "html_url": "https://github.com/pallets/flask/issues/1507#issuecomment-113333105",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1507",
            "id": 113333105,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMzMzMzEwNQ==",
            "user": {
                "login": "damonchen",
                "id": 1255097,
                "node_id": "MDQ6VXNlcjEyNTUwOTc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1255097?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/damonchen",
                "html_url": "https://github.com/damonchen",
                "followers_url": "https://api.github.com/users/damonchen/followers",
                "following_url": "https://api.github.com/users/damonchen/following{/other_user}",
                "gists_url": "https://api.github.com/users/damonchen/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/damonchen/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/damonchen/subscriptions",
                "organizations_url": "https://api.github.com/users/damonchen/orgs",
                "repos_url": "https://api.github.com/users/damonchen/repos",
                "events_url": "https://api.github.com/users/damonchen/events{/privacy}",
                "received_events_url": "https://api.github.com/users/damonchen/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-06-19T01:06:46Z",
            "updated_at": "2015-06-19T01:06:46Z",
            "author_association": "NONE",
            "body": "url_prefix should use signup, api is not the url for signup blueprint.\n\napp.register_blueprint(signupbp, url_prefix='/api')\n\n=>\n\napp.register_blueprint(signupbp, url_prefix='/signup')\n\nif you use a front-end with nginx, you could rewrite the url to this app, eg\uff1a\n\nrewrite ^api/(.*) /$1 break;  # the app will receive the signup url.\n\n2015-06-19 8:18 GMT+08:00 Tony Million notifications@github.com:\n\n> So imagine I'm building an API from a set of blueprints like\n> \n> <snip from the signup.py file>\n> signupbp = Blueprint('signupbp', **name**, url_prefix=\"/signup\")\n> \n> @signupbp.route(\"/\")\n> def signup_start():\n>     return \"signup_start\"\n> \n> @signupbp.route(\"/complete\")\n> def signup_complete():\n>     return \"signup_complete\"\n> \n> then in my main.py code I do something like:\n> \n> app.register_blueprint(signupbp, url_prefix='/api')\n> \n> I expect to see the following routes:\n> \n> /api/signup/                    signupbp.signup_start\n> /api/signup/complete            signupbp.signup_complete\n> /static/path:filename         static\n> \n> What I actually see is:\n> \n> /api/                    signupbp.signup_start\n> /api/complete            signupbp.signup_complete\n> /static/path:filename  static\n> \n> I imagine the url_prefixes should be additive not replacement (in the\n> worse possible way). I've tried all combinations of / before and after\n> the url_prefix params.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mitsuhiko/flask/issues/1507.\n\n## \n\nDamonChen\n\u8ba9\u751f\u6d3b\u66f4\u4fcf\u76ae\u4e9b http://www.zz1788.com\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/113334287",
            "html_url": "https://github.com/pallets/flask/issues/1507#issuecomment-113334287",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1507",
            "id": 113334287,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMzMzNDI4Nw==",
            "user": {
                "login": "tonymillion",
                "id": 316954,
                "node_id": "MDQ6VXNlcjMxNjk1NA==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/316954?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/tonymillion",
                "html_url": "https://github.com/tonymillion",
                "followers_url": "https://api.github.com/users/tonymillion/followers",
                "following_url": "https://api.github.com/users/tonymillion/following{/other_user}",
                "gists_url": "https://api.github.com/users/tonymillion/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/tonymillion/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tonymillion/subscriptions",
                "organizations_url": "https://api.github.com/users/tonymillion/orgs",
                "repos_url": "https://api.github.com/users/tonymillion/repos",
                "events_url": "https://api.github.com/users/tonymillion/events{/privacy}",
                "received_events_url": "https://api.github.com/users/tonymillion/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-06-19T01:13:20Z",
            "updated_at": "2015-06-19T01:13:20Z",
            "author_association": "NONE",
            "body": "That's not a fix for this actual problem, its a workaround using specific technology.\n\nThere is a point in the code where this could be fixed in blueprint.py and I'm considering submitting a patch.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/113514700",
            "html_url": "https://github.com/pallets/flask/issues/1507#issuecomment-113514700",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1507",
            "id": 113514700,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMzUxNDcwMA==",
            "user": {
                "login": "justanr",
                "id": 4221605,
                "node_id": "MDQ6VXNlcjQyMjE2MDU=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/4221605?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/justanr",
                "html_url": "https://github.com/justanr",
                "followers_url": "https://api.github.com/users/justanr/followers",
                "following_url": "https://api.github.com/users/justanr/following{/other_user}",
                "gists_url": "https://api.github.com/users/justanr/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/justanr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justanr/subscriptions",
                "organizations_url": "https://api.github.com/users/justanr/orgs",
                "repos_url": "https://api.github.com/users/justanr/repos",
                "events_url": "https://api.github.com/users/justanr/events{/privacy}",
                "received_events_url": "https://api.github.com/users/justanr/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-06-19T13:25:12Z",
            "updated_at": "2015-06-19T13:25:12Z",
            "author_association": "NONE",
            "body": "Another fix would be #593 which proposed nestable blueprints.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/113515474",
            "html_url": "https://github.com/pallets/flask/issues/1507#issuecomment-113515474",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1507",
            "id": 113515474,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMzUxNTQ3NA==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-06-19T13:28:24Z",
            "updated_at": "2015-06-19T13:28:24Z",
            "author_association": "MEMBER",
            "body": "Are you suggesting that there is a bug, or that the current API is imperfect?\n\nBecause in case of the former, this is working as intended. The `url_prefix` you pass to `__init__` is a default, which gets overridden by the `url_prefix` you provide to `register_blueprint`.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/113515506",
            "html_url": "https://github.com/pallets/flask/issues/1507#issuecomment-113515506",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1507",
            "id": 113515506,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMzUxNTUwNg==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-06-19T13:28:34Z",
            "updated_at": "2015-06-19T13:28:34Z",
            "author_association": "MEMBER",
            "body": "@justanr I don't see how this is related.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/113526343",
            "html_url": "https://github.com/pallets/flask/issues/1507#issuecomment-113526343",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1507",
            "id": 113526343,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMzUyNjM0Mw==",
            "user": {
                "login": "justanr",
                "id": 4221605,
                "node_id": "MDQ6VXNlcjQyMjE2MDU=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/4221605?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/justanr",
                "html_url": "https://github.com/justanr",
                "followers_url": "https://api.github.com/users/justanr/followers",
                "following_url": "https://api.github.com/users/justanr/following{/other_user}",
                "gists_url": "https://api.github.com/users/justanr/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/justanr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justanr/subscriptions",
                "organizations_url": "https://api.github.com/users/justanr/orgs",
                "repos_url": "https://api.github.com/users/justanr/repos",
                "events_url": "https://api.github.com/users/justanr/events{/privacy}",
                "received_events_url": "https://api.github.com/users/justanr/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-06-19T14:10:10Z",
            "updated_at": "2015-06-19T14:10:10Z",
            "author_association": "NONE",
            "body": "@unittaker Maybe I'm thinking too hard, but nesting related blueprints together under a single endpoint. \n\nA blueprint for the API endpoint, then register signup, etc on there.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/127357809",
            "html_url": "https://github.com/pallets/flask/issues/1507#issuecomment-127357809",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1507",
            "id": 127357809,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzM1NzgwOQ==",
            "user": {
                "login": "masom",
                "id": 438456,
                "node_id": "MDQ6VXNlcjQzODQ1Ng==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/438456?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/masom",
                "html_url": "https://github.com/masom",
                "followers_url": "https://api.github.com/users/masom/followers",
                "following_url": "https://api.github.com/users/masom/following{/other_user}",
                "gists_url": "https://api.github.com/users/masom/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/masom/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/masom/subscriptions",
                "organizations_url": "https://api.github.com/users/masom/orgs",
                "repos_url": "https://api.github.com/users/masom/repos",
                "events_url": "https://api.github.com/users/masom/events{/privacy}",
                "received_events_url": "https://api.github.com/users/masom/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-08-03T18:14:22Z",
            "updated_at": "2015-08-03T18:14:22Z",
            "author_association": "NONE",
            "body": "The current behaviour is somewhat surprising.\n\n```\nadmin = Blueprint(..., url_prefix='/admin')\n\napp.register_blueprint(admin, url_prefix='/backend')\n```\n\nI would have expected that `admin` be mounted as `/backend/admin` and not `/backend`\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/127395350",
            "html_url": "https://github.com/pallets/flask/issues/1507#issuecomment-127395350",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1507",
            "id": 127395350,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzM5NTM1MA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-08-03T20:18:08Z",
            "updated_at": "2015-08-03T20:18:08Z",
            "author_association": "MEMBER",
            "body": "This behavior doesn't seem surprising at all.  It would be more surprising if passing a value to override a default concatenated the paths.  If you want to register a blueprint with the prefix `/api/signup`, register it with the prefix `/api/signup`.  Anything less explicit seems prone to just as much confusion by others.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/342982769",
            "html_url": "https://github.com/pallets/flask/issues/1507#issuecomment-342982769",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1507",
            "id": 342982769,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mjk4Mjc2OQ==",
            "user": {
                "login": "allrod5",
                "id": 573539,
                "node_id": "MDQ6VXNlcjU3MzUzOQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/573539?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/allrod5",
                "html_url": "https://github.com/allrod5",
                "followers_url": "https://api.github.com/users/allrod5/followers",
                "following_url": "https://api.github.com/users/allrod5/following{/other_user}",
                "gists_url": "https://api.github.com/users/allrod5/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/allrod5/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/allrod5/subscriptions",
                "organizations_url": "https://api.github.com/users/allrod5/orgs",
                "repos_url": "https://api.github.com/users/allrod5/repos",
                "events_url": "https://api.github.com/users/allrod5/events{/privacy}",
                "received_events_url": "https://api.github.com/users/allrod5/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-11-08T22:29:55Z",
            "updated_at": "2017-11-08T22:29:55Z",
            "author_association": "NONE",
            "body": "@davidism I see your point on the url_prefix, but I agree with @masom that it's behavior is surprising at first. It would be nice to have a way to do something in the lines of:\r\n```python\r\napi = Blueprint('api', base_path='/api')\r\nfoo = Blueprint('foo', base_path='/foo')\r\nbar = Blueprint('bar', base_path='/bar')\r\n\r\n@foo.route('/a')\r\ndef a():\r\n    ...\r\n\r\n@foo.route('/b')\r\ndef b():\r\n    ...\r\n@bar.route('/x')\r\ndef x():\r\n    ...\r\n\r\napi.register_blueprint(foo)\r\napi.register_blueprint(bar)\r\napp.register_blueprint(api)\r\n```\r\n\r\nAnd then the paths would look like this:\r\n```\r\n/api\r\n    /foo\r\n        /a\r\n        /b\r\n    /bar\r\n        /x\r\n```\r\n\r\nThis way the paths are set once, avoiding duplicated code."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/345520136",
            "html_url": "https://github.com/pallets/flask/issues/1507#issuecomment-345520136",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1507",
            "id": 345520136,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTUyMDEzNg==",
            "user": {
                "login": "gaggle",
                "id": 2316447,
                "node_id": "MDQ6VXNlcjIzMTY0NDc=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/2316447?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gaggle",
                "html_url": "https://github.com/gaggle",
                "followers_url": "https://api.github.com/users/gaggle/followers",
                "following_url": "https://api.github.com/users/gaggle/following{/other_user}",
                "gists_url": "https://api.github.com/users/gaggle/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gaggle/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gaggle/subscriptions",
                "organizations_url": "https://api.github.com/users/gaggle/orgs",
                "repos_url": "https://api.github.com/users/gaggle/repos",
                "events_url": "https://api.github.com/users/gaggle/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gaggle/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-11-19T14:18:54Z",
            "updated_at": "2017-11-19T14:20:20Z",
            "author_association": "NONE",
            "body": "The behaviour is surprising to me because my mental model of Flask is that I create a blueprint instance with one prefix, and mount it using another prefix, and I expect those prefixes to be _additive_ because they are (in my mind) separate concerns. To have one actually override the other is then surprising because it seems like concepts are mixed together. I.e. blueprint concept != blueprint registration concept (or so I thought).\r\n\r\nJust my two cents to cast light on why the behaviour surprises me."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/441512147",
            "html_url": "https://github.com/pallets/flask/issues/1507#issuecomment-441512147",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1507",
            "id": 441512147,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTUxMjE0Nw==",
            "user": {
                "login": "dscotese",
                "id": 1767796,
                "node_id": "MDQ6VXNlcjE3Njc3OTY=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/1767796?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/dscotese",
                "html_url": "https://github.com/dscotese",
                "followers_url": "https://api.github.com/users/dscotese/followers",
                "following_url": "https://api.github.com/users/dscotese/following{/other_user}",
                "gists_url": "https://api.github.com/users/dscotese/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/dscotese/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dscotese/subscriptions",
                "organizations_url": "https://api.github.com/users/dscotese/orgs",
                "repos_url": "https://api.github.com/users/dscotese/repos",
                "events_url": "https://api.github.com/users/dscotese/events{/privacy}",
                "received_events_url": "https://api.github.com/users/dscotese/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-11-26T03:56:40Z",
            "updated_at": "2018-11-26T04:10:15Z",
            "author_association": "NONE",
            "body": "I'm altering an app that registers eight blueprints (for eight different top-level-folders in the URL path).  Our goal is to have the eight areas of the app be independently available to several geographic instances of the app.  For example, the \"contact\" area of the app should behave the same for all locations, but each location will allow the manager of that location to administer the \"contact\" area for that location, providing contact info specific to that location.  The goal was for the URL to change from what it is now (always \"/contact/\") to have the location specified as its own top-level URL folder (\"/SanFrancisco/contact\").\r\n\r\nBlueprints looked like a good way to do that, but it sounds like what we really register with \"register_blueprint\" is the URL prefix (the one specified in the Blueprint constructor (\"\\_\\_init\\_\\_\" if untitaker was right at https://github.com/pallets/flask/issues/1507#issuecomment-113515474) if we don't specify what turns out to be an \"override\" in the call to register_blueprint), and not the blueprint itself.  It would be nifty to create a blueprint and then be able to use it a few times.\r\n\r\nPlease correct any assumptions in what I wrote above.  I'm sticking my neck out a little in order to learn."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/507984018",
            "html_url": "https://github.com/pallets/flask/issues/1507#issuecomment-507984018",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1507",
            "id": 507984018,
            "node_id": "MDEyOklzc3VlQ29tbWVudDUwNzk4NDAxOA==",
            "user": {
                "login": "qaisjp",
                "id": 923242,
                "node_id": "MDQ6VXNlcjkyMzI0Mg==",
                "avatar_url": "https://avatars3.githubusercontent.com/u/923242?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/qaisjp",
                "html_url": "https://github.com/qaisjp",
                "followers_url": "https://api.github.com/users/qaisjp/followers",
                "following_url": "https://api.github.com/users/qaisjp/following{/other_user}",
                "gists_url": "https://api.github.com/users/qaisjp/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/qaisjp/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/qaisjp/subscriptions",
                "organizations_url": "https://api.github.com/users/qaisjp/orgs",
                "repos_url": "https://api.github.com/users/qaisjp/repos",
                "events_url": "https://api.github.com/users/qaisjp/events{/privacy}",
                "received_events_url": "https://api.github.com/users/qaisjp/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-07-03T07:56:28Z",
            "updated_at": "2019-07-03T07:57:29Z",
            "author_association": "NONE",
            "body": "I agree, this is very odd.\r\n\r\nI have a `users` blueprint, defined using:\r\n\r\n```python\r\nbp = Blueprint(\"users\", __name__, url_prefix=\"/<uuid:user_id>\")\r\n```\r\n\r\nI then preprocess this user ID inside the blueprint. Every request to this blueprint should begin with `/:uuid`, relative to the mount point.\r\n\r\nAt the app level, I decide to mount the `users` blueprint at `/users`:\r\n\r\n```python\r\napp.register_blueprint(bp_users, url_prefix=\"/users\")\r\n```\r\n\r\nI expect the blueprint to therefore respond to requests like `/users/<uuid:user_id>`. It will only respond to `/users`. The app shouldn't care about underlying `/<uuid:user_id>`.\r\n\r\nHow can I achieve this without being WET (bad!) and doing\r\n\r\n```python\r\napp.register_blueprint(bp_users, url_prefix=\"/users/<uuid:user_id>\")\r\n```"
        }
    ]
}