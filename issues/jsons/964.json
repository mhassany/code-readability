{
    "url": "https://api.github.com/repos/pallets/flask/issues/964",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/964/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/964/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/964/events",
    "html_url": "https://github.com/pallets/flask/issues/964",
    "id": 26310550,
    "node_id": "MDU6SXNzdWUyNjMxMDU1MA==",
    "number": 964,
    "title": "jsonify response mime type",
    "user": {
        "login": "ClodoaldoPinto",
        "id": 1433209,
        "node_id": "MDQ6VXNlcjE0MzMyMDk=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1433209?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ClodoaldoPinto",
        "html_url": "https://github.com/ClodoaldoPinto",
        "followers_url": "https://api.github.com/users/ClodoaldoPinto/followers",
        "following_url": "https://api.github.com/users/ClodoaldoPinto/following{/other_user}",
        "gists_url": "https://api.github.com/users/ClodoaldoPinto/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ClodoaldoPinto/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ClodoaldoPinto/subscriptions",
        "organizations_url": "https://api.github.com/users/ClodoaldoPinto/orgs",
        "repos_url": "https://api.github.com/users/ClodoaldoPinto/repos",
        "events_url": "https://api.github.com/users/ClodoaldoPinto/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ClodoaldoPinto/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2014-01-26T09:01:22Z",
    "updated_at": "2014-02-08T17:03:15Z",
    "closed_at": "2014-02-08T17:03:15Z",
    "author_association": "NONE",
    "body": "According to the [jQuery-File-Upload docs](https://github.com/blueimp/jQuery-File-Upload/wiki/Setup#wiki-content-type-negotiation) _Iframe based uploads require a Content-type of text/plain or text/html for the JSON response_\n\nSo I can't use `jsonify` as it sets the response mime type to `application/json` and must use code like this\n\n```\nresp = make_response(json.dumps({'error': 'File too big'}))\nif request.headers.get('Accept', '').find('application/json') > -1:\n    resp.mimetype = 'application/json'\nelse:\n    resp.mimetype = 'text/plain'\nreturn resp\n```\n\nIn instead of\n\n```\nreturn jsonify({'error': 'File too big'})\n```\n\nAm I missing something? How clueless would I be if I were to suggest adding some option to `jsonify` to customize the response mime type depending on the requested mime type?\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/33312622",
            "html_url": "https://github.com/pallets/flask/issues/964#issuecomment-33312622",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/964",
            "id": 33312622,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzEyNjIy",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-01-26T09:12:28Z",
            "updated_at": "2014-01-26T09:14:43Z",
            "author_association": "MEMBER",
            "body": "Did you _really_ have to support browsers that require IFrames for file uploads? :) http://caniuse.com/xhr2\n\nAlso, you usually need/want to wrap the response in a textarea, too, when using the iframe method...\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/33313513",
            "html_url": "https://github.com/pallets/flask/issues/964#issuecomment-33313513",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/964",
            "id": 33313513,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzEzNTEz",
            "user": {
                "login": "ClodoaldoPinto",
                "id": 1433209,
                "node_id": "MDQ6VXNlcjE0MzMyMDk=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/1433209?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ClodoaldoPinto",
                "html_url": "https://github.com/ClodoaldoPinto",
                "followers_url": "https://api.github.com/users/ClodoaldoPinto/followers",
                "following_url": "https://api.github.com/users/ClodoaldoPinto/following{/other_user}",
                "gists_url": "https://api.github.com/users/ClodoaldoPinto/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ClodoaldoPinto/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ClodoaldoPinto/subscriptions",
                "organizations_url": "https://api.github.com/users/ClodoaldoPinto/orgs",
                "repos_url": "https://api.github.com/users/ClodoaldoPinto/repos",
                "events_url": "https://api.github.com/users/ClodoaldoPinto/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ClodoaldoPinto/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-01-26T10:16:24Z",
            "updated_at": "2014-01-26T10:16:24Z",
            "author_association": "NONE",
            "body": "IE <= 9 is still more than 30% market share. I didn't understand the second part. You mean that if I use the response in a text area I cant send a json formated response? Notice that even if the response mime type is `text/plain` it is still json.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/33543870",
            "html_url": "https://github.com/pallets/flask/issues/964#issuecomment-33543870",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/964",
            "id": 33543870,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTQzODcw",
            "user": {
                "login": "Zizzamia",
                "id": 829214,
                "node_id": "MDQ6VXNlcjgyOTIxNA==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/829214?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Zizzamia",
                "html_url": "https://github.com/Zizzamia",
                "followers_url": "https://api.github.com/users/Zizzamia/followers",
                "following_url": "https://api.github.com/users/Zizzamia/following{/other_user}",
                "gists_url": "https://api.github.com/users/Zizzamia/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Zizzamia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Zizzamia/subscriptions",
                "organizations_url": "https://api.github.com/users/Zizzamia/orgs",
                "repos_url": "https://api.github.com/users/Zizzamia/repos",
                "events_url": "https://api.github.com/users/Zizzamia/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Zizzamia/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-01-29T00:22:19Z",
            "updated_at": "2014-01-29T00:22:19Z",
            "author_association": "NONE",
            "body": "Looks that the better way it's improve jsonify with a option parameter for have a custom response mime type. \n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/33585856",
            "html_url": "https://github.com/pallets/flask/issues/964#issuecomment-33585856",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/964",
            "id": 33585856,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTg1ODU2",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-01-29T13:55:22Z",
            "updated_at": "2014-01-29T13:55:33Z",
            "author_association": "MEMBER",
            "body": "I think your code can be abbreviated to\n\n```\nresp = jsonify({'error': 'File too big'})\nif 'application/json' not in request.headers.get('Accept', ''):\n    resp.mimetype = 'text/plain'\nreturn resp\n```\n\nI'm :+1: on the proposal.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/33605296",
            "html_url": "https://github.com/pallets/flask/issues/964#issuecomment-33605296",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/964",
            "id": 33605296,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjA1Mjk2",
            "user": {
                "login": "ClodoaldoPinto",
                "id": 1433209,
                "node_id": "MDQ6VXNlcjE0MzMyMDk=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/1433209?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ClodoaldoPinto",
                "html_url": "https://github.com/ClodoaldoPinto",
                "followers_url": "https://api.github.com/users/ClodoaldoPinto/followers",
                "following_url": "https://api.github.com/users/ClodoaldoPinto/following{/other_user}",
                "gists_url": "https://api.github.com/users/ClodoaldoPinto/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ClodoaldoPinto/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ClodoaldoPinto/subscriptions",
                "organizations_url": "https://api.github.com/users/ClodoaldoPinto/orgs",
                "repos_url": "https://api.github.com/users/ClodoaldoPinto/repos",
                "events_url": "https://api.github.com/users/ClodoaldoPinto/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ClodoaldoPinto/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-01-29T17:05:46Z",
            "updated_at": "2014-01-29T18:41:30Z",
            "author_association": "NONE",
            "body": "_I think your code can be abbreviated to..._ Nice catch.\n\nMy ideia is to have two named parameters; `alternate=None` and `force_alternate=False`. If `application/json` is not in the incoming `Accept` header `jsonify` will set the mimetype to the `alternate` one `if alternate is not None` . `if force_alternate` then it will set the mimetype to the `alternate` value regardless of the incoming `Accept` header. `if alternate is None and force_alternate` then no `mimetype` header is generated.\n\nRight now I have no time to the coding and repository work. So anyone be free to use this however it sees fit.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/33606297",
            "html_url": "https://github.com/pallets/flask/issues/964#issuecomment-33606297",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/964",
            "id": 33606297,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjA2Mjk3",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-01-29T17:14:32Z",
            "updated_at": "2014-01-29T17:14:32Z",
            "author_association": "MEMBER",
            "body": "Okay, i am retracting my :+1:. If we would add features that handle the `Accept` header to Flask, i think we should start with adding a feature to the routing system which i would call \"Accept-based matching\", which operates similar to Werkzeug's \"host-based matching\".\n\nHowever, all of this is out-of-scope for Flask IMO. Flask-Restful and a few others have filled this gap in a much nicer way than a microframework could ever support.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/33606677",
            "html_url": "https://github.com/pallets/flask/issues/964#issuecomment-33606677",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/964",
            "id": 33606677,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjA2Njc3",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-01-29T17:17:44Z",
            "updated_at": "2014-01-29T17:17:44Z",
            "author_association": "MEMBER",
            "body": "What we _could_ do, however, is emit a warning or even an exception if the response mimetype is not in the `Accept` header. I think this kind of thing is not usecase specific and always a good idea.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/34549115",
            "html_url": "https://github.com/pallets/flask/issues/964#issuecomment-34549115",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/964",
            "id": 34549115,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTQ5MTE1",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-02-08T17:03:15Z",
            "updated_at": "2014-02-08T17:03:15Z",
            "author_association": "MEMBER",
            "body": "You can already override the mimetype so I don't see this as something that needs to be in Flask itself.  Especially if it's just a workaround for limitations in browsers that will go away.\n"
        }
    ]
}