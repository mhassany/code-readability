{
    "url": "https://api.github.com/repos/pallets/flask/issues/896",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/896/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/896/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/896/events",
    "html_url": "https://github.com/pallets/flask/issues/896",
    "id": 21708275,
    "node_id": "MDU6SXNzdWUyMTcwODI3NQ==",
    "number": 896,
    "title": "Routes for class-based views can't be overloaded when using View.as_view()",
    "user": {
        "login": "aroberts",
        "id": 28918,
        "node_id": "MDQ6VXNlcjI4OTE4",
        "avatar_url": "https://avatars2.githubusercontent.com/u/28918?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aroberts",
        "html_url": "https://github.com/aroberts",
        "followers_url": "https://api.github.com/users/aroberts/followers",
        "following_url": "https://api.github.com/users/aroberts/following{/other_user}",
        "gists_url": "https://api.github.com/users/aroberts/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/aroberts/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aroberts/subscriptions",
        "organizations_url": "https://api.github.com/users/aroberts/orgs",
        "repos_url": "https://api.github.com/users/aroberts/repos",
        "events_url": "https://api.github.com/users/aroberts/events{/privacy}",
        "received_events_url": "https://api.github.com/users/aroberts/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-10-28T17:59:23Z",
    "updated_at": "2013-10-29T12:13:26Z",
    "closed_at": "2013-10-29T12:13:26Z",
    "author_association": "NONE",
    "body": "This is related to #766 - still broken when View.as_view() is used to register views, as in all the documentation.\n\nThis is probably best illustrated with an example:\n\n```\n#!/usr/bin/env python \n\nfrom flask import Flask\nfrom flask.views import View\n\napp = Flask(__name__)\n\nclass IndexView(View):\n    methods = ['GET']\n\n    def dispatch_request(self, name=None):\n        if not name:\n            name = 'user'\n\n        return 'Hello %s!' % name\n\napp.add_url_rule('/', view_func=IndexView.as_view('hello'))\napp.add_url_rule('/<name>', view_func=IndexView.as_view('hello'))\n\nif __name__ == '__main__':\n    app.run() \n```\n\napp.add_url_rule() complains here, because of the equality check referenced in #766:\n\n```\n>>> IndexView.as_view('hello') == IndexView.as_view('hello')\nFalse\n```\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/27242414",
            "html_url": "https://github.com/pallets/flask/issues/896#issuecomment-27242414",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/896",
            "id": 27242414,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjQyNDE0",
            "user": {
                "login": "ghost",
                "id": 10137,
                "node_id": "MDQ6VXNlcjEwMTM3",
                "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ghost",
                "html_url": "https://github.com/ghost",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-10-28T18:46:44Z",
            "updated_at": "2013-10-28T18:46:44Z",
            "author_association": "NONE",
            "body": "As in all the documentation, the suggested pattern is:\n\n``` python\nuser_view = UserAPI.as_view('user_api')\napp.add_url_rule('/users/', defaults={'user_id': None},\n                 view_func=user_view, methods=['GET',])\napp.add_url_rule('/users/', view_func=user_view, methods=['POST',])\napp.add_url_rule('/users/<int:user_id>', view_func=user_view,\n                 methods=['GET', 'PUT', 'DELETE'])\n```\n\nI agree with your idea - but I have no idea about transforming it into reality _simply_ (operator overloading? somehow moving `def view` outside of `View.as_view` and try another approach?). I suggest you to dig into [code](https://github.com/mitsuhiko/flask/blob/master/flask/views.py) and submit a pull request...\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/27242543",
            "html_url": "https://github.com/pallets/flask/issues/896#issuecomment-27242543",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/896",
            "id": 27242543,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjQyNTQz",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-10-28T18:48:01Z",
            "updated_at": "2013-10-28T18:48:01Z",
            "author_association": "MEMBER",
            "body": "Memoizing the result of the `as_view` classmethod in memory should do the job, too\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/27244256",
            "html_url": "https://github.com/pallets/flask/issues/896#issuecomment-27244256",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/896",
            "id": 27244256,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjQ0MjU2",
            "user": {
                "login": "aroberts",
                "id": 28918,
                "node_id": "MDQ6VXNlcjI4OTE4",
                "avatar_url": "https://avatars2.githubusercontent.com/u/28918?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/aroberts",
                "html_url": "https://github.com/aroberts",
                "followers_url": "https://api.github.com/users/aroberts/followers",
                "following_url": "https://api.github.com/users/aroberts/following{/other_user}",
                "gists_url": "https://api.github.com/users/aroberts/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/aroberts/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aroberts/subscriptions",
                "organizations_url": "https://api.github.com/users/aroberts/orgs",
                "repos_url": "https://api.github.com/users/aroberts/repos",
                "events_url": "https://api.github.com/users/aroberts/events{/privacy}",
                "received_events_url": "https://api.github.com/users/aroberts/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-10-28T19:03:53Z",
            "updated_at": "2013-10-28T19:03:53Z",
            "author_association": "NONE",
            "body": "@gioi, I saw that in the doc but didn't connect it as a requirement.  That works as a short-term fix, but I think that memoizing as_view (respecting _args and *_kwargs passed through to the class) might be a nice-to-have in the framework.  I'll work on a pull request.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/27297598",
            "html_url": "https://github.com/pallets/flask/issues/896#issuecomment-27297598",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/896",
            "id": 27297598,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3Mjk3NTk4",
            "user": {
                "login": "DasIch",
                "id": 182316,
                "node_id": "MDQ6VXNlcjE4MjMxNg==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/182316?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/DasIch",
                "html_url": "https://github.com/DasIch",
                "followers_url": "https://api.github.com/users/DasIch/followers",
                "following_url": "https://api.github.com/users/DasIch/following{/other_user}",
                "gists_url": "https://api.github.com/users/DasIch/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/DasIch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DasIch/subscriptions",
                "organizations_url": "https://api.github.com/users/DasIch/orgs",
                "repos_url": "https://api.github.com/users/DasIch/repos",
                "events_url": "https://api.github.com/users/DasIch/events{/privacy}",
                "received_events_url": "https://api.github.com/users/DasIch/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-10-29T12:13:26Z",
            "updated_at": "2013-10-29T12:13:26Z",
            "author_association": "CONTRIBUTOR",
            "body": "It cannot in general be determined if two View instances are equal and it's also not possible to tell if two View instances created with `as_view` are equal, even if all arguments are identical. This simply cannot be solved by Flask.\n"
        }
    ]
}