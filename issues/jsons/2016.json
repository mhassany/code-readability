{
    "url": "https://api.github.com/repos/pallets/flask/issues/2016",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2016/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2016/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2016/events",
    "html_url": "https://github.com/pallets/flask/issues/2016",
    "id": 175911502,
    "node_id": "MDU6SXNzdWUxNzU5MTE1MDI=",
    "number": 2016,
    "title": "request.args uncompatible with quote, which lead decode error",
    "user": {
        "login": "eromoe",
        "id": 3938751,
        "node_id": "MDQ6VXNlcjM5Mzg3NTE=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/3938751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eromoe",
        "html_url": "https://github.com/eromoe",
        "followers_url": "https://api.github.com/users/eromoe/followers",
        "following_url": "https://api.github.com/users/eromoe/following{/other_user}",
        "gists_url": "https://api.github.com/users/eromoe/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/eromoe/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/eromoe/subscriptions",
        "organizations_url": "https://api.github.com/users/eromoe/orgs",
        "repos_url": "https://api.github.com/users/eromoe/repos",
        "events_url": "https://api.github.com/users/eromoe/events{/privacy}",
        "received_events_url": "https://api.github.com/users/eromoe/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2016-09-09T02:22:09Z",
    "updated_at": "2016-09-09T08:58:17Z",
    "closed_at": "2016-09-09T08:58:17Z",
    "author_association": "NONE",
    "body": "I think it is a bug.\n\nMy code:\n\n```\nfrom __future__ import unicode_literals, absolute_import\nfrom flask import Blueprint, request, jsonify\nfrom flask_restful import Api, Resource\nfrom six.moves.urllib.parse import unquote\nfrom src.share import filemgr\n\napi = Blueprint('api', __name__, url_prefix='/api')\napi_wrap = Api(api)\n\n@api.route('/list', methods=['get'])\ndef list():\n    path = unquote(request.args.get('path', '/'))\n    only_folder = request.args.get('only_folder', False)\n    nodes = filemgr.list(path)\n    if only_folder:\n        nodes = filter(lambda x:x.isfolder, nodes)\n    return jsonify(nodes)\n```\n\n---\n\najax get:\n\n```\nvar path = 'c - \u526f\u672c'\najax({\n  url: 'http://localhost:5000/api/list',\n  params: {\n    path: encodeURI(path)\n  }\n});\n```\n\n---\n\nBut get `path` decode incorrectly : `u'c - \\xe5\\x89\\xaf\\xe6\\x9c\\xac'`.\n\nIt should be `'c - \\xe5\\x89\\xaf\\xe6\\x9c\\xac'` or `u'c - \\u526f\\u672c''`\n\nI debug into  `list()` and found:\n\n```\n>>> request.url\nu'http://localhost:5000/api/list?path=c%2520-%2520%25E5%2589%25AF%25E6%259C%25AC'\n\n>>> request.args.get('path', '/')\nu'c%20-%20%E5%89%AF%E6%9C%AC'\n\n>>> unquote(request.args.get('path', '/'))\nu'c - \\xe5\\x89\\xaf\\xe6\\x9c\\xac'\n```\n\nHere the string can not be decode, the correct string is 'c - \\xe5\\x89\\xaf\\xe6\\x9c\\xac', without `u` prefix.\n\nDebug into `request.args at Lib\\site-packages\\werkzeug\\wrappers.py`\n\nin line 431\n\n```\n@cached_property\ndef args(self):\n    \"\"\"The parsed URL parameters.  By default an\n    :class:`~werkzeug.datastructures.ImmutableMultiDict`\n    is returned from this function.  This can be changed by setting\n    :attr:`parameter_storage_class` to a different type.  This might\n    be necessary if the order of the form data is important.\n    \"\"\"\n    return url_decode(wsgi_get_bytes(self.environ.get('QUERY_STRING', '')),\n                      self.url_charset, errors=self.encoding_errors,\n                      cls=self.parameter_storage_class)\n```\n\nI try some value:\n\n```\n>>> wsgi_get_bytes(self.environ.get('QUERY_STRING', ''))\n'path=c%2520-%2520%25E5%2589%25AF%25E6%259C%25AC'\n\n>>> url_decode(wsgi_get_bytes(self.environ.get('QUERY_STRING', '')),\n                          self.url_charset, errors=self.encoding_errors,\n                          cls=self.parameter_storage_class)\nImmutableMultiDict([('path', u'c%20-%20%E5%89%AF%E6%9C%AC')])\n\n\n`url_decode` decode querystring into wrong.\n```\n\nThe problem is `url_decode`, should not decode here, because the querystring maybe quote(like my situation)\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/245808904",
            "html_url": "https://github.com/pallets/flask/issues/2016#issuecomment-245808904",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2016",
            "id": 245808904,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTgwODkwNA==",
            "user": {
                "login": "liuliqiang",
                "id": 9395418,
                "node_id": "MDQ6VXNlcjkzOTU0MTg=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/9395418?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/liuliqiang",
                "html_url": "https://github.com/liuliqiang",
                "followers_url": "https://api.github.com/users/liuliqiang/followers",
                "following_url": "https://api.github.com/users/liuliqiang/following{/other_user}",
                "gists_url": "https://api.github.com/users/liuliqiang/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/liuliqiang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/liuliqiang/subscriptions",
                "organizations_url": "https://api.github.com/users/liuliqiang/orgs",
                "repos_url": "https://api.github.com/users/liuliqiang/repos",
                "events_url": "https://api.github.com/users/liuliqiang/events{/privacy}",
                "received_events_url": "https://api.github.com/users/liuliqiang/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-09T03:25:21Z",
            "updated_at": "2016-09-09T03:25:21Z",
            "author_association": "NONE",
            "body": "i try it in Flaks==0.11.1 and not found problems, my test case is: [flask-issue-2016-test](https://gist.github.com/luke0922/51a44883197813af77870c0d7c2c3898)\n\ncan you tell your flask version and system encode?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/245831665",
            "html_url": "https://github.com/pallets/flask/issues/2016#issuecomment-245831665",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2016",
            "id": 245831665,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTgzMTY2NQ==",
            "user": {
                "login": "eromoe",
                "id": 3938751,
                "node_id": "MDQ6VXNlcjM5Mzg3NTE=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/3938751?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eromoe",
                "html_url": "https://github.com/eromoe",
                "followers_url": "https://api.github.com/users/eromoe/followers",
                "following_url": "https://api.github.com/users/eromoe/following{/other_user}",
                "gists_url": "https://api.github.com/users/eromoe/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eromoe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eromoe/subscriptions",
                "organizations_url": "https://api.github.com/users/eromoe/orgs",
                "repos_url": "https://api.github.com/users/eromoe/repos",
                "events_url": "https://api.github.com/users/eromoe/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eromoe/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-09T06:35:31Z",
            "updated_at": "2016-09-09T06:37:47Z",
            "author_association": "NONE",
            "body": "@luke0922\n\nMy env:\nPython 2.7.10 32 bit\nFlask (0.11.1) \nWin 8.1 x64\n\nAnd, you test is not correct. \nIf you use a web browser, there is a method call `encodeURI`  as I writen in the question, you need use that too. I know plain `i'am\u4e2d\u56fd\u4eba` is fine.\nI am not familiar with curl, but it must has some option like `encodeURI` to encode `i'am\u4e2d\u56fd\u4eba` in curl.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/245832340",
            "html_url": "https://github.com/pallets/flask/issues/2016#issuecomment-245832340",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2016",
            "id": 245832340,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTgzMjM0MA==",
            "user": {
                "login": "liuliqiang",
                "id": 9395418,
                "node_id": "MDQ6VXNlcjkzOTU0MTg=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/9395418?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/liuliqiang",
                "html_url": "https://github.com/liuliqiang",
                "followers_url": "https://api.github.com/users/liuliqiang/followers",
                "following_url": "https://api.github.com/users/liuliqiang/following{/other_user}",
                "gists_url": "https://api.github.com/users/liuliqiang/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/liuliqiang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/liuliqiang/subscriptions",
                "organizations_url": "https://api.github.com/users/liuliqiang/orgs",
                "repos_url": "https://api.github.com/users/liuliqiang/repos",
                "events_url": "https://api.github.com/users/liuliqiang/events{/privacy}",
                "received_events_url": "https://api.github.com/users/liuliqiang/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-09T06:39:56Z",
            "updated_at": "2016-09-09T06:39:56Z",
            "author_association": "NONE",
            "body": "it also works with `encodeURI` ,you can try this:\n`curl -X GET \"http://127.0.0.1:9090?type=i'am%20%E4%B8%AD%E5%9B%BD%E4%BA%BA\"`\n\ni think it is not a Flask case, but  your runtime encode not in UTF-8\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/245837586",
            "html_url": "https://github.com/pallets/flask/issues/2016#issuecomment-245837586",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2016",
            "id": 245837586,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTgzNzU4Ng==",
            "user": {
                "login": "eromoe",
                "id": 3938751,
                "node_id": "MDQ6VXNlcjM5Mzg3NTE=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/3938751?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eromoe",
                "html_url": "https://github.com/eromoe",
                "followers_url": "https://api.github.com/users/eromoe/followers",
                "following_url": "https://api.github.com/users/eromoe/following{/other_user}",
                "gists_url": "https://api.github.com/users/eromoe/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eromoe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eromoe/subscriptions",
                "organizations_url": "https://api.github.com/users/eromoe/orgs",
                "repos_url": "https://api.github.com/users/eromoe/repos",
                "events_url": "https://api.github.com/users/eromoe/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eromoe/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-09T07:13:29Z",
            "updated_at": "2016-09-09T07:20:51Z",
            "author_association": "NONE",
            "body": "Oh,  my bad. It is not unicode encoding problem, but encodeURI twice in frontend.\n\nThe frontend is a reactjs app. There is a piece code:\n\n`var querystring = options.params ? urllib.format({ query: options.params })\n`\nto build querystring. Here , `urllib.format` encode `options.params` again.\n1. `urllib.format({ query: {'path':'\u4e2d\u56fd'} })`\n   \"?path=%E4%B8%AD%E5%9B%BD\"\n2. `urllib.format({ query: {'path':encodeURI('\u4e2d\u56fd')} })`\n   \"?path=%25E4%25B8%25AD%25E5%259B%25BD\"\n\nThe second one make the bad. \n\nBut I still think there is a problem, flask should not break the flow when one encode twice.\n\nIf I encode twice, the flask get\n\n```\n>>> request.args.get('path', '/')\nu'%E4%B8%AD%E5%9B%BD\n>>> unquote(request.args.get('path', '/'))\nu'\\xe4\\xb8\\xad\\xe5\\x9b\\xbd'\n```\n\n`u'\\xe4\\xb8\\xad\\xe5\\x9b\\xbd'`  this can not be decode.  Need `unquote(request.args.get('path', '/').encode('utf-8')).decode('utf-8')`\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/245857431",
            "html_url": "https://github.com/pallets/flask/issues/2016#issuecomment-245857431",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2016",
            "id": 245857431,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTg1NzQzMQ==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-09T08:54:12Z",
            "updated_at": "2016-09-09T08:54:48Z",
            "author_association": "MEMBER",
            "body": "Decoding a string once that was encoded twice should give you the string as it was after the first encoding.\n\nAlso, if data is request encoded properly Flask already gives you the unencoded version.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/245858355",
            "html_url": "https://github.com/pallets/flask/issues/2016#issuecomment-245858355",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2016",
            "id": 245858355,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTg1ODM1NQ==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-09-09T08:58:17Z",
            "updated_at": "2016-09-09T08:58:17Z",
            "author_association": "MEMBER",
            "body": "You should not have to use `unquote` on `requests.args` in your Flask app, and a simple app like this works fine for me:\n\n```\n@app.route('/')\ndef index():\n    return requests.args['path']\n```\n\nIf I open `http://127.0.0.1:5000/?path=%E4%B8%AD%E5%9B%BD` in my browser, the correct characters are returned. This must be a problem in your frontend.\n\n> u'\\xe4\\xb8\\xad\\xe5\\x9b\\xbd' this can not be decode\n\nIt _is_ decoded. Try to print it!\n\nSorry, but this is not a proper bugreport for Flask, closing.\n"
        }
    ]
}