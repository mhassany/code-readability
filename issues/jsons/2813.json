{
    "url": "https://api.github.com/repos/pallets/flask/issues/2813",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2813/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2813/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2813/events",
    "html_url": "https://github.com/pallets/flask/issues/2813",
    "id": 328488602,
    "node_id": "MDU6SXNzdWUzMjg0ODg2MDI=",
    "number": 2813,
    "title": "Allow flexible routing with SERVER_NAME config",
    "user": {
        "login": "jarus",
        "id": 110274,
        "node_id": "MDQ6VXNlcjExMDI3NA==",
        "avatar_url": "https://avatars3.githubusercontent.com/u/110274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jarus",
        "html_url": "https://github.com/jarus",
        "followers_url": "https://api.github.com/users/jarus/followers",
        "following_url": "https://api.github.com/users/jarus/following{/other_user}",
        "gists_url": "https://api.github.com/users/jarus/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jarus/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jarus/subscriptions",
        "organizations_url": "https://api.github.com/users/jarus/orgs",
        "repos_url": "https://api.github.com/users/jarus/repos",
        "events_url": "https://api.github.com/users/jarus/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jarus/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-06-01T11:46:38Z",
    "updated_at": "2019-06-05T19:38:33Z",
    "closed_at": "2018-06-01T11:54:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "### Expected Behavior\r\n\r\nDeployed a flask application which is reachable over multiple domains and ports:\r\n- external via load balancer: `client - Host: example.org -> LB -> flask app`\r\n- internal via DNS service discovery without load balancer: `client - Host: instance-1231.example.org -> flask app` \r\n\r\nIf the client connects directly (`Host: instance-1231.example.org`) the app should be able to return absolute and stable URLs like `http://example.org/path/to/my/view` as the URL (`http://instance-1231.example.org/path/to/my/view`) with the internal DNS name is ephemeral.\r\nTherefore I configured the `SERVER_NAME` config key and `url_for` generates the intended absolute URL by using `_external=True` within and without request context. But the app should be still able to route requests coming with `Host: instance-1231.example.org`.\r\n\r\n### Actual Behavior\r\n\r\nFlasks creates the `werkzeug.routing.MapAdapter` with `server_name=app.config['SERVER_NAME']` and therefore no view method will match to incoming requests with `Host: instance-1231.example.org`.\r\n\r\n### Environment\r\n\r\n* Python version: 2.7.13 (I'm sorry)\r\n* Flask version: 1.0.2\r\n* Werkzeug version: 0.14.1\r\n\r\n### Applied workaround:\r\n\r\nOverwrite `Flask.create_url_adapter` and create `MapAdapter` for request context without `server_name` parameter. Routing and URL generation works fine.\r\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/393858189",
            "html_url": "https://github.com/pallets/flask/issues/2813#issuecomment-393858189",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2813",
            "id": 393858189,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5Mzg1ODE4OQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-06-01T11:54:21Z",
            "updated_at": "2018-06-01T11:54:21Z",
            "author_association": "MEMBER",
            "body": "Then don't configure `SERVER_NAME`? It's hard to tell what you're doing because you didn't provide any code.\r\n\r\nPlease use Stack Overflow for questions about your own code. This tracker is for issues related to the project itself. Be sure to include a [minimal, complete, and verifiable example](https://stackoverflow.com/help/mcve)."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/499221064",
            "html_url": "https://github.com/pallets/flask/issues/2813#issuecomment-499221064",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2813",
            "id": 499221064,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTIyMTA2NA==",
            "user": {
                "login": "killthekitten",
                "id": 1201569,
                "node_id": "MDQ6VXNlcjEyMDE1Njk=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/1201569?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/killthekitten",
                "html_url": "https://github.com/killthekitten",
                "followers_url": "https://api.github.com/users/killthekitten/followers",
                "following_url": "https://api.github.com/users/killthekitten/following{/other_user}",
                "gists_url": "https://api.github.com/users/killthekitten/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/killthekitten/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/killthekitten/subscriptions",
                "organizations_url": "https://api.github.com/users/killthekitten/orgs",
                "repos_url": "https://api.github.com/users/killthekitten/repos",
                "events_url": "https://api.github.com/users/killthekitten/events{/privacy}",
                "received_events_url": "https://api.github.com/users/killthekitten/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-06-05T19:24:53Z",
            "updated_at": "2019-06-05T19:24:53Z",
            "author_association": "NONE",
            "body": "I had a feeling it was fixed as part of https://github.com/pallets/flask/issues/998. The main issue stays the same \u2013 SERVER_NAME has implicit influence on routing, while some people use it only to control `url_for`. \r\n\r\n@davidism described a working solution [on Stack Overflow](https://stackoverflow.com/a/51885466/1285763). It involves dropping SERVER_NAME in favor of `host_matching=True` and `@app.url_defaults`.\r\n\r\nWould it make sense to add the following paragraph from the answer to the [SERVER_NAME doc](http://flask.pocoo.org/docs/1.0/config/#SERVER_NAME)?\r\n\r\n> However, if you have multiple base domains, you should use host matching instead. You must set host_matching=True on the app object, as well as setting static_host so the static route knows which host to to serve from. Unlike subdomains, you do not set SERVER_NAME. Then pass the host option to routes. This matches against the full domain, and so it requires writing out the full domain each time, rather than just the subdomain.\r\n\r\nDocs for `host_matching` are very modest, at the same time multiple base domains are used pretty often in modern stack, i.e. technical domains on appspot.com (Google App Engine) or heroku.\r\n\r\n\r\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/499225697",
            "html_url": "https://github.com/pallets/flask/issues/2813#issuecomment-499225697",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2813",
            "id": 499225697,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTIyNTY5Nw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-06-05T19:38:32Z",
            "updated_at": "2019-06-05T19:38:32Z",
            "author_association": "MEMBER",
            "body": "Docs PRs are welcome. We shouldn't be cramming routing docs into the config docs though. Either there's a better place in the Flask docs, or the http://werkzeug.palletsprojects.com/en/0.15.x/routing/ Werkzeug docs can be updated."
        }
    ]
}