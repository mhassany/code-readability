{
    "url": "https://api.github.com/repos/pallets/flask/issues/584",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/584/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/584/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/584/events",
    "html_url": "https://github.com/pallets/flask/issues/584",
    "id": 6551678,
    "node_id": "MDU6SXNzdWU2NTUxNjc4",
    "number": 584,
    "title": "Handling of vendor trees and parameters in MIME Media Types",
    "user": {
        "login": "exhuma",
        "id": 65717,
        "node_id": "MDQ6VXNlcjY1NzE3",
        "avatar_url": "https://avatars3.githubusercontent.com/u/65717?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/exhuma",
        "html_url": "https://github.com/exhuma",
        "followers_url": "https://api.github.com/users/exhuma/followers",
        "following_url": "https://api.github.com/users/exhuma/following{/other_user}",
        "gists_url": "https://api.github.com/users/exhuma/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/exhuma/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/exhuma/subscriptions",
        "organizations_url": "https://api.github.com/users/exhuma/orgs",
        "repos_url": "https://api.github.com/users/exhuma/repos",
        "events_url": "https://api.github.com/users/exhuma/events{/privacy}",
        "received_events_url": "https://api.github.com/users/exhuma/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-08-30T12:14:23Z",
    "updated_at": "2014-07-27T12:43:26Z",
    "closed_at": "2014-07-27T12:43:26Z",
    "author_association": "NONE",
    "body": "I am currently developing a new RESTful application in our company, and I want to do my job as properly as possible. And as many more RESTful applications/services will follow, I am currently reading up on the topic as-I-go. Also, out of experience, I know that APIs will evolve over time, and the need to version them is not something new.\n\nAt the very beginning of my quest, I came to [an answer on StackOverflow discussing just that](http://stackoverflow.com/a/398564/160665). The answer itself, pointed me to both the [RFC for Media Types](http://tools.ietf.org/html/rfc4288#section-3.2). I am still in the process of reading it in all it's glory, but so far, the \"personal\" or even \"special\" sub-type trees seem to fit my needs perfectly. This let's me _explicitly_ define the media type I am communicating with my client.\n\nIn parallel, the SO answer pointed me also indirect;ly to [a section about versioning](http://blog.steveklabnik.com/posts/2011-07-03-nobody-understands-rest-or-http#i_want_my_api_to_be_versioned) in the \"Nobody Understands REST or HTTP\" document.\n\nAll in all, I find the solution with the custom sub-type tree and the version parameter _very_ appealing.\n\nUnfortunately, Flask is not yet able to parse this properly. As far as I can see, this could be handled transparently inside [MIMEAccept](http://werkzeug.pocoo.org/docs/datastructures/#werkzeug.datastructures.MIMEAccept) by only relaxing the \"accept_json\" logic to represent a general \"does the client understand JSON\" question, and adding a few extra accessors which are more precise.\n\nI am not yet 100% certain how this could look like, but if you want I would be willing to look into it, and make a proposal via pull-request?\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/25777948",
            "html_url": "https://github.com/pallets/flask/issues/584#issuecomment-25777948",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/584",
            "id": 25777948,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI1Nzc3OTQ4",
            "user": {
                "login": "Tinche",
                "id": 1909233,
                "node_id": "MDQ6VXNlcjE5MDkyMzM=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1909233?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Tinche",
                "html_url": "https://github.com/Tinche",
                "followers_url": "https://api.github.com/users/Tinche/followers",
                "following_url": "https://api.github.com/users/Tinche/following{/other_user}",
                "gists_url": "https://api.github.com/users/Tinche/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Tinche/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Tinche/subscriptions",
                "organizations_url": "https://api.github.com/users/Tinche/orgs",
                "repos_url": "https://api.github.com/users/Tinche/repos",
                "events_url": "https://api.github.com/users/Tinche/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Tinche/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-10-06T22:07:11Z",
            "updated_at": "2013-10-06T22:07:11Z",
            "author_association": "NONE",
            "body": "Bump!\n\nIt'd be great if Flask.Request.get_json was a little smarter about what it considers JSON. Right now it's just 'application/json', but ideally it should understand MIME types matching 'application/(.++)?json' (such as 'application/vnd.collection+json' or 'application/vnd.mycompany.myproject.mytype+json'). This looks like a good first step, after that maybe recognize and ignore parameters too.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/50263478",
            "html_url": "https://github.com/pallets/flask/issues/584#issuecomment-50263478",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/584",
            "id": 50263478,
            "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjYzNDc4",
            "user": {
                "login": "DasIch",
                "id": 182316,
                "node_id": "MDQ6VXNlcjE4MjMxNg==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/182316?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/DasIch",
                "html_url": "https://github.com/DasIch",
                "followers_url": "https://api.github.com/users/DasIch/followers",
                "following_url": "https://api.github.com/users/DasIch/following{/other_user}",
                "gists_url": "https://api.github.com/users/DasIch/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/DasIch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DasIch/subscriptions",
                "organizations_url": "https://api.github.com/users/DasIch/orgs",
                "repos_url": "https://api.github.com/users/DasIch/repos",
                "events_url": "https://api.github.com/users/DasIch/events{/privacy}",
                "received_events_url": "https://api.github.com/users/DasIch/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-07-27T12:43:26Z",
            "updated_at": "2014-07-27T12:43:26Z",
            "author_association": "CONTRIBUTOR",
            "body": "This should be implemented in werkzeug (https://github.com/mitsuhiko/werkzeug/) as part of the Request class\n"
        }
    ]
}