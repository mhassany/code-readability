{
    "url": "https://api.github.com/repos/pallets/flask/issues/1734",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1734/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1734/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1734/events",
    "html_url": "https://github.com/pallets/flask/issues/1734",
    "id": 135089382,
    "node_id": "MDU6SXNzdWUxMzUwODkzODI=",
    "number": 1734,
    "title": "You may want to include this example base Docker image with uWSGI and Nginx in the docs",
    "user": {
        "login": "tiangolo",
        "id": 1326112,
        "node_id": "MDQ6VXNlcjEzMjYxMTI=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/1326112?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tiangolo",
        "html_url": "https://github.com/tiangolo",
        "followers_url": "https://api.github.com/users/tiangolo/followers",
        "following_url": "https://api.github.com/users/tiangolo/following{/other_user}",
        "gists_url": "https://api.github.com/users/tiangolo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tiangolo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tiangolo/subscriptions",
        "organizations_url": "https://api.github.com/users/tiangolo/orgs",
        "repos_url": "https://api.github.com/users/tiangolo/repos",
        "events_url": "https://api.github.com/users/tiangolo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tiangolo/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2016-02-20T15:52:47Z",
    "updated_at": "2016-02-21T05:21:02Z",
    "closed_at": "2016-02-20T19:33:37Z",
    "author_association": "NONE",
    "body": "I made a public (and open source) Docker image that you can use to build a Python Flask web application.\n\nIt has uWSGI for running the application, Nginx to serve HTTP and Supervisord to control them, so you don't have to learn how to install and configure all those to build your Python Flask web app.\n\nIt seems like uWSGI with Nginx is one of the more robust (and with great performance) ways to deploy a Python web app. Here are the benchmarks: http://nichol.as/benchmark-of-python-web-servers.\n\nIf there was an official Flask Docker image for deployment I would like to use it. But then, if there was an open source performant Docker image that could help deploying an app without having to learn, install and configure uWSGI, Nginx, Supervisord, I would have liked to find it in your docs. \n\nNow that I built this one, you may want to include it in your docs, maybe as \"a third party example\" or something. If you think this could be useful, I could submit a PR.\n\nI think it could be in **deploying**: http://flask.pocoo.org/docs/0.10/deploying/\nOr in snippet category **deployment**: http://flask.pocoo.org/snippets/category/deployment/\n\nThere are even some template projects you can use to bootstrap your own. And also, you don't have to clone the full project or something, you can just use it as a base image.\n\nDocker Hub: https://hub.docker.com/r/tiangolo/uwsgi-nginx-flask/\nGitHub: https://github.com/tiangolo/uwsgi-nginx-flask-docker\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/186636797",
            "html_url": "https://github.com/pallets/flask/issues/1734#issuecomment-186636797",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1734",
            "id": 186636797,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjYzNjc5Nw==",
            "user": {
                "login": "hbrls",
                "id": 1220476,
                "node_id": "MDQ6VXNlcjEyMjA0NzY=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/1220476?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hbrls",
                "html_url": "https://github.com/hbrls",
                "followers_url": "https://api.github.com/users/hbrls/followers",
                "following_url": "https://api.github.com/users/hbrls/following{/other_user}",
                "gists_url": "https://api.github.com/users/hbrls/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hbrls/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hbrls/subscriptions",
                "organizations_url": "https://api.github.com/users/hbrls/orgs",
                "repos_url": "https://api.github.com/users/hbrls/repos",
                "events_url": "https://api.github.com/users/hbrls/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hbrls/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-02-20T16:16:15Z",
            "updated_at": "2016-02-20T16:16:15Z",
            "author_association": "NONE",
            "body": "I have a [WIP](https://github.com/hbrls/docker-flask-app) too.\n\nAnd I removed nginx recently because uwsgi can serve static files now. I'd like a discussion of the choice.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/186648685",
            "html_url": "https://github.com/pallets/flask/issues/1734#issuecomment-186648685",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1734",
            "id": 186648685,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjY0ODY4NQ==",
            "user": {
                "login": "tiangolo",
                "id": 1326112,
                "node_id": "MDQ6VXNlcjEzMjYxMTI=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/1326112?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/tiangolo",
                "html_url": "https://github.com/tiangolo",
                "followers_url": "https://api.github.com/users/tiangolo/followers",
                "following_url": "https://api.github.com/users/tiangolo/following{/other_user}",
                "gists_url": "https://api.github.com/users/tiangolo/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/tiangolo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tiangolo/subscriptions",
                "organizations_url": "https://api.github.com/users/tiangolo/orgs",
                "repos_url": "https://api.github.com/users/tiangolo/repos",
                "events_url": "https://api.github.com/users/tiangolo/events{/privacy}",
                "received_events_url": "https://api.github.com/users/tiangolo/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-02-20T16:43:13Z",
            "updated_at": "2016-02-20T16:43:13Z",
            "author_association": "NONE",
            "body": "Great @hbrls !\n\nHere's what I found before building it that way (with uWSGI and Nginx):\n\nIn the Flask docs it's said that: \n\n> uWSGI is a deployment option on servers like nginx, lighttpd, and cherokee; see FastCGI and Standalone WSGI Containers for other options.\n\n http://flask.pocoo.org/docs/0.10/deploying/uwsgi/\n\nAnd based on the benchmarks in: http://nichol.as/benchmark-of-python-web-servers it seemed to me that **uWSGI** with **Nginx** would be on of the most robust ways to do a deployment with great performance.\n\nAlso, in uWSGI docs related to serving files directly it says that:\n\n> Generally your webserver of choice (Nginx, Mongrel2, etc.) will serve static files efficiently and quickly and will simply forward dynamic requests to uWSGI backend nodes.\n> \n> The uWSGI project has ISPs and PaaS (that is, the hosting market) as the main target, where generally you would want to avoid generating disk I/O on a central server...\n\nhttps://uwsgi-docs.readthedocs.org/en/latest/StaticFiles.html\n\n...so it seems to me that making uWSGI serve files directly is in case you can't afford to set up a full web server (like Nginx) to do it. \n\nIf someone was building a Docker container from scratch, the best bet would probably be starting with uWSGI alone to avoid more moving parts and another learning curve in Nginx configurations. \n\nBut I think it would be worthwhile having a fully configured Docker image with all the niceties built in without having to learn and configure everything but getting all the possible performance and robustness... that's what I tried with this image I built.\n\nWhat do you think?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/186657347",
            "html_url": "https://github.com/pallets/flask/issues/1734#issuecomment-186657347",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1734",
            "id": 186657347,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjY1NzM0Nw==",
            "user": {
                "login": "hbrls",
                "id": 1220476,
                "node_id": "MDQ6VXNlcjEyMjA0NzY=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/1220476?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hbrls",
                "html_url": "https://github.com/hbrls",
                "followers_url": "https://api.github.com/users/hbrls/followers",
                "following_url": "https://api.github.com/users/hbrls/following{/other_user}",
                "gists_url": "https://api.github.com/users/hbrls/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hbrls/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hbrls/subscriptions",
                "organizations_url": "https://api.github.com/users/hbrls/orgs",
                "repos_url": "https://api.github.com/users/hbrls/repos",
                "events_url": "https://api.github.com/users/hbrls/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hbrls/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-02-20T17:34:04Z",
            "updated_at": "2016-02-20T17:34:04Z",
            "author_association": "NONE",
            "body": "At first, I had only 1 app. So I had nginx in the image.\n\nThen I had more and more apps,  and a standalone nginx container to dispatch outer most traffic. I just can not tolerate the \"double nginx\" solution.\n\nSee my question on [stackoverflow](http://stackoverflow.com/questions/25909985/whats-the-docker-pattern-of-serving-both-static-and-dynamic-content).\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/186661991",
            "html_url": "https://github.com/pallets/flask/issues/1734#issuecomment-186661991",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1734",
            "id": 186661991,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjY2MTk5MQ==",
            "user": {
                "login": "tiangolo",
                "id": 1326112,
                "node_id": "MDQ6VXNlcjEzMjYxMTI=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/1326112?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/tiangolo",
                "html_url": "https://github.com/tiangolo",
                "followers_url": "https://api.github.com/users/tiangolo/followers",
                "following_url": "https://api.github.com/users/tiangolo/following{/other_user}",
                "gists_url": "https://api.github.com/users/tiangolo/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/tiangolo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tiangolo/subscriptions",
                "organizations_url": "https://api.github.com/users/tiangolo/orgs",
                "repos_url": "https://api.github.com/users/tiangolo/repos",
                "events_url": "https://api.github.com/users/tiangolo/events{/privacy}",
                "received_events_url": "https://api.github.com/users/tiangolo/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-02-20T18:20:28Z",
            "updated_at": "2016-02-20T18:20:28Z",
            "author_association": "NONE",
            "body": "I see @hbrls.\n\nBut look, if people want to isolate servers and files and treat them as separated complete applications independent of having or not many other apps and an external server, they may want to have a simple complete container, as with the image I built.\n\nThey could build a Docker container and map its internal port to the port 80 of their VPS and just with that they will have a live application. It would be the simplest entry point for someone developing a Flask app and wanting to have the best performance with the least hand tuning.\n\nIf they need a more advanced and complex setup, having static files outsite of the Docker Flask app and configuring the external Nginx to serve those static files directly, they could then use your image  (once its finished) or build one from scratch. But they would have to have in mind that making the external Nginx be responsible for the static files and the Docker container for dynamic content would split the responsibilities of their app, and also would be risking each app to get broken because another app modified the Nginx configs while setting that another app's static data serving.\n\nAlso, have in mind that not everyone wants to setup one single Nginx to serve all static files and may want to have each Docker container be responsible for its own complete application, and maybe use something as [nginx-proxy](https://github.com/jwilder/nginx-proxy) to facilitate things and make it all more manageable.\n\nI think my image could be used as a base use case approach for deployment, the first step in improving the performance to a deployment level of an app currently running as:\n\n```\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=80)\n```\n\nThen, for more advanced setups, I would suggest you to write a documentation page and submit a PR with all your recommendations for a bigger complex setup.\n\nBut I think the simplest base use case would be having one app, with its data in the same container and wanting it to have good performance.\n\nEither way, I think Flask users would benefit from having at least one way to deploy with Docker without having to do all the work by hand and have it documented (or linked) in the official docs. \n\nOf course my image will not fit for every case (as it obviously doesn't fit yours), but for a novice that finally has his app running, it could be a first step in improving its performance to a \"production\" level without having to learn and configure a too big bunch of other parts and having it fully containerized and isolated from the external environment.\n\nAnyway, I think you could add another issue suggesting what would you do to deploy a Flask app to production, or adding your Docker image, but the two approaches could work and could be documented, may be as \"a third party base Docker image\".\n\nI think users would benefit more from \"here are two approaches to deploy with Docker\" than simply nothing in the docs.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/186669295",
            "html_url": "https://github.com/pallets/flask/issues/1734#issuecomment-186669295",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1734",
            "id": 186669295,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjY2OTI5NQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-02-20T19:33:37Z",
            "updated_at": "2016-02-20T19:36:02Z",
            "author_association": "MEMBER",
            "body": "I'd rather have users that understand the parts and configuration necessary for deployment, rather than hiding it all behind containers.  @tiangolo your version forces py27 and doesn't install requirements.  @hbrls your version trusts a third party pypi server.  Neither of these offer clear instruction about how to modify configuration, especially important for setting up uwsgi with multiple processes (which both versions inexplicably leave out), ssl, etc.  I'd rather leave this separate from official documentation rather than encouraging users to run scripts as root.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/186669477",
            "html_url": "https://github.com/pallets/flask/issues/1734#issuecomment-186669477",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1734",
            "id": 186669477,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjY2OTQ3Nw==",
            "user": {
                "login": "tiangolo",
                "id": 1326112,
                "node_id": "MDQ6VXNlcjEzMjYxMTI=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/1326112?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/tiangolo",
                "html_url": "https://github.com/tiangolo",
                "followers_url": "https://api.github.com/users/tiangolo/followers",
                "following_url": "https://api.github.com/users/tiangolo/following{/other_user}",
                "gists_url": "https://api.github.com/users/tiangolo/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/tiangolo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tiangolo/subscriptions",
                "organizations_url": "https://api.github.com/users/tiangolo/orgs",
                "repos_url": "https://api.github.com/users/tiangolo/repos",
                "events_url": "https://api.github.com/users/tiangolo/events{/privacy}",
                "received_events_url": "https://api.github.com/users/tiangolo/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-02-20T19:37:18Z",
            "updated_at": "2016-02-20T19:37:18Z",
            "author_association": "NONE",
            "body": "OK, thanks for the comment @davidism.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/186747957",
            "html_url": "https://github.com/pallets/flask/issues/1734#issuecomment-186747957",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1734",
            "id": 186747957,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE4Njc0Nzk1Nw==",
            "user": {
                "login": "hbrls",
                "id": 1220476,
                "node_id": "MDQ6VXNlcjEyMjA0NzY=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/1220476?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hbrls",
                "html_url": "https://github.com/hbrls",
                "followers_url": "https://api.github.com/users/hbrls/followers",
                "following_url": "https://api.github.com/users/hbrls/following{/other_user}",
                "gists_url": "https://api.github.com/users/hbrls/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hbrls/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hbrls/subscriptions",
                "organizations_url": "https://api.github.com/users/hbrls/orgs",
                "repos_url": "https://api.github.com/users/hbrls/repos",
                "events_url": "https://api.github.com/users/hbrls/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hbrls/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-02-21T05:21:02Z",
            "updated_at": "2016-02-21T05:21:02Z",
            "author_association": "NONE",
            "body": "@davidism The pypi server is because the official one is blocked in China. Sad.\n"
        }
    ]
}