{
    "url": "https://api.github.com/repos/pallets/flask/issues/291",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/291/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/291/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/291/events",
    "html_url": "https://github.com/pallets/flask/issues/291",
    "id": 1333263,
    "node_id": "MDU6SXNzdWUxMzMzMjYz",
    "number": 291,
    "title": "before_request functions not run before every request",
    "user": {
        "login": "jab",
        "id": 64992,
        "node_id": "MDQ6VXNlcjY0OTky",
        "avatar_url": "https://avatars1.githubusercontent.com/u/64992?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jab",
        "html_url": "https://github.com/jab",
        "followers_url": "https://api.github.com/users/jab/followers",
        "following_url": "https://api.github.com/users/jab/following{/other_user}",
        "gists_url": "https://api.github.com/users/jab/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jab/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jab/subscriptions",
        "organizations_url": "https://api.github.com/users/jab/orgs",
        "repos_url": "https://api.github.com/users/jab/repos",
        "events_url": "https://api.github.com/users/jab/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jab/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2011-08-02T21:19:42Z",
    "updated_at": "2011-08-04T17:43:12Z",
    "closed_at": "2011-08-04T14:45:24Z",
    "author_association": "MEMBER",
    "body": "I have a before_request function which I'd like to be actually run before every request. It sets some variables on `g` based on things like headers that I would like a custom error handler to be able to access. If I e.g. abort(404) from one of my own views, I'm fine, but if a request comes in that werkzeug can determine has no matching route, it bypasses my before_request function and goes straight to the error handler, so `g` is missing info.\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/1727524",
            "html_url": "https://github.com/pallets/flask/issues/291#issuecomment-1727524",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/291",
            "id": 1727524,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE3Mjc1MjQ=",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2011-08-04T14:45:19Z",
            "updated_at": "2011-08-04T14:45:19Z",
            "author_association": "MEMBER",
            "body": "I cannot reproduce that. Do you have a testcase?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/1728974",
            "html_url": "https://github.com/pallets/flask/issues/291#issuecomment-1728974",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/291",
            "id": 1728974,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE3Mjg5NzQ=",
            "user": {
                "login": "jab",
                "id": 64992,
                "node_id": "MDQ6VXNlcjY0OTky",
                "avatar_url": "https://avatars1.githubusercontent.com/u/64992?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jab",
                "html_url": "https://github.com/jab",
                "followers_url": "https://api.github.com/users/jab/followers",
                "following_url": "https://api.github.com/users/jab/following{/other_user}",
                "gists_url": "https://api.github.com/users/jab/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jab/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jab/subscriptions",
                "organizations_url": "https://api.github.com/users/jab/orgs",
                "repos_url": "https://api.github.com/users/jab/repos",
                "events_url": "https://api.github.com/users/jab/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jab/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2011-08-04T17:43:12Z",
            "updated_at": "2011-08-04T17:43:12Z",
            "author_association": "MEMBER",
            "body": "D'oh, problem was on my end. Sorry for the noise.\n"
        }
    ]
}