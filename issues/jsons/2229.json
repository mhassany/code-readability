{
    "url": "https://api.github.com/repos/pallets/flask/issues/2229",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2229/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2229/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2229/events",
    "html_url": "https://github.com/pallets/flask/issues/2229",
    "id": 219220067,
    "node_id": "MDU6SXNzdWUyMTkyMjAwNjc=",
    "number": 2229,
    "title": "Chunked uploads missing body data.",
    "user": {
        "login": "Lukasa",
        "id": 1382556,
        "node_id": "MDQ6VXNlcjEzODI1NTY=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Lukasa",
        "html_url": "https://github.com/Lukasa",
        "followers_url": "https://api.github.com/users/Lukasa/followers",
        "following_url": "https://api.github.com/users/Lukasa/following{/other_user}",
        "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions",
        "organizations_url": "https://api.github.com/users/Lukasa/orgs",
        "repos_url": "https://api.github.com/users/Lukasa/repos",
        "events_url": "https://api.github.com/users/Lukasa/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Lukasa/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 29,
    "created_at": "2017-04-04T11:29:37Z",
    "updated_at": "2019-05-14T17:25:10Z",
    "closed_at": "2017-05-28T03:41:29Z",
    "author_association": "NONE",
    "body": "## Summary\r\n\r\nIn basic Flask applications, the body data of chunked uploads appears to go missing: that is, they do not appear in `request.data`. I have reproduced this with two different WSGI servers (gunicorn and twisted), both of which handle chunked data appropriately. Non-chunked data does not suffer this problem. I've reproduced this problem on both Python 2.7 and Python 3.6.\r\n\r\n## Reproduction\r\n\r\nThe following Flask application demonstrates the problem:\r\n\r\n```python\r\nfrom flask import Flask, request\r\napp = Flask(__name__)\r\n\r\n@app.route('/', methods=['GET', 'POST'])\r\ndef hello_world():\r\n    return request.data\r\n```\r\n\r\nwhen run like this: `gunicorn -w 4 example:app`.\r\n\r\nThe following test script can be run:\r\n\r\n```python\r\nimport requests\r\n\r\ndef gen():\r\n    yield b\"hello\"\r\n    yield b\"world\"\r\n\r\nprint(\"Making first request\")\r\nr = requests.post('http://localhost:8000/', data=b'helloworld')\r\nprint(\"Got: %s\" % r.content.decode('utf-8'))\r\nprint(\"Making second request\")\r\nr = requests.post('http://localhost:8000/', data=gen())\r\nprint(\"Got: %s\" % r.content.decode('utf-8'))\r\n```\r\n\r\n### Expected Output\r\n\r\n```\r\nMaking first request\r\nGot: helloworld\r\nMaking second request\r\nGot: helloworld\r\n```\r\n\r\n### Actual Output\r\n\r\n```\r\nMaking first request\r\nGot: helloworld\r\nMaking second request\r\nGot: \r\n```\r\n\r\n## Environment\r\n\r\n```\r\n% python -VV                                      \r\nPython 3.6.0 (default, Jan 18 2017, 18:08:34) \r\n[GCC 4.2.1 Compatible Apple LLVM 8.0.0 (clang-800.0.42.1)]\r\n```\r\n\r\n```\r\n% pip freeze                                      \r\nappdirs==1.4.3\r\nclick==6.7\r\nFlask==0.12.1\r\ngunicorn==19.7.1\r\nitsdangerous==0.24\r\nJinja2==2.9.6\r\nMarkupSafe==1.0\r\npackaging==16.8\r\npyparsing==2.2.0\r\nsix==1.10.0\r\nWerkzeug==0.12.1\r\n```\r\n\r\n## References\r\n\r\nThis was spotted at httpbin. See kennethreitz/httpbin#340 for more.",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/291472827",
            "html_url": "https://github.com/pallets/flask/issues/2229#issuecomment-291472827",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2229",
            "id": 291472827,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTQ3MjgyNw==",
            "user": {
                "login": "kennethreitz",
                "id": 119893,
                "node_id": "MDQ6VXNlcjExOTg5Mw==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/119893?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/kennethreitz",
                "html_url": "https://github.com/kennethreitz",
                "followers_url": "https://api.github.com/users/kennethreitz/followers",
                "following_url": "https://api.github.com/users/kennethreitz/following{/other_user}",
                "gists_url": "https://api.github.com/users/kennethreitz/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/kennethreitz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kennethreitz/subscriptions",
                "organizations_url": "https://api.github.com/users/kennethreitz/orgs",
                "repos_url": "https://api.github.com/users/kennethreitz/repos",
                "events_url": "https://api.github.com/users/kennethreitz/events{/privacy}",
                "received_events_url": "https://api.github.com/users/kennethreitz/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-04T11:32:03Z",
            "updated_at": "2017-04-04T11:32:03Z",
            "author_association": "CONTRIBUTOR",
            "body": "\u2728\ud83c\udf70\u2728"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/291474663",
            "html_url": "https://github.com/pallets/flask/issues/2229#issuecomment-291474663",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2229",
            "id": 291474663,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTQ3NDY2Mw==",
            "user": {
                "login": "Lukasa",
                "id": 1382556,
                "node_id": "MDQ6VXNlcjEzODI1NTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Lukasa",
                "html_url": "https://github.com/Lukasa",
                "followers_url": "https://api.github.com/users/Lukasa/followers",
                "following_url": "https://api.github.com/users/Lukasa/following{/other_user}",
                "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions",
                "organizations_url": "https://api.github.com/users/Lukasa/orgs",
                "repos_url": "https://api.github.com/users/Lukasa/repos",
                "events_url": "https://api.github.com/users/Lukasa/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Lukasa/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-04T11:41:25Z",
            "updated_at": "2017-04-04T11:41:25Z",
            "author_association": "NONE",
            "body": "Further digging shows that `wsgi.input` in the environ dictionary is valid in the call to `flask.app.Flask.wsgi_app`: that is, if I call `read` on it I get the data out in both the chunked and non-chunked case. So somewhere in the Flask/werkzeug stack that data is getting lost."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/291489108",
            "html_url": "https://github.com/pallets/flask/issues/2229#issuecomment-291489108",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2229",
            "id": 291489108,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTQ4OTEwOA==",
            "user": {
                "login": "graingert",
                "id": 413772,
                "node_id": "MDQ6VXNlcjQxMzc3Mg==",
                "avatar_url": "https://avatars3.githubusercontent.com/u/413772?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/graingert",
                "html_url": "https://github.com/graingert",
                "followers_url": "https://api.github.com/users/graingert/followers",
                "following_url": "https://api.github.com/users/graingert/following{/other_user}",
                "gists_url": "https://api.github.com/users/graingert/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/graingert/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/graingert/subscriptions",
                "organizations_url": "https://api.github.com/users/graingert/orgs",
                "repos_url": "https://api.github.com/users/graingert/repos",
                "events_url": "https://api.github.com/users/graingert/events{/privacy}",
                "received_events_url": "https://api.github.com/users/graingert/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-04T12:48:48Z",
            "updated_at": "2017-04-04T12:48:48Z",
            "author_association": "NONE",
            "body": "@Lukasa it appears that weukzeug is intentionally returning an empty stream when there's no content length: https://github.com/pallets/werkzeug/blob/109dad4ac9e0a1690666b2d4f29d07d98a3701d9/werkzeug/wsgi.py#L210"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/291495696",
            "html_url": "https://github.com/pallets/flask/issues/2229#issuecomment-291495696",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2229",
            "id": 291495696,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTQ5NTY5Ng==",
            "user": {
                "login": "Lukasa",
                "id": 1382556,
                "node_id": "MDQ6VXNlcjEzODI1NTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Lukasa",
                "html_url": "https://github.com/Lukasa",
                "followers_url": "https://api.github.com/users/Lukasa/followers",
                "following_url": "https://api.github.com/users/Lukasa/following{/other_user}",
                "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions",
                "organizations_url": "https://api.github.com/users/Lukasa/orgs",
                "repos_url": "https://api.github.com/users/Lukasa/repos",
                "events_url": "https://api.github.com/users/Lukasa/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Lukasa/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-04T13:14:41Z",
            "updated_at": "2017-04-04T13:14:41Z",
            "author_association": "NONE",
            "body": "Yup, that looks like a correct analysis of that code.\r\n\r\nSo, I'd argue that that behaviour is wrong. There's no reason to require the Content-Length field. PEP 3333 makes it pretty clear that the WSGI server should simulate EOF if the client reads past content-length, so I'm not really sure what werkzeug is trying to protect against here."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/291496059",
            "html_url": "https://github.com/pallets/flask/issues/2229#issuecomment-291496059",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2229",
            "id": 291496059,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTQ5NjA1OQ==",
            "user": {
                "login": "Lukasa",
                "id": 1382556,
                "node_id": "MDQ6VXNlcjEzODI1NTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Lukasa",
                "html_url": "https://github.com/Lukasa",
                "followers_url": "https://api.github.com/users/Lukasa/followers",
                "following_url": "https://api.github.com/users/Lukasa/following{/other_user}",
                "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions",
                "organizations_url": "https://api.github.com/users/Lukasa/orgs",
                "repos_url": "https://api.github.com/users/Lukasa/repos",
                "events_url": "https://api.github.com/users/Lukasa/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Lukasa/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-04T13:16:05Z",
            "updated_at": "2017-04-04T13:16:05Z",
            "author_association": "NONE",
            "body": "More generally it makes it basically impossible for werkzeug-using applications to sensibly handle chunked transfer encoding without having their WSGI server buffer the entire inbound data stream, which seems like a pretty unreasonable requirement."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/291501536",
            "html_url": "https://github.com/pallets/flask/issues/2229#issuecomment-291501536",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2229",
            "id": 291501536,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTUwMTUzNg==",
            "user": {
                "login": "graingert",
                "id": 413772,
                "node_id": "MDQ6VXNlcjQxMzc3Mg==",
                "avatar_url": "https://avatars3.githubusercontent.com/u/413772?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/graingert",
                "html_url": "https://github.com/graingert",
                "followers_url": "https://api.github.com/users/graingert/followers",
                "following_url": "https://api.github.com/users/graingert/following{/other_user}",
                "gists_url": "https://api.github.com/users/graingert/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/graingert/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/graingert/subscriptions",
                "organizations_url": "https://api.github.com/users/graingert/orgs",
                "repos_url": "https://api.github.com/users/graingert/repos",
                "events_url": "https://api.github.com/users/graingert/events{/privacy}",
                "received_events_url": "https://api.github.com/users/graingert/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-04T13:36:02Z",
            "updated_at": "2017-04-04T13:36:02Z",
            "author_association": "NONE",
            "body": "> The server is not required to read past the client's specified Content-Length , and should simulate an end-of-file condition if the application attempts to read past that point. The application should not attempt to read more data than is specified by the CONTENT_LENGTH variable.\r\n>\r\n> A server should allow read() to be called without an argument, and return the remainder of the client's input stream.\r\n>\r\n> A server should return empty bytestrings from any attempt to read from an empty or exhausted input stream."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/291513230",
            "html_url": "https://github.com/pallets/flask/issues/2229#issuecomment-291513230",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2229",
            "id": 291513230,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTUxMzIzMA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-04T14:14:56Z",
            "updated_at": "2017-04-04T14:14:56Z",
            "author_association": "MEMBER",
            "body": "@Lukasa I get a `BrokenPipeError` from requests when trying your example. Is that because of this bug? How did you get the output?\r\n\r\n~~~python-traceback\r\nTraceback (most recent call last):\r\n  File \"/home/david/.virtualenvs/flask/lib/python3.6/site-packages/requests/adapters.py\", line 444, in send\r\n    low_conn.send(hex(len(i))[2:].encode('utf-8'))\r\n  File \"/usr/lib64/python3.6/http/client.py\", line 986, in send\r\n    self.sock.sendall(data)\r\nBrokenPipeError: [Errno 32] Broken pipe\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/david/Projects/flask/example2.py\", line 11, in <module>\r\n    requests.post('http://127.0.0.1:5000/', data=gen())\r\n  File \"/home/david/.virtualenvs/flask/lib/python3.6/site-packages/requests/api.py\", line 110, in post\r\n    return request('post', url, data=data, json=json, **kwargs)\r\n  File \"/home/david/.virtualenvs/flask/lib/python3.6/site-packages/requests/api.py\", line 56, in request\r\n    return session.request(method=method, url=url, **kwargs)\r\n  File \"/home/david/.virtualenvs/flask/lib/python3.6/site-packages/requests/sessions.py\", line 488, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/david/.virtualenvs/flask/lib/python3.6/site-packages/requests/sessions.py\", line 609, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/home/david/.virtualenvs/flask/lib/python3.6/site-packages/requests/adapters.py\", line 473, in send\r\n    raise ConnectionError(err, request=request)\r\nrequests.exceptions.ConnectionError: [Errno 32] Broken pipe\r\n~~~"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/291513760",
            "html_url": "https://github.com/pallets/flask/issues/2229#issuecomment-291513760",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2229",
            "id": 291513760,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTUxMzc2MA==",
            "user": {
                "login": "Lukasa",
                "id": 1382556,
                "node_id": "MDQ6VXNlcjEzODI1NTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Lukasa",
                "html_url": "https://github.com/Lukasa",
                "followers_url": "https://api.github.com/users/Lukasa/followers",
                "following_url": "https://api.github.com/users/Lukasa/following{/other_user}",
                "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions",
                "organizations_url": "https://api.github.com/users/Lukasa/orgs",
                "repos_url": "https://api.github.com/users/Lukasa/repos",
                "events_url": "https://api.github.com/users/Lukasa/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Lukasa/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-04T14:16:39Z",
            "updated_at": "2017-04-04T14:16:39Z",
            "author_association": "NONE",
            "body": "It's certainly possible, yes. What WSGI server are you using?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/291514160",
            "html_url": "https://github.com/pallets/flask/issues/2229#issuecomment-291514160",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2229",
            "id": 291514160,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTUxNDE2MA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-04T14:17:58Z",
            "updated_at": "2017-04-04T14:17:58Z",
            "author_association": "MEMBER",
            "body": "Just the built-in dev server. Actually, I forgot I changed `gen` to\r\n\r\n~~~python\r\ndef gen():\r\n    while True:\r\n        yield b\"hello, world\"\r\n~~~\r\n\r\nWith the original non-infinite generator, I get the empty output."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/291514499",
            "html_url": "https://github.com/pallets/flask/issues/2229#issuecomment-291514499",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2229",
            "id": 291514499,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTUxNDQ5OQ==",
            "user": {
                "login": "Lukasa",
                "id": 1382556,
                "node_id": "MDQ6VXNlcjEzODI1NTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Lukasa",
                "html_url": "https://github.com/Lukasa",
                "followers_url": "https://api.github.com/users/Lukasa/followers",
                "following_url": "https://api.github.com/users/Lukasa/following{/other_user}",
                "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions",
                "organizations_url": "https://api.github.com/users/Lukasa/orgs",
                "repos_url": "https://api.github.com/users/Lukasa/repos",
                "events_url": "https://api.github.com/users/Lukasa/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Lukasa/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-04T14:19:08Z",
            "updated_at": "2017-04-04T14:19:18Z",
            "author_association": "NONE",
            "body": "Yeah, so the infinite generator is a problem because werkzeug thinks the request has no length, so it immediately sends a response and then, with the builtin server, probably closes the connection. That'll cause the broken pipe error."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/291514843",
            "html_url": "https://github.com/pallets/flask/issues/2229#issuecomment-291514843",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2229",
            "id": 291514843,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTUxNDg0Mw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-04T14:20:13Z",
            "updated_at": "2017-04-04T14:20:41Z",
            "author_association": "MEMBER",
            "body": "We probably don't want to allow infinite streams in all cases? Otherwise it would be trivial to tie up a server. Although maybe Werkzeug already handles this, let me try the patch and check."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/291515867",
            "html_url": "https://github.com/pallets/flask/issues/2229#issuecomment-291515867",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2229",
            "id": 291515867,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTUxNTg2Nw==",
            "user": {
                "login": "Lukasa",
                "id": 1382556,
                "node_id": "MDQ6VXNlcjEzODI1NTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Lukasa",
                "html_url": "https://github.com/Lukasa",
                "followers_url": "https://api.github.com/users/Lukasa/followers",
                "following_url": "https://api.github.com/users/Lukasa/following{/other_user}",
                "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions",
                "organizations_url": "https://api.github.com/users/Lukasa/orgs",
                "repos_url": "https://api.github.com/users/Lukasa/repos",
                "events_url": "https://api.github.com/users/Lukasa/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Lukasa/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-04T14:23:41Z",
            "updated_at": "2017-04-04T14:23:41Z",
            "author_association": "NONE",
            "body": "I have no particular objection to disallowing infinite streams, though I don't know that it's really Flask/werkzeug's problem to deal with: I'd say that in the WSGI abstraction the server is responsible for being sensible here.\r\n\r\nThe bigger issue, ultimately, is that werkzeug seems to require the [non-standard `wsgi.input_terminated`](https://gist.github.com/mitsuhiko/5721547) extension to behave correctly in the presence of chunked transfer encoding."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/291543169",
            "html_url": "https://github.com/pallets/flask/issues/2229#issuecomment-291543169",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2229",
            "id": 291543169,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTU0MzE2OQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-04T15:49:09Z",
            "updated_at": "2017-04-04T15:49:56Z",
            "author_association": "MEMBER",
            "body": "If we change `safe_fallback` to `False`:\r\n\r\n* Werkzeug's dev server will spin forever and keep using more memory.\r\n* Gunicorn times out, but still reads in a ton of data to memory first. It does not appear to have an option to limit the request body size.\r\n* uWSGI, the stream is empty by the time it gets to `get_input_stream`, not sure why. @Lukasa maybe you have some insight here, since I can't imagine uWSGI doesn't support chunked requests. `uwsgi --http-socket localhost:5000 -w example:app`\r\n\r\nI'm not *too* concerned with the dev server since it's not expected to be used in production. I *am* concerned with Gunicorn, since it's a common way to deploy a Flask app.\r\n\r\nFlask provides a `MAX_CONTENT_LENGTH` config, but Werkzeug only uses that when parsing a request's form data, and only if the `Content-Length` header is set. That should be fixed (but doesn't block this).\r\n\r\nI'd like to hear from other maintainers too."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/291551927",
            "html_url": "https://github.com/pallets/flask/issues/2229#issuecomment-291551927",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2229",
            "id": 291551927,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTU1MTkyNw==",
            "user": {
                "login": "Lukasa",
                "id": 1382556,
                "node_id": "MDQ6VXNlcjEzODI1NTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Lukasa",
                "html_url": "https://github.com/Lukasa",
                "followers_url": "https://api.github.com/users/Lukasa/followers",
                "following_url": "https://api.github.com/users/Lukasa/following{/other_user}",
                "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions",
                "organizations_url": "https://api.github.com/users/Lukasa/orgs",
                "repos_url": "https://api.github.com/users/Lukasa/repos",
                "events_url": "https://api.github.com/users/Lukasa/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Lukasa/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-04T16:16:12Z",
            "updated_at": "2017-04-04T16:16:12Z",
            "author_association": "NONE",
            "body": "@davism Is the uWSGI stream object empty, or is werkzeug saying it's empty? As noted above, those are two very different cases."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/291555769",
            "html_url": "https://github.com/pallets/flask/issues/2229#issuecomment-291555769",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2229",
            "id": 291555769,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTU1NTc2OQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-04T16:28:58Z",
            "updated_at": "2017-04-04T16:28:58Z",
            "author_association": "MEMBER",
            "body": "It's an instance of `uwsgi._Input`. The patch is applied, so it is getting passed to `get_data`."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/291556007",
            "html_url": "https://github.com/pallets/flask/issues/2229#issuecomment-291556007",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2229",
            "id": 291556007,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTU1NjAwNw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-04T16:29:44Z",
            "updated_at": "2017-04-04T16:29:44Z",
            "author_association": "MEMBER",
            "body": "Opened pallets/werkzeug#1096 about obeying `max_content_length`."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/291556221",
            "html_url": "https://github.com/pallets/flask/issues/2229#issuecomment-291556221",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2229",
            "id": 291556221,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTU1NjIyMQ==",
            "user": {
                "login": "Lukasa",
                "id": 1382556,
                "node_id": "MDQ6VXNlcjEzODI1NTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Lukasa",
                "html_url": "https://github.com/Lukasa",
                "followers_url": "https://api.github.com/users/Lukasa/followers",
                "following_url": "https://api.github.com/users/Lukasa/following{/other_user}",
                "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions",
                "organizations_url": "https://api.github.com/users/Lukasa/orgs",
                "repos_url": "https://api.github.com/users/Lukasa/repos",
                "events_url": "https://api.github.com/users/Lukasa/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Lukasa/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-04T16:30:21Z",
            "updated_at": "2017-04-04T16:30:21Z",
            "author_association": "NONE",
            "body": "Hrm. I don't really know what's going on with uWSGI tbh."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/291575826",
            "html_url": "https://github.com/pallets/flask/issues/2229#issuecomment-291575826",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2229",
            "id": 291575826,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTU3NTgyNg==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-04T17:38:22Z",
            "updated_at": "2017-04-04T17:38:22Z",
            "author_association": "MEMBER",
            "body": "Re https://github.com/pallets/flask/issues/2229#issuecomment-291515867\r\n\r\n>I'd say that in the WSGI abstraction the server is responsible for being sensible here.\r\n\r\nThere will be one server developer that argues the other way around, which clearly shows in the different behavior across WSGI servers. In the end, if nobody feels responsible for security improvements beyond the spec, none practically exist.\r\n\r\nI agree that the current behavior is not optimal, so I'm not really sure what to do there.\r\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/291576211",
            "html_url": "https://github.com/pallets/flask/issues/2229#issuecomment-291576211",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2229",
            "id": 291576211,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTU3NjIxMQ==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-04T17:39:44Z",
            "updated_at": "2017-04-04T17:39:44Z",
            "author_association": "MEMBER",
            "body": "Also generally I'm a fan of having as little logic like this in the WSGI server as possible, since it makes app behavior dependent on deployment."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/291599215",
            "html_url": "https://github.com/pallets/flask/issues/2229#issuecomment-291599215",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2229",
            "id": 291599215,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTU5OTIxNQ==",
            "user": {
                "login": "Lukasa",
                "id": 1382556,
                "node_id": "MDQ6VXNlcjEzODI1NTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Lukasa",
                "html_url": "https://github.com/Lukasa",
                "followers_url": "https://api.github.com/users/Lukasa/followers",
                "following_url": "https://api.github.com/users/Lukasa/following{/other_user}",
                "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions",
                "organizations_url": "https://api.github.com/users/Lukasa/orgs",
                "repos_url": "https://api.github.com/users/Lukasa/repos",
                "events_url": "https://api.github.com/users/Lukasa/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Lukasa/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-04T18:59:57Z",
            "updated_at": "2017-04-04T18:59:57Z",
            "author_association": "NONE",
            "body": "@untitaker Sure, that's reasonable, but that means that Flask/werkzeug needs to find a way to cope with this that isn't \"assume there is no body\". If the answer is \"servers must support the relevant werkzeug extension\" then that's fine, but that needs to be documented really clearly somewhere to make it clear to server authors that if they don't implement it then Flask won't see any chunked bodies. Alternatively, Flask/werkzeug could implement some heuristics regarding headers and the first few bytes of the body to try to work out what the server is doing.\r\n\r\nI don't mind at all what direction you choose to go. \ud83d\ude01"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/291612210",
            "html_url": "https://github.com/pallets/flask/issues/2229#issuecomment-291612210",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2229",
            "id": 291612210,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTYxMjIxMA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-04T19:50:04Z",
            "updated_at": "2017-04-04T19:50:04Z",
            "author_association": "MEMBER",
            "body": "@untitaker I think between pallets/werkzeug#1095 and pallets/werkzeug#1096, we should be good. Allows streams without content length, lets Werkzeug handle security if configured in case the WSGI server doesn't handle it. We could still document that servers can implement `wsgi.input_terminated`."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/304490656",
            "html_url": "https://github.com/pallets/flask/issues/2229#issuecomment-304490656",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2229",
            "id": 304490656,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDQ5MDY1Ng==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-05-28T03:41:29Z",
            "updated_at": "2017-05-28T03:41:29Z",
            "author_association": "MEMBER",
            "body": "pallets/werkzeug#1126 will fix this"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/307478898",
            "html_url": "https://github.com/pallets/flask/issues/2229#issuecomment-307478898",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2229",
            "id": 307478898,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzQ3ODg5OA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-09T19:28:02Z",
            "updated_at": "2017-06-09T19:28:02Z",
            "author_association": "MEMBER",
            "body": "Werkzeug has been fixed, not sure when a 0.13 release will happen though. You can install the latest GitHub archive if you want the fix now, it's only a couple commits off 0.12.2 right now."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/307479183",
            "html_url": "https://github.com/pallets/flask/issues/2229#issuecomment-307479183",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2229",
            "id": 307479183,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzQ3OTE4Mw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-09T19:29:17Z",
            "updated_at": "2017-06-09T19:29:17Z",
            "author_association": "MEMBER",
            "body": "You will need to set `MAX_CONTENT_LENGTH` in your Flask config for the change to be apparent. If no content length or max is set, the fallback to an empty stream is still enforced."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/316999268",
            "html_url": "https://github.com/pallets/flask/issues/2229#issuecomment-316999268",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2229",
            "id": 316999268,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjk5OTI2OA==",
            "user": {
                "login": "trondhindenes",
                "id": 1747120,
                "node_id": "MDQ6VXNlcjE3NDcxMjA=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/1747120?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/trondhindenes",
                "html_url": "https://github.com/trondhindenes",
                "followers_url": "https://api.github.com/users/trondhindenes/followers",
                "following_url": "https://api.github.com/users/trondhindenes/following{/other_user}",
                "gists_url": "https://api.github.com/users/trondhindenes/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/trondhindenes/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/trondhindenes/subscriptions",
                "organizations_url": "https://api.github.com/users/trondhindenes/orgs",
                "repos_url": "https://api.github.com/users/trondhindenes/repos",
                "events_url": "https://api.github.com/users/trondhindenes/events{/privacy}",
                "received_events_url": "https://api.github.com/users/trondhindenes/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-07-21T13:22:04Z",
            "updated_at": "2017-07-21T13:22:04Z",
            "author_association": "NONE",
            "body": "I'm trying this with the cloned versions of Flask and Werkzeug, but I'm still seeing the problem with empty request body. Should I have to configure anything else besides this?\r\n\r\n```\r\napp = Flask(__name__, static_folder=static_files_path)\r\napp.config['MAX_CONTENT_LENGTH'] = 9999999\r\n```"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/317003196",
            "html_url": "https://github.com/pallets/flask/issues/2229#issuecomment-317003196",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2229",
            "id": 317003196,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzAwMzE5Ng==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-07-21T13:38:44Z",
            "updated_at": "2017-07-21T13:38:44Z",
            "author_association": "MEMBER",
            "body": "See pallets/werkzeug#1149, fix needs to be fixed."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/395654994",
            "html_url": "https://github.com/pallets/flask/issues/2229#issuecomment-395654994",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2229",
            "id": 395654994,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTY1NDk5NA==",
            "user": {
                "login": "cetanu",
                "id": 2289018,
                "node_id": "MDQ6VXNlcjIyODkwMTg=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/2289018?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/cetanu",
                "html_url": "https://github.com/cetanu",
                "followers_url": "https://api.github.com/users/cetanu/followers",
                "following_url": "https://api.github.com/users/cetanu/following{/other_user}",
                "gists_url": "https://api.github.com/users/cetanu/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/cetanu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cetanu/subscriptions",
                "organizations_url": "https://api.github.com/users/cetanu/orgs",
                "repos_url": "https://api.github.com/users/cetanu/repos",
                "events_url": "https://api.github.com/users/cetanu/events{/privacy}",
                "received_events_url": "https://api.github.com/users/cetanu/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-06-08T05:50:19Z",
            "updated_at": "2018-06-08T05:50:19Z",
            "author_association": "NONE",
            "body": "I'm still having issues with this in Flask 1.0.2 and both gunicorn 19.7.1 & uwsgi 2.0.17\r\n\r\nCan't seem to get the request body no matter what I try. Any known workarounds?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/422813919",
            "html_url": "https://github.com/pallets/flask/issues/2229#issuecomment-422813919",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2229",
            "id": 422813919,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjgxMzkxOQ==",
            "user": {
                "login": "dumblob",
                "id": 2451044,
                "node_id": "MDQ6VXNlcjI0NTEwNDQ=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/2451044?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/dumblob",
                "html_url": "https://github.com/dumblob",
                "followers_url": "https://api.github.com/users/dumblob/followers",
                "following_url": "https://api.github.com/users/dumblob/following{/other_user}",
                "gists_url": "https://api.github.com/users/dumblob/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/dumblob/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dumblob/subscriptions",
                "organizations_url": "https://api.github.com/users/dumblob/orgs",
                "repos_url": "https://api.github.com/users/dumblob/repos",
                "events_url": "https://api.github.com/users/dumblob/events{/privacy}",
                "received_events_url": "https://api.github.com/users/dumblob/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-09-19T13:57:10Z",
            "updated_at": "2018-09-19T13:57:10Z",
            "author_association": "NONE",
            "body": "@cetanu are you sure Flask 1.0.2 (or newer) with gunicorn 19.7.1 (or newer) didn't work?\r\n\r\nI can believe Flask + uwsgi didn't/doesn't work, but Flask + gunicorn shall be a different story."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/492331403",
            "html_url": "https://github.com/pallets/flask/issues/2229#issuecomment-492331403",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2229",
            "id": 492331403,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjMzMTQwMw==",
            "user": {
                "login": "fredzannarbor",
                "id": 1165771,
                "node_id": "MDQ6VXNlcjExNjU3NzE=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1165771?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/fredzannarbor",
                "html_url": "https://github.com/fredzannarbor",
                "followers_url": "https://api.github.com/users/fredzannarbor/followers",
                "following_url": "https://api.github.com/users/fredzannarbor/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredzannarbor/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/fredzannarbor/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredzannarbor/subscriptions",
                "organizations_url": "https://api.github.com/users/fredzannarbor/orgs",
                "repos_url": "https://api.github.com/users/fredzannarbor/repos",
                "events_url": "https://api.github.com/users/fredzannarbor/events{/privacy}",
                "received_events_url": "https://api.github.com/users/fredzannarbor/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-05-14T17:25:10Z",
            "updated_at": "2019-05-14T17:25:10Z",
            "author_association": "NONE",
            "body": "I appear to be having a similar issue in Flask 1.0.2 with mod_wsgi where the request body is going missing *only* when it is mod_wsgi that launches flask.  i have attached the debug output from my .wsgi app.  Can anyone confirm that this is the same issue?\r\n\r\n```\r\n[Tue May 14 17:17:12.639947 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] ('REQUEST',\r\n[Tue May 14 17:17:12.639981 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.640474 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] {'CONTENT_LENGTH': '2686',\r\n[Tue May 14 17:17:12.640483 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.640495 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'CONTENT_TYPE': 'application/json; charset=utf-8',\r\n[Tue May 14 17:17:12.640500 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.640511 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'CONTEXT_DOCUMENT_ROOT': '/opt/lampstack-7.1.26-0/apache2/htdocs',\r\n[Tue May 14 17:17:12.640516 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.640526 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'CONTEXT_PREFIX': '',\r\n[Tue May 14 17:17:12.640530 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.640540 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'DOCUMENT_ROOT': '/opt/lampstack-7.1.26-0/apache2/htdocs',\r\n[Tue May 14 17:17:12.640545 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.640555 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'GATEWAY_INTERFACE': 'CGI/1.1',\r\n[Tue May 14 17:17:12.640559 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.640569 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'HTTP_ACCEPT': 'application/json',\r\n[Tue May 14 17:17:12.640574 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.640583 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'HTTP_ACCEPT_CHARSET': 'utf-8',\r\n[Tue May 14 17:17:12.640588 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.640597 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'HTTP_CONNECTION': 'Keep-Alive',\r\n[Tue May 14 17:17:12.640602 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.640611 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'HTTP_HOST': 'www.altbrains.com',\r\n[Tue May 14 17:17:12.640616 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.640657 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'HTTP_SIGNATURE': 'SuKzPjhCLGR2wEBMuqS4gCEl2YSfnGZlCAXl1ABZmJA6/wL1ckVWk9Wo5ihijXMk1MyrRCmALTbruhsECSIa/rg3WSsrX5MeNVbhz6uj1IXlF+JjnRDZ7YOe/Yrri6BS4fdURDX6RRDzOKqTvg7D0MnnRHq/2JrpBQQSs0Ruue/M/WbrMkQTu7qBx/gVpol5ejcz00VPZA9ycXTJwdgRJQ00egu9dWCtEKKGMiw7zjyRHCANLZjX75q79PG97A6d//YUdurPN+pjjot2xEeFVOTzjAH2Mua2bdwLgULCThxKF94pgjcxY7+ciXgAqcrok1Liv/4A2MzprzEhBe3NXg==',\r\n[Tue May 14 17:17:12.640666 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.640689 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'HTTP_SIGNATURECERTCHAINURL': 'https://s3.amazonaws.com/echo.api/echo-api-cert-6-ats.pem',\r\n[Tue May 14 17:17:12.640695 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.640706 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'HTTP_USER_AGENT': 'Apache-HttpClient/4.5.x (Java/1.8.0_202)',\r\n[Tue May 14 17:17:12.640711 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.640737 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'LD_LIBRARY_PATH': '/opt/lampstack-7.1.26-0/sqlite/lib:/opt/lampstack-7.1.26-0/mysql/lib:/opt/lampstack-7.1.26-0/apache2/lib:/opt/lampstack-7.1.26-0/common/lib:/opt/lampstack-7.1.26-0/sqlite/lib:/opt/lampstack-7.1.26-0/mysql/lib:/opt/lampstack-7.1.26-0/apache2/lib:/opt/lampstack-7.1.26-0/common/lib:/opt/lampstack-7.1.26-0/git/lib:/opt/lampstack-7.1.26-0/sqlite/lib:/opt/lampstack-7.1.26-0/mysql/lib:/opt/lampstack-7.1.26-0/apache2/lib:/opt/lampstack-7.1.26-0/common/lib',\r\n[Tue May 14 17:17:12.640762 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.640774 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'PATH_INFO': '',\r\n[Tue May 14 17:17:12.640778 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.640788 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'QUERY_STRING': '',\r\n[Tue May 14 17:17:12.640793 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.640802 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'REMOTE_ADDR': '72.21.217.41',\r\n[Tue May 14 17:17:12.640807 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.640817 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'REMOTE_PORT': '5927',\r\n[Tue May 14 17:17:12.640821 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.640831 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'REQUEST_METHOD': 'POST',\r\n[Tue May 14 17:17:12.640835 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.640844 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'REQUEST_SCHEME': 'https',\r\n[Tue May 14 17:17:12.640849 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.640859 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'REQUEST_URI': '/basketball',\r\n[Tue May 14 17:17:12.640863 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.640873 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'SCRIPT_FILENAME': '/home/ubuntu/voice/AltBrains_Basketball/basketball.wsgi',\r\n[Tue May 14 17:17:12.640878 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.640887 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'SCRIPT_NAME': '/basketball',\r\n[Tue May 14 17:17:12.640892 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.640901 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'SERVER_ADDR': '172.30.0.65',\r\n[Tue May 14 17:17:12.640905 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.640915 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'SERVER_ADMIN': 'you@example.com',\r\n[Tue May 14 17:17:12.640919 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.640929 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'SERVER_NAME': 'www.altbrains.com',\r\n[Tue May 14 17:17:12.640933 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.640943 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'SERVER_PORT': '443',\r\n[Tue May 14 17:17:12.640947 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.640957 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'SERVER_PROTOCOL': 'HTTP/1.1',\r\n[Tue May 14 17:17:12.640961 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.640971 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'SERVER_SIGNATURE': '',\r\n[Tue May 14 17:17:12.640975 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.640984 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'SERVER_SOFTWARE': 'Apache',\r\n[Tue May 14 17:17:12.640989 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.640998 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'SSL_TLS_SNI': 'www.altbrains.com',\r\n[Tue May 14 17:17:12.641003 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641020 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'apache.version': (2, 4, 29),\r\n[Tue May 14 17:17:12.641025 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641039 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'mod_wsgi.application_group': 'localhost|/basketball',\r\n[Tue May 14 17:17:12.641044 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641054 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'mod_wsgi.callable_object': 'application',\r\n[Tue May 14 17:17:12.641058 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641068 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'mod_wsgi.connection_id': 'ws0lNLzQwAE',\r\n[Tue May 14 17:17:12.641072 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641082 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'mod_wsgi.daemon_connects': '1',\r\n[Tue May 14 17:17:12.641086 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641096 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'mod_wsgi.daemon_restarts': '0',\r\n[Tue May 14 17:17:12.641100 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641110 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'mod_wsgi.daemon_start': '1557854232639360',\r\n[Tue May 14 17:17:12.641114 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641124 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'mod_wsgi.enable_sendfile': '0',\r\n[Tue May 14 17:17:12.641128 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641137 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'mod_wsgi.handler_script': '',\r\n[Tue May 14 17:17:12.641142 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641151 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'mod_wsgi.ignore_activity': '0',\r\n[Tue May 14 17:17:12.641155 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641165 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'mod_wsgi.listener_host': '',\r\n[Tue May 14 17:17:12.641169 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641178 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'mod_wsgi.listener_port': '443',\r\n[Tue May 14 17:17:12.641183 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641192 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'mod_wsgi.path_info': '',\r\n[Tue May 14 17:17:12.641197 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641206 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'mod_wsgi.process_group': 'basketball',\r\n[Tue May 14 17:17:12.641211 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641220 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'mod_wsgi.queue_start': '1557854232639206',\r\n[Tue May 14 17:17:12.641225 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641234 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'mod_wsgi.request_handler': 'wsgi-script',\r\n[Tue May 14 17:17:12.641239 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641248 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'mod_wsgi.request_id': 'bPYlNLzQwAE',\r\n[Tue May 14 17:17:12.641253 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641262 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'mod_wsgi.request_start': '1557854232639084',\r\n[Tue May 14 17:17:12.641266 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641276 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'mod_wsgi.script_name': '/basketball',\r\n[Tue May 14 17:17:12.641284 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641294 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'mod_wsgi.script_reloading': '1',\r\n[Tue May 14 17:17:12.641299 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641308 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'mod_wsgi.script_start': '1557854232639445',\r\n[Tue May 14 17:17:12.641316 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641326 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'mod_wsgi.thread_id': 2,\r\n[Tue May 14 17:17:12.641331 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641341 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'mod_wsgi.thread_requests': 0,\r\n[Tue May 14 17:17:12.641345 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641355 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'mod_wsgi.total_requests': 3,\r\n[Tue May 14 17:17:12.641359 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641374 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'mod_wsgi.version': (4, 6, 5),\r\n[Tue May 14 17:17:12.641379 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641396 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'wsgi.errors': <_io.TextIOWrapper name='<wsgi.errors>' encoding='utf-8'>,\r\n[Tue May 14 17:17:12.641405 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641418 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'wsgi.file_wrapper': <class 'mod_wsgi.FileWrapper'>,\r\n[Tue May 14 17:17:12.641423 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641437 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'wsgi.input': <mod_wsgi.Input object at 0x7fc1742c1c70>,\r\n[Tue May 14 17:17:12.641442 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641452 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'wsgi.input_terminated': True,\r\n[Tue May 14 17:17:12.641456 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641466 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'wsgi.multiprocess': False,\r\n[Tue May 14 17:17:12.641470 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641480 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'wsgi.multithread': True,\r\n[Tue May 14 17:17:12.641484 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641494 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'wsgi.run_once': False,\r\n[Tue May 14 17:17:12.641498 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641508 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'wsgi.url_scheme': 'https',\r\n[Tue May 14 17:17:12.641512 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.641532 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] 'wsgi.version': (1, 0)})\r\n[Tue May 14 17:17:12.642418 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] ('RESPONSE',\r\n[Tue May 14 17:17:12.642432 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.642445 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] '308 PERMANENT REDIRECT',\r\n[Tue May 14 17:17:12.642450 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.642486 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] [('Content-Type', 'text/html; charset=utf-8'),\r\n[Tue May 14 17:17:12.642492 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.642505 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] ('Content-Length', '281'),\r\n[Tue May 14 17:17:12.642510 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927]\r\n[Tue May 14 17:17:12.642525 2019] [wsgi:error] [pid 2325] [remote 72.21.217.41:5927] ('Location', 'https://www.altbrains.com/basketball/')])\r\n[Tue May 14 17:17:29.096614 2019] [ssl:info] [pid 31818] [client 178.154.244.190:49805] AH01964: Connection to child 8 established (server localhost:443)\r\n[Tue May 14 17:17:29.354443 2019] [core:info] [pid 31818] [client 178.154.244.190:49805] AH00128: File does not exist: /opt/lampstack-7.1.26-0/apache2/htdocs/robots.txt\r\n[Tue May 14 17:17:32.923909 2019] [ssl:info] [pid 31307] [client 37.9.87.150:42833] AH01964: Connection to child 0 established (server localhost:443)\r\n[Tue May 14 17:18:19.832119 2019] [ssl:info] [pid 31327] [client 192.0.102.40:49892] AH01964: Connection to child 5 established (server localhost:443)\r\n[Tue May 14 17:18:33.960589 2019] [ssl:info] [pid 32606] [client 209.133.111.211:44328] AH01964: Connection to child 9 established (server localhost:443)\r\n[Tue May 14 17:18:34.031851 2019] [ssl:info] [pid 32606] (70014)End of file found: [client 209.133.111.211:44328] AH01991: SSL input filter read failed.\r\n```"
        }
    ]
}