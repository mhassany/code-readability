{
    "url": "https://api.github.com/repos/pallets/flask/issues/801",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/801/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/801/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/801/events",
    "html_url": "https://github.com/pallets/flask/issues/801",
    "id": 17085240,
    "node_id": "MDU6SXNzdWUxNzA4NTI0MA==",
    "number": 801,
    "title": "Given absolute URL, testclient discards query params",
    "user": {
        "login": "ryanolson",
        "id": 926226,
        "node_id": "MDQ6VXNlcjkyNjIyNg==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/926226?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanolson",
        "html_url": "https://github.com/ryanolson",
        "followers_url": "https://api.github.com/users/ryanolson/followers",
        "following_url": "https://api.github.com/users/ryanolson/following{/other_user}",
        "gists_url": "https://api.github.com/users/ryanolson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ryanolson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ryanolson/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanolson/orgs",
        "repos_url": "https://api.github.com/users/ryanolson/repos",
        "events_url": "https://api.github.com/users/ryanolson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ryanolson/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": {
        "login": "mitsuhiko",
        "id": 7396,
        "node_id": "MDQ6VXNlcjczOTY=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mitsuhiko",
        "html_url": "https://github.com/mitsuhiko",
        "followers_url": "https://api.github.com/users/mitsuhiko/followers",
        "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
        "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
        "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
        "repos_url": "https://api.github.com/users/mitsuhiko/repos",
        "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "mitsuhiko",
            "id": 7396,
            "node_id": "MDQ6VXNlcjczOTY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mitsuhiko",
            "html_url": "https://github.com/mitsuhiko",
            "followers_url": "https://api.github.com/users/mitsuhiko/followers",
            "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
            "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
            "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
            "repos_url": "https://api.github.com/users/mitsuhiko/repos",
            "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2013-07-23T06:04:41Z",
    "updated_at": "2017-04-23T16:19:33Z",
    "closed_at": "2017-04-23T16:18:39Z",
    "author_association": "NONE",
    "body": "The following fails at the assert inside the index subroutine.\n\n``` python\nimport unittest\nfrom flask import Flask, url_for, request, jsonify\n\nclass TestFlask(unittest.TestCase):\n\n    def test_get_with_arguments(self):\n        app = Flask(__name__)\n        app.debug = True\n\n        @app.route('/echo')\n        def index():\n            assert 'key' in request.args\n            return jsonify( dict(key=request.args['key']) )\n\n        url = None\n        with app.test_request_context():\n            url = url_for('index', key='test', _external=True)\n\n        assert url == 'http://localhost/echo?key=test'\n\n        rv = app.test_client().get(url)\n        assert 'key' in rv.data\n```\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/21513278",
            "html_url": "https://github.com/pallets/flask/issues/801#issuecomment-21513278",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/801",
            "id": 21513278,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTEzMjc4",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-07-24T20:23:30Z",
            "updated_at": "2013-07-24T20:23:30Z",
            "author_association": "MEMBER",
            "body": "That's currently intended behavior.  The first parameter to the test client should be a relative url.  If it's not, then the parameters are removed as it's treated as if it was url joined with the second.  This works:\n\n``` pycon\n>>> from flask import Flask, request\n>>> app = Flask(__name__)\n>>> app.testing = True\n>>> @app.route('/')\n... def index():\n...  return request.url\n... \n>>> c = app.test_client()\n>>> c.get('/?foo=bar').data\n'http://localhost/?foo=bar'\n```\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/22766776",
            "html_url": "https://github.com/pallets/flask/issues/801#issuecomment-22766776",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/801",
            "id": 22766776,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzY2Nzc2",
            "user": {
                "login": "markon",
                "id": 90461,
                "node_id": "MDQ6VXNlcjkwNDYx",
                "avatar_url": "https://avatars3.githubusercontent.com/u/90461?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/markon",
                "html_url": "https://github.com/markon",
                "followers_url": "https://api.github.com/users/markon/followers",
                "following_url": "https://api.github.com/users/markon/following{/other_user}",
                "gists_url": "https://api.github.com/users/markon/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/markon/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/markon/subscriptions",
                "organizations_url": "https://api.github.com/users/markon/orgs",
                "repos_url": "https://api.github.com/users/markon/repos",
                "events_url": "https://api.github.com/users/markon/events{/privacy}",
                "received_events_url": "https://api.github.com/users/markon/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-08-16T13:44:44Z",
            "updated_at": "2013-08-16T13:44:44Z",
            "author_association": "NONE",
            "body": "I got the same problem. The documentation does not mention it, so maybe you could update it.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/119547859",
            "html_url": "https://github.com/pallets/flask/issues/801#issuecomment-119547859",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/801",
            "id": 119547859,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExOTU0Nzg1OQ==",
            "user": {
                "login": "Teemu",
                "id": 53298,
                "node_id": "MDQ6VXNlcjUzMjk4",
                "avatar_url": "https://avatars2.githubusercontent.com/u/53298?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Teemu",
                "html_url": "https://github.com/Teemu",
                "followers_url": "https://api.github.com/users/Teemu/followers",
                "following_url": "https://api.github.com/users/Teemu/following{/other_user}",
                "gists_url": "https://api.github.com/users/Teemu/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Teemu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Teemu/subscriptions",
                "organizations_url": "https://api.github.com/users/Teemu/orgs",
                "repos_url": "https://api.github.com/users/Teemu/repos",
                "events_url": "https://api.github.com/users/Teemu/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Teemu/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-07-08T11:44:19Z",
            "updated_at": "2015-07-08T11:44:19Z",
            "author_association": "NONE",
            "body": "This behaviour seems a bit unexpected. What's the reasoning behind this behaviour?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/143870901",
            "html_url": "https://github.com/pallets/flask/issues/801#issuecomment-143870901",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/801",
            "id": 143870901,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0Mzg3MDkwMQ==",
            "user": {
                "login": "adambyrtek",
                "id": 8214,
                "node_id": "MDQ6VXNlcjgyMTQ=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/8214?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/adambyrtek",
                "html_url": "https://github.com/adambyrtek",
                "followers_url": "https://api.github.com/users/adambyrtek/followers",
                "following_url": "https://api.github.com/users/adambyrtek/following{/other_user}",
                "gists_url": "https://api.github.com/users/adambyrtek/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/adambyrtek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/adambyrtek/subscriptions",
                "organizations_url": "https://api.github.com/users/adambyrtek/orgs",
                "repos_url": "https://api.github.com/users/adambyrtek/repos",
                "events_url": "https://api.github.com/users/adambyrtek/events{/privacy}",
                "received_events_url": "https://api.github.com/users/adambyrtek/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-09-28T20:54:30Z",
            "updated_at": "2015-09-28T20:54:30Z",
            "author_association": "CONTRIBUTOR",
            "body": "I noticed this issue in other circumstances, without using the `_external` flag at all. Most of our view tests don't use request context explicitly, for example:\n\n```\ndef test_foo_bar(client):\n    response = client.get(url_for('endpoint'))\n    assert response.status_code == 200\n```\n\nIn order to make `url_for` work without the request context we had to explicitly set `app.config['SERVER_NAME'] = 'localhost'` in test setup, but besides that this works perfectly and is much less verbose.\n\nThe problem is that in this case `url_for` generates absolute URLs (e.g. `http://localhost/endpoint`) which suffer from the issue in question. In other words the obvious code doesn't work:\n\n```\ndef test_foo_bar(client):\n    response = client.get(url_for('endpoint', param='foo'))\n    assert response.status_code == 200\n```\n\nAnd has to be replaced with much less obvious:\n\n```\ndef test_foo_bar(client):\n    response = client.get(url_for('endpoint'), query_string={'param': 'foo'})\n    assert response.status_code == 200\n```\n\nWorst of all there is no warning whatsoever so you don't even know why a test is failing for a URL that seems perfectly correct.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/145423011",
            "html_url": "https://github.com/pallets/flask/issues/801#issuecomment-145423011",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/801",
            "id": 145423011,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTQyMzAxMQ==",
            "user": {
                "login": "sprin",
                "id": 1452117,
                "node_id": "MDQ6VXNlcjE0NTIxMTc=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/1452117?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/sprin",
                "html_url": "https://github.com/sprin",
                "followers_url": "https://api.github.com/users/sprin/followers",
                "following_url": "https://api.github.com/users/sprin/following{/other_user}",
                "gists_url": "https://api.github.com/users/sprin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/sprin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sprin/subscriptions",
                "organizations_url": "https://api.github.com/users/sprin/orgs",
                "repos_url": "https://api.github.com/users/sprin/repos",
                "events_url": "https://api.github.com/users/sprin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/sprin/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-10-05T03:49:37Z",
            "updated_at": "2015-10-05T03:49:37Z",
            "author_association": "CONTRIBUTOR",
            "body": "If the test client needs a relative url, we should always be able to get a relative URL from `url_for`. And indeed, we can always get a relative url by calling `url_for` with  `_external=False`.\n\nThe catch is that we must set `SERVER_NAME`, even if we never need to generate absolute urls. It looks like the underlying constraint is that Werkzeug's [Map.bind](http://werkzeug.pocoo.org/docs/0.10/routing/#werkzeug.routing.Map.bind) requires the `server_name` argument.\n\n> The server_name at least is a requirement because the HTTP RFC requires absolute URLs for redirects and so all redirect exceptions raised by Werkzeug will contain the full canonical URL.\n\nI think changing `Map.bind` to treat `server_name` as optional would be very disruptive, so we should rule that out.\n\n`url_for` could be made to work without either a RequestContext or `SERVER_NAME`, by creating a URL adapter (`MapAdapter`) with a dummy `server_name` set to the empty string. So in other words, when a there is no RequestContext, and `external=False`, we create a URL adapter with a dummy `server_name`.\n\nThis should be a non-breaking change that will enable the use of `url_for` with `_external=False` for use in tests without having to set `SERVER_NAME`. We can document the correct usage of `url_for` with a test client in the \"Testing Flask Applications\" doc.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/145797996",
            "html_url": "https://github.com/pallets/flask/issues/801#issuecomment-145797996",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/801",
            "id": 145797996,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTc5Nzk5Ng==",
            "user": {
                "login": "adambyrtek",
                "id": 8214,
                "node_id": "MDQ6VXNlcjgyMTQ=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/8214?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/adambyrtek",
                "html_url": "https://github.com/adambyrtek",
                "followers_url": "https://api.github.com/users/adambyrtek/followers",
                "following_url": "https://api.github.com/users/adambyrtek/following{/other_user}",
                "gists_url": "https://api.github.com/users/adambyrtek/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/adambyrtek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/adambyrtek/subscriptions",
                "organizations_url": "https://api.github.com/users/adambyrtek/orgs",
                "repos_url": "https://api.github.com/users/adambyrtek/repos",
                "events_url": "https://api.github.com/users/adambyrtek/events{/privacy}",
                "received_events_url": "https://api.github.com/users/adambyrtek/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-10-06T09:34:08Z",
            "updated_at": "2015-10-06T09:34:08Z",
            "author_association": "CONTRIBUTOR",
            "body": "Sounds like a good plan.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/296454363",
            "html_url": "https://github.com/pallets/flask/issues/801#issuecomment-296454363",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/801",
            "id": 296454363,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5NjQ1NDM2Mw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-04-23T16:18:39Z",
            "updated_at": "2017-04-23T16:19:33Z",
            "author_association": "MEMBER",
            "body": "The original issue here is invalid, since the url should be relative. The absolute url is being appended as the query string. That shouldn't change (and would happen in Werkzeug if it should).\r\n\r\nIt does seem reasonable to want to be able to generate relative urls without setting `SERVER_NAME` during testing. I'll open a new issue with @sprin's plan."
        }
    ]
}