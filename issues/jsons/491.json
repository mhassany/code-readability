{
    "url": "https://api.github.com/repos/pallets/flask/issues/491",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/491/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/491/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/491/events",
    "html_url": "https://github.com/pallets/flask/issues/491",
    "id": 4111775,
    "node_id": "MDU6SXNzdWU0MTExNzc1",
    "number": 491,
    "title": "host_matching is in Werkzeug since 0.7 but not in Flask",
    "user": {
        "login": "constb",
        "id": 1006766,
        "node_id": "MDQ6VXNlcjEwMDY3NjY=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1006766?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/constb",
        "html_url": "https://github.com/constb",
        "followers_url": "https://api.github.com/users/constb/followers",
        "following_url": "https://api.github.com/users/constb/following{/other_user}",
        "gists_url": "https://api.github.com/users/constb/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/constb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/constb/subscriptions",
        "organizations_url": "https://api.github.com/users/constb/orgs",
        "repos_url": "https://api.github.com/users/constb/repos",
        "events_url": "https://api.github.com/users/constb/events{/privacy}",
        "received_events_url": "https://api.github.com/users/constb/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 37,
    "created_at": "2012-04-13T20:19:57Z",
    "updated_at": "2016-12-22T20:46:21Z",
    "closed_at": "2013-07-26T23:15:38Z",
    "author_association": "NONE",
    "body": "having 'example.com' and 'example.org' running on the same server with the same data backend I thought it would be simple to serve both from a single Flask app, especially since Werkzeug has host_matching but it isn't.\n\nI currently workaround this by 'injecting' hostname into urls with nginx's url rewrites but this is a bit too hackish, you know.\n\nI would like to have syntax like this:\n\n```\n@app.route(\"/\", host=\"example.org\")\ndef hello():\n    return \"Hello World!\"\n```\n",
    "comments_inline": {}
}