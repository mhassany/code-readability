{
    "url": "https://api.github.com/repos/pallets/flask/issues/1761",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1761/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1761/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1761/events",
    "html_url": "https://github.com/pallets/flask/issues/1761",
    "id": 144022445,
    "node_id": "MDU6SXNzdWUxNDQwMjI0NDU=",
    "number": 1761,
    "title": "static_file endpoint doesn't love null byte",
    "user": {
        "login": "Lothiraldan",
        "id": 243665,
        "node_id": "MDQ6VXNlcjI0MzY2NQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/243665?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Lothiraldan",
        "html_url": "https://github.com/Lothiraldan",
        "followers_url": "https://api.github.com/users/Lothiraldan/followers",
        "following_url": "https://api.github.com/users/Lothiraldan/following{/other_user}",
        "gists_url": "https://api.github.com/users/Lothiraldan/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Lothiraldan/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Lothiraldan/subscriptions",
        "organizations_url": "https://api.github.com/users/Lothiraldan/orgs",
        "repos_url": "https://api.github.com/users/Lothiraldan/repos",
        "events_url": "https://api.github.com/users/Lothiraldan/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Lothiraldan/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2016-03-28T16:43:48Z",
    "updated_at": "2016-04-02T19:15:00Z",
    "closed_at": "2016-04-02T19:15:00Z",
    "author_association": "NONE",
    "body": "Hello,\n\nwhile fuzzing my API, I think I've discovered a Flask issue. The static_file endpoint generate a 500 if the filename include a null byte (`\\x00`).\n\nHere is a minimal flask application:\n\n```\nfrom flask import Flask\napp = Flask(__name__)\n\n\nif __name__ == '__main__':\n    app.run(debug=True)\n```\n\nI've tried launching it with either python 2 (2.7.11) or python 3 interpreter (3.5.1) with flask 0.10.1, then make this request:\n\n```\nimport requests\nrequests.get('http://localhost:5000/static/\\x00')\n```\n\nI get a 500, here is the traceback for python2:\n\n```\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1836, in __call__\n    return self.wsgi_app(environ, start_response)\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1820, in wsgi_app\n    response = self.make_response(self.handle_exception(e))\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1403, in handle_exception\n    reraise(exc_type, exc_value, tb)\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1817, in wsgi_app\n    response = self.full_dispatch_request()\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1477, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1381, in handle_user_exception\n    reraise(exc_type, exc_value, tb)\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1475, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1461, in dispatch_request\n    return self.view_functions[rule.endpoint](**req.view_args)\n  File \"/usr/local/lib/python2.7/site-packages/flask/helpers.py\", line 823, in send_static_file\n    cache_timeout=cache_timeout)\n  File \"/usr/local/lib/python2.7/site-packages/flask/helpers.py\", line 613, in send_from_directory\n    if not os.path.isfile(filename):\n  File \"/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/lib/python2.7/genericpath.py\", line 37, in isfile\n    st = os.stat(path)\nTypeError: must be encoded string without NULL bytes, not unicode\n```\n\nAnd here is the traceback for python 3:\n\n```\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.5/site-packages/flask/app.py\", line 1836, in __call__\n    return self.wsgi_app(environ, start_response)\n  File \"/usr/local/lib/python3.5/site-packages/flask/app.py\", line 1820, in wsgi_app\n    response = self.make_response(self.handle_exception(e))\n  File \"/usr/local/lib/python3.5/site-packages/flask/app.py\", line 1403, in handle_exception\n    reraise(exc_type, exc_value, tb)\n  File \"/usr/local/lib/python3.5/site-packages/flask/_compat.py\", line 33, in reraise\n    raise value\n  File \"/usr/local/lib/python3.5/site-packages/flask/app.py\", line 1817, in wsgi_app\n    response = self.full_dispatch_request()\n  File \"/usr/local/lib/python3.5/site-packages/flask/app.py\", line 1477, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File \"/usr/local/lib/python3.5/site-packages/flask/app.py\", line 1381, in handle_user_exception\n    reraise(exc_type, exc_value, tb)\n  File \"/usr/local/lib/python3.5/site-packages/flask/_compat.py\", line 33, in reraise\n    raise value\n  File \"/usr/local/lib/python3.5/site-packages/flask/app.py\", line 1475, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"/usr/local/lib/python3.5/site-packages/flask/app.py\", line 1461, in dispatch_request\n    return self.view_functions[rule.endpoint](**req.view_args)\n  File \"/usr/local/lib/python3.5/site-packages/flask/helpers.py\", line 823, in send_static_file\n    cache_timeout=cache_timeout)\n  File \"/usr/local/lib/python3.5/site-packages/flask/helpers.py\", line 613, in send_from_directory\n    if not os.path.isfile(filename):\n  File \"/usr/local/Cellar/python3/3.5.1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/genericpath.py\", line 30, in isfile\n    st = os.stat(path)\nValueError: embedded null byte\n```\n\nThe error is not exactly the same but isfile doesn't seems to love null bytes.\n\nI've tried to fix it locally by adding this piece of code to detect null bytes in `send_static_file` (https://github.com/mitsuhiko/flask/blob/master/flask/helpers.py#L862):\n\n```\nif '\\x00' in filename:\n     raise RuntimeError(\"Null byte\")\n```\n\nIt seems to works with both python2 and python3, but I'm not sure what is the best response when the request include a null byte.\n\nHere is the output of pip freeze if necessary:\n\n```\nFlask==0.10.1\nitsdangerous==0.24\nJinja2==2.8\nMarkupSafe==0.23\nWerkzeug==0.11.5\n```\n\nI only tried on Mac OS X 10.11.4, I don't know if null byte are accepted in valid filename on other filesystems.\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/202480244",
            "html_url": "https://github.com/pallets/flask/issues/1761#issuecomment-202480244",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1761",
            "id": 202480244,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjQ4MDI0NA==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-03-28T16:46:27Z",
            "updated_at": "2016-03-28T16:47:20Z",
            "author_association": "MEMBER",
            "body": "I don't think NULs are acceptable in any paths since the functions dealing with paths expect NUL-terminated strings in the C APIs.\n\nIn any case, I'd raise a `NotFound` error instead of a `RuntimeError`.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/202493898",
            "html_url": "https://github.com/pallets/flask/issues/1761#issuecomment-202493898",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1761",
            "id": 202493898,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjQ5Mzg5OA==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-03-28T17:18:54Z",
            "updated_at": "2016-03-28T17:18:54Z",
            "author_association": "MEMBER",
            "body": "Nullbyte should raise a 400 Bad Request since they're invalid characters in filenames.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/202494283",
            "html_url": "https://github.com/pallets/flask/issues/1761#issuecomment-202494283",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1761",
            "id": 202494283,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjQ5NDI4Mw==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-03-28T17:20:30Z",
            "updated_at": "2016-03-28T17:20:30Z",
            "author_association": "MEMBER",
            "body": "hm.. are they disallowed in URLs? if yes 400 makes more sense indeed. otherwise i'd go for 404 since it's none of the client's business whether the file is loaded from the filesystem (where NUL is disallowed) or somewhere else (where it might be valid)\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/202495899",
            "html_url": "https://github.com/pallets/flask/issues/1761#issuecomment-202495899",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1761",
            "id": 202495899,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjQ5NTg5OQ==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-03-28T17:26:08Z",
            "updated_at": "2016-03-28T17:26:08Z",
            "author_association": "MEMBER",
            "body": "I guess 404 is also a solution.\n\nAnyway, this should be implemented by catching ValueError from the `os.path.isfile` call in the traceback. Not just checking for nullbytes, because there might be other rules for valid filenames on Windows.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/203357876",
            "html_url": "https://github.com/pallets/flask/issues/1761#issuecomment-203357876",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1761",
            "id": 203357876,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIwMzM1Nzg3Ng==",
            "user": {
                "login": "Lothiraldan",
                "id": 243665,
                "node_id": "MDQ6VXNlcjI0MzY2NQ==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/243665?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Lothiraldan",
                "html_url": "https://github.com/Lothiraldan",
                "followers_url": "https://api.github.com/users/Lothiraldan/followers",
                "following_url": "https://api.github.com/users/Lothiraldan/following{/other_user}",
                "gists_url": "https://api.github.com/users/Lothiraldan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Lothiraldan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Lothiraldan/subscriptions",
                "organizations_url": "https://api.github.com/users/Lothiraldan/orgs",
                "repos_url": "https://api.github.com/users/Lothiraldan/repos",
                "events_url": "https://api.github.com/users/Lothiraldan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Lothiraldan/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-03-30T10:00:04Z",
            "updated_at": "2016-03-30T10:00:04Z",
            "author_association": "NONE",
            "body": "I can make a pull-request but what is the best way to return a 400 inside flask/helpers? abort?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/203359437",
            "html_url": "https://github.com/pallets/flask/issues/1761#issuecomment-203359437",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1761",
            "id": 203359437,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIwMzM1OTQzNw==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-03-30T10:02:20Z",
            "updated_at": "2016-03-30T10:02:20Z",
            "author_association": "MEMBER",
            "body": "check existing code, but you could import `BadRequest` from `werkzeug.exceptions` and raise that\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/204784132",
            "html_url": "https://github.com/pallets/flask/issues/1761#issuecomment-204784132",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1761",
            "id": 204784132,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDc4NDEzMg==",
            "user": {
                "login": "chaosagent",
                "id": 2350134,
                "node_id": "MDQ6VXNlcjIzNTAxMzQ=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/2350134?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/chaosagent",
                "html_url": "https://github.com/chaosagent",
                "followers_url": "https://api.github.com/users/chaosagent/followers",
                "following_url": "https://api.github.com/users/chaosagent/following{/other_user}",
                "gists_url": "https://api.github.com/users/chaosagent/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/chaosagent/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chaosagent/subscriptions",
                "organizations_url": "https://api.github.com/users/chaosagent/orgs",
                "repos_url": "https://api.github.com/users/chaosagent/repos",
                "events_url": "https://api.github.com/users/chaosagent/events{/privacy}",
                "received_events_url": "https://api.github.com/users/chaosagent/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-04-02T19:12:36Z",
            "updated_at": "2016-04-02T19:12:36Z",
            "author_association": "CONTRIBUTOR",
            "body": "Fixed in above pull request; this issue should be closed.\n"
        }
    ]
}