{
    "url": "https://api.github.com/repos/pallets/flask/issues/2905",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2905/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2905/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2905/events",
    "html_url": "https://github.com/pallets/flask/issues/2905",
    "id": 359293554,
    "node_id": "MDU6SXNzdWUzNTkyOTM1NTQ=",
    "number": 2905,
    "title": "Mocking functions contained in blueprints",
    "user": {
        "login": "karlcow",
        "id": 505230,
        "node_id": "MDQ6VXNlcjUwNTIzMA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/505230?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/karlcow",
        "html_url": "https://github.com/karlcow",
        "followers_url": "https://api.github.com/users/karlcow/followers",
        "following_url": "https://api.github.com/users/karlcow/following{/other_user}",
        "gists_url": "https://api.github.com/users/karlcow/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/karlcow/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/karlcow/subscriptions",
        "organizations_url": "https://api.github.com/users/karlcow/orgs",
        "repos_url": "https://api.github.com/users/karlcow/repos",
        "events_url": "https://api.github.com/users/karlcow/events{/privacy}",
        "received_events_url": "https://api.github.com/users/karlcow/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-09-12T02:39:20Z",
    "updated_at": "2018-10-01T14:24:43Z",
    "closed_at": "2018-09-12T03:40:15Z",
    "author_association": "NONE",
    "body": "Both  in http://flask.pocoo.org/docs/1.0/testing/ and http://flask.pocoo.org/docs/1.0/blueprints/\r\nthere's not much said about Blueprint and unittesting.\r\n\r\nLet's say that the project is organized such as:\r\n\r\n```\r\nmyapp/\r\n  __init__.py\r\n  other_stuff.py\r\n  myblueprint/\r\n    __init__.py\r\n    utils.py\r\ntests/\r\n  __init__.py\r\n  some_unit_tests.py\r\n```\r\n\r\nIn `myapp/__init__.py`, we register the blueprint\r\n\r\n```python\r\nfrom myblueprint import myblueprint\r\napp.register_blueprint(myblueprint)\r\n```\r\n\r\nIn `utils.py`, we import `do_amazing` from `other_stuff.py`.\r\n\r\nThen for mocking `do_amazing`, we usually import it in the context of `utils.py`. This is done by something like:\r\n\r\n```python\r\nwith patch('myapp.myblueprint.utils.do_amazing') as mock_amazing:\r\n    # More stuff and test.\r\n```\r\n\r\nWhen there is no blueprint, this is working well. \r\nAs soon as myblueprint is a Blueprint object we end up having an error as soon as we hit the `patch` context.\r\n\r\nAttributeError: 'Blueprint' object has no attribute 'utils'\r\n\r\nIf we print in the test before the patch.\r\n```python\r\n        print 'myapp', myapp\r\n        print 'myapp.myblueprint', myapp.myblueprint\r\n        print 'myapp.myblueprint.utils', myapp.myblueprint.utils\r\n```\r\n\r\nWe get:\r\n\r\n\r\n```\r\nmyapp <module 'myapp' from '/Users/well/code/project/myapp/__init__.pyc'>\r\nmyapp.myblueprint <flask.blueprints.Blueprint object at 0x108847450>\r\nERROR\r\n```\r\n\r\nI still wonder if\r\n*  it is the ambiguity of using the same name for folder and blueprint keywords\r\n* it is a limitation of the Mock library when patching.\r\n* it is a limitation of Blueprints themselves.\r\n\r\nBut it would be probably good to have something in the documentation under [Blueprints](http://flask.pocoo.org/docs/1.0/blueprints/) or [Testing](http://flask.pocoo.org/docs/1.0/testing/) addressing either the limitations or a minimal example of a test scenario for Blueprint cases.\r\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/420501693",
            "html_url": "https://github.com/pallets/flask/issues/2905#issuecomment-420501693",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2905",
            "id": 420501693,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDUwMTY5Mw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-09-12T03:40:15Z",
            "updated_at": "2018-09-12T03:40:15Z",
            "author_association": "MEMBER",
            "body": "Blueprints do absolutely nothing special in this (or most) regards. They're just regular Python objects in regular Python modules. There are no limitations, and testing them looks no different than testing anything else. The Flask tutorial does go through blueprints as well as testing. This appears to be an issue with your code, not Flask's code.\r\n\r\nPlease use Stack Overflow for questions about your own code. This tracker is for issues related to the project itself. Be sure to include a [minimal, complete, and verifiable example](https://stackoverflow.com/help/mcve)."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/425927071",
            "html_url": "https://github.com/pallets/flask/issues/2905#issuecomment-425927071",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2905",
            "id": 425927071,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTkyNzA3MQ==",
            "user": {
                "login": "openbrian",
                "id": 2524550,
                "node_id": "MDQ6VXNlcjI1MjQ1NTA=",
                "avatar_url": "https://avatars2.githubusercontent.com/u/2524550?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/openbrian",
                "html_url": "https://github.com/openbrian",
                "followers_url": "https://api.github.com/users/openbrian/followers",
                "following_url": "https://api.github.com/users/openbrian/following{/other_user}",
                "gists_url": "https://api.github.com/users/openbrian/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/openbrian/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/openbrian/subscriptions",
                "organizations_url": "https://api.github.com/users/openbrian/orgs",
                "repos_url": "https://api.github.com/users/openbrian/repos",
                "events_url": "https://api.github.com/users/openbrian/events{/privacy}",
                "received_events_url": "https://api.github.com/users/openbrian/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-10-01T14:24:43Z",
            "updated_at": "2018-10-01T14:24:43Z",
            "author_association": "NONE",
            "body": "@karlcow Had the same issue.  I renamed the blueprint to get around this."
        }
    ]
}