{
    "url": "https://api.github.com/repos/pallets/flask/issues/3008",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/3008/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/3008/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/3008/events",
    "html_url": "https://github.com/pallets/flask/issues/3008",
    "id": 385623949,
    "node_id": "MDU6SXNzdWUzODU2MjM5NDk=",
    "number": 3008,
    "title": "Unprintable characters found in log file",
    "user": {
        "login": "chyun",
        "id": 5368840,
        "node_id": "MDQ6VXNlcjUzNjg4NDA=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/5368840?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chyun",
        "html_url": "https://github.com/chyun",
        "followers_url": "https://api.github.com/users/chyun/followers",
        "following_url": "https://api.github.com/users/chyun/following{/other_user}",
        "gists_url": "https://api.github.com/users/chyun/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/chyun/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/chyun/subscriptions",
        "organizations_url": "https://api.github.com/users/chyun/orgs",
        "repos_url": "https://api.github.com/users/chyun/repos",
        "events_url": "https://api.github.com/users/chyun/events{/privacy}",
        "received_events_url": "https://api.github.com/users/chyun/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-11-29T08:36:46Z",
    "updated_at": "2018-11-29T13:46:23Z",
    "closed_at": "2018-11-29T13:46:23Z",
    "author_association": "NONE",
    "body": "I found unprintable characters in log file, when flask got requests.\r\n\r\n2018-11-29 16:24:44,471 - INFO - _internal.py - _log - 88 - 192.168.241.129 - - [29/Nov/2018 16:24:44] \"^[[37mPOST /collection_act HTTP/1.1^[[0m\" 200 -$\r\n2018-11-29 16:24:44,481 - INFO - _internal.py - _log - 88 - 192.168.64.54 - - [29/Nov/2018 16:24:44] \"^[[37mPOST /classify HTTP/1.1^[[0m\" 200 -$\r\n2018-11-29 16:24:44,674 - INFO - _internal.py - _log - 88 - 100.116.37.130 - - [29/Nov/2018 16:24:44] \"^[[37mGET / HTTP/1.0^[[0m\" 200 -$\r\n2018-11-29 16:24:45,549 - INFO - _internal.py - _log - 88 - 100.116.38.1 - - [29/Nov/2018 16:24:45] \"^[[37mGET / HTTP/1.0^[[0m\" 200 -$\r\n\r\nThe strange  \"^[[37m\" between \" and POST.\r\n\r\n\r\n### Environment\r\n\r\n* Python version: 2.7\r\n* Flask version: 1.0.1\r\n* Werkzeug version:0.14.1\r\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/442751439",
            "html_url": "https://github.com/pallets/flask/issues/3008#issuecomment-442751439",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3008",
            "id": 442751439,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Mjc1MTQzOQ==",
            "user": {
                "login": "frostming",
                "id": 16336606,
                "node_id": "MDQ6VXNlcjE2MzM2NjA2",
                "avatar_url": "https://avatars3.githubusercontent.com/u/16336606?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/frostming",
                "html_url": "https://github.com/frostming",
                "followers_url": "https://api.github.com/users/frostming/followers",
                "following_url": "https://api.github.com/users/frostming/following{/other_user}",
                "gists_url": "https://api.github.com/users/frostming/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/frostming/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/frostming/subscriptions",
                "organizations_url": "https://api.github.com/users/frostming/orgs",
                "repos_url": "https://api.github.com/users/frostming/repos",
                "events_url": "https://api.github.com/users/frostming/events{/privacy}",
                "received_events_url": "https://api.github.com/users/frostming/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-11-29T08:42:51Z",
            "updated_at": "2018-11-29T08:42:51Z",
            "author_association": "NONE",
            "body": "Those are terminal control characters, which change the colors.\r\n\r\nWhat is your logging setup by the way?"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/442754661",
            "html_url": "https://github.com/pallets/flask/issues/3008#issuecomment-442754661",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3008",
            "id": 442754661,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Mjc1NDY2MQ==",
            "user": {
                "login": "chyun",
                "id": 5368840,
                "node_id": "MDQ6VXNlcjUzNjg4NDA=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/5368840?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/chyun",
                "html_url": "https://github.com/chyun",
                "followers_url": "https://api.github.com/users/chyun/followers",
                "following_url": "https://api.github.com/users/chyun/following{/other_user}",
                "gists_url": "https://api.github.com/users/chyun/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/chyun/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chyun/subscriptions",
                "organizations_url": "https://api.github.com/users/chyun/orgs",
                "repos_url": "https://api.github.com/users/chyun/repos",
                "events_url": "https://api.github.com/users/chyun/events{/privacy}",
                "received_events_url": "https://api.github.com/users/chyun/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-11-29T08:54:20Z",
            "updated_at": "2018-11-29T08:54:20Z",
            "author_association": "NONE",
            "body": "I did not do anything.\r\n\r\n```\r\n# --*-- coding:utf-8 --*--\r\nimport os\r\nimport logging\r\nimport logging.handlers\r\nimport sys\r\nfrom logging import raiseExceptions\r\nfrom logging import Logger\r\n\r\nLOG_PATH = 'logs/'\r\n\r\n\r\nclass AppLogger(Logger):\r\n    '''\u81ea\u5b9a\u4e49logger\r\n    \u5982\u679chandler\u540d\u79f0\u4e3aconsole\u8868\u793a\u5728\u7ec8\u7aef\u6253\u5370\u6240\u6709\u5927\u4e8e\u7b49\u4e8e\u8bbe\u7f6e\u7ea7\u522b\u7684\u65e5\u5fd7\r\n    \u5176\u4ed6handler\u5219\u53ea\u8bb0\u5f55\u7b49\u4e8e\u8bbe\u7f6e\u7ea7\u522b\u7684\u65e5\u5fd7'''\r\n\r\n    def __init__(self, name, level=logging.NOTSET):\r\n        super(AppLogger, self).__init__(name, level)\r\n\r\n    def callHandlers(self, record):\r\n        \"\"\"\r\n        Pass a record to all relevant handlers.\r\n\r\n        Loop through all handlers for this logger and its parents in the\r\n        logger hierarchy. If no handler was found, output a one-off error\r\n        message to sys.stderr. Stop searching up the hierarchy whenever a\r\n        logger with the \"propagate\" attribute set to zero is found - that\r\n        will be the last logger whose handlers are called.\r\n        \"\"\"\r\n        c = self\r\n        found = 0\r\n        while c:\r\n            for hdlr in c.handlers:\r\n                found = found + 1\r\n                if hdlr.name == 'console':\r\n                    if record.levelno >= hdlr.level:\r\n                        hdlr.handle(record)\r\n                else:\r\n                    if record.levelno == hdlr.level:\r\n                        hdlr.handle(record)\r\n            if not c.propagate:\r\n                c = None  # break out\r\n            else:\r\n                c = c.parent\r\n        if (found == 0) and raiseExceptions and not self.manager.emittedNoHandlerWarning:  # noqa\r\n            sys.stderr.write(\"No handlers could be found for logger\"\r\n                            \" \\\"%s\\\"\\n\" % self.name)\r\n            self.manager.emittedNoHandlerWarning = 1\r\n\r\n\r\ndef get_logger(logfile_name=__name__, log_path=LOG_PATH):\r\n    '''save log to diffrent file by deffirent log level into the log path\r\n    and print all log in console'''\r\n    logging.setLoggerClass(AppLogger)\r\n    formatter = logging.Formatter(\r\n        '%(asctime)s - %(levelname)s - %(filename)s - %(funcName)s - %(lineno)s - %(message)s')\r\n\r\n    log_files = {\r\n        logging.DEBUG: os.path.join(log_path, logfile_name + '-debug.log'),\r\n        logging.INFO: os.path.join(log_path, logfile_name + '.log'),\r\n        logging.WARNING: os.path.join(log_path, logfile_name + '-warning.log'),\r\n        logging.ERROR: os.path.join(log_path, logfile_name + '-error.log'),\r\n        logging.CRITICAL:\r\n        os.path.join(log_path, logfile_name + '-critical.log')\r\n    }\r\n    # \u548cflask\u9ed8\u8ba4\u4f7f\u7528\u540c\u4e00\u4e2alogger\r\n    logger = logging.getLogger('werkzeug')\r\n    logger.setLevel(logging.DEBUG)\r\n    for log_level, log_file in log_files.items():\r\n        file_handler = logging.handlers.TimedRotatingFileHandler(log_file,\r\n                                                                'midnight')\r\n        file_handler.setLevel(log_level)\r\n        file_handler.setFormatter(formatter)\r\n        logger.addHandler(file_handler)\r\n\r\n    console_handler = logging.StreamHandler()\r\n    console_handler.name = \"console\"\r\n    console_handler.setLevel(logging.DEBUG)\r\n    console_handler.setFormatter(formatter)\r\n    logger.addHandler(console_handler)\r\n    return logger\r\n\r\n\r\nlogger = get_logger('flask')\r\n```"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/442838782",
            "html_url": "https://github.com/pallets/flask/issues/3008#issuecomment-442838782",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3008",
            "id": 442838782,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjgzODc4Mg==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-11-29T13:46:23Z",
            "updated_at": "2018-11-29T13:46:23Z",
            "author_association": "MEMBER",
            "body": "The logs you're showing come from Werkzeug. If `termcolor` is installed, Werkzeug outputs colored logs."
        }
    ]
}