{
    "url": "https://api.github.com/repos/pallets/flask/issues/1457",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1457/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1457/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1457/events",
    "html_url": "https://github.com/pallets/flask/issues/1457",
    "id": 75327190,
    "node_id": "MDU6SXNzdWU3NTMyNzE5MA==",
    "number": 1457,
    "title": "Clarify what app.config.from_object accepts",
    "user": {
        "login": "tony",
        "id": 26336,
        "node_id": "MDQ6VXNlcjI2MzM2",
        "avatar_url": "https://avatars0.githubusercontent.com/u/26336?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tony",
        "html_url": "https://github.com/tony",
        "followers_url": "https://api.github.com/users/tony/followers",
        "following_url": "https://api.github.com/users/tony/following{/other_user}",
        "gists_url": "https://api.github.com/users/tony/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tony/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tony/subscriptions",
        "organizations_url": "https://api.github.com/users/tony/orgs",
        "repos_url": "https://api.github.com/users/tony/repos",
        "events_url": "https://api.github.com/users/tony/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tony/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 32876,
            "node_id": "MDU6TGFiZWwzMjg3Ng==",
            "url": "https://api.github.com/repos/pallets/flask/labels/docs",
            "name": "docs",
            "color": "0e8a16",
            "default": false,
            "description": null
        }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2015-05-11T19:15:17Z",
    "updated_at": "2016-06-02T22:55:17Z",
    "closed_at": "2016-06-02T22:55:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\n$ python\nPython 2.7.9 (default, Apr 29 2015, 18:34:06) \n[GCC 4.9.2] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import flask\n>>> conf = {\"DEBUG\": True}\n>>> app = flask.Flask(__name__)                                                \n>>> app.config.from_object(conf)\n>>> app.debug\nFalse\n```\n\nExpected behavior would be to accept to setting in the flask application object.\n\n```\n>>> flask.__version__\n'0.10.1'\n```\n\n```\n>>> conf = {\"SECRET_KEY\": \"honey\"}                                                                                                                                      \n>>> app = flask.Flask(__name__)                                                                                                                                         \n>>> app.config.from_object(conf)                                                                                                                                        \n>>> app.secret_key\n```\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/101022921",
            "html_url": "https://github.com/pallets/flask/issues/1457#issuecomment-101022921",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1457",
            "id": 101022921,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTAyMjkyMQ==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-05-11T19:19:58Z",
            "updated_at": "2015-05-11T19:19:58Z",
            "author_association": "MEMBER",
            "body": "from_object doesn't read from dictionary keys, instead it traverses `dir(obj)`. This is useful if you pass a module object with global vars in it.\n\nThis is something that should be clarified in the docs though.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/101023485",
            "html_url": "https://github.com/pallets/flask/issues/1457#issuecomment-101023485",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1457",
            "id": 101023485,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTAyMzQ4NQ==",
            "user": {
                "login": "tony",
                "id": 26336,
                "node_id": "MDQ6VXNlcjI2MzM2",
                "avatar_url": "https://avatars0.githubusercontent.com/u/26336?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/tony",
                "html_url": "https://github.com/tony",
                "followers_url": "https://api.github.com/users/tony/followers",
                "following_url": "https://api.github.com/users/tony/following{/other_user}",
                "gists_url": "https://api.github.com/users/tony/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/tony/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tony/subscriptions",
                "organizations_url": "https://api.github.com/users/tony/orgs",
                "repos_url": "https://api.github.com/users/tony/repos",
                "events_url": "https://api.github.com/users/tony/events{/privacy}",
                "received_events_url": "https://api.github.com/users/tony/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-05-11T19:21:30Z",
            "updated_at": "2015-05-11T19:22:01Z",
            "author_association": "CONTRIBUTOR",
            "body": "@untitaker :  \n\nThanks for getting back so quickly\n\nI happen to be working inside of a larger example that should be turning the dict into an attribute dict. Let me look closer to verify that functionality is working as expected.\n\nedited\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/101023800",
            "html_url": "https://github.com/pallets/flask/issues/1457#issuecomment-101023800",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1457",
            "id": 101023800,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTAyMzgwMA==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-05-11T19:22:23Z",
            "updated_at": "2015-05-11T19:22:23Z",
            "author_association": "MEMBER",
            "body": "Could you post a link to that example? AFAIK from_object was never supposed to work that way.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/101024240",
            "html_url": "https://github.com/pallets/flask/issues/1457#issuecomment-101024240",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1457",
            "id": 101024240,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTAyNDI0MA==",
            "user": {
                "login": "tony",
                "id": 26336,
                "node_id": "MDQ6VXNlcjI2MzM2",
                "avatar_url": "https://avatars0.githubusercontent.com/u/26336?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/tony",
                "html_url": "https://github.com/tony",
                "followers_url": "https://api.github.com/users/tony/followers",
                "following_url": "https://api.github.com/users/tony/following{/other_user}",
                "gists_url": "https://api.github.com/users/tony/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/tony/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tony/subscriptions",
                "organizations_url": "https://api.github.com/users/tony/orgs",
                "repos_url": "https://api.github.com/users/tony/repos",
                "events_url": "https://api.github.com/users/tony/events{/privacy}",
                "received_events_url": "https://api.github.com/users/tony/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-05-11T19:24:56Z",
            "updated_at": "2015-05-11T19:24:56Z",
            "author_association": "CONTRIBUTOR",
            "body": "Yeah, it may be a bigger oversight on part. Checking it.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/101026102",
            "html_url": "https://github.com/pallets/flask/issues/1457#issuecomment-101026102",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1457",
            "id": 101026102,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTAyNjEwMg==",
            "user": {
                "login": "tony",
                "id": 26336,
                "node_id": "MDQ6VXNlcjI2MzM2",
                "avatar_url": "https://avatars0.githubusercontent.com/u/26336?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/tony",
                "html_url": "https://github.com/tony",
                "followers_url": "https://api.github.com/users/tony/followers",
                "following_url": "https://api.github.com/users/tony/following{/other_user}",
                "gists_url": "https://api.github.com/users/tony/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/tony/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tony/subscriptions",
                "organizations_url": "https://api.github.com/users/tony/orgs",
                "repos_url": "https://api.github.com/users/tony/repos",
                "events_url": "https://api.github.com/users/tony/events{/privacy}",
                "received_events_url": "https://api.github.com/users/tony/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-05-11T19:31:56Z",
            "updated_at": "2015-05-11T19:32:19Z",
            "author_association": "CONTRIBUTOR",
            "body": "What I was doing is totally wrong then.\n\nhttps://github.com/tony/cookiecutter-flask-pythonic/blob/master/%7B%7Bcookiecutter.repo_name%7D%7D/%7B%7Bcookiecutter.repo_name%7D%7D/%7B%7Bcookiecutter.repo_name%7D%7D.py#L32\n\n`app.config.from_object(dict(self.config))`.\n\nIf I wanted to go that approach, I think my only option to write my own config parser.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/101026557",
            "html_url": "https://github.com/pallets/flask/issues/1457#issuecomment-101026557",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1457",
            "id": 101026557,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTAyNjU1Nw==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-05-11T19:34:28Z",
            "updated_at": "2015-05-11T19:34:28Z",
            "author_association": "MEMBER",
            "body": "According to the code above, `self.config` already has the wished attributes? So calling `dict` on it is the problem, nothing else.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/101026809",
            "html_url": "https://github.com/pallets/flask/issues/1457#issuecomment-101026809",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1457",
            "id": 101026809,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTAyNjgwOQ==",
            "user": {
                "login": "tony",
                "id": 26336,
                "node_id": "MDQ6VXNlcjI2MzM2",
                "avatar_url": "https://avatars0.githubusercontent.com/u/26336?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/tony",
                "html_url": "https://github.com/tony",
                "followers_url": "https://api.github.com/users/tony/followers",
                "following_url": "https://api.github.com/users/tony/following{/other_user}",
                "gists_url": "https://api.github.com/users/tony/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/tony/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tony/subscriptions",
                "organizations_url": "https://api.github.com/users/tony/orgs",
                "repos_url": "https://api.github.com/users/tony/repos",
                "events_url": "https://api.github.com/users/tony/events{/privacy}",
                "received_events_url": "https://api.github.com/users/tony/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-05-11T19:35:49Z",
            "updated_at": "2015-05-11T19:35:49Z",
            "author_association": "CONTRIBUTOR",
            "body": "`self.config` is this:\n\n``` python\n\nclass AttributeDict(dict):\n\n    def __getattr__(self, name):\n        if not name in self:\n            raise AttributeError(\"'{}' object has no attribute '{}'\".format(\n                self.__class__,\n                name,\n            ))\n\n        return self[name]\n```\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/101027234",
            "html_url": "https://github.com/pallets/flask/issues/1457#issuecomment-101027234",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1457",
            "id": 101027234,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTAyNzIzNA==",
            "user": {
                "login": "tony",
                "id": 26336,
                "node_id": "MDQ6VXNlcjI2MzM2",
                "avatar_url": "https://avatars0.githubusercontent.com/u/26336?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/tony",
                "html_url": "https://github.com/tony",
                "followers_url": "https://api.github.com/users/tony/followers",
                "following_url": "https://api.github.com/users/tony/following{/other_user}",
                "gists_url": "https://api.github.com/users/tony/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/tony/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tony/subscriptions",
                "organizations_url": "https://api.github.com/users/tony/orgs",
                "repos_url": "https://api.github.com/users/tony/repos",
                "events_url": "https://api.github.com/users/tony/events{/privacy}",
                "received_events_url": "https://api.github.com/users/tony/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-05-11T19:38:11Z",
            "updated_at": "2015-05-11T19:38:11Z",
            "author_association": "CONTRIBUTOR",
            "body": "Removed the `dict` part, still not getting anything because of `dir`'s results.\n\nPerhaps if I gave the `AttributeDict` a `__dir__` dunder?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/101027582",
            "html_url": "https://github.com/pallets/flask/issues/1457#issuecomment-101027582",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1457",
            "id": 101027582,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTAyNzU4Mg==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-05-11T19:39:59Z",
            "updated_at": "2015-05-11T19:39:59Z",
            "author_association": "MEMBER",
            "body": "You could also just set your attributes on your AttributeDict instance instead of defining `__getattr__`, provided your config is readonly.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/223391835",
            "html_url": "https://github.com/pallets/flask/issues/1457#issuecomment-223391835",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1457",
            "id": 223391835,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzM5MTgzNQ==",
            "user": {
                "login": "jsonbrazeal",
                "id": 3199635,
                "node_id": "MDQ6VXNlcjMxOTk2MzU=",
                "avatar_url": "https://avatars0.githubusercontent.com/u/3199635?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jsonbrazeal",
                "html_url": "https://github.com/jsonbrazeal",
                "followers_url": "https://api.github.com/users/jsonbrazeal/followers",
                "following_url": "https://api.github.com/users/jsonbrazeal/following{/other_user}",
                "gists_url": "https://api.github.com/users/jsonbrazeal/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jsonbrazeal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jsonbrazeal/subscriptions",
                "organizations_url": "https://api.github.com/users/jsonbrazeal/orgs",
                "repos_url": "https://api.github.com/users/jsonbrazeal/repos",
                "events_url": "https://api.github.com/users/jsonbrazeal/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jsonbrazeal/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-06-02T19:10:16Z",
            "updated_at": "2016-06-02T19:10:16Z",
            "author_association": "CONTRIBUTOR",
            "body": "looking at this for #pycon2016 sprints\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/223446716",
            "html_url": "https://github.com/pallets/flask/issues/1457#issuecomment-223446716",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1457",
            "id": 223446716,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzQ0NjcxNg==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-06-02T22:55:17Z",
            "updated_at": "2016-06-02T22:55:17Z",
            "author_association": "MEMBER",
            "body": "#1870\n"
        }
    ]
}