{
    "url": "https://api.github.com/repos/pallets/flask/issues/2171",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2171/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2171/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2171/events",
    "html_url": "https://github.com/pallets/flask/issues/2171",
    "id": 205445184,
    "node_id": "MDU6SXNzdWUyMDU0NDUxODQ=",
    "number": 2171,
    "title": "The default static folder is being ignored if the number of params to the route are 3",
    "user": {
        "login": "amehta",
        "id": 126176,
        "node_id": "MDQ6VXNlcjEyNjE3Ng==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/126176?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amehta",
        "html_url": "https://github.com/amehta",
        "followers_url": "https://api.github.com/users/amehta/followers",
        "following_url": "https://api.github.com/users/amehta/following{/other_user}",
        "gists_url": "https://api.github.com/users/amehta/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/amehta/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/amehta/subscriptions",
        "organizations_url": "https://api.github.com/users/amehta/orgs",
        "repos_url": "https://api.github.com/users/amehta/repos",
        "events_url": "https://api.github.com/users/amehta/events{/privacy}",
        "received_events_url": "https://api.github.com/users/amehta/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-02-05T18:55:22Z",
    "updated_at": "2017-02-05T21:05:24Z",
    "closed_at": "2017-02-05T19:25:07Z",
    "author_association": "NONE",
    "body": "~~~python\r\n@app.route('/<date>/<username>/<path:filename>')\r\n@login_required\r\n@nocache\r\ndef custom_static(filename, username, date):\r\n    path = os.path.join(app.config['CUSTOM_STATIC_PATH'],\"username\", username, date)\r\n    print \"Path: {}\".format(path)\r\n    if os.path.isfile(os.path.join(path, filename)):\r\n        return send_from_directory(path, filename)\r\n    else:\r\n        print \"File does not exist: {}\".format(filename](url))\r\n        return\r\n~~~\r\n\r\n~~~\r\nPath: ./DataWebserver/username/js/static\r\nFile does not exist: bootstrap-datepicker.min.js\r\n~~~",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/277542326",
            "html_url": "https://github.com/pallets/flask/issues/2171#issuecomment-277542326",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2171",
            "id": 277542326,
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzU0MjMyNg==",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-02-05T19:25:06Z",
            "updated_at": "2017-02-05T19:25:06Z",
            "author_association": "MEMBER",
            "body": "Please provide a minimal reproducible example, not a random piece of code from your software."
        }
    ]
}