{
    "url": "https://api.github.com/repos/pallets/flask/issues/671",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/671/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/671/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/671/events",
    "html_url": "https://github.com/pallets/flask/issues/671",
    "id": 10323260,
    "node_id": "MDU6SXNzdWUxMDMyMzI2MA==",
    "number": 671,
    "title": "`redirect` calls are not caught by `handle_http_exception` while RequestRedirect is.",
    "user": {
        "login": "sergedomk",
        "id": 684386,
        "node_id": "MDQ6VXNlcjY4NDM4Ng==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/684386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sergedomk",
        "html_url": "https://github.com/sergedomk",
        "followers_url": "https://api.github.com/users/sergedomk/followers",
        "following_url": "https://api.github.com/users/sergedomk/following{/other_user}",
        "gists_url": "https://api.github.com/users/sergedomk/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sergedomk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sergedomk/subscriptions",
        "organizations_url": "https://api.github.com/users/sergedomk/orgs",
        "repos_url": "https://api.github.com/users/sergedomk/repos",
        "events_url": "https://api.github.com/users/sergedomk/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sergedomk/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2013-01-25T19:33:11Z",
    "updated_at": "2017-06-01T05:45:41Z",
    "closed_at": "2017-06-01T05:45:41Z",
    "author_association": "NONE",
    "body": "I'm using Flask to implement an app that returns JSON for most requests including error responses for bad requests, page not found, etc.\n\nTo do this I wrapped the default `handle_http_exception` method of the app similar to how it was handled in the Flask_exceptional module https://github.com/jzempel/flask-exceptional/blob/master/flask_exceptional.py so that I could return the Response as JSON rather than the default generated HTML.\n\nWhat I found was that any views that used the Flask `redirect` function rendered the redirect as HTML. However, if you add a route which ends with a slash, Werkzeug's routing code will automatically fire off a `RequestRedirect` which would get caught by the `handle_http_exception` and rendered as JSON.\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/12745469",
            "html_url": "https://github.com/pallets/flask/issues/671#issuecomment-12745469",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/671",
            "id": 12745469,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzQ1NDY5",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-01-27T00:50:17Z",
            "updated_at": "2013-01-27T00:50:17Z",
            "author_association": "MEMBER",
            "body": "Do you have a test case for this>\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/12746738",
            "html_url": "https://github.com/pallets/flask/issues/671#issuecomment-12746738",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/671",
            "id": 12746738,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzQ2NzM4",
            "user": {
                "login": "sergedomk",
                "id": 684386,
                "node_id": "MDQ6VXNlcjY4NDM4Ng==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/684386?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/sergedomk",
                "html_url": "https://github.com/sergedomk",
                "followers_url": "https://api.github.com/users/sergedomk/followers",
                "following_url": "https://api.github.com/users/sergedomk/following{/other_user}",
                "gists_url": "https://api.github.com/users/sergedomk/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/sergedomk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sergedomk/subscriptions",
                "organizations_url": "https://api.github.com/users/sergedomk/orgs",
                "repos_url": "https://api.github.com/users/sergedomk/repos",
                "events_url": "https://api.github.com/users/sergedomk/events{/privacy}",
                "received_events_url": "https://api.github.com/users/sergedomk/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-01-27T02:53:06Z",
            "updated_at": "2013-01-27T02:53:06Z",
            "author_association": "NONE",
            "body": "Here is a test app I just threw together to illustrate the problem:\n\n```\nfrom functools import wraps\nfrom flask import Flask, redirect, jsonify\napp = Flask(__name__)\n\ndef get_http_exception_handler(app):\n    \"\"\"Overrides the default http exception handler to return JSON.\"\"\"\n    handle_http_exception = app.handle_http_exception\n    @wraps(handle_http_exception)\n    def ret_val(exception):\n        exc = handle_http_exception(exception)\n\n        # Returning directly as below results in missing Location header\n        # on 301 errors which is useful for this test as it will fail to\n        # redirect.\n\n        return jsonify({'code':exc.code, 'message':exc.message}), exc.code\n    return ret_val\n\n# Override the HTTP exception handler.\napp.handle_http_exception = get_http_exception_handler(app)\n\n# This route is here as a route to get redirected to on a successful\n# redirect.\n\n@app.route(\"/\")\ndef hello():\n    return \"Hello World!\"\n\n# The following route will do a redirect to / if you go to\n# http://localhost/redirect/ but if you go to\n# http://localhost/redirect you will hit the exception handler\n# and get a JSON message instead as it tries to redirect you\n# to http://localhost/redirect/.\n\n@app.route(\"/redirect/\")\ndef test_redirect():\n    return redirect(\"/\")\n\nif __name__ == \"__main__\":\n    app.run()\n```\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/305394901",
            "html_url": "https://github.com/pallets/flask/issues/671#issuecomment-305394901",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/671",
            "id": 305394901,
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTM5NDkwMQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2017-06-01T05:45:41Z",
            "updated_at": "2017-06-01T05:45:41Z",
            "author_association": "MEMBER",
            "body": "Not much we can do here. You need to make your handler smarter, so it copies the headers too, if that's what you need. I'd just add a handler for `RequestRedirect` that passes it through, and add another handler for all other `HTTPExceptions` instead of trying to override `handle_http_exception`.\r\n\r\n~~~python\r\n@app.errorhandler(RequestRedirect)\r\ndef handle_redirect(e):\r\n    return e\r\n\r\n@app.errorhandler(HTTPException)\r\ndef handle_error(e):\r\n    return 'bad', 500\r\n~~~"
        }
    ]
}