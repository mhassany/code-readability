{
    "url": "https://api.github.com/repos/pallets/flask/issues/3130",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/3130/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/3130/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/3130/events",
    "html_url": "https://github.com/pallets/flask/issues/3130",
    "id": 425492140,
    "node_id": "MDU6SXNzdWU0MjU0OTIxNDA=",
    "number": 3130,
    "title": "Cannot differentiate between a regular text input field and a non-uploaded file",
    "user": {
        "login": "senabIsShort",
        "id": 47316013,
        "node_id": "MDQ6VXNlcjQ3MzE2MDEz",
        "avatar_url": "https://avatars2.githubusercontent.com/u/47316013?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/senabIsShort",
        "html_url": "https://github.com/senabIsShort",
        "followers_url": "https://api.github.com/users/senabIsShort/followers",
        "following_url": "https://api.github.com/users/senabIsShort/following{/other_user}",
        "gists_url": "https://api.github.com/users/senabIsShort/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/senabIsShort/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/senabIsShort/subscriptions",
        "organizations_url": "https://api.github.com/users/senabIsShort/orgs",
        "repos_url": "https://api.github.com/users/senabIsShort/repos",
        "events_url": "https://api.github.com/users/senabIsShort/events{/privacy}",
        "received_events_url": "https://api.github.com/users/senabIsShort/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2019-03-26T15:34:56Z",
    "updated_at": "2019-04-01T20:49:21Z",
    "closed_at": "2019-03-26T16:35:57Z",
    "author_association": "NONE",
    "body": "Issue came up while trying to send an empty file (and filename) to an HTTPbin form.\r\nUsing Flask you're unable to differentiate between the content of a text field in a form and a non-uploaded file from the `request` object\r\n\r\n### Example test\r\nUsing flask alone;\r\nUser @moy helped with this and prompted me to post this bug report\r\n```python\r\nfrom flask import Flask, flash, request, redirect, url_for, escape\r\n\r\napp = Flask(__name__)\r\n\r\n@app.route('/', methods=['GET', 'POST'])\r\ndef upload_file():\r\n    if request.method == 'POST':\r\n        return '<pre>{}</pre>'.format(escape(str(request.form) + '\\n' + str(request.files)))\r\n    return '''\r\n    <!doctype html>\r\n    <title>Upload new Files</title>\r\n    <h1>Upload new Files</h1>\r\n    <form method=post enctype=multipart/form-data>\r\n      <input name=\"normal_field\" value=\"field_value\" />\r\n      <input type=file name=file>\r\n      <input type=file name=secondfile>\r\n      <input type=submit value=Upload>\r\n    </form>\r\n    '''\r\n```\r\n### Expected Behavior\r\nSubmitting with only the first file field set in the browser,\r\none would expect to find :\r\n- the content of both file fields in the same object ;\r\n- the content of normal text input fields in a separate objects ;\r\n\r\nSo something along the lines of\r\n```\r\nImmutableMultiDict([('normal_field', 'field_value')])\r\nImmutableMultiDict([('file', <FileStorage: 'tmp-rg1.xpi' ('application/x-xpinstall')>), \r\n                    ('secondfile', <FileStorage: '' ('...')>)\r\n                   ])\r\n```\r\n\r\n### Actual Behavior\r\nSubmitting with only one file (the first field) set in the browser gives:\r\n\r\n```\r\nImmutableMultiDict([('normal_field', 'field_value'), ('secondfile', '')])\r\nImmutableMultiDict([('file', <FileStorage: 'tmp-rg1.xpi' ('application/x-xpinstall')>)])\r\n```\r\n\r\nThe first is the form's field, the second the actual files uploaded. I see no way to distinguish between an empty text field and a non-uploaded file from the `request` object.\r\nIs this behavior intended ?\r\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/476735384",
            "html_url": "https://github.com/pallets/flask/issues/3130#issuecomment-476735384",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3130",
            "id": 476735384,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjczNTM4NA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-03-26T16:35:57Z",
            "updated_at": "2019-03-28T14:16:40Z",
            "author_association": "MEMBER",
            "body": "That's just how HTML forms send data. You distinguish it by knowing that `secondfile` is a file, and its entry either isn't present in `request.files` or has an empty filename and data."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/476755387",
            "html_url": "https://github.com/pallets/flask/issues/3130#issuecomment-476755387",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3130",
            "id": 476755387,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Njc1NTM4Nw==",
            "user": {
                "login": "moy",
                "id": 14709,
                "node_id": "MDQ6VXNlcjE0NzA5",
                "avatar_url": "https://avatars0.githubusercontent.com/u/14709?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/moy",
                "html_url": "https://github.com/moy",
                "followers_url": "https://api.github.com/users/moy/followers",
                "following_url": "https://api.github.com/users/moy/following{/other_user}",
                "gists_url": "https://api.github.com/users/moy/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/moy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/moy/subscriptions",
                "organizations_url": "https://api.github.com/users/moy/orgs",
                "repos_url": "https://api.github.com/users/moy/repos",
                "events_url": "https://api.github.com/users/moy/events{/privacy}",
                "received_events_url": "https://api.github.com/users/moy/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-03-26T17:17:15Z",
            "updated_at": "2019-03-26T17:17:15Z",
            "author_association": "NONE",
            "body": "> That's just how HTML forms send data.\r\n\r\nIt's not. When sending a file, the corresponding part contains a `filename=...` entry, with an empty filename to indicate that the file is absent.  Here's a small test in PHP to show it:\r\n\r\nhttps://matthieu-moy.fr/tmp/2019/tmp.php\r\n\r\nWhen I submit the form without specifying the file, and use Firefox's webmaster tools to display the request's payload, I see:\r\n\r\n```\r\n-----------------------------836990156529063132208061493\r\nContent-Disposition: form-data; name=\"pic\"; filename=\"\"\r\nContent-Type: application/octet-stream\r\n\r\n\r\n```\r\n\r\nThe content is empty, but there's still a `filename=\"\"` sent by the browser. Non-file fields are sent as:\r\n\r\n```\r\n-----------------------------3052647601320914323543240568\r\nContent-Disposition: form-data; name=\"customer\"\r\n\r\n\r\n```\r\n\r\ni.e. without `filename=...` at all. As the test shows, PHP can distinguish non-submited files, put in `$_FILES`, and non-file fields, in `$_POST`. The information is there, but it's not used by flask."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/476765447",
            "html_url": "https://github.com/pallets/flask/issues/3130#issuecomment-476765447",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3130",
            "id": 476765447,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Njc2NTQ0Nw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-03-26T17:38:21Z",
            "updated_at": "2019-04-01T15:21:44Z",
            "author_association": "MEMBER",
            "body": "`request.files` always has whatever is submitted. You can do `request.files[\"secondfile\"].filename == \"\"`, or look at its size. But it was still submitted, just with an empty filename and no data. Again, that's just what HTML forms do."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/478601454",
            "html_url": "https://github.com/pallets/flask/issues/3130#issuecomment-478601454",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3130",
            "id": 478601454,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODYwMTQ1NA==",
            "user": {
                "login": "moy",
                "id": 14709,
                "node_id": "MDQ6VXNlcjE0NzA5",
                "avatar_url": "https://avatars0.githubusercontent.com/u/14709?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/moy",
                "html_url": "https://github.com/moy",
                "followers_url": "https://api.github.com/users/moy/followers",
                "following_url": "https://api.github.com/users/moy/following{/other_user}",
                "gists_url": "https://api.github.com/users/moy/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/moy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/moy/subscriptions",
                "organizations_url": "https://api.github.com/users/moy/orgs",
                "repos_url": "https://api.github.com/users/moy/repos",
                "events_url": "https://api.github.com/users/moy/events{/privacy}",
                "received_events_url": "https://api.github.com/users/moy/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-04-01T14:25:45Z",
            "updated_at": "2019-04-01T14:25:45Z",
            "author_association": "NONE",
            "body": "> `request.files` always has whatever is submitted.\r\n\r\nUnfortunately, no: `request.files` doesn't have the file, and that's the point of this issue. As @senabIsShort wrote in the first message, when `file` corresponds to an actually submitted file and `secondfile` to a file that wasn't submitted, one gets\r\n\r\n```\r\nrequest.form == ImmutableMultiDict([('normal_field', 'field_value'), ('secondfile', '')])\r\nrequest.files == ImmutableMultiDict([('file', <FileStorage: 'tmp-rg1.xpi' ('application/x-xpinstall')>)])\r\n```\r\n\r\nThe information is provided in the HTTP payload (`filename=\"\"` vs no `filename` entry at all), but is not present in `request.files`.\r\n\r\nI didn't dig further to see whether it was an issue with Werkzeug or Flask (we actually noticed the issue in httpbin first, which is using flask)."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/478622817",
            "html_url": "https://github.com/pallets/flask/issues/3130#issuecomment-478622817",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3130",
            "id": 478622817,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODYyMjgxNw==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-04-01T15:18:49Z",
            "updated_at": "2019-04-01T15:18:49Z",
            "author_association": "MEMBER",
            "body": "I'm sorry, I'm having trouble understanding the issue you're trying to describe. I tried the given example and got the given expected output.\r\n\r\n```\r\nrequest.form: ImmutableMultiDict([('normal_field', 'field_value')])\r\nrequest.files: ImmutableMultiDict([('file', <FileStorage: 'image.jpg' ('image/jpeg')>), ('secondfile', <FileStorage: '' ('application/octet-stream')>)])\r\n```"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/478629352",
            "html_url": "https://github.com/pallets/flask/issues/3130#issuecomment-478629352",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3130",
            "id": 478629352,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODYyOTM1Mg==",
            "user": {
                "login": "moy",
                "id": 14709,
                "node_id": "MDQ6VXNlcjE0NzA5",
                "avatar_url": "https://avatars0.githubusercontent.com/u/14709?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/moy",
                "html_url": "https://github.com/moy",
                "followers_url": "https://api.github.com/users/moy/followers",
                "following_url": "https://api.github.com/users/moy/following{/other_user}",
                "gists_url": "https://api.github.com/users/moy/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/moy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/moy/subscriptions",
                "organizations_url": "https://api.github.com/users/moy/orgs",
                "repos_url": "https://api.github.com/users/moy/repos",
                "events_url": "https://api.github.com/users/moy/events{/privacy}",
                "received_events_url": "https://api.github.com/users/moy/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-04-01T15:34:26Z",
            "updated_at": "2019-04-01T15:34:26Z",
            "author_association": "NONE",
            "body": "> I tried the given example and got the given expected output.\r\n\r\nHmm, indeed, I tested again (not on the same machine), and I can't reproduce anymore. Probably the issue was fixed in the meantime."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/478742185",
            "html_url": "https://github.com/pallets/flask/issues/3130#issuecomment-478742185",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3130",
            "id": 478742185,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODc0MjE4NQ==",
            "user": {
                "login": "moy",
                "id": 14709,
                "node_id": "MDQ6VXNlcjE0NzA5",
                "avatar_url": "https://avatars0.githubusercontent.com/u/14709?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/moy",
                "html_url": "https://github.com/moy",
                "followers_url": "https://api.github.com/users/moy/followers",
                "following_url": "https://api.github.com/users/moy/following{/other_user}",
                "gists_url": "https://api.github.com/users/moy/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/moy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/moy/subscriptions",
                "organizations_url": "https://api.github.com/users/moy/orgs",
                "repos_url": "https://api.github.com/users/moy/repos",
                "events_url": "https://api.github.com/users/moy/events{/privacy}",
                "received_events_url": "https://api.github.com/users/moy/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-04-01T20:49:21Z",
            "updated_at": "2019-04-01T20:49:21Z",
            "author_association": "NONE",
            "body": "I could reproduce on the machine I first did the test, but the problem disappeared when I `pip3 install --upgrade flask`-ed. So, indeed, problem solved. Thanks."
        }
    ]
}