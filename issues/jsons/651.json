{
    "url": "https://api.github.com/repos/pallets/flask/issues/651",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/651/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/651/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/651/events",
    "html_url": "https://github.com/pallets/flask/issues/651",
    "id": 9224033,
    "node_id": "MDU6SXNzdWU5MjI0MDMz",
    "number": 651,
    "title": "Cannot start Flask application in a thread other than main",
    "user": {
        "login": "ianj-als",
        "id": 2130384,
        "node_id": "MDQ6VXNlcjIxMzAzODQ=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/2130384?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ianj-als",
        "html_url": "https://github.com/ianj-als",
        "followers_url": "https://api.github.com/users/ianj-als/followers",
        "following_url": "https://api.github.com/users/ianj-als/following{/other_user}",
        "gists_url": "https://api.github.com/users/ianj-als/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ianj-als/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ianj-als/subscriptions",
        "organizations_url": "https://api.github.com/users/ianj-als/orgs",
        "repos_url": "https://api.github.com/users/ianj-als/repos",
        "events_url": "https://api.github.com/users/ianj-als/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ianj-als/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2012-12-12T17:30:57Z",
    "updated_at": "2013-01-27T01:11:17Z",
    "closed_at": "2013-01-27T01:11:17Z",
    "author_association": "NONE",
    "body": "Starting a Flask application in a thread other than the main thread does not work and produces the following:\n- Running on http://0.0.0.0:5000/\n  Exception in thread flask_application_thread:\n  Traceback (most recent call last):\n  File \"/opt/python2.7/lib/python2.7/threading.py\", line 551, in __bootstrap_inner\n    self.run()\n  File \"harness.py\", line 23, in run\n    self.__application.run(host = '0.0.0.0', debug = True)\n  File \"/opt/python2.7/lib/python2.7/site-packages/Flask-0.9-py2.7.egg/flask/app.py\", line 739, in run\n    run_simple(host, port, self, **options)\n  File \"/opt/python2.7/lib/python2.7/site-packages/Werkzeug-0.8.3-py2.7.egg/werkzeug/serving.py\", line 615, in run_simple\n    run_with_reloader(inner, extra_files, reloader_interval)\n  File \"/opt/python2.7/lib/python2.7/site-packages/Werkzeug-0.8.3-py2.7.egg/werkzeug/serving.py\", line 529, in run_with_reloader\n    signal.signal(signal.SIGTERM, lambda *args: sys.exit(0))\n  ValueError: signal only works in main thread\n\nIs there a workaround. I've tried using multiprocessing.Process which is no an option in my application.\n\nThanks.\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/11301057",
            "html_url": "https://github.com/pallets/flask/issues/651#issuecomment-11301057",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/651",
            "id": 11301057,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMzAxMDU3",
            "user": {
                "login": "soulseekah",
                "id": 685880,
                "node_id": "MDQ6VXNlcjY4NTg4MA==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/685880?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/soulseekah",
                "html_url": "https://github.com/soulseekah",
                "followers_url": "https://api.github.com/users/soulseekah/followers",
                "following_url": "https://api.github.com/users/soulseekah/following{/other_user}",
                "gists_url": "https://api.github.com/users/soulseekah/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/soulseekah/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/soulseekah/subscriptions",
                "organizations_url": "https://api.github.com/users/soulseekah/orgs",
                "repos_url": "https://api.github.com/users/soulseekah/repos",
                "events_url": "https://api.github.com/users/soulseekah/events{/privacy}",
                "received_events_url": "https://api.github.com/users/soulseekah/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2012-12-12T18:18:34Z",
            "updated_at": "2012-12-12T18:18:34Z",
            "author_association": "CONTRIBUTOR",
            "body": "Can you describe your constraints? Why would you want to do the above? Why was not `multiprocessing` an option?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/11304477",
            "html_url": "https://github.com/pallets/flask/issues/651#issuecomment-11304477",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/651",
            "id": 11304477,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMzA0NDc3",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2012-12-12T19:19:46Z",
            "updated_at": "2012-12-12T19:19:46Z",
            "author_association": "MEMBER",
            "body": "Why do you expect a development server to be that feature-rich?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/11304664",
            "html_url": "https://github.com/pallets/flask/issues/651#issuecomment-11304664",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/651",
            "id": 11304664,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMzA0NjY0",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2012-12-12T19:23:37Z",
            "updated_at": "2012-12-12T19:23:37Z",
            "author_association": "MEMBER",
            "body": "Are you aware you should use `app.run` only for testing purposes?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/11328630",
            "html_url": "https://github.com/pallets/flask/issues/651#issuecomment-11328630",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/651",
            "id": 11328630,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMzI4NjMw",
            "user": {
                "login": "ianj-als",
                "id": 2130384,
                "node_id": "MDQ6VXNlcjIxMzAzODQ=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/2130384?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ianj-als",
                "html_url": "https://github.com/ianj-als",
                "followers_url": "https://api.github.com/users/ianj-als/followers",
                "following_url": "https://api.github.com/users/ianj-als/following{/other_user}",
                "gists_url": "https://api.github.com/users/ianj-als/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ianj-als/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ianj-als/subscriptions",
                "organizations_url": "https://api.github.com/users/ianj-als/orgs",
                "repos_url": "https://api.github.com/users/ianj-als/repos",
                "events_url": "https://api.github.com/users/ianj-als/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ianj-als/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2012-12-13T09:55:21Z",
            "updated_at": "2012-12-13T09:55:21Z",
            "author_association": "NONE",
            "body": "I think I may have been a little too restrictive in that last sentence. I should have written: I rather not use multiprocessing since I'd then have to communicate with the other half of my application: the parent process. I'm writing a test harness. At the moment one thread, or process if I use multiprocess, runs the tests and the Flask thread/process listens for HTTP requests from the application under test. These HTTP requests along with other stuff determine whether the test has passed or not.\n\nI was not aware that I was to use app.run for testing only. How would I run the Flask event loop manually?\n\nThanks.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/11328763",
            "html_url": "https://github.com/pallets/flask/issues/651#issuecomment-11328763",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/651",
            "id": 11328763,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMzI4NzYz",
            "user": {
                "login": "makkalot",
                "id": 8519,
                "node_id": "MDQ6VXNlcjg1MTk=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/8519?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/makkalot",
                "html_url": "https://github.com/makkalot",
                "followers_url": "https://api.github.com/users/makkalot/followers",
                "following_url": "https://api.github.com/users/makkalot/following{/other_user}",
                "gists_url": "https://api.github.com/users/makkalot/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/makkalot/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/makkalot/subscriptions",
                "organizations_url": "https://api.github.com/users/makkalot/orgs",
                "repos_url": "https://api.github.com/users/makkalot/repos",
                "events_url": "https://api.github.com/users/makkalot/events{/privacy}",
                "received_events_url": "https://api.github.com/users/makkalot/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2012-12-13T09:59:42Z",
            "updated_at": "2012-12-13T09:59:42Z",
            "author_association": "NONE",
            "body": "On my integration tests i'm using something like that \n\nclass RunFlask(Process):\n\n```\nname = \"Flask Process\"\nsleep = 2\n\ndef __init__(self, app, *args, **kw):\n    Process.__init__(self)\n    self.app = app\n    self.port = 5000\n    if kw.get(\"port\"):\n        self.port=kw[\"port\"]\n\ndef run(self):\n    #initialize here the notification server also\n    http_server = WSGIServer(('', self.port), self.app)\n    http_server.serve_forever()\n```\n\nWSGIServer here is from gevent.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/11328769",
            "html_url": "https://github.com/pallets/flask/issues/651#issuecomment-11328769",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/651",
            "id": 11328769,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMzI4NzY5",
            "user": {
                "login": "soulseekah",
                "id": 685880,
                "node_id": "MDQ6VXNlcjY4NTg4MA==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/685880?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/soulseekah",
                "html_url": "https://github.com/soulseekah",
                "followers_url": "https://api.github.com/users/soulseekah/followers",
                "following_url": "https://api.github.com/users/soulseekah/following{/other_user}",
                "gists_url": "https://api.github.com/users/soulseekah/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/soulseekah/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/soulseekah/subscriptions",
                "organizations_url": "https://api.github.com/users/soulseekah/orgs",
                "repos_url": "https://api.github.com/users/soulseekah/repos",
                "events_url": "https://api.github.com/users/soulseekah/events{/privacy}",
                "received_events_url": "https://api.github.com/users/soulseekah/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2012-12-13T09:59:49Z",
            "updated_at": "2012-12-13T10:06:13Z",
            "author_association": "CONTRIBUTOR",
            "body": "Why not simply [`popen`](http://docs.python.org/2/library/subprocess.html) it? Or pick a more natural way to [test flask applications](http://flask.pocoo.org/docs/testing/)? If simply launching a `Flask` server for further testing is what you require.\n\nAre you running under gevent or under Werkzeug development server? Because the error you described above is from the development server, are you perhaps running the app unintentionally with `app.run()` not enclosed in `if __name__ ...` when importing it?\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/11330988",
            "html_url": "https://github.com/pallets/flask/issues/651#issuecomment-11330988",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/651",
            "id": 11330988,
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMzMwOTg4",
            "user": {
                "login": "ianj-als",
                "id": 2130384,
                "node_id": "MDQ6VXNlcjIxMzAzODQ=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/2130384?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ianj-als",
                "html_url": "https://github.com/ianj-als",
                "followers_url": "https://api.github.com/users/ianj-als/followers",
                "following_url": "https://api.github.com/users/ianj-als/following{/other_user}",
                "gists_url": "https://api.github.com/users/ianj-als/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ianj-als/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ianj-als/subscriptions",
                "organizations_url": "https://api.github.com/users/ianj-als/orgs",
                "repos_url": "https://api.github.com/users/ianj-als/repos",
                "events_url": "https://api.github.com/users/ianj-als/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ianj-als/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2012-12-13T11:20:08Z",
            "updated_at": "2012-12-13T11:20:08Z",
            "author_association": "NONE",
            "body": "I _think_ I have it sorted. Tornado allows me to fire up a server in a daemon thread. Which is exactly what I want. I used the information on this page\n\nhttp://stackoverflow.com/questions/8143141/using-flask-and-tornado-together/8247457#8247457\n\nThanks for all your help.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/12745708",
            "html_url": "https://github.com/pallets/flask/issues/651#issuecomment-12745708",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/651",
            "id": 12745708,
            "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzQ1NzA4",
            "user": {
                "login": "mitsuhiko",
                "id": 7396,
                "node_id": "MDQ6VXNlcjczOTY=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mitsuhiko",
                "html_url": "https://github.com/mitsuhiko",
                "followers_url": "https://api.github.com/users/mitsuhiko/followers",
                "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions",
                "organizations_url": "https://api.github.com/users/mitsuhiko/orgs",
                "repos_url": "https://api.github.com/users/mitsuhiko/repos",
                "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mitsuhiko/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2013-01-27T01:11:17Z",
            "updated_at": "2013-01-27T01:11:17Z",
            "author_association": "MEMBER",
            "body": "The werkzeug builtin server is not very clever for this.  Just use any other wsgi server you might fancy.\n"
        }
    ]
}