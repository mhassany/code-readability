{
    "url": "https://api.github.com/repos/pallets/flask/issues/2726",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/2726/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/2726/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/2726/events",
    "html_url": "https://github.com/pallets/flask/issues/2726",
    "id": 318264494,
    "node_id": "MDU6SXNzdWUzMTgyNjQ0OTQ=",
    "number": 2726,
    "title": "New tuple requirement for response is restrictive",
    "user": {
        "login": "harveyslash",
        "id": 7107410,
        "node_id": "MDQ6VXNlcjcxMDc0MTA=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/7107410?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harveyslash",
        "html_url": "https://github.com/harveyslash",
        "followers_url": "https://api.github.com/users/harveyslash/followers",
        "following_url": "https://api.github.com/users/harveyslash/following{/other_user}",
        "gists_url": "https://api.github.com/users/harveyslash/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/harveyslash/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/harveyslash/subscriptions",
        "organizations_url": "https://api.github.com/users/harveyslash/orgs",
        "repos_url": "https://api.github.com/users/harveyslash/repos",
        "events_url": "https://api.github.com/users/harveyslash/events{/privacy}",
        "received_events_url": "https://api.github.com/users/harveyslash/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
        "url": "https://api.github.com/repos/pallets/flask/milestones/5",
        "html_url": "https://github.com/pallets/flask/milestone/5",
        "labels_url": "https://api.github.com/repos/pallets/flask/milestones/5/labels",
        "id": 3304290,
        "node_id": "MDk6TWlsZXN0b25lMzMwNDI5MA==",
        "number": 5,
        "title": "1.0.1",
        "description": "",
        "creator": {
            "login": "davidism",
            "id": 1242887,
            "node_id": "MDQ6VXNlcjEyNDI4ODc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidism",
            "html_url": "https://github.com/davidism",
            "followers_url": "https://api.github.com/users/davidism/followers",
            "following_url": "https://api.github.com/users/davidism/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
            "organizations_url": "https://api.github.com/users/davidism/orgs",
            "repos_url": "https://api.github.com/users/davidism/repos",
            "events_url": "https://api.github.com/users/davidism/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidism/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 0,
        "closed_issues": 18,
        "state": "closed",
        "created_at": "2018-04-27T13:46:37Z",
        "updated_at": "2018-04-30T01:11:27Z",
        "due_on": null,
        "closed_at": "2018-04-30T01:11:27Z"
    },
    "comments": 9,
    "created_at": "2018-04-27T03:17:59Z",
    "updated_at": "2018-04-27T17:16:42Z",
    "closed_at": "2018-04-27T12:47:00Z",
    "author_association": "NONE",
    "body": "\r\nI had written a simple wrapper to take all the response primitives, and jsonify them before returning to client like so: \r\n\r\n\r\n```python\r\nclass JSONifyResponseWrapper(Response):\r\n    default_mimetype = 'application/json'\r\n\r\n    @classmethod\r\n    def force_type(cls, rv, environ=None):\r\n        try:\r\n            rv = jsonify(rv)\r\n        finally:\r\n            return super(JSONifyResponseWrapper, cls).force_type(rv, environ)\r\n```\r\nThen i set app.response_class to the class above. \r\n\r\nHowever, in flask 1.0 , the routes are required to return a tuple. \r\nThis means if I have a route like this: \r\n\r\n```python\r\n@base_blueprint.route('', methods=['Post'])\r\ndef hello():\r\n    a = {\"hello\":\"world\"} \r\n   return a\r\n```\r\n\r\nThe client receives a valid json object. \r\n\r\nBut if I do this: \r\n\r\n```python\r\n@base_blueprint.route('', methods=['Post'])\r\ndef hello():\r\n    a = [i for i in range(100)]\r\n   return a\r\n```\r\nFlask will throw this error: \r\n\r\n> TypeError: The view function did not return a valid response tuple. The tuple must have the form (body, status, headers), (body, status), or (body, headers)`",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/384859227",
            "html_url": "https://github.com/pallets/flask/issues/2726#issuecomment-384859227",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2726",
            "id": 384859227,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDg1OTIyNw==",
            "user": {
                "login": "lepture",
                "id": 290496,
                "node_id": "MDQ6VXNlcjI5MDQ5Ng==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/290496?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/lepture",
                "html_url": "https://github.com/lepture",
                "followers_url": "https://api.github.com/users/lepture/followers",
                "following_url": "https://api.github.com/users/lepture/following{/other_user}",
                "gists_url": "https://api.github.com/users/lepture/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/lepture/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lepture/subscriptions",
                "organizations_url": "https://api.github.com/users/lepture/orgs",
                "repos_url": "https://api.github.com/users/lepture/repos",
                "events_url": "https://api.github.com/users/lepture/events{/privacy}",
                "received_events_url": "https://api.github.com/users/lepture/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-04-27T04:16:48Z",
            "updated_at": "2018-04-27T04:16:48Z",
            "author_association": "MEMBER",
            "body": "That change is made a year ago. You need to wrap the response yourself. Before the change, Flask detect it in this way:\r\n\r\n```py\r\nif isinstance(rv, tuple)\r\n```\r\n\r\nAfter the change, it is:\r\n\r\n```py\r\nif isinstance(rv, (tuple, list))\r\n```\r\n\r\nSo the list you returned is going to behave like this. It is the right response."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/384888520",
            "html_url": "https://github.com/pallets/flask/issues/2726#issuecomment-384888520",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2726",
            "id": 384888520,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDg4ODUyMA==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-04-27T07:25:43Z",
            "updated_at": "2018-04-27T07:25:43Z",
            "author_association": "MEMBER",
            "body": "I don't think that's a solution. His goal is to apply a custom function on everything returned from a view function to convert it to JSON.\r\n\r\nI think the solution here is to not override `force_type` but rather `finalize_request` or `make_response` of the Flask class."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/384952727",
            "html_url": "https://github.com/pallets/flask/issues/2726#issuecomment-384952727",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2726",
            "id": 384952727,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDk1MjcyNw==",
            "user": {
                "login": "harveyslash",
                "id": 7107410,
                "node_id": "MDQ6VXNlcjcxMDc0MTA=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7107410?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/harveyslash",
                "html_url": "https://github.com/harveyslash",
                "followers_url": "https://api.github.com/users/harveyslash/followers",
                "following_url": "https://api.github.com/users/harveyslash/following{/other_user}",
                "gists_url": "https://api.github.com/users/harveyslash/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/harveyslash/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/harveyslash/subscriptions",
                "organizations_url": "https://api.github.com/users/harveyslash/orgs",
                "repos_url": "https://api.github.com/users/harveyslash/repos",
                "events_url": "https://api.github.com/users/harveyslash/events{/privacy}",
                "received_events_url": "https://api.github.com/users/harveyslash/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-04-27T12:15:31Z",
            "updated_at": "2018-04-27T12:15:31Z",
            "author_association": "NONE",
            "body": "I just tested returning a list like in my example in flask .12 and it works just fine."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/384957517",
            "html_url": "https://github.com/pallets/flask/issues/2726#issuecomment-384957517",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2726",
            "id": 384957517,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDk1NzUxNw==",
            "user": {
                "login": "lepture",
                "id": 290496,
                "node_id": "MDQ6VXNlcjI5MDQ5Ng==",
                "avatar_url": "https://avatars2.githubusercontent.com/u/290496?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/lepture",
                "html_url": "https://github.com/lepture",
                "followers_url": "https://api.github.com/users/lepture/followers",
                "following_url": "https://api.github.com/users/lepture/following{/other_user}",
                "gists_url": "https://api.github.com/users/lepture/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/lepture/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lepture/subscriptions",
                "organizations_url": "https://api.github.com/users/lepture/orgs",
                "repos_url": "https://api.github.com/users/lepture/repos",
                "events_url": "https://api.github.com/users/lepture/events{/privacy}",
                "received_events_url": "https://api.github.com/users/lepture/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-04-27T12:36:48Z",
            "updated_at": "2018-04-27T12:36:48Z",
            "author_association": "MEMBER",
            "body": "Yes, it should work fine in 0.12. There is nothing wrong. What you need is a solution to get the same result as before. Try @ThiefMaster \u2018s solution."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/384957548",
            "html_url": "https://github.com/pallets/flask/issues/2726#issuecomment-384957548",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2726",
            "id": 384957548,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDk1NzU0OA==",
            "user": {
                "login": "harveyslash",
                "id": 7107410,
                "node_id": "MDQ6VXNlcjcxMDc0MTA=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7107410?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/harveyslash",
                "html_url": "https://github.com/harveyslash",
                "followers_url": "https://api.github.com/users/harveyslash/followers",
                "following_url": "https://api.github.com/users/harveyslash/following{/other_user}",
                "gists_url": "https://api.github.com/users/harveyslash/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/harveyslash/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/harveyslash/subscriptions",
                "organizations_url": "https://api.github.com/users/harveyslash/orgs",
                "repos_url": "https://api.github.com/users/harveyslash/repos",
                "events_url": "https://api.github.com/users/harveyslash/events{/privacy}",
                "received_events_url": "https://api.github.com/users/harveyslash/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-04-27T12:36:57Z",
            "updated_at": "2018-04-27T12:36:57Z",
            "author_association": "NONE",
            "body": "i have whipped up a hack that seems to work , but I would like to know if this is a correct solution. \r\nAlso, It would be nice if i could override the ResponseWrapper on a blueprint basis instead of my entire app. \r\n\r\n```python\r\n\r\n    def Wrapper(self, *rv): # relax tuple requirements , even accept none as return type. \r\n        return Flask.make_response(current_app, ('hello', 200)) # handle the return value in whatever way you want. \r\n\r\n    app.make_response = Wrapper \r\n```"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/384957845",
            "html_url": "https://github.com/pallets/flask/issues/2726#issuecomment-384957845",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2726",
            "id": 384957845,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDk1Nzg0NQ==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-04-27T12:38:18Z",
            "updated_at": "2018-04-27T12:38:18Z",
            "author_association": "MEMBER",
            "body": "No, don't monkeypatch. Subclass instead:\r\n\r\n```python\r\nclass MyFlask(Flask):\r\n    def make_response(self, rv):\r\n        # do your stuff with rv\r\n        return super(MyFlask, self).make_response(rv)\r\n```"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/384958844",
            "html_url": "https://github.com/pallets/flask/issues/2726#issuecomment-384958844",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2726",
            "id": 384958844,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDk1ODg0NA==",
            "user": {
                "login": "harveyslash",
                "id": 7107410,
                "node_id": "MDQ6VXNlcjcxMDc0MTA=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/7107410?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/harveyslash",
                "html_url": "https://github.com/harveyslash",
                "followers_url": "https://api.github.com/users/harveyslash/followers",
                "following_url": "https://api.github.com/users/harveyslash/following{/other_user}",
                "gists_url": "https://api.github.com/users/harveyslash/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/harveyslash/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/harveyslash/subscriptions",
                "organizations_url": "https://api.github.com/users/harveyslash/orgs",
                "repos_url": "https://api.github.com/users/harveyslash/repos",
                "events_url": "https://api.github.com/users/harveyslash/events{/privacy}",
                "received_events_url": "https://api.github.com/users/harveyslash/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-04-27T12:42:44Z",
            "updated_at": "2018-04-27T12:42:44Z",
            "author_association": "NONE",
            "body": "along the same thread, is there a way to have such overriding capability for blueprints also?\r\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/384959055",
            "html_url": "https://github.com/pallets/flask/issues/2726#issuecomment-384959055",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2726",
            "id": 384959055,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDk1OTA1NQ==",
            "user": {
                "login": "ThiefMaster",
                "id": 179599,
                "node_id": "MDQ6VXNlcjE3OTU5OQ==",
                "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ThiefMaster",
                "html_url": "https://github.com/ThiefMaster",
                "followers_url": "https://api.github.com/users/ThiefMaster/followers",
                "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions",
                "organizations_url": "https://api.github.com/users/ThiefMaster/orgs",
                "repos_url": "https://api.github.com/users/ThiefMaster/repos",
                "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ThiefMaster/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-04-27T12:43:39Z",
            "updated_at": "2018-04-27T12:43:39Z",
            "author_association": "MEMBER",
            "body": "Blueprints do not have their own `make_response`, since they just add stuff to the app. But yes, you can subclass e.g. `Blueprint` or `BlueprintSetupState` as well.."
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/385036242",
            "html_url": "https://github.com/pallets/flask/issues/2726#issuecomment-385036242",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/2726",
            "id": 385036242,
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTAzNjI0Mg==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2018-04-27T17:16:37Z",
            "updated_at": "2018-04-27T17:16:37Z",
            "author_association": "MEMBER",
            "body": "Eh, decided to fix this, see #2737"
        }
    ]
}