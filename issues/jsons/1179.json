{
    "url": "https://api.github.com/repos/pallets/flask/issues/1179",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1179/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1179/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1179/events",
    "html_url": "https://github.com/pallets/flask/issues/1179",
    "id": 43053611,
    "node_id": "MDU6SXNzdWU0MzA1MzYxMQ==",
    "number": 1179,
    "title": "Print line after server is started",
    "user": {
        "login": "k-bx",
        "id": 107968,
        "node_id": "MDQ6VXNlcjEwNzk2OA==",
        "avatar_url": "https://avatars3.githubusercontent.com/u/107968?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/k-bx",
        "html_url": "https://github.com/k-bx",
        "followers_url": "https://api.github.com/users/k-bx/followers",
        "following_url": "https://api.github.com/users/k-bx/following{/other_user}",
        "gists_url": "https://api.github.com/users/k-bx/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/k-bx/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/k-bx/subscriptions",
        "organizations_url": "https://api.github.com/users/k-bx/orgs",
        "repos_url": "https://api.github.com/users/k-bx/repos",
        "events_url": "https://api.github.com/users/k-bx/events{/privacy}",
        "received_events_url": "https://api.github.com/users/k-bx/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-09-17T19:38:17Z",
    "updated_at": "2015-11-07T07:26:22Z",
    "closed_at": "2015-11-07T07:26:22Z",
    "author_association": "NONE",
    "body": "I know this might sound silly, but it's actually quite a problem for me.\n\nI have integration tests that test our infrastructure, which contains multiple web services and daemons. I wrote a small wrapper that, inside a test, when you try to access a web service, would launch it. How it works for our non-python web apps is that it launches server process and waits for a regexp that it would produce, containing \"listening on ...\" phrase. That would mean it's ready to serve requests.\n\nCurrently, our flask app prints this output when you launch app.py:\n\n```\n(tldr-env)\u279c  tldr-mediabuyer git:(staging) \u2717 python app.py\n * Running on http://127.0.0.1:5000/\n * Restarting with reloader\n```\n\nUnfortunately, neither of these means app actually listens on those ports (it takes more than a second to actually serve requests).\n\nSo, my proposal is to only print \"Running on ...\" when you actually accept requests. Same for \"Restarting with reloader\".\n\nI hope idea is clear and not too weird :) Thanks!\n\np.s.: when I said \"quite a problem\" I didn't mean it's hard to solve. It can be \"solved\" in multiple ways, but I would prefer this one as one that doesn't require you to either \"sleep\" or \"curl some url in a loop\" solutions.\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/55950965",
            "html_url": "https://github.com/pallets/flask/issues/1179#issuecomment-55950965",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1179",
            "id": 55950965,
            "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTUwOTY1",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-09-17T20:00:35Z",
            "updated_at": "2014-09-17T20:00:35Z",
            "author_association": "MEMBER",
            "body": "This is actually a feature request for [Werkzeug](https://github.com/mitsuhiko/werkzeug), specifically werkzeug.serving. I'm not sure your feature is possible to implement. We face the same issue in the testsuite for werkzeug.serving.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/55951598",
            "html_url": "https://github.com/pallets/flask/issues/1179#issuecomment-55951598",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1179",
            "id": 55951598,
            "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTUxNTk4",
            "user": {
                "login": "k-bx",
                "id": 107968,
                "node_id": "MDQ6VXNlcjEwNzk2OA==",
                "avatar_url": "https://avatars3.githubusercontent.com/u/107968?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/k-bx",
                "html_url": "https://github.com/k-bx",
                "followers_url": "https://api.github.com/users/k-bx/followers",
                "following_url": "https://api.github.com/users/k-bx/following{/other_user}",
                "gists_url": "https://api.github.com/users/k-bx/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/k-bx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/k-bx/subscriptions",
                "organizations_url": "https://api.github.com/users/k-bx/orgs",
                "repos_url": "https://api.github.com/users/k-bx/repos",
                "events_url": "https://api.github.com/users/k-bx/events{/privacy}",
                "received_events_url": "https://api.github.com/users/k-bx/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-09-17T20:05:30Z",
            "updated_at": "2014-09-17T20:05:30Z",
            "author_association": "NONE",
            "body": "I don't see why this is impossible to implement currently :)\n\nYeah, I wasn't sure if I should open it in flask or werkzeug, since it can be viewed and implemented as both, low-level or high-level feature/hook that prints stuff.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/58219621",
            "html_url": "https://github.com/pallets/flask/issues/1179#issuecomment-58219621",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1179",
            "id": 58219621,
            "node_id": "MDEyOklzc3VlQ29tbWVudDU4MjE5NjIx",
            "user": {
                "login": "untitaker",
                "id": 837573,
                "node_id": "MDQ6VXNlcjgzNzU3Mw==",
                "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/untitaker",
                "html_url": "https://github.com/untitaker",
                "followers_url": "https://api.github.com/users/untitaker/followers",
                "following_url": "https://api.github.com/users/untitaker/following{/other_user}",
                "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions",
                "organizations_url": "https://api.github.com/users/untitaker/orgs",
                "repos_url": "https://api.github.com/users/untitaker/repos",
                "events_url": "https://api.github.com/users/untitaker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/untitaker/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2014-10-07T17:04:33Z",
            "updated_at": "2014-10-07T17:04:33Z",
            "author_association": "MEMBER",
            "body": "I for one have no idea how to implement this. Patches are, as always, welcome, but for now the strategy we use in Werkzeug works well: Just hit the port with HTTP requests until one succeeds.\n"
        },
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/154649194",
            "html_url": "https://github.com/pallets/flask/issues/1179#issuecomment-154649194",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1179",
            "id": 154649194,
            "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDY0OTE5NA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2015-11-07T07:26:22Z",
            "updated_at": "2015-11-07T07:26:22Z",
            "author_association": "MEMBER",
            "body": "Looks like this was merged in Werkzeug.\n"
        }
    ]
}