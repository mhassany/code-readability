{
    "url": "https://api.github.com/repos/pallets/flask/issues/3114",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/3114/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/3114/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/3114/events",
    "html_url": "https://github.com/pallets/flask/issues/3114",
    "id": 417657042,
    "node_id": "MDU6SXNzdWU0MTc2NTcwNDI=",
    "number": 3114,
    "title": "flask process block twisted ",
    "user": {
        "login": "yiwong",
        "id": 26157817,
        "node_id": "MDQ6VXNlcjI2MTU3ODE3",
        "avatar_url": "https://avatars2.githubusercontent.com/u/26157817?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yiwong",
        "html_url": "https://github.com/yiwong",
        "followers_url": "https://api.github.com/users/yiwong/followers",
        "following_url": "https://api.github.com/users/yiwong/following{/other_user}",
        "gists_url": "https://api.github.com/users/yiwong/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/yiwong/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/yiwong/subscriptions",
        "organizations_url": "https://api.github.com/users/yiwong/orgs",
        "repos_url": "https://api.github.com/users/yiwong/repos",
        "events_url": "https://api.github.com/users/yiwong/events{/privacy}",
        "received_events_url": "https://api.github.com/users/yiwong/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-03-06T07:17:29Z",
    "updated_at": "2019-03-08T03:51:17Z",
    "closed_at": "2019-03-06T13:33:15Z",
    "author_association": "NONE",
    "body": "flask01.py\r\n@app.route('/')\r\ndef hello_world1():\r\n    client = papirpcclient01.RPCMSG()\r\n    data = {'jsonrpc': '2.0', 'method': 'get_bdevs', 'id': 1}\r\n    time.sleep(15)\r\n    recvdata = json.dumps(client.receivemsg())\r\n    print(\"route1:\", recvdata)\r\n    return Response(recvdata,  mimetype='application/json')\r\n\r\n@app.route('/1')\r\ndef papihello():\r\n\tprint(\"/route1\")\r\n    \tpapirpcclient01.reactor.run()\r\n\t#papirpcclient01.reactor.run(installSignalHandlers=0)\r\n        return \"reactor.run\"+'\\n'\r\n\r\npapirpcclient01.py\r\n\r\nclass RPCClient(protocol.Protocol):\r\n  \r\n    def connectionMade(self):\r\n\tprint(\"connectionMade:\")\r\n    \r\n    def dataReceived(self, data):\r\n        \"As soon as any data is received, write it back.\"\r\n        #print(\"Server said:\", data)\r\n        log.msg(\"dataReceived=:\"+data)\r\n\tresponse = json.loads(data)\r\n\t#recvmsg.append(response)\r\n        reactor.callInThread(sendtoqueue,response)\r\n    \r\n    def connectionLost(self, reason):\r\n        print(\"connection lost\")\r\n\r\nclass RPCClientFactory(protocol.ClientFactory):\r\n\r\n\tdef __init__(self):\r\n\t\tself.deferred=defer.Deferred()\r\n        \tself.protocol = None\r\n\t\r\n\tdef startedConnecting(self, connector):\r\n\t\tprint('Started to connect.')\r\n\r\n\tdef buildProtocol(self, addr):\r\n        \tprint('Connected.')\r\n        \tself.protocol = RPCClient()\r\n        \treturn self.protocol\r\n\tdef clientConnectionFailed(self, connector, reason):\r\n        \tprint(\"Connection failed - goodbye!\")\r\n\t\tself.deferred.errback(reason)\r\n        #reactor.stop()\r\n    \tdef clientConnectionLost(self, connector, reason):\r\n        \tprint(\"Connection lost - goodbye!\")\r\n\t\tself.deferred.errback(reason)\r\n        #reactor.stop()\r\n\r\ndef Send(sendmsg):\r\n\tif factory.protocol and factory.protocol.connected:\r\n\t\tprint(\"send said:\", sendmsg)\r\n\t\tif (len(recvmsg)> 0):\r\n\t\t\trecvmsg.pop()\r\n\t\tfactory.protocol.transport.write(sendmsg)\r\n\r\nfactory= RPCClientFactory ()\r\nreactor.connectTCP(host,port,factory)\r\npmasterconnet=factory.deferred\r\npmasterconnet.addCallback(connectSuccess,port)\r\npmasterconnet.addErrback(connectFailure,port)\r\n---\r\n\r\n### Expected Behavior\r\n\r\nTell us what should happen.\r\n\r\nrun \"curl http://127.0.0.1:5000/1\" block the flask  process,but  run \"curl http://127.0.0.1:5000\" still work\r\n\r\n\r\n\r\npls  tell how to resoule it , thank you\r\n\r\n\r\n\r\n```python\r\nPaste a minimal example that causes the problem.\r\n```\r\n\r\n### Actual Behavior\r\n\r\nTell us what happens instead.\r\n\r\n```pytb\r\nPaste the full traceback if there was an exception.\r\n```\r\n\r\n### Environment\r\n\r\n* Python version:2.7.5\r\n* Flask version:1.0.2\r\n* Twisted version:18.9.0\r\n* Werkzeug version:\r\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/470108420",
            "html_url": "https://github.com/pallets/flask/issues/3114#issuecomment-470108420",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/3114",
            "id": 470108420,
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDEwODQyMA==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2019-03-06T13:33:44Z",
            "updated_at": "2019-03-06T13:33:44Z",
            "author_association": "MEMBER",
            "body": "Please use Stack Overflow for questions about your own code. This tracker is for issues related to the project itself. Be sure to include a [minimal, complete, and verifiable example](https://stackoverflow.com/help/mcve)."
        }
    ]
}