{
    "url": "https://api.github.com/repos/pallets/flask/issues/1732",
    "repository_url": "https://api.github.com/repos/pallets/flask",
    "labels_url": "https://api.github.com/repos/pallets/flask/issues/1732/labels{/name}",
    "comments_url": "https://api.github.com/repos/pallets/flask/issues/1732/comments",
    "events_url": "https://api.github.com/repos/pallets/flask/issues/1732/events",
    "html_url": "https://github.com/pallets/flask/issues/1732",
    "id": 134508095,
    "node_id": "MDU6SXNzdWUxMzQ1MDgwOTU=",
    "number": 1732,
    "title": "Registering blueprint couldn't catch hyphen in url_prefix",
    "user": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following{/other_user}",
        "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-02-18T08:03:48Z",
    "updated_at": "2016-04-05T05:55:13Z",
    "closed_at": "2016-04-05T05:55:13Z",
    "author_association": "NONE",
    "body": "I'm not sure there is a kind of convention in url_prefix for registering blueprint. If not, It behaves weird. \nI'd made cs-log app and register it on app.py like this.\n\n```\napp.register_blueprint(\n  inventory_views.blueprint,\n  url_prefix='/v1/<project_uuid>/<app_name>/inventory-info')\napp.register_blueprint(\n  custom_query_views.blueprint,\n  url_prefix='/v1/<project_uuid>/<app_name>/custom_query')\napp.register_blueprint(\n  cs_log_views.blueprint,\n  url_prefix='/v1/<project_uuid>/<app_name>/cs-log')\n```\n\nand try to approach to cs-log, flask give me a 404 error. After a few of try to fixing it, I've changed an order of registering like this.\n\n```\napp.register_blueprint(\n  inventory_views.blueprint,\n  url_prefix='/v1/<project_uuid>/<app_name>/inventory-info')\napp.register_blueprint(\n  cs_log_views.blueprint,\n  url_prefix='/v1/<project_uuid>/<app_name>/cs-log')\napp.register_blueprint(\n  custom_query_views.blueprint,\n  url_prefix='/v1/<project_uuid>/<app_name>/custom_query')\n```\n\nthen it works I expected. Did I miss something? I think underbar in url_prefix of customer_query_views affect to url_prefix with hyphen. \n\nIf something can't understand in my article, reply me.\n",
    "comments_inline": [
        {
            "url": "https://api.github.com/repos/pallets/flask/issues/comments/205659829",
            "html_url": "https://github.com/pallets/flask/issues/1732#issuecomment-205659829",
            "issue_url": "https://api.github.com/repos/pallets/flask/issues/1732",
            "id": 205659829,
            "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTY1OTgyOQ==",
            "user": {
                "login": "davidism",
                "id": 1242887,
                "node_id": "MDQ6VXNlcjEyNDI4ODc=",
                "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidism",
                "html_url": "https://github.com/davidism",
                "followers_url": "https://api.github.com/users/davidism/followers",
                "following_url": "https://api.github.com/users/davidism/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidism/subscriptions",
                "organizations_url": "https://api.github.com/users/davidism/orgs",
                "repos_url": "https://api.github.com/users/davidism/repos",
                "events_url": "https://api.github.com/users/davidism/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidism/received_events",
                "type": "User",
                "site_admin": false
            },
            "created_at": "2016-04-05T05:55:13Z",
            "updated_at": "2016-04-05T05:55:13Z",
            "author_association": "MEMBER",
            "body": "I can't reproduce your issue.  There is no special handling of normal charaters in url rules.  If you are still having this issue, please include the minimum program need to reproduce the problem.\n\n``` python\nfrom flask import Flask, Blueprint, request\n\napp = Flask(__name__, static_folder=None)\ndash1 = Blueprint('dash1', __name__)\nunder = Blueprint('underscore1', __name__)\ndash2 = Blueprint('dash2', __name__)\n\n\n@dash2.url_value_preprocessor\n@under.url_value_preprocessor\n@dash1.url_value_preprocessor\ndef standard_values(endpoint, url_values):\n    url_values.pop('project_uuid')\n    url_values.pop('app_name')\n\n\n@dash2.route('/')\n@under.route('/')\n@dash1.route('/')\ndef index():\n    return request.endpoint\n\n\napp.register_blueprint(dash1, url_prefix='/v1/<project_uuid>/<app_name>/inventory-issue')\napp.register_blueprint(under, url_prefix='/v1/<project_uuid>/<app_name>/custom_query')\napp.register_blueprint(dash2, url_prefix='/v1/<project_uuid>/<app_name>/cs-log')\n\nc = app.test_client()\nr = c.get('/v1/project/app/cs-log', follow_redirects=True)\nprint(r.status_code)  # 200\n```\n"
        }
    ]
}